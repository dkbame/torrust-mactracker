<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1894" onload="init(evt)" viewBox="0 0 1200 1894" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1894" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1877.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1877.00"> </text><svg id="frames" x="10" width="1180" total_samples="131301"><g><title>[unknown] (188 samples, 0.14%)</title><rect x="0.0030%" y="1813" width="0.1432%" height="15" fill="rgb(227,0,7)" fg:x="4" fg:w="188"/><text x="0.2530%" y="1823.50"></text></g><g><title>[unknown] (187 samples, 0.14%)</title><rect x="0.0038%" y="1797" width="0.1424%" height="15" fill="rgb(217,0,24)" fg:x="5" fg:w="187"/><text x="0.2538%" y="1807.50"></text></g><g><title>[unknown] (186 samples, 0.14%)</title><rect x="0.0046%" y="1781" width="0.1417%" height="15" fill="rgb(221,193,54)" fg:x="6" fg:w="186"/><text x="0.2546%" y="1791.50"></text></g><g><title>[unknown] (178 samples, 0.14%)</title><rect x="0.0107%" y="1765" width="0.1356%" height="15" fill="rgb(248,212,6)" fg:x="14" fg:w="178"/><text x="0.2607%" y="1775.50"></text></g><g><title>[unknown] (172 samples, 0.13%)</title><rect x="0.0152%" y="1749" width="0.1310%" height="15" fill="rgb(208,68,35)" fg:x="20" fg:w="172"/><text x="0.2652%" y="1759.50"></text></g><g><title>[unknown] (158 samples, 0.12%)</title><rect x="0.0259%" y="1733" width="0.1203%" height="15" fill="rgb(232,128,0)" fg:x="34" fg:w="158"/><text x="0.2759%" y="1743.50"></text></g><g><title>[unknown] (158 samples, 0.12%)</title><rect x="0.0259%" y="1717" width="0.1203%" height="15" fill="rgb(207,160,47)" fg:x="34" fg:w="158"/><text x="0.2759%" y="1727.50"></text></g><g><title>[unknown] (125 samples, 0.10%)</title><rect x="0.0510%" y="1701" width="0.0952%" height="15" fill="rgb(228,23,34)" fg:x="67" fg:w="125"/><text x="0.3010%" y="1711.50"></text></g><g><title>[unknown] (102 samples, 0.08%)</title><rect x="0.0685%" y="1685" width="0.0777%" height="15" fill="rgb(218,30,26)" fg:x="90" fg:w="102"/><text x="0.3185%" y="1695.50"></text></g><g><title>[unknown] (93 samples, 0.07%)</title><rect x="0.0754%" y="1669" width="0.0708%" height="15" fill="rgb(220,122,19)" fg:x="99" fg:w="93"/><text x="0.3254%" y="1679.50"></text></g><g><title>[unknown] (92 samples, 0.07%)</title><rect x="0.0762%" y="1653" width="0.0701%" height="15" fill="rgb(250,228,42)" fg:x="100" fg:w="92"/><text x="0.3262%" y="1663.50"></text></g><g><title>[unknown] (41 samples, 0.03%)</title><rect x="0.1150%" y="1637" width="0.0312%" height="15" fill="rgb(240,193,28)" fg:x="151" fg:w="41"/><text x="0.3650%" y="1647.50"></text></g><g><title>[unknown] (38 samples, 0.03%)</title><rect x="0.1173%" y="1621" width="0.0289%" height="15" fill="rgb(216,20,37)" fg:x="154" fg:w="38"/><text x="0.3673%" y="1631.50"></text></g><g><title>[unknown] (38 samples, 0.03%)</title><rect x="0.1173%" y="1605" width="0.0289%" height="15" fill="rgb(206,188,39)" fg:x="154" fg:w="38"/><text x="0.3673%" y="1615.50"></text></g><g><title>[unknown] (29 samples, 0.02%)</title><rect x="0.1241%" y="1589" width="0.0221%" height="15" fill="rgb(217,207,13)" fg:x="163" fg:w="29"/><text x="0.3741%" y="1599.50"></text></g><g><title>[unknown] (25 samples, 0.02%)</title><rect x="0.1272%" y="1573" width="0.0190%" height="15" fill="rgb(231,73,38)" fg:x="167" fg:w="25"/><text x="0.3772%" y="1583.50"></text></g><g><title>[unknown] (21 samples, 0.02%)</title><rect x="0.1302%" y="1557" width="0.0160%" height="15" fill="rgb(225,20,46)" fg:x="171" fg:w="21"/><text x="0.3802%" y="1567.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="0.1325%" y="1541" width="0.0137%" height="15" fill="rgb(210,31,41)" fg:x="174" fg:w="18"/><text x="0.3825%" y="1551.50"></text></g><g><title>[unknown] (15 samples, 0.01%)</title><rect x="0.1348%" y="1525" width="0.0114%" height="15" fill="rgb(221,200,47)" fg:x="177" fg:w="15"/><text x="0.3848%" y="1535.50"></text></g><g><title>__GI___mmap64 (18 samples, 0.01%)</title><rect x="0.1516%" y="1717" width="0.0137%" height="15" fill="rgb(226,26,5)" fg:x="199" fg:w="18"/><text x="0.4016%" y="1727.50"></text></g><g><title>__GI___mmap64 (18 samples, 0.01%)</title><rect x="0.1516%" y="1701" width="0.0137%" height="15" fill="rgb(249,33,26)" fg:x="199" fg:w="18"/><text x="0.4016%" y="1711.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="0.1516%" y="1685" width="0.0137%" height="15" fill="rgb(235,183,28)" fg:x="199" fg:w="18"/><text x="0.4016%" y="1695.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="0.1516%" y="1669" width="0.0137%" height="15" fill="rgb(221,5,38)" fg:x="199" fg:w="18"/><text x="0.4016%" y="1679.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="0.1516%" y="1653" width="0.0137%" height="15" fill="rgb(247,18,42)" fg:x="199" fg:w="18"/><text x="0.4016%" y="1663.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="0.1516%" y="1637" width="0.0137%" height="15" fill="rgb(241,131,45)" fg:x="199" fg:w="18"/><text x="0.4016%" y="1647.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="0.1516%" y="1621" width="0.0137%" height="15" fill="rgb(249,31,29)" fg:x="199" fg:w="18"/><text x="0.4016%" y="1631.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="0.1516%" y="1605" width="0.0137%" height="15" fill="rgb(225,111,53)" fg:x="199" fg:w="18"/><text x="0.4016%" y="1615.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="0.1516%" y="1589" width="0.0137%" height="15" fill="rgb(238,160,17)" fg:x="199" fg:w="18"/><text x="0.4016%" y="1599.50"></text></g><g><title>[unknown] (17 samples, 0.01%)</title><rect x="0.1523%" y="1573" width="0.0129%" height="15" fill="rgb(214,148,48)" fg:x="200" fg:w="17"/><text x="0.4023%" y="1583.50"></text></g><g><title>profiling (214 samples, 0.16%)</title><rect x="0.0030%" y="1829" width="0.1630%" height="15" fill="rgb(232,36,49)" fg:x="4" fg:w="214"/><text x="0.2530%" y="1839.50"></text></g><g><title>clone3 (22 samples, 0.02%)</title><rect x="0.1493%" y="1813" width="0.0168%" height="15" fill="rgb(209,103,24)" fg:x="196" fg:w="22"/><text x="0.3993%" y="1823.50"></text></g><g><title>start_thread (22 samples, 0.02%)</title><rect x="0.1493%" y="1797" width="0.0168%" height="15" fill="rgb(229,88,8)" fg:x="196" fg:w="22"/><text x="0.3993%" y="1807.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (20 samples, 0.02%)</title><rect x="0.1508%" y="1781" width="0.0152%" height="15" fill="rgb(213,181,19)" fg:x="198" fg:w="20"/><text x="0.4008%" y="1791.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::Handler::new (20 samples, 0.02%)</title><rect x="0.1508%" y="1765" width="0.0152%" height="15" fill="rgb(254,191,54)" fg:x="198" fg:w="20"/><text x="0.4008%" y="1775.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::make_handler (20 samples, 0.02%)</title><rect x="0.1508%" y="1749" width="0.0152%" height="15" fill="rgb(241,83,37)" fg:x="198" fg:w="20"/><text x="0.4008%" y="1759.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::get_stack (19 samples, 0.01%)</title><rect x="0.1516%" y="1733" width="0.0145%" height="15" fill="rgb(233,36,39)" fg:x="199" fg:w="19"/><text x="0.4016%" y="1743.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (30 samples, 0.02%)</title><rect x="0.1957%" y="1797" width="0.0228%" height="15" fill="rgb(226,3,54)" fg:x="257" fg:w="30"/><text x="0.4457%" y="1807.50"></text></g><g><title>[[vdso]] (93 samples, 0.07%)</title><rect x="0.2201%" y="1797" width="0.0708%" height="15" fill="rgb(245,192,40)" fg:x="289" fg:w="93"/><text x="0.4701%" y="1807.50"></text></g><g><title>&lt;torrust_tracker::shared::crypto::ephemeral_instance_keys::RANDOM_SEED as core::ops::deref::Deref&gt;::deref::__stability::LAZY (143 samples, 0.11%)</title><rect x="0.1957%" y="1813" width="0.1089%" height="15" fill="rgb(238,167,29)" fg:x="257" fg:w="143"/><text x="0.4457%" y="1823.50"></text></g><g><title>&lt;alloc::collections::btree::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.02%)</title><rect x="0.3054%" y="1797" width="0.0236%" height="15" fill="rgb(232,182,51)" fg:x="401" fg:w="31"/><text x="0.5554%" y="1807.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.02%)</title><rect x="0.3077%" y="1781" width="0.0213%" height="15" fill="rgb(231,60,39)" fg:x="404" fg:w="28"/><text x="0.5577%" y="1791.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (28 samples, 0.02%)</title><rect x="0.3077%" y="1765" width="0.0213%" height="15" fill="rgb(208,69,12)" fg:x="404" fg:w="28"/><text x="0.5577%" y="1775.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::init_front (21 samples, 0.02%)</title><rect x="0.3130%" y="1749" width="0.0160%" height="15" fill="rgb(235,93,37)" fg:x="411" fg:w="21"/><text x="0.5630%" y="1759.50"></text></g><g><title>[[vdso]] (91 samples, 0.07%)</title><rect x="0.3328%" y="1797" width="0.0693%" height="15" fill="rgb(213,116,39)" fg:x="437" fg:w="91"/><text x="0.5828%" y="1807.50"></text></g><g><title>__GI___clock_gettime (14 samples, 0.01%)</title><rect x="0.4029%" y="1797" width="0.0107%" height="15" fill="rgb(222,207,29)" fg:x="529" fg:w="14"/><text x="0.6529%" y="1807.50"></text></g><g><title>_int_malloc (53 samples, 0.04%)</title><rect x="0.4463%" y="1797" width="0.0404%" height="15" fill="rgb(206,96,30)" fg:x="586" fg:w="53"/><text x="0.6963%" y="1807.50"></text></g><g><title>epoll_wait (254 samples, 0.19%)</title><rect x="0.5072%" y="1797" width="0.1934%" height="15" fill="rgb(218,138,4)" fg:x="666" fg:w="254"/><text x="0.7572%" y="1807.50"></text></g><g><title>tokio::runtime::context::with_scheduler (28 samples, 0.02%)</title><rect x="0.7167%" y="1797" width="0.0213%" height="15" fill="rgb(250,191,14)" fg:x="941" fg:w="28"/><text x="0.9667%" y="1807.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (14 samples, 0.01%)</title><rect x="0.7273%" y="1781" width="0.0107%" height="15" fill="rgb(239,60,40)" fg:x="955" fg:w="14"/><text x="0.9773%" y="1791.50"></text></g><g><title>tokio::runtime::context::with_scheduler::{{closure}} (14 samples, 0.01%)</title><rect x="0.7273%" y="1765" width="0.0107%" height="15" fill="rgb(206,27,48)" fg:x="955" fg:w="14"/><text x="0.9773%" y="1775.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (17 samples, 0.01%)</title><rect x="0.7532%" y="1749" width="0.0129%" height="15" fill="rgb(225,35,8)" fg:x="989" fg:w="17"/><text x="1.0032%" y="1759.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select::{{closure}} (17 samples, 0.01%)</title><rect x="0.7532%" y="1733" width="0.0129%" height="15" fill="rgb(250,213,24)" fg:x="989" fg:w="17"/><text x="1.0032%" y="1743.50"></text></g><g><title>mio::poll::Poll::poll (27 samples, 0.02%)</title><rect x="0.7494%" y="1781" width="0.0206%" height="15" fill="rgb(247,123,22)" fg:x="984" fg:w="27"/><text x="0.9994%" y="1791.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (27 samples, 0.02%)</title><rect x="0.7494%" y="1765" width="0.0206%" height="15" fill="rgb(231,138,38)" fg:x="984" fg:w="27"/><text x="0.9994%" y="1775.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (54 samples, 0.04%)</title><rect x="0.7380%" y="1797" width="0.0411%" height="15" fill="rgb(231,145,46)" fg:x="969" fg:w="54"/><text x="0.9880%" y="1807.50"></text></g><g><title>tokio::runtime::io::registration::Registration::readiness::{{closure}} (26 samples, 0.02%)</title><rect x="0.7791%" y="1797" width="0.0198%" height="15" fill="rgb(251,118,11)" fg:x="1023" fg:w="26"/><text x="1.0291%" y="1807.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::readiness::{{closure}} (17 samples, 0.01%)</title><rect x="0.7860%" y="1781" width="0.0129%" height="15" fill="rgb(217,147,25)" fg:x="1032" fg:w="17"/><text x="1.0360%" y="1791.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (41 samples, 0.03%)</title><rect x="0.7989%" y="1797" width="0.0312%" height="15" fill="rgb(247,81,37)" fg:x="1049" fg:w="41"/><text x="1.0489%" y="1807.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (71 samples, 0.05%)</title><rect x="0.8302%" y="1797" width="0.0541%" height="15" fill="rgb(209,12,38)" fg:x="1090" fg:w="71"/><text x="1.0802%" y="1807.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (65 samples, 0.05%)</title><rect x="0.8347%" y="1781" width="0.0495%" height="15" fill="rgb(227,1,9)" fg:x="1096" fg:w="65"/><text x="1.0847%" y="1791.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (65 samples, 0.05%)</title><rect x="0.8347%" y="1765" width="0.0495%" height="15" fill="rgb(248,47,43)" fg:x="1096" fg:w="65"/><text x="1.0847%" y="1775.50"></text></g><g><title>core::sync::atomic::atomic_add (65 samples, 0.05%)</title><rect x="0.8347%" y="1749" width="0.0495%" height="15" fill="rgb(221,10,30)" fg:x="1096" fg:w="65"/><text x="1.0847%" y="1759.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (31 samples, 0.02%)</title><rect x="0.8842%" y="1797" width="0.0236%" height="15" fill="rgb(210,229,1)" fg:x="1161" fg:w="31"/><text x="1.1342%" y="1807.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (21 samples, 0.02%)</title><rect x="0.8918%" y="1781" width="0.0160%" height="15" fill="rgb(222,148,37)" fg:x="1171" fg:w="21"/><text x="1.1418%" y="1791.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark_condvar (18 samples, 0.01%)</title><rect x="0.8941%" y="1765" width="0.0137%" height="15" fill="rgb(234,67,33)" fg:x="1174" fg:w="18"/><text x="1.1441%" y="1775.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (17 samples, 0.01%)</title><rect x="0.8949%" y="1749" width="0.0129%" height="15" fill="rgb(247,98,35)" fg:x="1175" fg:w="17"/><text x="1.1449%" y="1759.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_condvar (49 samples, 0.04%)</title><rect x="0.9383%" y="1749" width="0.0373%" height="15" fill="rgb(247,138,52)" fg:x="1232" fg:w="49"/><text x="1.1883%" y="1759.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (33 samples, 0.03%)</title><rect x="0.9505%" y="1733" width="0.0251%" height="15" fill="rgb(213,79,30)" fg:x="1248" fg:w="33"/><text x="1.2005%" y="1743.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (16 samples, 0.01%)</title><rect x="0.9634%" y="1717" width="0.0122%" height="15" fill="rgb(246,177,23)" fg:x="1265" fg:w="16"/><text x="1.2134%" y="1727.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (93 samples, 0.07%)</title><rect x="0.9139%" y="1797" width="0.0708%" height="15" fill="rgb(230,62,27)" fg:x="1200" fg:w="93"/><text x="1.1639%" y="1807.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (75 samples, 0.06%)</title><rect x="0.9276%" y="1781" width="0.0571%" height="15" fill="rgb(216,154,8)" fg:x="1218" fg:w="75"/><text x="1.1776%" y="1791.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (75 samples, 0.06%)</title><rect x="0.9276%" y="1765" width="0.0571%" height="15" fill="rgb(244,35,45)" fg:x="1218" fg:w="75"/><text x="1.1776%" y="1775.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (18 samples, 0.01%)</title><rect x="1.0015%" y="1733" width="0.0137%" height="15" fill="rgb(251,115,12)" fg:x="1315" fg:w="18"/><text x="1.2515%" y="1743.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (18 samples, 0.01%)</title><rect x="1.0015%" y="1717" width="0.0137%" height="15" fill="rgb(240,54,50)" fg:x="1315" fg:w="18"/><text x="1.2515%" y="1727.50"></text></g><g><title>core::cell::BorrowRefMut::new (18 samples, 0.01%)</title><rect x="1.0015%" y="1701" width="0.0137%" height="15" fill="rgb(233,84,52)" fg:x="1315" fg:w="18"/><text x="1.2515%" y="1711.50"></text></g><g><title>tokio::runtime::coop::budget (26 samples, 0.02%)</title><rect x="0.9977%" y="1781" width="0.0198%" height="15" fill="rgb(207,117,47)" fg:x="1310" fg:w="26"/><text x="1.2477%" y="1791.50"></text></g><g><title>tokio::runtime::coop::with_budget (26 samples, 0.02%)</title><rect x="0.9977%" y="1765" width="0.0198%" height="15" fill="rgb(249,43,39)" fg:x="1310" fg:w="26"/><text x="1.2477%" y="1775.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (21 samples, 0.02%)</title><rect x="1.0015%" y="1749" width="0.0160%" height="15" fill="rgb(209,38,44)" fg:x="1315" fg:w="21"/><text x="1.2515%" y="1759.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::start_poll (26 samples, 0.02%)</title><rect x="1.0175%" y="1781" width="0.0198%" height="15" fill="rgb(236,212,23)" fg:x="1336" fg:w="26"/><text x="1.2675%" y="1791.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (96 samples, 0.07%)</title><rect x="0.9848%" y="1797" width="0.0731%" height="15" fill="rgb(242,79,21)" fg:x="1293" fg:w="96"/><text x="1.2348%" y="1807.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_searching (27 samples, 0.02%)</title><rect x="1.0373%" y="1781" width="0.0206%" height="15" fill="rgb(211,96,35)" fg:x="1362" fg:w="27"/><text x="1.2873%" y="1791.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::transition_worker_from_searching (18 samples, 0.01%)</title><rect x="1.0442%" y="1765" width="0.0137%" height="15" fill="rgb(253,215,40)" fg:x="1371" fg:w="18"/><text x="1.2942%" y="1775.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (17 samples, 0.01%)</title><rect x="1.2734%" y="1413" width="0.0129%" height="15" fill="rgb(211,81,21)" fg:x="1672" fg:w="17"/><text x="1.5234%" y="1423.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (35 samples, 0.03%)</title><rect x="1.2864%" y="1413" width="0.0267%" height="15" fill="rgb(208,190,38)" fg:x="1689" fg:w="35"/><text x="1.5364%" y="1423.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::maintenance (14 samples, 0.01%)</title><rect x="1.3161%" y="1413" width="0.0107%" height="15" fill="rgb(235,213,38)" fg:x="1728" fg:w="14"/><text x="1.5661%" y="1423.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::{{closure}} (90 samples, 0.07%)</title><rect x="1.4052%" y="1317" width="0.0685%" height="15" fill="rgb(237,122,38)" fg:x="1845" fg:w="90"/><text x="1.6552%" y="1327.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (90 samples, 0.07%)</title><rect x="1.4052%" y="1301" width="0.0685%" height="15" fill="rgb(244,218,35)" fg:x="1845" fg:w="90"/><text x="1.6552%" y="1311.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (220 samples, 0.17%)</title><rect x="1.3473%" y="1365" width="0.1676%" height="15" fill="rgb(240,68,47)" fg:x="1769" fg:w="220"/><text x="1.5973%" y="1375.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (220 samples, 0.17%)</title><rect x="1.3473%" y="1349" width="0.1676%" height="15" fill="rgb(210,16,53)" fg:x="1769" fg:w="220"/><text x="1.5973%" y="1359.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (220 samples, 0.17%)</title><rect x="1.3473%" y="1333" width="0.1676%" height="15" fill="rgb(235,124,12)" fg:x="1769" fg:w="220"/><text x="1.5973%" y="1343.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (54 samples, 0.04%)</title><rect x="1.4737%" y="1317" width="0.0411%" height="15" fill="rgb(224,169,11)" fg:x="1935" fg:w="54"/><text x="1.7237%" y="1327.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (54 samples, 0.04%)</title><rect x="1.4737%" y="1301" width="0.0411%" height="15" fill="rgb(250,166,2)" fg:x="1935" fg:w="54"/><text x="1.7237%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::is_parked (240 samples, 0.18%)</title><rect x="1.3404%" y="1381" width="0.1828%" height="15" fill="rgb(242,216,29)" fg:x="1760" fg:w="240"/><text x="1.5904%" y="1391.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::unpark_worker_by_id (20 samples, 0.02%)</title><rect x="1.5232%" y="1381" width="0.0152%" height="15" fill="rgb(230,116,27)" fg:x="2000" fg:w="20"/><text x="1.7732%" y="1391.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_parked (265 samples, 0.20%)</title><rect x="1.3381%" y="1397" width="0.2018%" height="15" fill="rgb(228,99,48)" fg:x="1757" fg:w="265"/><text x="1.5881%" y="1407.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (284 samples, 0.22%)</title><rect x="1.3267%" y="1413" width="0.2163%" height="15" fill="rgb(253,11,6)" fg:x="1742" fg:w="284"/><text x="1.5767%" y="1423.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (17 samples, 0.01%)</title><rect x="1.5491%" y="1381" width="0.0129%" height="15" fill="rgb(247,143,39)" fg:x="2034" fg:w="17"/><text x="1.7991%" y="1391.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task::{{closure}} (17 samples, 0.01%)</title><rect x="1.5491%" y="1365" width="0.0129%" height="15" fill="rgb(236,97,10)" fg:x="2034" fg:w="17"/><text x="1.7991%" y="1375.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::pop (17 samples, 0.01%)</title><rect x="1.5491%" y="1349" width="0.0129%" height="15" fill="rgb(233,208,19)" fg:x="2034" fg:w="17"/><text x="1.7991%" y="1359.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task (22 samples, 0.02%)</title><rect x="1.5491%" y="1397" width="0.0168%" height="15" fill="rgb(216,164,2)" fg:x="2034" fg:w="22"/><text x="1.7991%" y="1407.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task (40 samples, 0.03%)</title><rect x="1.5430%" y="1413" width="0.0305%" height="15" fill="rgb(220,129,5)" fg:x="2026" fg:w="40"/><text x="1.7930%" y="1423.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (17 samples, 0.01%)</title><rect x="1.5948%" y="1365" width="0.0129%" height="15" fill="rgb(242,17,10)" fg:x="2094" fg:w="17"/><text x="1.8448%" y="1375.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (17 samples, 0.01%)</title><rect x="1.5948%" y="1349" width="0.0129%" height="15" fill="rgb(242,107,0)" fg:x="2094" fg:w="17"/><text x="1.8448%" y="1359.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (17 samples, 0.01%)</title><rect x="1.6078%" y="1365" width="0.0129%" height="15" fill="rgb(251,28,31)" fg:x="2111" fg:w="17"/><text x="1.8578%" y="1375.50"></text></g><g><title>core::sync::atomic::AtomicU64::compare_exchange (26 samples, 0.02%)</title><rect x="1.6215%" y="1365" width="0.0198%" height="15" fill="rgb(233,223,10)" fg:x="2129" fg:w="26"/><text x="1.8715%" y="1375.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (26 samples, 0.02%)</title><rect x="1.6215%" y="1349" width="0.0198%" height="15" fill="rgb(215,21,27)" fg:x="2129" fg:w="26"/><text x="1.8715%" y="1359.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (129 samples, 0.10%)</title><rect x="1.5735%" y="1413" width="0.0982%" height="15" fill="rgb(232,23,21)" fg:x="2066" fg:w="129"/><text x="1.8235%" y="1423.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (128 samples, 0.10%)</title><rect x="1.5742%" y="1397" width="0.0975%" height="15" fill="rgb(244,5,23)" fg:x="2067" fg:w="128"/><text x="1.8242%" y="1407.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (119 samples, 0.09%)</title><rect x="1.5811%" y="1381" width="0.0906%" height="15" fill="rgb(226,81,46)" fg:x="2076" fg:w="119"/><text x="1.8311%" y="1391.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::pack (39 samples, 0.03%)</title><rect x="1.6420%" y="1365" width="0.0297%" height="15" fill="rgb(247,70,30)" fg:x="2156" fg:w="39"/><text x="1.8920%" y="1375.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (613 samples, 0.47%)</title><rect x="1.2079%" y="1605" width="0.4669%" height="15" fill="rgb(212,68,19)" fg:x="1586" fg:w="613"/><text x="1.4579%" y="1615.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}} (613 samples, 0.47%)</title><rect x="1.2079%" y="1589" width="0.4669%" height="15" fill="rgb(240,187,13)" fg:x="1586" fg:w="613"/><text x="1.4579%" y="1599.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (613 samples, 0.47%)</title><rect x="1.2079%" y="1573" width="0.4669%" height="15" fill="rgb(223,113,26)" fg:x="1586" fg:w="613"/><text x="1.4579%" y="1583.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (613 samples, 0.47%)</title><rect x="1.2079%" y="1557" width="0.4669%" height="15" fill="rgb(206,192,2)" fg:x="1586" fg:w="613"/><text x="1.4579%" y="1567.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (613 samples, 0.47%)</title><rect x="1.2079%" y="1541" width="0.4669%" height="15" fill="rgb(241,108,4)" fg:x="1586" fg:w="613"/><text x="1.4579%" y="1551.50"></text></g><g><title>tokio::runtime::context::set_scheduler (613 samples, 0.47%)</title><rect x="1.2079%" y="1525" width="0.4669%" height="15" fill="rgb(247,173,49)" fg:x="1586" fg:w="613"/><text x="1.4579%" y="1535.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (613 samples, 0.47%)</title><rect x="1.2079%" y="1509" width="0.4669%" height="15" fill="rgb(224,114,35)" fg:x="1586" fg:w="613"/><text x="1.4579%" y="1519.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (613 samples, 0.47%)</title><rect x="1.2079%" y="1493" width="0.4669%" height="15" fill="rgb(245,159,27)" fg:x="1586" fg:w="613"/><text x="1.4579%" y="1503.50"></text></g><g><title>tokio::runtime::context::set_scheduler::{{closure}} (613 samples, 0.47%)</title><rect x="1.2079%" y="1477" width="0.4669%" height="15" fill="rgb(245,172,44)" fg:x="1586" fg:w="613"/><text x="1.4579%" y="1487.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (613 samples, 0.47%)</title><rect x="1.2079%" y="1461" width="0.4669%" height="15" fill="rgb(236,23,11)" fg:x="1586" fg:w="613"/><text x="1.4579%" y="1471.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}::{{closure}} (613 samples, 0.47%)</title><rect x="1.2079%" y="1445" width="0.4669%" height="15" fill="rgb(205,117,38)" fg:x="1586" fg:w="613"/><text x="1.4579%" y="1455.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (613 samples, 0.47%)</title><rect x="1.2079%" y="1429" width="0.4669%" height="15" fill="rgb(237,72,25)" fg:x="1586" fg:w="613"/><text x="1.4579%" y="1439.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (777 samples, 0.59%)</title><rect x="1.0952%" y="1637" width="0.5918%" height="15" fill="rgb(244,70,9)" fg:x="1438" fg:w="777"/><text x="1.3452%" y="1647.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (776 samples, 0.59%)</title><rect x="1.0960%" y="1621" width="0.5910%" height="15" fill="rgb(217,125,39)" fg:x="1439" fg:w="776"/><text x="1.3460%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (16 samples, 0.01%)</title><rect x="1.6748%" y="1605" width="0.0122%" height="15" fill="rgb(235,36,10)" fg:x="2199" fg:w="16"/><text x="1.9248%" y="1615.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="1.6748%" y="1589" width="0.0122%" height="15" fill="rgb(251,123,47)" fg:x="2199" fg:w="16"/><text x="1.9248%" y="1599.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (16 samples, 0.01%)</title><rect x="1.6748%" y="1573" width="0.0122%" height="15" fill="rgb(221,13,13)" fg:x="2199" fg:w="16"/><text x="1.9248%" y="1583.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (16 samples, 0.01%)</title><rect x="1.6748%" y="1557" width="0.0122%" height="15" fill="rgb(238,131,9)" fg:x="2199" fg:w="16"/><text x="1.9248%" y="1567.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (20 samples, 0.02%)</title><rect x="1.7060%" y="1605" width="0.0152%" height="15" fill="rgb(211,50,8)" fg:x="2240" fg:w="20"/><text x="1.9560%" y="1615.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage::{{closure}} (20 samples, 0.02%)</title><rect x="1.7060%" y="1589" width="0.0152%" height="15" fill="rgb(245,182,24)" fg:x="2240" fg:w="20"/><text x="1.9560%" y="1599.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (835 samples, 0.64%)</title><rect x="1.0937%" y="1653" width="0.6359%" height="15" fill="rgb(242,14,37)" fg:x="1436" fg:w="835"/><text x="1.3437%" y="1663.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::drop_future_or_output (56 samples, 0.04%)</title><rect x="1.6870%" y="1637" width="0.0427%" height="15" fill="rgb(246,228,12)" fg:x="2215" fg:w="56"/><text x="1.9370%" y="1647.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (46 samples, 0.04%)</title><rect x="1.6946%" y="1621" width="0.0350%" height="15" fill="rgb(213,55,15)" fg:x="2225" fg:w="46"/><text x="1.9446%" y="1631.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (897 samples, 0.68%)</title><rect x="1.0937%" y="1685" width="0.6832%" height="15" fill="rgb(209,9,3)" fg:x="1436" fg:w="897"/><text x="1.3437%" y="1695.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (897 samples, 0.68%)</title><rect x="1.0937%" y="1669" width="0.6832%" height="15" fill="rgb(230,59,30)" fg:x="1436" fg:w="897"/><text x="1.3437%" y="1679.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::store_output (62 samples, 0.05%)</title><rect x="1.7296%" y="1653" width="0.0472%" height="15" fill="rgb(209,121,21)" fg:x="2271" fg:w="62"/><text x="1.9796%" y="1663.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (930 samples, 0.71%)</title><rect x="1.0899%" y="1749" width="0.7083%" height="15" fill="rgb(220,109,13)" fg:x="1431" fg:w="930"/><text x="1.3399%" y="1759.50"></text></g><g><title>std::panic::catch_unwind (927 samples, 0.71%)</title><rect x="1.0921%" y="1733" width="0.7060%" height="15" fill="rgb(232,18,1)" fg:x="1434" fg:w="927"/><text x="1.3421%" y="1743.50"></text></g><g><title>std::panicking::try (927 samples, 0.71%)</title><rect x="1.0921%" y="1717" width="0.7060%" height="15" fill="rgb(215,41,42)" fg:x="1434" fg:w="927"/><text x="1.3421%" y="1727.50"></text></g><g><title>std::panicking::try::do_call (925 samples, 0.70%)</title><rect x="1.0937%" y="1701" width="0.7045%" height="15" fill="rgb(224,123,36)" fg:x="1436" fg:w="925"/><text x="1.3437%" y="1711.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::take (28 samples, 0.02%)</title><rect x="1.7768%" y="1685" width="0.0213%" height="15" fill="rgb(240,125,3)" fg:x="2333" fg:w="28"/><text x="2.0268%" y="1695.50"></text></g><g><title>core::ptr::read (28 samples, 0.02%)</title><rect x="1.7768%" y="1669" width="0.0213%" height="15" fill="rgb(205,98,50)" fg:x="2333" fg:w="28"/><text x="2.0268%" y="1679.50"></text></g><g><title>tokio::runtime::task::raw::poll (938 samples, 0.71%)</title><rect x="1.0861%" y="1797" width="0.7144%" height="15" fill="rgb(205,185,37)" fg:x="1426" fg:w="938"/><text x="1.3361%" y="1807.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (934 samples, 0.71%)</title><rect x="1.0891%" y="1781" width="0.7113%" height="15" fill="rgb(238,207,15)" fg:x="1430" fg:w="934"/><text x="1.3391%" y="1791.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (934 samples, 0.71%)</title><rect x="1.0891%" y="1765" width="0.7113%" height="15" fill="rgb(213,199,42)" fg:x="1430" fg:w="934"/><text x="1.3391%" y="1775.50"></text></g><g><title>core::array::&lt;impl core::default::Default for [T: 32]&gt;::default (26 samples, 0.02%)</title><rect x="1.8233%" y="1781" width="0.0198%" height="15" fill="rgb(235,201,11)" fg:x="2394" fg:w="26"/><text x="2.0733%" y="1791.50"></text></g><g><title>tokio::runtime::time::Inner::lock (16 samples, 0.01%)</title><rect x="1.8477%" y="1781" width="0.0122%" height="15" fill="rgb(207,46,11)" fg:x="2426" fg:w="16"/><text x="2.0977%" y="1791.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (16 samples, 0.01%)</title><rect x="1.8477%" y="1765" width="0.0122%" height="15" fill="rgb(241,35,35)" fg:x="2426" fg:w="16"/><text x="2.0977%" y="1775.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (16 samples, 0.01%)</title><rect x="1.8477%" y="1749" width="0.0122%" height="15" fill="rgb(243,32,47)" fg:x="2426" fg:w="16"/><text x="2.0977%" y="1759.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (15 samples, 0.01%)</title><rect x="1.8484%" y="1733" width="0.0114%" height="15" fill="rgb(247,202,23)" fg:x="2427" fg:w="15"/><text x="2.0984%" y="1743.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (15 samples, 0.01%)</title><rect x="1.8484%" y="1717" width="0.0114%" height="15" fill="rgb(219,102,11)" fg:x="2427" fg:w="15"/><text x="2.0984%" y="1727.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (15 samples, 0.01%)</title><rect x="1.8484%" y="1701" width="0.0114%" height="15" fill="rgb(243,110,44)" fg:x="2427" fg:w="15"/><text x="2.0984%" y="1711.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (25 samples, 0.02%)</title><rect x="1.8621%" y="1781" width="0.0190%" height="15" fill="rgb(222,74,54)" fg:x="2445" fg:w="25"/><text x="2.1121%" y="1791.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (98 samples, 0.07%)</title><rect x="1.8096%" y="1797" width="0.0746%" height="15" fill="rgb(216,99,12)" fg:x="2376" fg:w="98"/><text x="2.0596%" y="1807.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (51 samples, 0.04%)</title><rect x="1.8842%" y="1797" width="0.0388%" height="15" fill="rgb(226,22,26)" fg:x="2474" fg:w="51"/><text x="2.1342%" y="1807.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (15 samples, 0.01%)</title><rect x="1.9231%" y="1797" width="0.0114%" height="15" fill="rgb(217,163,10)" fg:x="2525" fg:w="15"/><text x="2.1731%" y="1807.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (16 samples, 0.01%)</title><rect x="1.9672%" y="1781" width="0.0122%" height="15" fill="rgb(213,25,53)" fg:x="2583" fg:w="16"/><text x="2.2172%" y="1791.50"></text></g><g><title>torrust_tracker::servers::udp::logging::log_request (24 samples, 0.02%)</title><rect x="2.0000%" y="1765" width="0.0183%" height="15" fill="rgb(252,105,26)" fg:x="2626" fg:w="24"/><text x="2.2500%" y="1775.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_packet::{{closure}} (46 samples, 0.04%)</title><rect x="1.9855%" y="1781" width="0.0350%" height="15" fill="rgb(220,39,43)" fg:x="2607" fg:w="46"/><text x="2.2355%" y="1791.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::process_valid_request::{{closure}} (131 samples, 0.10%)</title><rect x="1.9391%" y="1797" width="0.0998%" height="15" fill="rgb(229,68,48)" fg:x="2546" fg:w="131"/><text x="2.1891%" y="1807.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::send_response::{{closure}} (24 samples, 0.02%)</title><rect x="2.0205%" y="1781" width="0.0183%" height="15" fill="rgb(252,8,32)" fg:x="2653" fg:w="24"/><text x="2.2705%" y="1791.50"></text></g><g><title>torrust_tracker_torrent_repository::repository::rw_lock_std_mutex_std::&lt;impl torrust_tracker_torrent_repository::repository::Repository&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt; for torrust_tracker_torrent_repository::repository::RwLockStd&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;&gt;::update_torrent_with_peer_and_get_stats (14 samples, 0.01%)</title><rect x="2.0518%" y="1797" width="0.0107%" height="15" fill="rgb(223,20,43)" fg:x="2694" fg:w="14"/><text x="2.3018%" y="1807.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (14 samples, 0.01%)</title><rect x="2.0792%" y="1749" width="0.0107%" height="15" fill="rgb(229,81,49)" fg:x="2730" fg:w="14"/><text x="2.3292%" y="1759.50"></text></g><g><title>core::sync::atomic::atomic_load (14 samples, 0.01%)</title><rect x="2.0792%" y="1733" width="0.0107%" height="15" fill="rgb(236,28,36)" fg:x="2730" fg:w="14"/><text x="2.3292%" y="1743.50"></text></g><g><title>torrust_tracker_torrent_repository::repository::rw_lock_std_mutex_std::&lt;impl torrust_tracker_torrent_repository::repository::RwLockStd&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;&gt;::get_torrents (39 samples, 0.03%)</title><rect x="2.0624%" y="1797" width="0.0297%" height="15" fill="rgb(249,185,26)" fg:x="2708" fg:w="39"/><text x="2.3124%" y="1807.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (34 samples, 0.03%)</title><rect x="2.0662%" y="1781" width="0.0259%" height="15" fill="rgb(249,174,33)" fg:x="2713" fg:w="34"/><text x="2.3162%" y="1791.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::read (32 samples, 0.02%)</title><rect x="2.0678%" y="1765" width="0.0244%" height="15" fill="rgb(233,201,37)" fg:x="2715" fg:w="32"/><text x="2.3178%" y="1775.50"></text></g><g><title>[[heap]] (2,361 samples, 1.80%)</title><rect x="0.3054%" y="1813" width="1.7982%" height="15" fill="rgb(221,78,26)" fg:x="401" fg:w="2361"/><text x="0.5554%" y="1823.50">[..</text></g><g><title>[[vdso]] (313 samples, 0.24%)</title><rect x="2.1036%" y="1813" width="0.2384%" height="15" fill="rgb(250,127,30)" fg:x="2762" fg:w="313"/><text x="2.3536%" y="1823.50"></text></g><g><title>&lt;alloc::collections::btree::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.03%)</title><rect x="2.3480%" y="1797" width="0.0312%" height="15" fill="rgb(230,49,44)" fg:x="3083" fg:w="41"/><text x="2.5980%" y="1807.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.02%)</title><rect x="2.3579%" y="1781" width="0.0213%" height="15" fill="rgb(229,67,23)" fg:x="3096" fg:w="28"/><text x="2.6079%" y="1791.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (16 samples, 0.01%)</title><rect x="2.3671%" y="1765" width="0.0122%" height="15" fill="rgb(249,83,47)" fg:x="3108" fg:w="16"/><text x="2.6171%" y="1775.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (67 samples, 0.05%)</title><rect x="2.3800%" y="1797" width="0.0510%" height="15" fill="rgb(215,43,3)" fg:x="3125" fg:w="67"/><text x="2.6300%" y="1807.50"></text></g><g><title>alloc::string::String::push_str (18 samples, 0.01%)</title><rect x="2.4173%" y="1781" width="0.0137%" height="15" fill="rgb(238,154,13)" fg:x="3174" fg:w="18"/><text x="2.6673%" y="1791.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (18 samples, 0.01%)</title><rect x="2.4173%" y="1765" width="0.0137%" height="15" fill="rgb(219,56,2)" fg:x="3174" fg:w="18"/><text x="2.6673%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (18 samples, 0.01%)</title><rect x="2.4173%" y="1749" width="0.0137%" height="15" fill="rgb(233,0,4)" fg:x="3174" fg:w="18"/><text x="2.6673%" y="1759.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (18 samples, 0.01%)</title><rect x="2.4173%" y="1733" width="0.0137%" height="15" fill="rgb(235,30,7)" fg:x="3174" fg:w="18"/><text x="2.6673%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (36 samples, 0.03%)</title><rect x="2.4356%" y="1797" width="0.0274%" height="15" fill="rgb(250,79,13)" fg:x="3198" fg:w="36"/><text x="2.6856%" y="1807.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (28 samples, 0.02%)</title><rect x="2.5232%" y="1765" width="0.0213%" height="15" fill="rgb(211,146,34)" fg:x="3313" fg:w="28"/><text x="2.7732%" y="1775.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (60 samples, 0.05%)</title><rect x="2.5095%" y="1781" width="0.0457%" height="15" fill="rgb(228,22,38)" fg:x="3295" fg:w="60"/><text x="2.7595%" y="1791.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (14 samples, 0.01%)</title><rect x="2.5445%" y="1765" width="0.0107%" height="15" fill="rgb(235,168,5)" fg:x="3341" fg:w="14"/><text x="2.7945%" y="1775.50"></text></g><g><title>core::hash::sip::u8to64_le (60 samples, 0.05%)</title><rect x="2.5560%" y="1781" width="0.0457%" height="15" fill="rgb(221,155,16)" fg:x="3356" fg:w="60"/><text x="2.8060%" y="1791.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (184 samples, 0.14%)</title><rect x="2.4630%" y="1797" width="0.1401%" height="15" fill="rgb(215,215,53)" fg:x="3234" fg:w="184"/><text x="2.7130%" y="1807.50"></text></g><g><title>&lt;core::net::socket_addr::SocketAddr as core::hash::Hash&gt;::hash (15 samples, 0.01%)</title><rect x="2.6032%" y="1797" width="0.0114%" height="15" fill="rgb(223,4,10)" fg:x="3418" fg:w="15"/><text x="2.8532%" y="1807.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (19 samples, 0.01%)</title><rect x="2.6184%" y="1717" width="0.0145%" height="15" fill="rgb(234,103,6)" fg:x="3438" fg:w="19"/><text x="2.8684%" y="1727.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (17 samples, 0.01%)</title><rect x="2.6199%" y="1701" width="0.0129%" height="15" fill="rgb(227,97,0)" fg:x="3440" fg:w="17"/><text x="2.8699%" y="1711.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (26 samples, 0.02%)</title><rect x="2.6146%" y="1797" width="0.0198%" height="15" fill="rgb(234,150,53)" fg:x="3433" fg:w="26"/><text x="2.8646%" y="1807.50"></text></g><g><title>core::ops::function::FnMut::call_mut (21 samples, 0.02%)</title><rect x="2.6184%" y="1781" width="0.0160%" height="15" fill="rgb(228,201,54)" fg:x="3438" fg:w="21"/><text x="2.8684%" y="1791.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (21 samples, 0.02%)</title><rect x="2.6184%" y="1765" width="0.0160%" height="15" fill="rgb(222,22,37)" fg:x="3438" fg:w="21"/><text x="2.8684%" y="1775.50"></text></g><g><title>tokio::runtime::context::budget (21 samples, 0.02%)</title><rect x="2.6184%" y="1749" width="0.0160%" height="15" fill="rgb(237,53,32)" fg:x="3438" fg:w="21"/><text x="2.8684%" y="1759.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (21 samples, 0.02%)</title><rect x="2.6184%" y="1733" width="0.0160%" height="15" fill="rgb(233,25,53)" fg:x="3438" fg:w="21"/><text x="2.8684%" y="1743.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="2.7486%" y="1781" width="0.0137%" height="15" fill="rgb(210,40,34)" fg:x="3609" fg:w="18"/><text x="2.9986%" y="1791.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::future::future::Future&gt;::poll (195 samples, 0.15%)</title><rect x="2.6344%" y="1797" width="0.1485%" height="15" fill="rgb(241,220,44)" fg:x="3459" fg:w="195"/><text x="2.8844%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (14 samples, 0.01%)</title><rect x="2.9177%" y="1781" width="0.0107%" height="15" fill="rgb(235,28,35)" fg:x="3831" fg:w="14"/><text x="3.1677%" y="1791.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="2.9177%" y="1765" width="0.0107%" height="15" fill="rgb(210,56,17)" fg:x="3831" fg:w="14"/><text x="3.1677%" y="1775.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (18 samples, 0.01%)</title><rect x="2.9390%" y="1733" width="0.0137%" height="15" fill="rgb(224,130,29)" fg:x="3859" fg:w="18"/><text x="3.1890%" y="1743.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (18 samples, 0.01%)</title><rect x="2.9390%" y="1717" width="0.0137%" height="15" fill="rgb(235,212,8)" fg:x="3859" fg:w="18"/><text x="3.1890%" y="1727.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (51 samples, 0.04%)</title><rect x="2.9284%" y="1781" width="0.0388%" height="15" fill="rgb(223,33,50)" fg:x="3845" fg:w="51"/><text x="3.1784%" y="1791.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (46 samples, 0.04%)</title><rect x="2.9322%" y="1765" width="0.0350%" height="15" fill="rgb(219,149,13)" fg:x="3850" fg:w="46"/><text x="3.1822%" y="1775.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (39 samples, 0.03%)</title><rect x="2.9375%" y="1749" width="0.0297%" height="15" fill="rgb(250,156,29)" fg:x="3857" fg:w="39"/><text x="3.1875%" y="1759.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (19 samples, 0.01%)</title><rect x="2.9528%" y="1733" width="0.0145%" height="15" fill="rgb(216,193,19)" fg:x="3877" fg:w="19"/><text x="3.2028%" y="1743.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (19 samples, 0.01%)</title><rect x="2.9528%" y="1717" width="0.0145%" height="15" fill="rgb(216,135,14)" fg:x="3877" fg:w="19"/><text x="3.2028%" y="1727.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::ops::drop::Drop&gt;::drop (245 samples, 0.19%)</title><rect x="2.7829%" y="1797" width="0.1866%" height="15" fill="rgb(241,47,5)" fg:x="3654" fg:w="245"/><text x="3.0329%" y="1807.50"></text></g><g><title>&lt;torrust_tracker_primitives::info_hash::InfoHash as core::fmt::Display&gt;::fmt (26 samples, 0.02%)</title><rect x="2.9695%" y="1797" width="0.0198%" height="15" fill="rgb(233,42,35)" fg:x="3899" fg:w="26"/><text x="3.2195%" y="1807.50"></text></g><g><title>[[vdso]] (748 samples, 0.57%)</title><rect x="2.9893%" y="1797" width="0.5697%" height="15" fill="rgb(231,13,6)" fg:x="3925" fg:w="748"/><text x="3.2393%" y="1807.50"></text></g><g><title>[profiling] (34 samples, 0.03%)</title><rect x="3.5636%" y="1797" width="0.0259%" height="15" fill="rgb(207,181,40)" fg:x="4679" fg:w="34"/><text x="3.8136%" y="1807.50"></text></g><g><title>core::fmt::write (31 samples, 0.02%)</title><rect x="3.5659%" y="1781" width="0.0236%" height="15" fill="rgb(254,173,49)" fg:x="4682" fg:w="31"/><text x="3.8159%" y="1791.50"></text></g><g><title>__GI___clock_gettime (29 samples, 0.02%)</title><rect x="3.5895%" y="1797" width="0.0221%" height="15" fill="rgb(221,1,38)" fg:x="4713" fg:w="29"/><text x="3.8395%" y="1807.50"></text></g><g><title>__GI___libc_free (131 samples, 0.10%)</title><rect x="3.6176%" y="1797" width="0.0998%" height="15" fill="rgb(206,124,46)" fg:x="4750" fg:w="131"/><text x="3.8676%" y="1807.50"></text></g><g><title>arena_for_chunk (20 samples, 0.02%)</title><rect x="3.7022%" y="1781" width="0.0152%" height="15" fill="rgb(249,21,11)" fg:x="4861" fg:w="20"/><text x="3.9522%" y="1791.50"></text></g><g><title>arena_for_chunk (19 samples, 0.01%)</title><rect x="3.7029%" y="1765" width="0.0145%" height="15" fill="rgb(222,201,40)" fg:x="4862" fg:w="19"/><text x="3.9529%" y="1775.50"></text></g><g><title>heap_for_ptr (19 samples, 0.01%)</title><rect x="3.7029%" y="1749" width="0.0145%" height="15" fill="rgb(235,61,29)" fg:x="4862" fg:w="19"/><text x="3.9529%" y="1759.50"></text></g><g><title>heap_max_size (14 samples, 0.01%)</title><rect x="3.7068%" y="1733" width="0.0107%" height="15" fill="rgb(219,207,3)" fg:x="4867" fg:w="14"/><text x="3.9568%" y="1743.50"></text></g><g><title>__GI___libc_malloc (114 samples, 0.09%)</title><rect x="3.7174%" y="1797" width="0.0868%" height="15" fill="rgb(222,56,46)" fg:x="4881" fg:w="114"/><text x="3.9674%" y="1807.50"></text></g><g><title>__GI___libc_realloc (15 samples, 0.01%)</title><rect x="3.8042%" y="1797" width="0.0114%" height="15" fill="rgb(239,76,54)" fg:x="4995" fg:w="15"/><text x="4.0542%" y="1807.50"></text></g><g><title>__GI___lll_lock_wake_private (22 samples, 0.02%)</title><rect x="3.8233%" y="1797" width="0.0168%" height="15" fill="rgb(231,124,27)" fg:x="5020" fg:w="22"/><text x="4.0733%" y="1807.50"></text></g><g><title>__GI___pthread_disable_asynccancel (66 samples, 0.05%)</title><rect x="3.8400%" y="1797" width="0.0503%" height="15" fill="rgb(249,195,6)" fg:x="5042" fg:w="66"/><text x="4.0900%" y="1807.50"></text></g><g><title>__GI_getsockname (249 samples, 0.19%)</title><rect x="3.8903%" y="1797" width="0.1896%" height="15" fill="rgb(237,174,47)" fg:x="5108" fg:w="249"/><text x="4.1403%" y="1807.50"></text></g><g><title>__libc_calloc (15 samples, 0.01%)</title><rect x="4.0868%" y="1797" width="0.0114%" height="15" fill="rgb(206,201,31)" fg:x="5366" fg:w="15"/><text x="4.3368%" y="1807.50"></text></g><g><title>__libc_recvfrom (23 samples, 0.02%)</title><rect x="4.0982%" y="1797" width="0.0175%" height="15" fill="rgb(231,57,52)" fg:x="5381" fg:w="23"/><text x="4.3482%" y="1807.50"></text></g><g><title>__libc_sendto (130 samples, 0.10%)</title><rect x="4.1157%" y="1797" width="0.0990%" height="15" fill="rgb(248,177,22)" fg:x="5404" fg:w="130"/><text x="4.3657%" y="1807.50"></text></g><g><title>__memcmp_evex_movbe (451 samples, 0.34%)</title><rect x="4.2239%" y="1797" width="0.3435%" height="15" fill="rgb(215,211,37)" fg:x="5546" fg:w="451"/><text x="4.4739%" y="1807.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (426 samples, 0.32%)</title><rect x="4.5674%" y="1797" width="0.3244%" height="15" fill="rgb(241,128,51)" fg:x="5997" fg:w="426"/><text x="4.8174%" y="1807.50"></text></g><g><title>__memset_avx512_unaligned_erms (215 samples, 0.16%)</title><rect x="4.8918%" y="1797" width="0.1637%" height="15" fill="rgb(227,165,31)" fg:x="6423" fg:w="215"/><text x="5.1418%" y="1807.50"></text></g><g><title>__posix_memalign (17 samples, 0.01%)</title><rect x="5.0556%" y="1797" width="0.0129%" height="15" fill="rgb(228,167,24)" fg:x="6638" fg:w="17"/><text x="5.3056%" y="1807.50"></text></g><g><title>_int_free (418 samples, 0.32%)</title><rect x="5.0807%" y="1797" width="0.3184%" height="15" fill="rgb(228,143,12)" fg:x="6671" fg:w="418"/><text x="5.3307%" y="1807.50"></text></g><g><title>tcache_put (24 samples, 0.02%)</title><rect x="5.3808%" y="1781" width="0.0183%" height="15" fill="rgb(249,149,8)" fg:x="7065" fg:w="24"/><text x="5.6308%" y="1791.50"></text></g><g><title>_int_malloc (385 samples, 0.29%)</title><rect x="5.3990%" y="1797" width="0.2932%" height="15" fill="rgb(243,35,44)" fg:x="7089" fg:w="385"/><text x="5.6490%" y="1807.50"></text></g><g><title>_int_memalign (31 samples, 0.02%)</title><rect x="5.6923%" y="1797" width="0.0236%" height="15" fill="rgb(246,89,9)" fg:x="7474" fg:w="31"/><text x="5.9423%" y="1807.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (26 samples, 0.02%)</title><rect x="5.7303%" y="1781" width="0.0198%" height="15" fill="rgb(233,213,13)" fg:x="7524" fg:w="26"/><text x="5.9803%" y="1791.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (15 samples, 0.01%)</title><rect x="5.7387%" y="1765" width="0.0114%" height="15" fill="rgb(233,141,41)" fg:x="7535" fg:w="15"/><text x="5.9887%" y="1775.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (15 samples, 0.01%)</title><rect x="5.7387%" y="1749" width="0.0114%" height="15" fill="rgb(239,167,4)" fg:x="7535" fg:w="15"/><text x="5.9887%" y="1759.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (15 samples, 0.01%)</title><rect x="5.7387%" y="1733" width="0.0114%" height="15" fill="rgb(209,217,16)" fg:x="7535" fg:w="15"/><text x="5.9887%" y="1743.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (54 samples, 0.04%)</title><rect x="5.7159%" y="1797" width="0.0411%" height="15" fill="rgb(219,88,35)" fg:x="7505" fg:w="54"/><text x="5.9659%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (15 samples, 0.01%)</title><rect x="5.7593%" y="1797" width="0.0114%" height="15" fill="rgb(220,193,23)" fg:x="7562" fg:w="15"/><text x="6.0093%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (96 samples, 0.07%)</title><rect x="5.7707%" y="1797" width="0.0731%" height="15" fill="rgb(230,90,52)" fg:x="7577" fg:w="96"/><text x="6.0207%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (66 samples, 0.05%)</title><rect x="5.7936%" y="1781" width="0.0503%" height="15" fill="rgb(252,106,19)" fg:x="7607" fg:w="66"/><text x="6.0436%" y="1791.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (18 samples, 0.01%)</title><rect x="5.8301%" y="1765" width="0.0137%" height="15" fill="rgb(206,74,20)" fg:x="7655" fg:w="18"/><text x="6.0801%" y="1775.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (18 samples, 0.01%)</title><rect x="5.8301%" y="1749" width="0.0137%" height="15" fill="rgb(230,138,44)" fg:x="7655" fg:w="18"/><text x="6.0801%" y="1759.50"></text></g><g><title>alloc::raw_vec::finish_grow (74 samples, 0.06%)</title><rect x="5.8438%" y="1797" width="0.0564%" height="15" fill="rgb(235,182,43)" fg:x="7673" fg:w="74"/><text x="6.0938%" y="1807.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (16 samples, 0.01%)</title><rect x="5.9002%" y="1797" width="0.0122%" height="15" fill="rgb(242,16,51)" fg:x="7747" fg:w="16"/><text x="6.1502%" y="1807.50"></text></g><g><title>core::mem::drop (14 samples, 0.01%)</title><rect x="5.9017%" y="1781" width="0.0107%" height="15" fill="rgb(248,9,4)" fg:x="7749" fg:w="14"/><text x="6.1517%" y="1791.50"></text></g><g><title>core::fmt::Formatter::pad_integral (14 samples, 0.01%)</title><rect x="5.9147%" y="1797" width="0.0107%" height="15" fill="rgb(210,31,22)" fg:x="7766" fg:w="14"/><text x="6.1647%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;aquatic_udp_protocol::response::Response&gt; (93 samples, 0.07%)</title><rect x="5.9428%" y="1797" width="0.0708%" height="15" fill="rgb(239,54,39)" fg:x="7803" fg:w="93"/><text x="6.1928%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::net::udp::UdpSocket::send_to&lt;&amp;core::net::socket_addr::SocketAddr&gt;::{{closure}}&gt; (23 samples, 0.02%)</title><rect x="6.0137%" y="1797" width="0.0175%" height="15" fill="rgb(230,99,41)" fg:x="7896" fg:w="23"/><text x="6.2637%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;torrust_tracker::servers::udp::server::Udp::process_request::{{closure}}&gt;&gt; (188 samples, 0.14%)</title><rect x="6.0312%" y="1797" width="0.1432%" height="15" fill="rgb(253,106,12)" fg:x="7919" fg:w="188"/><text x="6.2812%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;torrust_tracker::servers::udp::handlers::handle_announce::{{closure}}&gt; (30 samples, 0.02%)</title><rect x="6.1759%" y="1797" width="0.0228%" height="15" fill="rgb(213,46,41)" fg:x="8109" fg:w="30"/><text x="6.4259%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;torrust_tracker::servers::udp::handlers::handle_connect::{{closure}}&gt; (22 samples, 0.02%)</title><rect x="6.1987%" y="1797" width="0.0168%" height="15" fill="rgb(215,133,35)" fg:x="8139" fg:w="22"/><text x="6.4487%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;torrust_tracker::servers::udp::handlers::handle_packet::{{closure}}&gt; (20 samples, 0.02%)</title><rect x="6.2155%" y="1797" width="0.0152%" height="15" fill="rgb(213,28,5)" fg:x="8161" fg:w="20"/><text x="6.4655%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;torrust_tracker::servers::udp::server::Udp::process_valid_request::{{closure}}&gt; (19 samples, 0.01%)</title><rect x="6.2406%" y="1797" width="0.0145%" height="15" fill="rgb(215,77,49)" fg:x="8194" fg:w="19"/><text x="6.4906%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;torrust_tracker::servers::udp::server::Udp::send_response::{{closure}}&gt; (22 samples, 0.02%)</title><rect x="6.2559%" y="1797" width="0.0168%" height="15" fill="rgb(248,100,22)" fg:x="8214" fg:w="22"/><text x="6.5059%" y="1807.50"></text></g><g><title>malloc_consolidate (24 samples, 0.02%)</title><rect x="6.2810%" y="1797" width="0.0183%" height="15" fill="rgb(208,67,9)" fg:x="8247" fg:w="24"/><text x="6.5310%" y="1807.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (15 samples, 0.01%)</title><rect x="6.3457%" y="1701" width="0.0114%" height="15" fill="rgb(219,133,21)" fg:x="8332" fg:w="15"/><text x="6.5957%" y="1711.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (17 samples, 0.01%)</title><rect x="6.3457%" y="1733" width="0.0129%" height="15" fill="rgb(246,46,29)" fg:x="8332" fg:w="17"/><text x="6.5957%" y="1743.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (17 samples, 0.01%)</title><rect x="6.3457%" y="1717" width="0.0129%" height="15" fill="rgb(246,185,52)" fg:x="8332" fg:w="17"/><text x="6.5957%" y="1727.50"></text></g><g><title>rand_chacha::guts::round (66 samples, 0.05%)</title><rect x="6.3229%" y="1749" width="0.0503%" height="15" fill="rgb(252,136,11)" fg:x="8302" fg:w="66"/><text x="6.5729%" y="1759.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (99 samples, 0.08%)</title><rect x="6.3038%" y="1797" width="0.0754%" height="15" fill="rgb(219,138,53)" fg:x="8277" fg:w="99"/><text x="6.5538%" y="1807.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (98 samples, 0.07%)</title><rect x="6.3046%" y="1781" width="0.0746%" height="15" fill="rgb(211,51,23)" fg:x="8278" fg:w="98"/><text x="6.5546%" y="1791.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (98 samples, 0.07%)</title><rect x="6.3046%" y="1765" width="0.0746%" height="15" fill="rgb(247,221,28)" fg:x="8278" fg:w="98"/><text x="6.5546%" y="1775.50"></text></g><g><title>std::io::error::Error::kind (14 samples, 0.01%)</title><rect x="6.3792%" y="1797" width="0.0107%" height="15" fill="rgb(251,222,45)" fg:x="8376" fg:w="14"/><text x="6.6292%" y="1807.50"></text></g><g><title>[unknown] (42 samples, 0.03%)</title><rect x="6.6237%" y="1781" width="0.0320%" height="15" fill="rgb(217,162,53)" fg:x="8697" fg:w="42"/><text x="6.8737%" y="1791.50"></text></g><g><title>[unknown] (14 samples, 0.01%)</title><rect x="6.7418%" y="1765" width="0.0107%" height="15" fill="rgb(229,93,14)" fg:x="8852" fg:w="14"/><text x="6.9918%" y="1775.50"></text></g><g><title>tokio::runtime::io::registration::Registration::readiness::{{closure}} (490 samples, 0.37%)</title><rect x="6.4432%" y="1797" width="0.3732%" height="15" fill="rgb(209,67,49)" fg:x="8460" fg:w="490"/><text x="6.6932%" y="1807.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::readiness::{{closure}} (211 samples, 0.16%)</title><rect x="6.6557%" y="1781" width="0.1607%" height="15" fill="rgb(213,87,29)" fg:x="8739" fg:w="211"/><text x="6.9057%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::io::scheduled_io::Readiness&gt; (84 samples, 0.06%)</title><rect x="6.7524%" y="1765" width="0.0640%" height="15" fill="rgb(205,151,52)" fg:x="8866" fg:w="84"/><text x="7.0024%" y="1775.50"></text></g><g><title>tokio::runtime::task::core::Header::get_owner_id (18 samples, 0.01%)</title><rect x="6.8286%" y="1765" width="0.0137%" height="15" fill="rgb(253,215,39)" fg:x="8966" fg:w="18"/><text x="7.0786%" y="1775.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (18 samples, 0.01%)</title><rect x="6.8286%" y="1749" width="0.0137%" height="15" fill="rgb(221,220,41)" fg:x="8966" fg:w="18"/><text x="7.0786%" y="1759.50"></text></g><g><title>tokio::runtime::task::core::Header::get_owner_id::{{closure}} (18 samples, 0.01%)</title><rect x="6.8286%" y="1733" width="0.0137%" height="15" fill="rgb(218,133,21)" fg:x="8966" fg:w="18"/><text x="7.0786%" y="1743.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::release (20 samples, 0.02%)</title><rect x="6.8278%" y="1797" width="0.0152%" height="15" fill="rgb(221,193,43)" fg:x="8965" fg:w="20"/><text x="7.0778%" y="1807.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::remove (19 samples, 0.01%)</title><rect x="6.8286%" y="1781" width="0.0145%" height="15" fill="rgb(240,128,52)" fg:x="8966" fg:w="19"/><text x="7.0786%" y="1791.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (31 samples, 0.02%)</title><rect x="6.8956%" y="1781" width="0.0236%" height="15" fill="rgb(253,114,12)" fg:x="9054" fg:w="31"/><text x="7.1456%" y="1791.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage::{{closure}} (29 samples, 0.02%)</title><rect x="6.8971%" y="1765" width="0.0221%" height="15" fill="rgb(215,223,47)" fg:x="9056" fg:w="29"/><text x="7.1471%" y="1775.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (108 samples, 0.08%)</title><rect x="6.8476%" y="1797" width="0.0823%" height="15" fill="rgb(248,225,23)" fg:x="8991" fg:w="108"/><text x="7.0976%" y="1807.50"></text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (14 samples, 0.01%)</title><rect x="6.9192%" y="1781" width="0.0107%" height="15" fill="rgb(250,108,0)" fg:x="9085" fg:w="14"/><text x="7.1692%" y="1791.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (14 samples, 0.01%)</title><rect x="6.9192%" y="1765" width="0.0107%" height="15" fill="rgb(228,208,7)" fg:x="9085" fg:w="14"/><text x="7.1692%" y="1775.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (14 samples, 0.01%)</title><rect x="6.9192%" y="1749" width="0.0107%" height="15" fill="rgb(244,45,10)" fg:x="9085" fg:w="14"/><text x="7.1692%" y="1759.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (21 samples, 0.02%)</title><rect x="6.9299%" y="1797" width="0.0160%" height="15" fill="rgb(207,125,25)" fg:x="9099" fg:w="21"/><text x="7.1799%" y="1807.50"></text></g><g><title>tokio::util::sharded_list::ShardGuard&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push (32 samples, 0.02%)</title><rect x="6.9619%" y="1781" width="0.0244%" height="15" fill="rgb(210,195,18)" fg:x="9141" fg:w="32"/><text x="7.2119%" y="1791.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind_inner (54 samples, 0.04%)</title><rect x="6.9489%" y="1797" width="0.0411%" height="15" fill="rgb(249,80,12)" fg:x="9124" fg:w="54"/><text x="7.1989%" y="1807.50"></text></g><g><title>tokio::runtime::task::raw::drop_abort_handle (41 samples, 0.03%)</title><rect x="6.9900%" y="1797" width="0.0312%" height="15" fill="rgb(221,65,9)" fg:x="9178" fg:w="41"/><text x="7.2400%" y="1807.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::maintenance (17 samples, 0.01%)</title><rect x="7.0852%" y="1397" width="0.0129%" height="15" fill="rgb(235,49,36)" fg:x="9303" fg:w="17"/><text x="7.3352%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (22 samples, 0.02%)</title><rect x="7.0997%" y="1365" width="0.0168%" height="15" fill="rgb(225,32,20)" fg:x="9322" fg:w="22"/><text x="7.3497%" y="1375.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="7.0997%" y="1349" width="0.0168%" height="15" fill="rgb(215,141,46)" fg:x="9322" fg:w="22"/><text x="7.3497%" y="1359.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::{{closure}} (79 samples, 0.06%)</title><rect x="7.1614%" y="1317" width="0.0602%" height="15" fill="rgb(250,160,47)" fg:x="9403" fg:w="79"/><text x="7.4114%" y="1327.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (79 samples, 0.06%)</title><rect x="7.1614%" y="1301" width="0.0602%" height="15" fill="rgb(216,222,40)" fg:x="9403" fg:w="79"/><text x="7.4114%" y="1311.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (178 samples, 0.14%)</title><rect x="7.1165%" y="1365" width="0.1356%" height="15" fill="rgb(234,217,39)" fg:x="9344" fg:w="178"/><text x="7.3665%" y="1375.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (178 samples, 0.14%)</title><rect x="7.1165%" y="1349" width="0.1356%" height="15" fill="rgb(207,178,40)" fg:x="9344" fg:w="178"/><text x="7.3665%" y="1359.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (178 samples, 0.14%)</title><rect x="7.1165%" y="1333" width="0.1356%" height="15" fill="rgb(221,136,13)" fg:x="9344" fg:w="178"/><text x="7.3665%" y="1343.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.03%)</title><rect x="7.2216%" y="1317" width="0.0305%" height="15" fill="rgb(249,199,10)" fg:x="9482" fg:w="40"/><text x="7.4716%" y="1327.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (40 samples, 0.03%)</title><rect x="7.2216%" y="1301" width="0.0305%" height="15" fill="rgb(249,222,13)" fg:x="9482" fg:w="40"/><text x="7.4716%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::is_parked (216 samples, 0.16%)</title><rect x="7.0997%" y="1381" width="0.1645%" height="15" fill="rgb(244,185,38)" fg:x="9322" fg:w="216"/><text x="7.3497%" y="1391.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (16 samples, 0.01%)</title><rect x="7.2520%" y="1365" width="0.0122%" height="15" fill="rgb(236,202,9)" fg:x="9522" fg:w="16"/><text x="7.5020%" y="1375.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (16 samples, 0.01%)</title><rect x="7.2520%" y="1349" width="0.0122%" height="15" fill="rgb(250,229,37)" fg:x="9522" fg:w="16"/><text x="7.5020%" y="1359.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_parked (219 samples, 0.17%)</title><rect x="7.0982%" y="1397" width="0.1668%" height="15" fill="rgb(206,174,23)" fg:x="9320" fg:w="219"/><text x="7.3482%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (29 samples, 0.02%)</title><rect x="7.2756%" y="1365" width="0.0221%" height="15" fill="rgb(211,33,43)" fg:x="9553" fg:w="29"/><text x="7.5256%" y="1375.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.02%)</title><rect x="7.2756%" y="1349" width="0.0221%" height="15" fill="rgb(245,58,50)" fg:x="9553" fg:w="29"/><text x="7.5256%" y="1359.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (22 samples, 0.02%)</title><rect x="7.2810%" y="1333" width="0.0168%" height="15" fill="rgb(244,68,36)" fg:x="9560" fg:w="22"/><text x="7.5310%" y="1343.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (54 samples, 0.04%)</title><rect x="7.2696%" y="1381" width="0.0411%" height="15" fill="rgb(232,229,15)" fg:x="9545" fg:w="54"/><text x="7.5196%" y="1391.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.01%)</title><rect x="7.3373%" y="1365" width="0.0137%" height="15" fill="rgb(254,30,23)" fg:x="9634" fg:w="18"/><text x="7.5873%" y="1375.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (18 samples, 0.01%)</title><rect x="7.3373%" y="1349" width="0.0137%" height="15" fill="rgb(235,160,14)" fg:x="9634" fg:w="18"/><text x="7.5873%" y="1359.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (17 samples, 0.01%)</title><rect x="7.3731%" y="1317" width="0.0129%" height="15" fill="rgb(212,155,44)" fg:x="9681" fg:w="17"/><text x="7.6231%" y="1327.50"></text></g><g><title>core::sync::atomic::atomic_load (17 samples, 0.01%)</title><rect x="7.3731%" y="1301" width="0.0129%" height="15" fill="rgb(226,2,50)" fg:x="9681" fg:w="17"/><text x="7.6231%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_if_work_pending (113 samples, 0.09%)</title><rect x="7.3107%" y="1381" width="0.0861%" height="15" fill="rgb(234,177,6)" fg:x="9599" fg:w="113"/><text x="7.5607%" y="1391.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::is_empty (51 samples, 0.04%)</title><rect x="7.3579%" y="1365" width="0.0388%" height="15" fill="rgb(217,24,9)" fg:x="9661" fg:w="51"/><text x="7.6079%" y="1375.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::is_empty (41 samples, 0.03%)</title><rect x="7.3655%" y="1349" width="0.0312%" height="15" fill="rgb(220,13,46)" fg:x="9671" fg:w="41"/><text x="7.6155%" y="1359.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::len (31 samples, 0.02%)</title><rect x="7.3731%" y="1333" width="0.0236%" height="15" fill="rgb(239,221,27)" fg:x="9681" fg:w="31"/><text x="7.6231%" y="1343.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (14 samples, 0.01%)</title><rect x="7.3861%" y="1317" width="0.0107%" height="15" fill="rgb(222,198,25)" fg:x="9698" fg:w="14"/><text x="7.6361%" y="1327.50"></text></g><g><title>core::sync::atomic::atomic_load (14 samples, 0.01%)</title><rect x="7.3861%" y="1301" width="0.0107%" height="15" fill="rgb(211,99,13)" fg:x="9698" fg:w="14"/><text x="7.6361%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (447 samples, 0.34%)</title><rect x="7.0571%" y="1413" width="0.3404%" height="15" fill="rgb(232,111,31)" fg:x="9266" fg:w="447"/><text x="7.3071%" y="1423.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_parked (174 samples, 0.13%)</title><rect x="7.2650%" y="1397" width="0.1325%" height="15" fill="rgb(245,82,37)" fg:x="9539" fg:w="174"/><text x="7.5150%" y="1407.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (19 samples, 0.01%)</title><rect x="7.4013%" y="1381" width="0.0145%" height="15" fill="rgb(227,149,46)" fg:x="9718" fg:w="19"/><text x="7.6513%" y="1391.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (489 samples, 0.37%)</title><rect x="7.0441%" y="1637" width="0.3724%" height="15" fill="rgb(218,36,50)" fg:x="9249" fg:w="489"/><text x="7.2941%" y="1647.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (489 samples, 0.37%)</title><rect x="7.0441%" y="1621" width="0.3724%" height="15" fill="rgb(226,80,48)" fg:x="9249" fg:w="489"/><text x="7.2941%" y="1631.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (484 samples, 0.37%)</title><rect x="7.0479%" y="1605" width="0.3686%" height="15" fill="rgb(238,224,15)" fg:x="9254" fg:w="484"/><text x="7.2979%" y="1615.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}} (484 samples, 0.37%)</title><rect x="7.0479%" y="1589" width="0.3686%" height="15" fill="rgb(241,136,10)" fg:x="9254" fg:w="484"/><text x="7.2979%" y="1599.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (484 samples, 0.37%)</title><rect x="7.0479%" y="1573" width="0.3686%" height="15" fill="rgb(208,32,45)" fg:x="9254" fg:w="484"/><text x="7.2979%" y="1583.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (484 samples, 0.37%)</title><rect x="7.0479%" y="1557" width="0.3686%" height="15" fill="rgb(207,135,9)" fg:x="9254" fg:w="484"/><text x="7.2979%" y="1567.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (484 samples, 0.37%)</title><rect x="7.0479%" y="1541" width="0.3686%" height="15" fill="rgb(206,86,44)" fg:x="9254" fg:w="484"/><text x="7.2979%" y="1551.50"></text></g><g><title>tokio::runtime::context::set_scheduler (484 samples, 0.37%)</title><rect x="7.0479%" y="1525" width="0.3686%" height="15" fill="rgb(245,177,15)" fg:x="9254" fg:w="484"/><text x="7.2979%" y="1535.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (484 samples, 0.37%)</title><rect x="7.0479%" y="1509" width="0.3686%" height="15" fill="rgb(206,64,50)" fg:x="9254" fg:w="484"/><text x="7.2979%" y="1519.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (484 samples, 0.37%)</title><rect x="7.0479%" y="1493" width="0.3686%" height="15" fill="rgb(234,36,40)" fg:x="9254" fg:w="484"/><text x="7.2979%" y="1503.50"></text></g><g><title>tokio::runtime::context::set_scheduler::{{closure}} (484 samples, 0.37%)</title><rect x="7.0479%" y="1477" width="0.3686%" height="15" fill="rgb(213,64,8)" fg:x="9254" fg:w="484"/><text x="7.2979%" y="1487.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (484 samples, 0.37%)</title><rect x="7.0479%" y="1461" width="0.3686%" height="15" fill="rgb(210,75,36)" fg:x="9254" fg:w="484"/><text x="7.2979%" y="1471.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}::{{closure}} (484 samples, 0.37%)</title><rect x="7.0479%" y="1445" width="0.3686%" height="15" fill="rgb(229,88,21)" fg:x="9254" fg:w="484"/><text x="7.2979%" y="1455.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (484 samples, 0.37%)</title><rect x="7.0479%" y="1429" width="0.3686%" height="15" fill="rgb(252,204,47)" fg:x="9254" fg:w="484"/><text x="7.2979%" y="1439.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (24 samples, 0.02%)</title><rect x="7.3983%" y="1413" width="0.0183%" height="15" fill="rgb(208,77,27)" fg:x="9714" fg:w="24"/><text x="7.6483%" y="1423.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (20 samples, 0.02%)</title><rect x="7.4013%" y="1397" width="0.0152%" height="15" fill="rgb(221,76,26)" fg:x="9718" fg:w="20"/><text x="7.6513%" y="1407.50"></text></g><g><title>tokio::runtime::task::raw::poll (515 samples, 0.39%)</title><rect x="7.0274%" y="1797" width="0.3922%" height="15" fill="rgb(225,139,18)" fg:x="9227" fg:w="515"/><text x="7.2774%" y="1807.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (493 samples, 0.38%)</title><rect x="7.0441%" y="1781" width="0.3755%" height="15" fill="rgb(230,137,11)" fg:x="9249" fg:w="493"/><text x="7.2941%" y="1791.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (493 samples, 0.38%)</title><rect x="7.0441%" y="1765" width="0.3755%" height="15" fill="rgb(212,28,1)" fg:x="9249" fg:w="493"/><text x="7.2941%" y="1775.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (493 samples, 0.38%)</title><rect x="7.0441%" y="1749" width="0.3755%" height="15" fill="rgb(248,164,17)" fg:x="9249" fg:w="493"/><text x="7.2941%" y="1759.50"></text></g><g><title>std::panic::catch_unwind (493 samples, 0.38%)</title><rect x="7.0441%" y="1733" width="0.3755%" height="15" fill="rgb(222,171,42)" fg:x="9249" fg:w="493"/><text x="7.2941%" y="1743.50"></text></g><g><title>std::panicking::try (493 samples, 0.38%)</title><rect x="7.0441%" y="1717" width="0.3755%" height="15" fill="rgb(243,84,45)" fg:x="9249" fg:w="493"/><text x="7.2941%" y="1727.50"></text></g><g><title>std::panicking::try::do_call (493 samples, 0.38%)</title><rect x="7.0441%" y="1701" width="0.3755%" height="15" fill="rgb(252,49,23)" fg:x="9249" fg:w="493"/><text x="7.2941%" y="1711.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (493 samples, 0.38%)</title><rect x="7.0441%" y="1685" width="0.3755%" height="15" fill="rgb(215,19,7)" fg:x="9249" fg:w="493"/><text x="7.2941%" y="1695.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (493 samples, 0.38%)</title><rect x="7.0441%" y="1669" width="0.3755%" height="15" fill="rgb(238,81,41)" fg:x="9249" fg:w="493"/><text x="7.2941%" y="1679.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (493 samples, 0.38%)</title><rect x="7.0441%" y="1653" width="0.3755%" height="15" fill="rgb(210,199,37)" fg:x="9249" fg:w="493"/><text x="7.2941%" y="1663.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (16 samples, 0.01%)</title><rect x="7.4447%" y="1797" width="0.0122%" height="15" fill="rgb(244,192,49)" fg:x="9775" fg:w="16"/><text x="7.6947%" y="1807.50"></text></g><g><title>torrust_tracker::core::Tracker::authorize::{{closure}} (27 samples, 0.02%)</title><rect x="7.4569%" y="1797" width="0.0206%" height="15" fill="rgb(226,211,11)" fg:x="9791" fg:w="27"/><text x="7.7069%" y="1807.50"></text></g><g><title>torrust_tracker::core::Tracker::get_torrent_peers_for_peer (15 samples, 0.01%)</title><rect x="7.4775%" y="1797" width="0.0114%" height="15" fill="rgb(236,162,54)" fg:x="9818" fg:w="15"/><text x="7.7275%" y="1807.50"></text></g><g><title>torrust_tracker::core::Tracker::send_stats_event::{{closure}} (44 samples, 0.03%)</title><rect x="7.4889%" y="1797" width="0.0335%" height="15" fill="rgb(220,229,9)" fg:x="9833" fg:w="44"/><text x="7.7389%" y="1807.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (15 samples, 0.01%)</title><rect x="7.5331%" y="1733" width="0.0114%" height="15" fill="rgb(250,87,22)" fg:x="9891" fg:w="15"/><text x="7.7831%" y="1743.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (47 samples, 0.04%)</title><rect x="7.5308%" y="1781" width="0.0358%" height="15" fill="rgb(239,43,17)" fg:x="9888" fg:w="47"/><text x="7.7808%" y="1791.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (47 samples, 0.04%)</title><rect x="7.5308%" y="1765" width="0.0358%" height="15" fill="rgb(231,177,25)" fg:x="9888" fg:w="47"/><text x="7.7808%" y="1775.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (47 samples, 0.04%)</title><rect x="7.5308%" y="1749" width="0.0358%" height="15" fill="rgb(219,179,1)" fg:x="9888" fg:w="47"/><text x="7.7808%" y="1759.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (29 samples, 0.02%)</title><rect x="7.5445%" y="1733" width="0.0221%" height="15" fill="rgb(238,219,53)" fg:x="9906" fg:w="29"/><text x="7.7945%" y="1743.50"></text></g><g><title>torrust_tracker::servers::udp::connection_cookie::cookie_builder::build (74 samples, 0.06%)</title><rect x="7.5224%" y="1797" width="0.0564%" height="15" fill="rgb(232,167,36)" fg:x="9877" fg:w="74"/><text x="7.7724%" y="1807.50"></text></g><g><title>torrust_tracker::servers::udp::peer_builder::from_request (17 samples, 0.01%)</title><rect x="7.5887%" y="1797" width="0.0129%" height="15" fill="rgb(244,19,51)" fg:x="9964" fg:w="17"/><text x="7.8387%" y="1807.50"></text></g><g><title>torrust_tracker::servers::udp::request::AnnounceWrapper::new (51 samples, 0.04%)</title><rect x="7.6016%" y="1797" width="0.0388%" height="15" fill="rgb(224,6,22)" fg:x="9981" fg:w="51"/><text x="7.8516%" y="1807.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::process_request::{{closure}} (54 samples, 0.04%)</title><rect x="7.6405%" y="1797" width="0.0411%" height="15" fill="rgb(224,145,5)" fg:x="10032" fg:w="54"/><text x="7.8905%" y="1807.50"></text></g><g><title>torrust_tracker::core::Tracker::update_torrent_with_peer_and_get_stats::{{closure}} (58 samples, 0.04%)</title><rect x="7.8476%" y="1717" width="0.0442%" height="15" fill="rgb(234,130,49)" fg:x="10304" fg:w="58"/><text x="8.0976%" y="1727.50"></text></g><g><title>torrust_tracker::core::Tracker::announce::{{closure}} (70 samples, 0.05%)</title><rect x="7.8415%" y="1733" width="0.0533%" height="15" fill="rgb(254,6,2)" fg:x="10296" fg:w="70"/><text x="8.0915%" y="1743.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_announce::{{closure}} (113 samples, 0.09%)</title><rect x="7.8111%" y="1749" width="0.0861%" height="15" fill="rgb(208,96,46)" fg:x="10256" fg:w="113"/><text x="8.0611%" y="1759.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_request::{{closure}} (175 samples, 0.13%)</title><rect x="7.7760%" y="1765" width="0.1333%" height="15" fill="rgb(239,3,39)" fg:x="10210" fg:w="175"/><text x="8.0260%" y="1775.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (38 samples, 0.03%)</title><rect x="7.9382%" y="1749" width="0.0289%" height="15" fill="rgb(233,210,1)" fg:x="10423" fg:w="38"/><text x="8.1882%" y="1759.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (56 samples, 0.04%)</title><rect x="7.9687%" y="1749" width="0.0427%" height="15" fill="rgb(244,137,37)" fg:x="10463" fg:w="56"/><text x="8.2187%" y="1759.50"></text></g><g><title>torrust_tracker_primitives::info_hash::InfoHash::to_hex_string (18 samples, 0.01%)</title><rect x="8.0205%" y="1749" width="0.0137%" height="15" fill="rgb(240,136,2)" fg:x="10531" fg:w="18"/><text x="8.2705%" y="1759.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (18 samples, 0.01%)</title><rect x="8.0205%" y="1733" width="0.0137%" height="15" fill="rgb(239,18,37)" fg:x="10531" fg:w="18"/><text x="8.2705%" y="1743.50"></text></g><g><title>torrust_tracker::servers::udp::logging::log_request (180 samples, 0.14%)</title><rect x="7.9093%" y="1765" width="0.1371%" height="15" fill="rgb(218,185,22)" fg:x="10385" fg:w="180"/><text x="8.1593%" y="1775.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_packet::{{closure}} (468 samples, 0.36%)</title><rect x="7.7189%" y="1781" width="0.3564%" height="15" fill="rgb(225,218,4)" fg:x="10135" fg:w="468"/><text x="7.9689%" y="1791.50"></text></g><g><title>torrust_tracker::servers::udp::logging::log_response (38 samples, 0.03%)</title><rect x="8.0464%" y="1765" width="0.0289%" height="15" fill="rgb(230,182,32)" fg:x="10565" fg:w="38"/><text x="8.2964%" y="1775.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::process_valid_request::{{closure}} (669 samples, 0.51%)</title><rect x="7.6816%" y="1797" width="0.5095%" height="15" fill="rgb(242,56,43)" fg:x="10086" fg:w="669"/><text x="7.9316%" y="1807.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::send_response::{{closure}} (152 samples, 0.12%)</title><rect x="8.0753%" y="1781" width="0.1158%" height="15" fill="rgb(233,99,24)" fg:x="10603" fg:w="152"/><text x="8.3253%" y="1791.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::send_packet::{{closure}} (147 samples, 0.11%)</title><rect x="8.0791%" y="1765" width="0.1120%" height="15" fill="rgb(234,209,42)" fg:x="10608" fg:w="147"/><text x="8.3291%" y="1775.50"></text></g><g><title>tokio::net::udp::UdpSocket::send_to::{{closure}} (138 samples, 0.11%)</title><rect x="8.0860%" y="1749" width="0.1051%" height="15" fill="rgb(227,7,12)" fg:x="10617" fg:w="138"/><text x="8.3360%" y="1759.50"></text></g><g><title>tokio::net::udp::UdpSocket::send_to_addr::{{closure}} (119 samples, 0.09%)</title><rect x="8.1005%" y="1733" width="0.0906%" height="15" fill="rgb(245,203,43)" fg:x="10636" fg:w="119"/><text x="8.3505%" y="1743.50"></text></g><g><title>tokio::runtime::io::registration::Registration::async_io::{{closure}} (75 samples, 0.06%)</title><rect x="8.1340%" y="1717" width="0.0571%" height="15" fill="rgb(238,205,33)" fg:x="10680" fg:w="75"/><text x="8.3840%" y="1727.50"></text></g><g><title>tokio::net::udp::UdpSocket::send_to_addr::{{closure}}::{{closure}} (39 samples, 0.03%)</title><rect x="8.1614%" y="1701" width="0.0297%" height="15" fill="rgb(231,56,7)" fg:x="10716" fg:w="39"/><text x="8.4114%" y="1711.50"></text></g><g><title>mio::net::udp::UdpSocket::send_to (39 samples, 0.03%)</title><rect x="8.1614%" y="1685" width="0.0297%" height="15" fill="rgb(244,186,29)" fg:x="10716" fg:w="39"/><text x="8.4114%" y="1695.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (39 samples, 0.03%)</title><rect x="8.1614%" y="1669" width="0.0297%" height="15" fill="rgb(234,111,31)" fg:x="10716" fg:w="39"/><text x="8.4114%" y="1679.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (39 samples, 0.03%)</title><rect x="8.1614%" y="1653" width="0.0297%" height="15" fill="rgb(241,149,10)" fg:x="10716" fg:w="39"/><text x="8.4114%" y="1663.50"></text></g><g><title>mio::net::udp::UdpSocket::send_to::{{closure}} (39 samples, 0.03%)</title><rect x="8.1614%" y="1637" width="0.0297%" height="15" fill="rgb(249,206,44)" fg:x="10716" fg:w="39"/><text x="8.4114%" y="1647.50"></text></g><g><title>std::net::udp::UdpSocket::send_to (39 samples, 0.03%)</title><rect x="8.1614%" y="1621" width="0.0297%" height="15" fill="rgb(251,153,30)" fg:x="10716" fg:w="39"/><text x="8.4114%" y="1631.50"></text></g><g><title>std::sys_common::net::UdpSocket::send_to (39 samples, 0.03%)</title><rect x="8.1614%" y="1605" width="0.0297%" height="15" fill="rgb(239,152,38)" fg:x="10716" fg:w="39"/><text x="8.4114%" y="1615.50"></text></g><g><title>std::sys::pal::unix::cvt (39 samples, 0.03%)</title><rect x="8.1614%" y="1589" width="0.0297%" height="15" fill="rgb(249,139,47)" fg:x="10716" fg:w="39"/><text x="8.4114%" y="1599.50"></text></g><g><title>&lt;isize as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (39 samples, 0.03%)</title><rect x="8.1614%" y="1573" width="0.0297%" height="15" fill="rgb(244,64,35)" fg:x="10716" fg:w="39"/><text x="8.4114%" y="1583.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::mutex_std::&lt;impl torrust_tracker_torrent_repository::entry::EntrySync for alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;::get_stats (15 samples, 0.01%)</title><rect x="8.1934%" y="1797" width="0.0114%" height="15" fill="rgb(216,46,15)" fg:x="10758" fg:w="15"/><text x="8.4434%" y="1807.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::single::&lt;impl torrust_tracker_torrent_repository::entry::Entry for torrust_tracker_torrent_repository::entry::Torrent&gt;::get_stats (14 samples, 0.01%)</title><rect x="8.1941%" y="1781" width="0.0107%" height="15" fill="rgb(250,74,19)" fg:x="10759" fg:w="14"/><text x="8.4441%" y="1791.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (33 samples, 0.03%)</title><rect x="8.2566%" y="1653" width="0.0251%" height="15" fill="rgb(249,42,33)" fg:x="10841" fg:w="33"/><text x="8.5066%" y="1663.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::single::&lt;impl torrust_tracker_torrent_repository::entry::Entry for torrust_tracker_torrent_repository::entry::Torrent&gt;::get_stats::{{closure}} (33 samples, 0.03%)</title><rect x="8.2566%" y="1637" width="0.0251%" height="15" fill="rgb(242,149,17)" fg:x="10841" fg:w="33"/><text x="8.5066%" y="1647.50"></text></g><g><title>torrust_tracker_primitives::peer::Peer::is_seeder (33 samples, 0.03%)</title><rect x="8.2566%" y="1621" width="0.0251%" height="15" fill="rgb(244,29,21)" fg:x="10841" fg:w="33"/><text x="8.5066%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (75 samples, 0.06%)</title><rect x="8.2254%" y="1749" width="0.0571%" height="15" fill="rgb(220,130,37)" fg:x="10800" fg:w="75"/><text x="8.4754%" y="1759.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (75 samples, 0.06%)</title><rect x="8.2254%" y="1733" width="0.0571%" height="15" fill="rgb(211,67,2)" fg:x="10800" fg:w="75"/><text x="8.4754%" y="1743.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (75 samples, 0.06%)</title><rect x="8.2254%" y="1717" width="0.0571%" height="15" fill="rgb(235,68,52)" fg:x="10800" fg:w="75"/><text x="8.4754%" y="1727.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (75 samples, 0.06%)</title><rect x="8.2254%" y="1701" width="0.0571%" height="15" fill="rgb(246,142,3)" fg:x="10800" fg:w="75"/><text x="8.4754%" y="1711.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (75 samples, 0.06%)</title><rect x="8.2254%" y="1685" width="0.0571%" height="15" fill="rgb(241,25,7)" fg:x="10800" fg:w="75"/><text x="8.4754%" y="1695.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (34 samples, 0.03%)</title><rect x="8.2566%" y="1669" width="0.0259%" height="15" fill="rgb(242,119,39)" fg:x="10841" fg:w="34"/><text x="8.5066%" y="1679.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::single::&lt;impl torrust_tracker_torrent_repository::entry::Entry for torrust_tracker_torrent_repository::entry::Torrent&gt;::get_stats (104 samples, 0.08%)</title><rect x="8.2216%" y="1765" width="0.0792%" height="15" fill="rgb(241,98,45)" fg:x="10795" fg:w="104"/><text x="8.4716%" y="1775.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::values (24 samples, 0.02%)</title><rect x="8.2825%" y="1749" width="0.0183%" height="15" fill="rgb(254,28,30)" fg:x="10875" fg:w="24"/><text x="8.5325%" y="1759.50"></text></g><g><title>core::mem::drop (15 samples, 0.01%)</title><rect x="8.3328%" y="1749" width="0.0114%" height="15" fill="rgb(241,142,54)" fg:x="10941" fg:w="15"/><text x="8.5828%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;torrust_tracker_primitives::peer::Peer&gt;&gt;&gt; (15 samples, 0.01%)</title><rect x="8.3328%" y="1733" width="0.0114%" height="15" fill="rgb(222,85,15)" fg:x="10941" fg:w="15"/><text x="8.5828%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;torrust_tracker_primitives::peer::Peer&gt;&gt; (15 samples, 0.01%)</title><rect x="8.3328%" y="1717" width="0.0114%" height="15" fill="rgb(210,85,47)" fg:x="10941" fg:w="15"/><text x="8.5828%" y="1727.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="8.3328%" y="1701" width="0.0114%" height="15" fill="rgb(224,206,25)" fg:x="10941" fg:w="15"/><text x="8.5828%" y="1711.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::mutex_std::&lt;impl torrust_tracker_torrent_repository::entry::EntrySync for alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;::insert_or_update_peer_and_get_stats (215 samples, 0.16%)</title><rect x="8.2048%" y="1797" width="0.1637%" height="15" fill="rgb(243,201,19)" fg:x="10773" fg:w="215"/><text x="8.4548%" y="1807.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::single::&lt;impl torrust_tracker_torrent_repository::entry::Entry for torrust_tracker_torrent_repository::entry::Torrent&gt;::insert_or_update_peer_and_get_stats (198 samples, 0.15%)</title><rect x="8.2178%" y="1781" width="0.1508%" height="15" fill="rgb(236,59,4)" fg:x="10790" fg:w="198"/><text x="8.4678%" y="1791.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::single::&lt;impl torrust_tracker_torrent_repository::entry::Entry for torrust_tracker_torrent_repository::entry::Torrent&gt;::insert_or_update_peer (89 samples, 0.07%)</title><rect x="8.3008%" y="1765" width="0.0678%" height="15" fill="rgb(254,179,45)" fg:x="10899" fg:w="89"/><text x="8.5508%" y="1775.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some_and (32 samples, 0.02%)</title><rect x="8.3442%" y="1749" width="0.0244%" height="15" fill="rgb(226,14,10)" fg:x="10956" fg:w="32"/><text x="8.5942%" y="1759.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::single::&lt;impl torrust_tracker_torrent_repository::entry::Entry for torrust_tracker_torrent_repository::entry::Torrent&gt;::insert_or_update_peer::{{closure}} (31 samples, 0.02%)</title><rect x="8.3449%" y="1733" width="0.0236%" height="15" fill="rgb(244,27,41)" fg:x="10957" fg:w="31"/><text x="8.5949%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;torrust_tracker_primitives::peer::Peer&gt;&gt; (30 samples, 0.02%)</title><rect x="8.3457%" y="1717" width="0.0228%" height="15" fill="rgb(235,35,32)" fg:x="10958" fg:w="30"/><text x="8.5957%" y="1727.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.02%)</title><rect x="8.3457%" y="1701" width="0.0228%" height="15" fill="rgb(218,68,31)" fg:x="10958" fg:w="30"/><text x="8.5957%" y="1711.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (26 samples, 0.02%)</title><rect x="8.4965%" y="1685" width="0.0198%" height="15" fill="rgb(207,120,37)" fg:x="11156" fg:w="26"/><text x="8.7465%" y="1695.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.03%)</title><rect x="8.4965%" y="1717" width="0.0259%" height="15" fill="rgb(227,98,0)" fg:x="11156" fg:w="34"/><text x="8.7465%" y="1727.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.03%)</title><rect x="8.4965%" y="1701" width="0.0259%" height="15" fill="rgb(207,7,3)" fg:x="11156" fg:w="34"/><text x="8.7465%" y="1711.50"></text></g><g><title>&lt;torrust_tracker_primitives::info_hash::InfoHash as core::cmp::Ord&gt;::cmp (58 samples, 0.04%)</title><rect x="8.5224%" y="1717" width="0.0442%" height="15" fill="rgb(206,98,19)" fg:x="11190" fg:w="58"/><text x="8.7724%" y="1727.50"></text></g><g><title>core::array::&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (58 samples, 0.04%)</title><rect x="8.5224%" y="1701" width="0.0442%" height="15" fill="rgb(217,5,26)" fg:x="11190" fg:w="58"/><text x="8.7724%" y="1711.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (58 samples, 0.04%)</title><rect x="8.5224%" y="1685" width="0.0442%" height="15" fill="rgb(235,190,38)" fg:x="11190" fg:w="58"/><text x="8.7724%" y="1695.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (58 samples, 0.04%)</title><rect x="8.5224%" y="1669" width="0.0442%" height="15" fill="rgb(247,86,24)" fg:x="11190" fg:w="58"/><text x="8.7724%" y="1679.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (58 samples, 0.04%)</title><rect x="8.5224%" y="1653" width="0.0442%" height="15" fill="rgb(205,101,16)" fg:x="11190" fg:w="58"/><text x="8.7724%" y="1663.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (20 samples, 0.02%)</title><rect x="8.5513%" y="1637" width="0.0152%" height="15" fill="rgb(246,168,33)" fg:x="11228" fg:w="20"/><text x="8.8013%" y="1647.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (238 samples, 0.18%)</title><rect x="8.3914%" y="1781" width="0.1813%" height="15" fill="rgb(231,114,1)" fg:x="11018" fg:w="238"/><text x="8.6414%" y="1791.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (236 samples, 0.18%)</title><rect x="8.3929%" y="1765" width="0.1797%" height="15" fill="rgb(207,184,53)" fg:x="11020" fg:w="236"/><text x="8.6429%" y="1775.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (208 samples, 0.16%)</title><rect x="8.4143%" y="1749" width="0.1584%" height="15" fill="rgb(224,95,51)" fg:x="11048" fg:w="208"/><text x="8.6643%" y="1759.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (208 samples, 0.16%)</title><rect x="8.4143%" y="1733" width="0.1584%" height="15" fill="rgb(212,188,45)" fg:x="11048" fg:w="208"/><text x="8.6643%" y="1743.50"></text></g><g><title>torrust_tracker_torrent_repository::repository::rw_lock_std_mutex_std::&lt;impl torrust_tracker_torrent_repository::repository::Repository&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt; for torrust_tracker_torrent_repository::repository::RwLockStd&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;&gt;::get (282 samples, 0.21%)</title><rect x="8.3686%" y="1797" width="0.2148%" height="15" fill="rgb(223,154,38)" fg:x="10988" fg:w="282"/><text x="8.6186%" y="1807.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (67 samples, 0.05%)</title><rect x="8.6008%" y="1781" width="0.0510%" height="15" fill="rgb(251,22,52)" fg:x="11293" fg:w="67"/><text x="8.8508%" y="1791.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (61 samples, 0.05%)</title><rect x="8.6054%" y="1765" width="0.0465%" height="15" fill="rgb(229,209,22)" fg:x="11299" fg:w="61"/><text x="8.8554%" y="1775.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (53 samples, 0.04%)</title><rect x="8.6115%" y="1749" width="0.0404%" height="15" fill="rgb(234,138,34)" fg:x="11307" fg:w="53"/><text x="8.8615%" y="1759.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (53 samples, 0.04%)</title><rect x="8.6115%" y="1733" width="0.0404%" height="15" fill="rgb(212,95,11)" fg:x="11307" fg:w="53"/><text x="8.8615%" y="1743.50"></text></g><g><title>&lt;torrust_tracker_primitives::info_hash::InfoHash as core::cmp::Ord&gt;::cmp (22 samples, 0.02%)</title><rect x="8.6351%" y="1717" width="0.0168%" height="15" fill="rgb(240,179,47)" fg:x="11338" fg:w="22"/><text x="8.8851%" y="1727.50"></text></g><g><title>core::array::&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (22 samples, 0.02%)</title><rect x="8.6351%" y="1701" width="0.0168%" height="15" fill="rgb(240,163,11)" fg:x="11338" fg:w="22"/><text x="8.8851%" y="1711.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (22 samples, 0.02%)</title><rect x="8.6351%" y="1685" width="0.0168%" height="15" fill="rgb(236,37,12)" fg:x="11338" fg:w="22"/><text x="8.8851%" y="1695.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (22 samples, 0.02%)</title><rect x="8.6351%" y="1669" width="0.0168%" height="15" fill="rgb(232,164,16)" fg:x="11338" fg:w="22"/><text x="8.8851%" y="1679.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (22 samples, 0.02%)</title><rect x="8.6351%" y="1653" width="0.0168%" height="15" fill="rgb(244,205,15)" fg:x="11338" fg:w="22"/><text x="8.8851%" y="1663.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (18 samples, 0.01%)</title><rect x="8.7136%" y="1685" width="0.0137%" height="15" fill="rgb(223,117,47)" fg:x="11441" fg:w="18"/><text x="8.9636%" y="1695.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.02%)</title><rect x="8.7136%" y="1717" width="0.0175%" height="15" fill="rgb(244,107,35)" fg:x="11441" fg:w="23"/><text x="8.9636%" y="1727.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.02%)</title><rect x="8.7136%" y="1701" width="0.0175%" height="15" fill="rgb(205,140,8)" fg:x="11441" fg:w="23"/><text x="8.9636%" y="1711.50"></text></g><g><title>&lt;torrust_tracker_primitives::info_hash::InfoHash as core::cmp::Ord&gt;::cmp (43 samples, 0.03%)</title><rect x="8.7311%" y="1717" width="0.0327%" height="15" fill="rgb(228,84,46)" fg:x="11464" fg:w="43"/><text x="8.9811%" y="1727.50"></text></g><g><title>core::array::&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (43 samples, 0.03%)</title><rect x="8.7311%" y="1701" width="0.0327%" height="15" fill="rgb(254,188,9)" fg:x="11464" fg:w="43"/><text x="8.9811%" y="1711.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (43 samples, 0.03%)</title><rect x="8.7311%" y="1685" width="0.0327%" height="15" fill="rgb(206,112,54)" fg:x="11464" fg:w="43"/><text x="8.9811%" y="1695.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (43 samples, 0.03%)</title><rect x="8.7311%" y="1669" width="0.0327%" height="15" fill="rgb(216,84,49)" fg:x="11464" fg:w="43"/><text x="8.9811%" y="1679.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (43 samples, 0.03%)</title><rect x="8.7311%" y="1653" width="0.0327%" height="15" fill="rgb(214,194,35)" fg:x="11464" fg:w="43"/><text x="8.9811%" y="1663.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (17 samples, 0.01%)</title><rect x="8.7509%" y="1637" width="0.0129%" height="15" fill="rgb(249,28,3)" fg:x="11490" fg:w="17"/><text x="9.0009%" y="1647.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (151 samples, 0.12%)</title><rect x="8.6519%" y="1781" width="0.1150%" height="15" fill="rgb(222,56,52)" fg:x="11360" fg:w="151"/><text x="8.9019%" y="1791.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (145 samples, 0.11%)</title><rect x="8.6564%" y="1765" width="0.1104%" height="15" fill="rgb(245,217,50)" fg:x="11366" fg:w="145"/><text x="8.9064%" y="1775.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (137 samples, 0.10%)</title><rect x="8.6625%" y="1749" width="0.1043%" height="15" fill="rgb(213,201,24)" fg:x="11374" fg:w="137"/><text x="8.9125%" y="1759.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (137 samples, 0.10%)</title><rect x="8.6625%" y="1733" width="0.1043%" height="15" fill="rgb(248,116,28)" fg:x="11374" fg:w="137"/><text x="8.9125%" y="1743.50"></text></g><g><title>torrust_tracker_torrent_repository::repository::rw_lock_std_mutex_std::&lt;impl torrust_tracker_torrent_repository::repository::Repository&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt; for torrust_tracker_torrent_repository::repository::RwLockStd&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;&gt;::update_torrent_with_peer_and_get_stats (266 samples, 0.20%)</title><rect x="8.5833%" y="1797" width="0.2026%" height="15" fill="rgb(219,72,43)" fg:x="11270" fg:w="266"/><text x="8.8333%" y="1807.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (27 samples, 0.02%)</title><rect x="8.7935%" y="1749" width="0.0206%" height="15" fill="rgb(209,138,14)" fg:x="11546" fg:w="27"/><text x="9.0435%" y="1759.50"></text></g><g><title>core::sync::atomic::atomic_load (27 samples, 0.02%)</title><rect x="8.7935%" y="1733" width="0.0206%" height="15" fill="rgb(222,18,33)" fg:x="11546" fg:w="27"/><text x="9.0435%" y="1743.50"></text></g><g><title>torrust_tracker_torrent_repository::repository::rw_lock_std_mutex_std::&lt;impl torrust_tracker_torrent_repository::repository::RwLockStd&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;&gt;::get_torrents (38 samples, 0.03%)</title><rect x="8.7859%" y="1797" width="0.0289%" height="15" fill="rgb(213,199,7)" fg:x="11536" fg:w="38"/><text x="9.0359%" y="1807.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (37 samples, 0.03%)</title><rect x="8.7867%" y="1781" width="0.0282%" height="15" fill="rgb(250,110,10)" fg:x="11537" fg:w="37"/><text x="9.0367%" y="1791.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::read (36 samples, 0.03%)</title><rect x="8.7874%" y="1765" width="0.0274%" height="15" fill="rgb(248,123,6)" fg:x="11538" fg:w="36"/><text x="9.0374%" y="1775.50"></text></g><g><title>tracing::span::Span::log (16 samples, 0.01%)</title><rect x="8.8171%" y="1797" width="0.0122%" height="15" fill="rgb(206,91,31)" fg:x="11577" fg:w="16"/><text x="9.0671%" y="1807.50"></text></g><g><title>tracing::span::Span::record_all (70 samples, 0.05%)</title><rect x="8.8293%" y="1797" width="0.0533%" height="15" fill="rgb(211,154,13)" fg:x="11593" fg:w="70"/><text x="9.0793%" y="1807.50"></text></g><g><title>unlink_chunk (139 samples, 0.11%)</title><rect x="8.8826%" y="1797" width="0.1059%" height="15" fill="rgb(225,148,7)" fg:x="11663" fg:w="139"/><text x="9.1326%" y="1807.50"></text></g><g><title>rand::rng::Rng::gen (30 samples, 0.02%)</title><rect x="8.9885%" y="1749" width="0.0228%" height="15" fill="rgb(220,160,43)" fg:x="11802" fg:w="30"/><text x="9.2385%" y="1759.50"></text></g><g><title>rand::distributions::other::&lt;impl rand::distributions::distribution::Distribution&lt;[T: _]&gt; for rand::distributions::Standard&gt;::sample (30 samples, 0.02%)</title><rect x="8.9885%" y="1733" width="0.0228%" height="15" fill="rgb(213,52,39)" fg:x="11802" fg:w="30"/><text x="9.2385%" y="1743.50"></text></g><g><title>rand::rng::Rng::gen (30 samples, 0.02%)</title><rect x="8.9885%" y="1717" width="0.0228%" height="15" fill="rgb(243,137,7)" fg:x="11802" fg:w="30"/><text x="9.2385%" y="1727.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u8&gt; for rand::distributions::Standard&gt;::sample (30 samples, 0.02%)</title><rect x="8.9885%" y="1701" width="0.0228%" height="15" fill="rgb(230,79,13)" fg:x="11802" fg:w="30"/><text x="9.2385%" y="1711.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u32 (30 samples, 0.02%)</title><rect x="8.9885%" y="1685" width="0.0228%" height="15" fill="rgb(247,105,23)" fg:x="11802" fg:w="30"/><text x="9.2385%" y="1695.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u32 (30 samples, 0.02%)</title><rect x="8.9885%" y="1669" width="0.0228%" height="15" fill="rgb(223,179,41)" fg:x="11802" fg:w="30"/><text x="9.2385%" y="1679.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (30 samples, 0.02%)</title><rect x="8.9885%" y="1653" width="0.0228%" height="15" fill="rgb(218,9,34)" fg:x="11802" fg:w="30"/><text x="9.2385%" y="1663.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (28 samples, 0.02%)</title><rect x="8.9900%" y="1637" width="0.0213%" height="15" fill="rgb(222,106,8)" fg:x="11804" fg:w="28"/><text x="9.2400%" y="1647.50"></text></g><g><title>[anon] (8,759 samples, 6.67%)</title><rect x="2.3419%" y="1813" width="6.6709%" height="15" fill="rgb(211,220,0)" fg:x="3075" fg:w="8759"/><text x="2.5919%" y="1823.50">[anon]</text></g><g><title>uuid::v4::&lt;impl uuid::Uuid&gt;::new_v4 (32 samples, 0.02%)</title><rect x="8.9885%" y="1797" width="0.0244%" height="15" fill="rgb(229,52,16)" fg:x="11802" fg:w="32"/><text x="9.2385%" y="1807.50"></text></g><g><title>uuid::rng::bytes (32 samples, 0.02%)</title><rect x="8.9885%" y="1781" width="0.0244%" height="15" fill="rgb(212,155,18)" fg:x="11802" fg:w="32"/><text x="9.2385%" y="1791.50"></text></g><g><title>rand::random (32 samples, 0.02%)</title><rect x="8.9885%" y="1765" width="0.0244%" height="15" fill="rgb(242,21,14)" fg:x="11802" fg:w="32"/><text x="9.2385%" y="1775.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="9.0182%" y="1797" width="0.0114%" height="15" fill="rgb(222,19,48)" fg:x="11841" fg:w="15"/><text x="9.2682%" y="1807.50"></text></g><g><title>_int_free (338 samples, 0.26%)</title><rect x="9.0593%" y="1797" width="0.2574%" height="15" fill="rgb(232,45,27)" fg:x="11895" fg:w="338"/><text x="9.3093%" y="1807.50"></text></g><g><title>tcache_put (18 samples, 0.01%)</title><rect x="9.3031%" y="1781" width="0.0137%" height="15" fill="rgb(249,103,42)" fg:x="12215" fg:w="18"/><text x="9.5531%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;torrust_tracker::servers::udp::server::Udp::process_request::{{closure}}&gt;&gt; (22 samples, 0.02%)</title><rect x="9.3289%" y="1797" width="0.0168%" height="15" fill="rgb(246,81,33)" fg:x="12249" fg:w="22"/><text x="9.5789%" y="1807.50"></text></g><g><title>hashbrown::raw::h2 (14 samples, 0.01%)</title><rect x="9.3586%" y="1749" width="0.0107%" height="15" fill="rgb(252,33,42)" fg:x="12288" fg:w="14"/><text x="9.6086%" y="1759.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (23 samples, 0.02%)</title><rect x="9.3526%" y="1781" width="0.0175%" height="15" fill="rgb(209,212,41)" fg:x="12280" fg:w="23"/><text x="9.6026%" y="1791.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (17 samples, 0.01%)</title><rect x="9.3571%" y="1765" width="0.0129%" height="15" fill="rgb(207,154,6)" fg:x="12286" fg:w="17"/><text x="9.6071%" y="1775.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (25 samples, 0.02%)</title><rect x="9.3518%" y="1797" width="0.0190%" height="15" fill="rgb(223,64,47)" fg:x="12279" fg:w="25"/><text x="9.6018%" y="1807.50"></text></g><g><title>tokio::runtime::io::registration::Registration::readiness::{{closure}} (18 samples, 0.01%)</title><rect x="9.3708%" y="1797" width="0.0137%" height="15" fill="rgb(211,161,38)" fg:x="12304" fg:w="18"/><text x="9.6208%" y="1807.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (15 samples, 0.01%)</title><rect x="9.3853%" y="1797" width="0.0114%" height="15" fill="rgb(219,138,40)" fg:x="12323" fg:w="15"/><text x="9.6353%" y="1807.50"></text></g><g><title>[profiling] (545 samples, 0.42%)</title><rect x="9.0136%" y="1813" width="0.4151%" height="15" fill="rgb(241,228,46)" fg:x="11835" fg:w="545"/><text x="9.2636%" y="1823.50"></text></g><g><title>&lt;alloc::collections::btree::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.02%)</title><rect x="9.6709%" y="1797" width="0.0244%" height="15" fill="rgb(223,209,38)" fg:x="12698" fg:w="32"/><text x="9.9209%" y="1807.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.02%)</title><rect x="9.6785%" y="1781" width="0.0168%" height="15" fill="rgb(236,164,45)" fg:x="12708" fg:w="22"/><text x="9.9285%" y="1791.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (16 samples, 0.01%)</title><rect x="9.6831%" y="1765" width="0.0122%" height="15" fill="rgb(231,15,5)" fg:x="12714" fg:w="16"/><text x="9.9331%" y="1775.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (30 samples, 0.02%)</title><rect x="9.7334%" y="1717" width="0.0228%" height="15" fill="rgb(252,35,15)" fg:x="12780" fg:w="30"/><text x="9.9834%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (28 samples, 0.02%)</title><rect x="9.7349%" y="1701" width="0.0213%" height="15" fill="rgb(248,181,18)" fg:x="12782" fg:w="28"/><text x="9.9849%" y="1711.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (83 samples, 0.06%)</title><rect x="9.7021%" y="1797" width="0.0632%" height="15" fill="rgb(233,39,42)" fg:x="12739" fg:w="83"/><text x="9.9521%" y="1807.50"></text></g><g><title>alloc::string::String::push_str (57 samples, 0.04%)</title><rect x="9.7219%" y="1781" width="0.0434%" height="15" fill="rgb(238,110,33)" fg:x="12765" fg:w="57"/><text x="9.9719%" y="1791.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (57 samples, 0.04%)</title><rect x="9.7219%" y="1765" width="0.0434%" height="15" fill="rgb(233,195,10)" fg:x="12765" fg:w="57"/><text x="9.9719%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (57 samples, 0.04%)</title><rect x="9.7219%" y="1749" width="0.0434%" height="15" fill="rgb(254,105,3)" fg:x="12765" fg:w="57"/><text x="9.9719%" y="1759.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (57 samples, 0.04%)</title><rect x="9.7219%" y="1733" width="0.0434%" height="15" fill="rgb(221,225,9)" fg:x="12765" fg:w="57"/><text x="9.9719%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (20 samples, 0.02%)</title><rect x="9.7653%" y="1797" width="0.0152%" height="15" fill="rgb(224,227,45)" fg:x="12822" fg:w="20"/><text x="10.0153%" y="1807.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (41 samples, 0.03%)</title><rect x="9.8255%" y="1781" width="0.0312%" height="15" fill="rgb(229,198,43)" fg:x="12901" fg:w="41"/><text x="10.0755%" y="1791.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (151 samples, 0.12%)</title><rect x="9.7806%" y="1797" width="0.1150%" height="15" fill="rgb(206,209,35)" fg:x="12842" fg:w="151"/><text x="10.0306%" y="1807.50"></text></g><g><title>core::hash::sip::u8to64_le (50 samples, 0.04%)</title><rect x="9.8575%" y="1781" width="0.0381%" height="15" fill="rgb(245,195,53)" fg:x="12943" fg:w="50"/><text x="10.1075%" y="1791.50"></text></g><g><title>&lt;core::net::socket_addr::SocketAddr as core::hash::Hash&gt;::hash (33 samples, 0.03%)</title><rect x="9.8956%" y="1797" width="0.0251%" height="15" fill="rgb(240,92,26)" fg:x="12993" fg:w="33"/><text x="10.1456%" y="1807.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (35 samples, 0.03%)</title><rect x="9.9306%" y="1717" width="0.0267%" height="15" fill="rgb(207,40,23)" fg:x="13039" fg:w="35"/><text x="10.1806%" y="1727.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (33 samples, 0.03%)</title><rect x="9.9321%" y="1701" width="0.0251%" height="15" fill="rgb(223,111,35)" fg:x="13041" fg:w="33"/><text x="10.1821%" y="1711.50"></text></g><g><title>[unknown] (20 samples, 0.02%)</title><rect x="9.9420%" y="1685" width="0.0152%" height="15" fill="rgb(229,147,28)" fg:x="13054" fg:w="20"/><text x="10.1920%" y="1695.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (75 samples, 0.06%)</title><rect x="9.9207%" y="1797" width="0.0571%" height="15" fill="rgb(211,29,28)" fg:x="13026" fg:w="75"/><text x="10.1707%" y="1807.50"></text></g><g><title>core::ops::function::FnMut::call_mut (66 samples, 0.05%)</title><rect x="9.9276%" y="1781" width="0.0503%" height="15" fill="rgb(228,72,33)" fg:x="13035" fg:w="66"/><text x="10.1776%" y="1791.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (66 samples, 0.05%)</title><rect x="9.9276%" y="1765" width="0.0503%" height="15" fill="rgb(205,214,31)" fg:x="13035" fg:w="66"/><text x="10.1776%" y="1775.50"></text></g><g><title>tokio::runtime::context::budget (66 samples, 0.05%)</title><rect x="9.9276%" y="1749" width="0.0503%" height="15" fill="rgb(224,111,15)" fg:x="13035" fg:w="66"/><text x="10.1776%" y="1759.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (66 samples, 0.05%)</title><rect x="9.9276%" y="1733" width="0.0503%" height="15" fill="rgb(253,21,26)" fg:x="13035" fg:w="66"/><text x="10.1776%" y="1743.50"></text></g><g><title>tokio::runtime::context::budget::{{closure}} (27 samples, 0.02%)</title><rect x="9.9573%" y="1717" width="0.0206%" height="15" fill="rgb(245,139,43)" fg:x="13074" fg:w="27"/><text x="10.2073%" y="1727.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::{{closure}} (27 samples, 0.02%)</title><rect x="9.9573%" y="1701" width="0.0206%" height="15" fill="rgb(252,170,7)" fg:x="13074" fg:w="27"/><text x="10.2073%" y="1711.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::future::future::Future&gt;::poll (110 samples, 0.08%)</title><rect x="9.9778%" y="1797" width="0.0838%" height="15" fill="rgb(231,118,14)" fg:x="13101" fg:w="110"/><text x="10.2278%" y="1807.50"></text></g><g><title>[unknown] (15 samples, 0.01%)</title><rect x="10.1149%" y="1781" width="0.0114%" height="15" fill="rgb(238,83,0)" fg:x="13281" fg:w="15"/><text x="10.3649%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (27 samples, 0.02%)</title><rect x="10.1302%" y="1781" width="0.0206%" height="15" fill="rgb(221,39,39)" fg:x="13301" fg:w="27"/><text x="10.3802%" y="1791.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.02%)</title><rect x="10.1302%" y="1765" width="0.0206%" height="15" fill="rgb(222,119,46)" fg:x="13301" fg:w="27"/><text x="10.3802%" y="1775.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (14 samples, 0.01%)</title><rect x="10.1401%" y="1749" width="0.0107%" height="15" fill="rgb(222,165,49)" fg:x="13314" fg:w="14"/><text x="10.3901%" y="1759.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (84 samples, 0.06%)</title><rect x="10.1507%" y="1781" width="0.0640%" height="15" fill="rgb(219,113,52)" fg:x="13328" fg:w="84"/><text x="10.4007%" y="1791.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (70 samples, 0.05%)</title><rect x="10.1614%" y="1765" width="0.0533%" height="15" fill="rgb(214,7,15)" fg:x="13342" fg:w="70"/><text x="10.4114%" y="1775.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (59 samples, 0.04%)</title><rect x="10.1698%" y="1749" width="0.0449%" height="15" fill="rgb(235,32,4)" fg:x="13353" fg:w="59"/><text x="10.4198%" y="1759.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (55 samples, 0.04%)</title><rect x="10.1728%" y="1733" width="0.0419%" height="15" fill="rgb(238,90,54)" fg:x="13357" fg:w="55"/><text x="10.4228%" y="1743.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (55 samples, 0.04%)</title><rect x="10.1728%" y="1717" width="0.0419%" height="15" fill="rgb(213,208,19)" fg:x="13357" fg:w="55"/><text x="10.4228%" y="1727.50"></text></g><g><title>[unknown] (33 samples, 0.03%)</title><rect x="10.1896%" y="1701" width="0.0251%" height="15" fill="rgb(233,156,4)" fg:x="13379" fg:w="33"/><text x="10.4396%" y="1711.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::ops::drop::Drop&gt;::drop (214 samples, 0.16%)</title><rect x="10.0616%" y="1797" width="0.1630%" height="15" fill="rgb(207,194,5)" fg:x="13211" fg:w="214"/><text x="10.3116%" y="1807.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (168 samples, 0.13%)</title><rect x="10.2353%" y="1765" width="0.1280%" height="15" fill="rgb(206,111,30)" fg:x="13439" fg:w="168"/><text x="10.4853%" y="1775.50"></text></g><g><title>[profiling] (171 samples, 0.13%)</title><rect x="10.2345%" y="1781" width="0.1302%" height="15" fill="rgb(243,70,54)" fg:x="13438" fg:w="171"/><text x="10.4845%" y="1791.50"></text></g><g><title>binascii::bin2hex (77 samples, 0.06%)</title><rect x="10.3647%" y="1781" width="0.0586%" height="15" fill="rgb(242,28,8)" fg:x="13609" fg:w="77"/><text x="10.6147%" y="1791.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="10.4074%" y="1765" width="0.0160%" height="15" fill="rgb(219,106,18)" fg:x="13665" fg:w="21"/><text x="10.6574%" y="1775.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="10.4074%" y="1749" width="0.0160%" height="15" fill="rgb(244,222,10)" fg:x="13665" fg:w="21"/><text x="10.6574%" y="1759.50"></text></g><g><title>&lt;torrust_tracker_primitives::info_hash::InfoHash as core::fmt::Display&gt;::fmt (280 samples, 0.21%)</title><rect x="10.2246%" y="1797" width="0.2133%" height="15" fill="rgb(236,179,52)" fg:x="13425" fg:w="280"/><text x="10.4746%" y="1807.50"></text></g><g><title>[unknown] (317 samples, 0.24%)</title><rect x="12.2124%" y="1781" width="0.2414%" height="15" fill="rgb(213,23,39)" fg:x="16035" fg:w="317"/><text x="12.4624%" y="1791.50"></text></g><g><title>[[vdso]] (2,648 samples, 2.02%)</title><rect x="10.4378%" y="1797" width="2.0167%" height="15" fill="rgb(238,48,10)" fg:x="13705" fg:w="2648"/><text x="10.6878%" y="1807.50">[..</text></g><g><title>[unknown] (669 samples, 0.51%)</title><rect x="12.4607%" y="1797" width="0.5095%" height="15" fill="rgb(251,196,23)" fg:x="16361" fg:w="669"/><text x="12.7107%" y="1807.50"></text></g><g><title>[unknown] (396 samples, 0.30%)</title><rect x="12.6686%" y="1781" width="0.3016%" height="15" fill="rgb(250,152,24)" fg:x="16634" fg:w="396"/><text x="12.9186%" y="1791.50"></text></g><g><title>[unknown] (251 samples, 0.19%)</title><rect x="12.7790%" y="1765" width="0.1912%" height="15" fill="rgb(209,150,17)" fg:x="16779" fg:w="251"/><text x="13.0290%" y="1775.50"></text></g><g><title>[unknown] (65 samples, 0.05%)</title><rect x="12.9207%" y="1749" width="0.0495%" height="15" fill="rgb(234,202,34)" fg:x="16965" fg:w="65"/><text x="13.1707%" y="1759.50"></text></g><g><title>[unknown] (30 samples, 0.02%)</title><rect x="12.9473%" y="1733" width="0.0228%" height="15" fill="rgb(253,148,53)" fg:x="17000" fg:w="30"/><text x="13.1973%" y="1743.50"></text></g><g><title>[unknown] (21 samples, 0.02%)</title><rect x="12.9542%" y="1717" width="0.0160%" height="15" fill="rgb(218,129,16)" fg:x="17009" fg:w="21"/><text x="13.2042%" y="1727.50"></text></g><g><title>__GI___clock_gettime (56 samples, 0.04%)</title><rect x="12.9702%" y="1797" width="0.0427%" height="15" fill="rgb(216,85,19)" fg:x="17030" fg:w="56"/><text x="13.2202%" y="1807.50"></text></g><g><title>arena_for_chunk (72 samples, 0.05%)</title><rect x="13.1073%" y="1781" width="0.0548%" height="15" fill="rgb(235,228,7)" fg:x="17210" fg:w="72"/><text x="13.3573%" y="1791.50"></text></g><g><title>arena_for_chunk (62 samples, 0.05%)</title><rect x="13.1149%" y="1765" width="0.0472%" height="15" fill="rgb(245,175,0)" fg:x="17220" fg:w="62"/><text x="13.3649%" y="1775.50"></text></g><g><title>heap_for_ptr (49 samples, 0.04%)</title><rect x="13.1248%" y="1749" width="0.0373%" height="15" fill="rgb(208,168,36)" fg:x="17233" fg:w="49"/><text x="13.3748%" y="1759.50"></text></g><g><title>heap_max_size (28 samples, 0.02%)</title><rect x="13.1408%" y="1733" width="0.0213%" height="15" fill="rgb(246,171,24)" fg:x="17254" fg:w="28"/><text x="13.3908%" y="1743.50"></text></g><g><title>__GI___libc_free (194 samples, 0.15%)</title><rect x="13.0151%" y="1797" width="0.1478%" height="15" fill="rgb(215,142,24)" fg:x="17089" fg:w="194"/><text x="13.2651%" y="1807.50"></text></g><g><title>arena_for_chunk (19 samples, 0.01%)</title><rect x="13.2642%" y="1781" width="0.0145%" height="15" fill="rgb(250,187,7)" fg:x="17416" fg:w="19"/><text x="13.5142%" y="1791.50"></text></g><g><title>checked_request2size (24 samples, 0.02%)</title><rect x="13.2786%" y="1781" width="0.0183%" height="15" fill="rgb(228,66,33)" fg:x="17435" fg:w="24"/><text x="13.5286%" y="1791.50"></text></g><g><title>__GI___libc_malloc (220 samples, 0.17%)</title><rect x="13.1629%" y="1797" width="0.1676%" height="15" fill="rgb(234,215,21)" fg:x="17283" fg:w="220"/><text x="13.4129%" y="1807.50"></text></g><g><title>tcache_get (44 samples, 0.03%)</title><rect x="13.2969%" y="1781" width="0.0335%" height="15" fill="rgb(222,191,20)" fg:x="17459" fg:w="44"/><text x="13.5469%" y="1791.50"></text></g><g><title>__GI___libc_write (25 samples, 0.02%)</title><rect x="13.3327%" y="1797" width="0.0190%" height="15" fill="rgb(245,79,54)" fg:x="17506" fg:w="25"/><text x="13.5827%" y="1807.50"></text></g><g><title>__GI___libc_write (14 samples, 0.01%)</title><rect x="13.3411%" y="1781" width="0.0107%" height="15" fill="rgb(240,10,37)" fg:x="17517" fg:w="14"/><text x="13.5911%" y="1791.50"></text></g><g><title>__GI___pthread_disable_asynccancel (97 samples, 0.07%)</title><rect x="13.3540%" y="1797" width="0.0739%" height="15" fill="rgb(214,192,32)" fg:x="17534" fg:w="97"/><text x="13.6040%" y="1807.50"></text></g><g><title>core::num::&lt;impl u128&gt;::leading_zeros (15 samples, 0.01%)</title><rect x="13.4782%" y="1749" width="0.0114%" height="15" fill="rgb(209,36,54)" fg:x="17697" fg:w="15"/><text x="13.7282%" y="1759.50"></text></g><g><title>compiler_builtins::float::conv::int_to_float::u128_to_f64_bits (72 samples, 0.05%)</title><rect x="13.4409%" y="1765" width="0.0548%" height="15" fill="rgb(220,10,11)" fg:x="17648" fg:w="72"/><text x="13.6909%" y="1775.50"></text></g><g><title>__floattidf (90 samples, 0.07%)</title><rect x="13.4348%" y="1797" width="0.0685%" height="15" fill="rgb(221,106,17)" fg:x="17640" fg:w="90"/><text x="13.6848%" y="1807.50"></text></g><g><title>compiler_builtins::float::conv::__floattidf (86 samples, 0.07%)</title><rect x="13.4378%" y="1781" width="0.0655%" height="15" fill="rgb(251,142,44)" fg:x="17644" fg:w="86"/><text x="13.6878%" y="1791.50"></text></g><g><title>exp_inline (40 samples, 0.03%)</title><rect x="13.5094%" y="1781" width="0.0305%" height="15" fill="rgb(238,13,15)" fg:x="17738" fg:w="40"/><text x="13.7594%" y="1791.50"></text></g><g><title>log_inline (64 samples, 0.05%)</title><rect x="13.5399%" y="1781" width="0.0487%" height="15" fill="rgb(208,107,27)" fg:x="17778" fg:w="64"/><text x="13.7899%" y="1791.50"></text></g><g><title>__ieee754_pow_fma (114 samples, 0.09%)</title><rect x="13.5033%" y="1797" width="0.0868%" height="15" fill="rgb(205,136,37)" fg:x="17730" fg:w="114"/><text x="13.7533%" y="1807.50"></text></g><g><title>__libc_calloc (106 samples, 0.08%)</title><rect x="13.5901%" y="1797" width="0.0807%" height="15" fill="rgb(250,205,27)" fg:x="17844" fg:w="106"/><text x="13.8401%" y="1807.50"></text></g><g><title>__libc_recvfrom (252 samples, 0.19%)</title><rect x="13.6709%" y="1797" width="0.1919%" height="15" fill="rgb(210,80,43)" fg:x="17950" fg:w="252"/><text x="13.9209%" y="1807.50"></text></g><g><title>__libc_sendto (133 samples, 0.10%)</title><rect x="13.8628%" y="1797" width="0.1013%" height="15" fill="rgb(247,160,36)" fg:x="18202" fg:w="133"/><text x="14.1128%" y="1807.50"></text></g><g><title>__memcmp_evex_movbe (137 samples, 0.10%)</title><rect x="13.9649%" y="1797" width="0.1043%" height="15" fill="rgb(234,13,49)" fg:x="18336" fg:w="137"/><text x="14.2149%" y="1807.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (1,399 samples, 1.07%)</title><rect x="14.0692%" y="1797" width="1.0655%" height="15" fill="rgb(234,122,0)" fg:x="18473" fg:w="1399"/><text x="14.3192%" y="1807.50"></text></g><g><title>__posix_memalign (172 samples, 0.13%)</title><rect x="15.1347%" y="1797" width="0.1310%" height="15" fill="rgb(207,146,38)" fg:x="19872" fg:w="172"/><text x="15.3847%" y="1807.50"></text></g><g><title>__posix_memalign (80 samples, 0.06%)</title><rect x="15.2048%" y="1781" width="0.0609%" height="15" fill="rgb(207,177,25)" fg:x="19964" fg:w="80"/><text x="15.4548%" y="1791.50"></text></g><g><title>_mid_memalign (71 samples, 0.05%)</title><rect x="15.2116%" y="1765" width="0.0541%" height="15" fill="rgb(211,178,42)" fg:x="19973" fg:w="71"/><text x="15.4616%" y="1775.50"></text></g><g><title>arena_for_chunk (14 samples, 0.01%)</title><rect x="15.2550%" y="1749" width="0.0107%" height="15" fill="rgb(230,69,54)" fg:x="20030" fg:w="14"/><text x="15.5050%" y="1759.50"></text></g><g><title>__pow (18 samples, 0.01%)</title><rect x="15.2657%" y="1797" width="0.0137%" height="15" fill="rgb(214,135,41)" fg:x="20044" fg:w="18"/><text x="15.5157%" y="1807.50"></text></g><g><title>__vdso_clock_gettime (40 samples, 0.03%)</title><rect x="15.2802%" y="1797" width="0.0305%" height="15" fill="rgb(237,67,25)" fg:x="20063" fg:w="40"/><text x="15.5302%" y="1807.50"></text></g><g><title>[unknown] (24 samples, 0.02%)</title><rect x="15.5977%" y="1781" width="0.0183%" height="15" fill="rgb(222,189,50)" fg:x="20480" fg:w="24"/><text x="15.8477%" y="1791.50"></text></g><g><title>_int_free (462 samples, 0.35%)</title><rect x="15.3106%" y="1797" width="0.3519%" height="15" fill="rgb(245,148,34)" fg:x="20103" fg:w="462"/><text x="15.5606%" y="1807.50"></text></g><g><title>tcache_put (54 samples, 0.04%)</title><rect x="15.6214%" y="1781" width="0.0411%" height="15" fill="rgb(222,29,6)" fg:x="20511" fg:w="54"/><text x="15.8714%" y="1791.50"></text></g><g><title>[unknown] (14 samples, 0.01%)</title><rect x="16.0281%" y="1781" width="0.0107%" height="15" fill="rgb(221,189,43)" fg:x="21045" fg:w="14"/><text x="16.2781%" y="1791.50"></text></g><g><title>_int_malloc (508 samples, 0.39%)</title><rect x="15.6625%" y="1797" width="0.3869%" height="15" fill="rgb(207,36,27)" fg:x="20565" fg:w="508"/><text x="15.9125%" y="1807.50"></text></g><g><title>_int_memalign (68 samples, 0.05%)</title><rect x="16.0494%" y="1797" width="0.0518%" height="15" fill="rgb(217,90,24)" fg:x="21073" fg:w="68"/><text x="16.2994%" y="1807.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (54 samples, 0.04%)</title><rect x="16.1019%" y="1797" width="0.0411%" height="15" fill="rgb(224,66,35)" fg:x="21142" fg:w="54"/><text x="16.3519%" y="1807.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (14 samples, 0.01%)</title><rect x="16.1766%" y="1765" width="0.0107%" height="15" fill="rgb(221,13,50)" fg:x="21240" fg:w="14"/><text x="16.4266%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (78 samples, 0.06%)</title><rect x="16.1575%" y="1797" width="0.0594%" height="15" fill="rgb(236,68,49)" fg:x="21215" fg:w="78"/><text x="16.4075%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (73 samples, 0.06%)</title><rect x="16.1613%" y="1781" width="0.0556%" height="15" fill="rgb(229,146,28)" fg:x="21220" fg:w="73"/><text x="16.4113%" y="1791.50"></text></g><g><title>alloc::raw_vec::finish_grow (91 samples, 0.07%)</title><rect x="16.2169%" y="1797" width="0.0693%" height="15" fill="rgb(225,31,38)" fg:x="21293" fg:w="91"/><text x="16.4669%" y="1807.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (31 samples, 0.02%)</title><rect x="16.2626%" y="1781" width="0.0236%" height="15" fill="rgb(250,208,3)" fg:x="21353" fg:w="31"/><text x="16.5126%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;ring::ec::curve25519::ed25519::signing::Ed25519KeyPair,&amp;alloc::alloc::Global&gt;&gt; (16 samples, 0.01%)</title><rect x="16.2862%" y="1765" width="0.0122%" height="15" fill="rgb(246,54,23)" fg:x="21384" fg:w="16"/><text x="16.5362%" y="1775.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="16.2862%" y="1749" width="0.0122%" height="15" fill="rgb(243,76,11)" fg:x="21384" fg:w="16"/><text x="16.5362%" y="1759.50"></text></g><g><title>core::mem::drop (18 samples, 0.01%)</title><rect x="16.2862%" y="1781" width="0.0137%" height="15" fill="rgb(245,21,50)" fg:x="21384" fg:w="18"/><text x="16.5362%" y="1791.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (21 samples, 0.02%)</title><rect x="16.2862%" y="1797" width="0.0160%" height="15" fill="rgb(228,9,43)" fg:x="21384" fg:w="21"/><text x="16.5362%" y="1807.50"></text></g><g><title>alloc_new_heap (49 samples, 0.04%)</title><rect x="16.3022%" y="1797" width="0.0373%" height="15" fill="rgb(208,100,47)" fg:x="21405" fg:w="49"/><text x="16.5522%" y="1807.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (49 samples, 0.04%)</title><rect x="16.3022%" y="1781" width="0.0373%" height="15" fill="rgb(232,26,8)" fg:x="21405" fg:w="49"/><text x="16.5522%" y="1791.50"></text></g><g><title>core::fmt::Formatter::pad_integral (40 samples, 0.03%)</title><rect x="16.3464%" y="1797" width="0.0305%" height="15" fill="rgb(216,166,38)" fg:x="21463" fg:w="40"/><text x="16.5964%" y="1807.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (19 samples, 0.01%)</title><rect x="16.3769%" y="1797" width="0.0145%" height="15" fill="rgb(251,202,51)" fg:x="21503" fg:w="19"/><text x="16.6269%" y="1807.50"></text></g><g><title>core::fmt::write (20 samples, 0.02%)</title><rect x="16.3997%" y="1797" width="0.0152%" height="15" fill="rgb(254,216,34)" fg:x="21533" fg:w="20"/><text x="16.6497%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt;: 32]&gt; (155 samples, 0.12%)</title><rect x="16.4165%" y="1797" width="0.1180%" height="15" fill="rgb(251,32,27)" fg:x="21555" fg:w="155"/><text x="16.6665%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (71 samples, 0.05%)</title><rect x="16.4805%" y="1781" width="0.0541%" height="15" fill="rgb(208,127,28)" fg:x="21639" fg:w="71"/><text x="16.7305%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;torrust_tracker::servers::udp::server::Udp::process_request::{{closure}}&gt;&gt; (245 samples, 0.19%)</title><rect x="16.5444%" y="1797" width="0.1866%" height="15" fill="rgb(224,137,22)" fg:x="21723" fg:w="245"/><text x="16.7944%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;torrust_tracker::servers::udp::handlers::handle_announce::{{closure}}&gt; (33 samples, 0.03%)</title><rect x="16.7333%" y="1797" width="0.0251%" height="15" fill="rgb(254,70,32)" fg:x="21971" fg:w="33"/><text x="16.9833%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;torrust_tracker::servers::udp::server::Udp::receive_request::{{closure}}&gt; (37 samples, 0.03%)</title><rect x="16.7821%" y="1797" width="0.0282%" height="15" fill="rgb(229,75,37)" fg:x="22035" fg:w="37"/><text x="17.0321%" y="1807.50"></text></g><g><title>core::str::converts::from_utf8 (33 samples, 0.03%)</title><rect x="16.8118%" y="1797" width="0.0251%" height="15" fill="rgb(252,64,23)" fg:x="22074" fg:w="33"/><text x="17.0618%" y="1807.50"></text></g><g><title>core::str::validations::run_utf8_validation (20 samples, 0.02%)</title><rect x="16.8217%" y="1781" width="0.0152%" height="15" fill="rgb(232,162,48)" fg:x="22087" fg:w="20"/><text x="17.0717%" y="1791.50"></text></g><g><title>epoll_wait (31 samples, 0.02%)</title><rect x="16.8369%" y="1797" width="0.0236%" height="15" fill="rgb(246,160,12)" fg:x="22107" fg:w="31"/><text x="17.0869%" y="1807.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (17 samples, 0.01%)</title><rect x="16.8605%" y="1797" width="0.0129%" height="15" fill="rgb(247,166,0)" fg:x="22138" fg:w="17"/><text x="17.1105%" y="1807.50"></text></g><g><title>rand_chacha::guts::refill_wide (19 samples, 0.01%)</title><rect x="16.8833%" y="1797" width="0.0145%" height="15" fill="rgb(249,219,21)" fg:x="22168" fg:w="19"/><text x="17.1333%" y="1807.50"></text></g><g><title>std_detect::detect::arch::x86::__is_feature_detected::avx2 (17 samples, 0.01%)</title><rect x="16.8849%" y="1781" width="0.0129%" height="15" fill="rgb(205,209,3)" fg:x="22170" fg:w="17"/><text x="17.1349%" y="1791.50"></text></g><g><title>std_detect::detect::check_for (17 samples, 0.01%)</title><rect x="16.8849%" y="1765" width="0.0129%" height="15" fill="rgb(243,44,1)" fg:x="22170" fg:w="17"/><text x="17.1349%" y="1775.50"></text></g><g><title>std_detect::detect::cache::test (17 samples, 0.01%)</title><rect x="16.8849%" y="1749" width="0.0129%" height="15" fill="rgb(206,159,16)" fg:x="22170" fg:w="17"/><text x="17.1349%" y="1759.50"></text></g><g><title>std_detect::detect::cache::Cache::test (17 samples, 0.01%)</title><rect x="16.8849%" y="1733" width="0.0129%" height="15" fill="rgb(244,77,30)" fg:x="22170" fg:w="17"/><text x="17.1349%" y="1743.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (17 samples, 0.01%)</title><rect x="16.8849%" y="1717" width="0.0129%" height="15" fill="rgb(218,69,12)" fg:x="22170" fg:w="17"/><text x="17.1349%" y="1727.50"></text></g><g><title>core::sync::atomic::atomic_load (17 samples, 0.01%)</title><rect x="16.8849%" y="1701" width="0.0129%" height="15" fill="rgb(212,87,7)" fg:x="22170" fg:w="17"/><text x="17.1349%" y="1711.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::new (29 samples, 0.02%)</title><rect x="16.9816%" y="1781" width="0.0221%" height="15" fill="rgb(245,114,25)" fg:x="22297" fg:w="29"/><text x="17.2316%" y="1791.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (132 samples, 0.10%)</title><rect x="16.9039%" y="1797" width="0.1005%" height="15" fill="rgb(210,61,42)" fg:x="22195" fg:w="132"/><text x="17.1539%" y="1807.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (22 samples, 0.02%)</title><rect x="17.0372%" y="1781" width="0.0168%" height="15" fill="rgb(211,52,33)" fg:x="22370" fg:w="22"/><text x="17.2872%" y="1791.50"></text></g><g><title>core::cmp::PartialOrd::ge (22 samples, 0.02%)</title><rect x="17.0372%" y="1765" width="0.0168%" height="15" fill="rgb(234,58,33)" fg:x="22370" fg:w="22"/><text x="17.2872%" y="1775.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (67 samples, 0.05%)</title><rect x="17.0044%" y="1797" width="0.0510%" height="15" fill="rgb(220,115,36)" fg:x="22327" fg:w="67"/><text x="17.2544%" y="1807.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (18 samples, 0.01%)</title><rect x="17.0555%" y="1797" width="0.0137%" height="15" fill="rgb(243,153,54)" fg:x="22394" fg:w="18"/><text x="17.3055%" y="1807.50"></text></g><g><title>std::sys_common::net::TcpListener::socket_addr (29 samples, 0.02%)</title><rect x="17.0791%" y="1797" width="0.0221%" height="15" fill="rgb(251,47,18)" fg:x="22425" fg:w="29"/><text x="17.3291%" y="1807.50"></text></g><g><title>std::sys_common::net::sockname (28 samples, 0.02%)</title><rect x="17.0798%" y="1781" width="0.0213%" height="15" fill="rgb(242,102,42)" fg:x="22426" fg:w="28"/><text x="17.3298%" y="1791.50"></text></g><g><title>syscall (552 samples, 0.42%)</title><rect x="17.1012%" y="1797" width="0.4204%" height="15" fill="rgb(234,31,38)" fg:x="22454" fg:w="552"/><text x="17.3512%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;core::option::Option&lt;alloc::boxed::Box&lt;tokio::runtime::scheduler::multi_thread::worker::Core&gt;&gt;&gt;&gt; (74 samples, 0.06%)</title><rect x="17.5459%" y="1701" width="0.0564%" height="15" fill="rgb(221,117,51)" fg:x="23038" fg:w="74"/><text x="17.7959%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (74 samples, 0.06%)</title><rect x="17.5459%" y="1685" width="0.0564%" height="15" fill="rgb(212,20,18)" fg:x="23038" fg:w="74"/><text x="17.7959%" y="1695.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (74 samples, 0.06%)</title><rect x="17.5459%" y="1669" width="0.0564%" height="15" fill="rgb(245,133,36)" fg:x="23038" fg:w="74"/><text x="17.7959%" y="1679.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (74 samples, 0.06%)</title><rect x="17.5459%" y="1653" width="0.0564%" height="15" fill="rgb(212,6,19)" fg:x="23038" fg:w="74"/><text x="17.7959%" y="1663.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (74 samples, 0.06%)</title><rect x="17.5459%" y="1637" width="0.0564%" height="15" fill="rgb(218,1,36)" fg:x="23038" fg:w="74"/><text x="17.7959%" y="1647.50"></text></g><g><title>core::mem::replace (74 samples, 0.06%)</title><rect x="17.5459%" y="1621" width="0.0564%" height="15" fill="rgb(246,84,54)" fg:x="23038" fg:w="74"/><text x="17.7959%" y="1631.50"></text></g><g><title>core::ptr::write (74 samples, 0.06%)</title><rect x="17.5459%" y="1605" width="0.0564%" height="15" fill="rgb(242,110,6)" fg:x="23038" fg:w="74"/><text x="17.7959%" y="1615.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back_or_overflow (14 samples, 0.01%)</title><rect x="17.6343%" y="1685" width="0.0107%" height="15" fill="rgb(214,47,5)" fg:x="23154" fg:w="14"/><text x="17.8843%" y="1695.50"></text></g><g><title>tokio::runtime::context::with_scheduler (176 samples, 0.13%)</title><rect x="17.5231%" y="1797" width="0.1340%" height="15" fill="rgb(218,159,25)" fg:x="23008" fg:w="176"/><text x="17.7731%" y="1807.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (152 samples, 0.12%)</title><rect x="17.5414%" y="1781" width="0.1158%" height="15" fill="rgb(215,211,28)" fg:x="23032" fg:w="152"/><text x="17.7914%" y="1791.50"></text></g><g><title>tokio::runtime::context::with_scheduler::{{closure}} (151 samples, 0.12%)</title><rect x="17.5421%" y="1765" width="0.1150%" height="15" fill="rgb(238,59,32)" fg:x="23033" fg:w="151"/><text x="17.7921%" y="1775.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (150 samples, 0.11%)</title><rect x="17.5429%" y="1749" width="0.1142%" height="15" fill="rgb(226,82,3)" fg:x="23034" fg:w="150"/><text x="17.7929%" y="1759.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::{{closure}} (150 samples, 0.11%)</title><rect x="17.5429%" y="1733" width="0.1142%" height="15" fill="rgb(240,164,32)" fg:x="23034" fg:w="150"/><text x="17.7929%" y="1743.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::{{closure}} (150 samples, 0.11%)</title><rect x="17.5429%" y="1717" width="0.1142%" height="15" fill="rgb(232,46,7)" fg:x="23034" fg:w="150"/><text x="17.7929%" y="1727.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (71 samples, 0.05%)</title><rect x="17.6031%" y="1701" width="0.0541%" height="15" fill="rgb(229,129,53)" fg:x="23113" fg:w="71"/><text x="17.8531%" y="1711.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (16 samples, 0.01%)</title><rect x="17.6450%" y="1685" width="0.0122%" height="15" fill="rgb(234,188,29)" fg:x="23168" fg:w="16"/><text x="17.8950%" y="1695.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (19 samples, 0.01%)</title><rect x="17.6701%" y="1765" width="0.0145%" height="15" fill="rgb(246,141,4)" fg:x="23201" fg:w="19"/><text x="17.9201%" y="1775.50"></text></g><g><title>&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.02%)</title><rect x="17.6686%" y="1781" width="0.0183%" height="15" fill="rgb(229,23,39)" fg:x="23199" fg:w="24"/><text x="17.9186%" y="1791.50"></text></g><g><title>mio::poll::Poll::poll (53 samples, 0.04%)</title><rect x="17.6876%" y="1781" width="0.0404%" height="15" fill="rgb(206,12,3)" fg:x="23224" fg:w="53"/><text x="17.9376%" y="1791.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (53 samples, 0.04%)</title><rect x="17.6876%" y="1765" width="0.0404%" height="15" fill="rgb(252,226,20)" fg:x="23224" fg:w="53"/><text x="17.9376%" y="1775.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (28 samples, 0.02%)</title><rect x="17.7066%" y="1749" width="0.0213%" height="15" fill="rgb(216,123,35)" fg:x="23249" fg:w="28"/><text x="17.9566%" y="1759.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select::{{closure}} (28 samples, 0.02%)</title><rect x="17.7066%" y="1733" width="0.0213%" height="15" fill="rgb(212,68,40)" fg:x="23249" fg:w="28"/><text x="17.9566%" y="1743.50"></text></g><g><title>tokio::io::ready::Ready::from_mio (14 samples, 0.01%)</title><rect x="17.7280%" y="1781" width="0.0107%" height="15" fill="rgb(254,125,32)" fg:x="23277" fg:w="14"/><text x="17.9780%" y="1791.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (126 samples, 0.10%)</title><rect x="17.6571%" y="1797" width="0.0960%" height="15" fill="rgb(253,97,22)" fg:x="23184" fg:w="126"/><text x="17.9071%" y="1807.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness (18 samples, 0.01%)</title><rect x="17.7394%" y="1781" width="0.0137%" height="15" fill="rgb(241,101,14)" fg:x="23292" fg:w="18"/><text x="17.9894%" y="1791.50"></text></g><g><title>[unknown] (51 samples, 0.04%)</title><rect x="17.8064%" y="1781" width="0.0388%" height="15" fill="rgb(238,103,29)" fg:x="23380" fg:w="51"/><text x="18.0564%" y="1791.50"></text></g><g><title>[unknown] (100 samples, 0.08%)</title><rect x="17.8666%" y="1765" width="0.0762%" height="15" fill="rgb(233,195,47)" fg:x="23459" fg:w="100"/><text x="18.1166%" y="1775.50"></text></g><g><title>tokio::runtime::io::registration::Registration::readiness::{{closure}} (326 samples, 0.25%)</title><rect x="17.7531%" y="1797" width="0.2483%" height="15" fill="rgb(246,218,30)" fg:x="23310" fg:w="326"/><text x="18.0031%" y="1807.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::readiness::{{closure}} (205 samples, 0.16%)</title><rect x="17.8453%" y="1781" width="0.1561%" height="15" fill="rgb(219,145,47)" fg:x="23431" fg:w="205"/><text x="18.0953%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::io::scheduled_io::Readiness&gt; (77 samples, 0.06%)</title><rect x="17.9427%" y="1765" width="0.0586%" height="15" fill="rgb(243,12,26)" fg:x="23559" fg:w="77"/><text x="18.1927%" y="1775.50"></text></g><g><title>[unknown] (26 samples, 0.02%)</title><rect x="17.9816%" y="1749" width="0.0198%" height="15" fill="rgb(214,87,16)" fg:x="23610" fg:w="26"/><text x="18.2316%" y="1759.50"></text></g><g><title>&lt;tokio::util::linked_list::DrainFilter&lt;T,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.01%)</title><rect x="18.2535%" y="1781" width="0.0122%" height="15" fill="rgb(208,99,42)" fg:x="23967" fg:w="16"/><text x="18.5035%" y="1791.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (396 samples, 0.30%)</title><rect x="18.0014%" y="1797" width="0.3016%" height="15" fill="rgb(253,99,2)" fg:x="23636" fg:w="396"/><text x="18.2514%" y="1807.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (18 samples, 0.01%)</title><rect x="18.3357%" y="1781" width="0.0137%" height="15" fill="rgb(220,168,23)" fg:x="24075" fg:w="18"/><text x="18.5857%" y="1791.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (18 samples, 0.01%)</title><rect x="18.3357%" y="1765" width="0.0137%" height="15" fill="rgb(242,38,24)" fg:x="24075" fg:w="18"/><text x="18.5857%" y="1775.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (573 samples, 0.44%)</title><rect x="18.3494%" y="1781" width="0.4364%" height="15" fill="rgb(225,182,9)" fg:x="24093" fg:w="573"/><text x="18.5994%" y="1791.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (566 samples, 0.43%)</title><rect x="18.3548%" y="1765" width="0.4311%" height="15" fill="rgb(243,178,37)" fg:x="24100" fg:w="566"/><text x="18.6048%" y="1775.50"></text></g><g><title>core::sync::atomic::atomic_add (566 samples, 0.43%)</title><rect x="18.3548%" y="1749" width="0.4311%" height="15" fill="rgb(232,139,19)" fg:x="24100" fg:w="566"/><text x="18.6048%" y="1759.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (635 samples, 0.48%)</title><rect x="18.3030%" y="1797" width="0.4836%" height="15" fill="rgb(225,201,24)" fg:x="24032" fg:w="635"/><text x="18.5530%" y="1807.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (25 samples, 0.02%)</title><rect x="18.7866%" y="1797" width="0.0190%" height="15" fill="rgb(221,47,46)" fg:x="24667" fg:w="25"/><text x="19.0366%" y="1807.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (15 samples, 0.01%)</title><rect x="18.7942%" y="1781" width="0.0114%" height="15" fill="rgb(249,23,13)" fg:x="24677" fg:w="15"/><text x="19.0442%" y="1791.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::next_remote_task (44 samples, 0.03%)</title><rect x="18.8056%" y="1797" width="0.0335%" height="15" fill="rgb(219,9,5)" fg:x="24692" fg:w="44"/><text x="19.0556%" y="1807.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::is_empty (21 samples, 0.02%)</title><rect x="18.8232%" y="1781" width="0.0160%" height="15" fill="rgb(254,171,16)" fg:x="24715" fg:w="21"/><text x="19.0732%" y="1791.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::len (21 samples, 0.02%)</title><rect x="18.8232%" y="1765" width="0.0160%" height="15" fill="rgb(230,171,20)" fg:x="24715" fg:w="21"/><text x="19.0732%" y="1775.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (21 samples, 0.02%)</title><rect x="18.8232%" y="1749" width="0.0160%" height="15" fill="rgb(210,71,41)" fg:x="24715" fg:w="21"/><text x="19.0732%" y="1759.50"></text></g><g><title>core::sync::atomic::atomic_load (21 samples, 0.02%)</title><rect x="18.8232%" y="1733" width="0.0160%" height="15" fill="rgb(206,173,20)" fg:x="24715" fg:w="21"/><text x="19.0732%" y="1743.50"></text></g><g><title>tokio::runtime::task::core::Header::get_owner_id (32 samples, 0.02%)</title><rect x="18.8475%" y="1765" width="0.0244%" height="15" fill="rgb(233,88,34)" fg:x="24747" fg:w="32"/><text x="19.0975%" y="1775.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (32 samples, 0.02%)</title><rect x="18.8475%" y="1749" width="0.0244%" height="15" fill="rgb(223,209,46)" fg:x="24747" fg:w="32"/><text x="19.0975%" y="1759.50"></text></g><g><title>tokio::runtime::task::core::Header::get_owner_id::{{closure}} (32 samples, 0.02%)</title><rect x="18.8475%" y="1733" width="0.0244%" height="15" fill="rgb(250,43,18)" fg:x="24747" fg:w="32"/><text x="19.0975%" y="1743.50"></text></g><g><title>std::sync::poison::Flag::done (32 samples, 0.02%)</title><rect x="18.8727%" y="1717" width="0.0244%" height="15" fill="rgb(208,13,10)" fg:x="24780" fg:w="32"/><text x="19.1227%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::util::linked_list::LinkedList&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;,tokio::runtime::task::core::Header&gt;&gt;&gt; (43 samples, 0.03%)</title><rect x="18.8719%" y="1749" width="0.0327%" height="15" fill="rgb(212,200,36)" fg:x="24779" fg:w="43"/><text x="19.1219%" y="1759.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 0.03%)</title><rect x="18.8719%" y="1733" width="0.0327%" height="15" fill="rgb(225,90,30)" fg:x="24779" fg:w="43"/><text x="19.1219%" y="1743.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (14 samples, 0.01%)</title><rect x="18.9146%" y="1749" width="0.0107%" height="15" fill="rgb(236,182,39)" fg:x="24835" fg:w="14"/><text x="19.1646%" y="1759.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::release (123 samples, 0.09%)</title><rect x="18.8392%" y="1797" width="0.0937%" height="15" fill="rgb(212,144,35)" fg:x="24736" fg:w="123"/><text x="19.0892%" y="1807.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::remove (117 samples, 0.09%)</title><rect x="18.8437%" y="1781" width="0.0891%" height="15" fill="rgb(228,63,44)" fg:x="24742" fg:w="117"/><text x="19.0937%" y="1791.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (80 samples, 0.06%)</title><rect x="18.8719%" y="1765" width="0.0609%" height="15" fill="rgb(228,109,6)" fg:x="24779" fg:w="80"/><text x="19.1219%" y="1775.50"></text></g><g><title>tokio::runtime::scheduler::defer::Defer::wake (17 samples, 0.01%)</title><rect x="19.0250%" y="1781" width="0.0129%" height="15" fill="rgb(238,117,24)" fg:x="24980" fg:w="17"/><text x="19.2750%" y="1791.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (46 samples, 0.04%)</title><rect x="19.0905%" y="1685" width="0.0350%" height="15" fill="rgb(242,26,26)" fg:x="25066" fg:w="46"/><text x="19.3405%" y="1695.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_condvar (71 samples, 0.05%)</title><rect x="19.0791%" y="1749" width="0.0541%" height="15" fill="rgb(221,92,48)" fg:x="25051" fg:w="71"/><text x="19.3291%" y="1759.50"></text></g><g><title>std::sync::condvar::Condvar::wait (56 samples, 0.04%)</title><rect x="19.0905%" y="1733" width="0.0427%" height="15" fill="rgb(209,209,32)" fg:x="25066" fg:w="56"/><text x="19.3405%" y="1743.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (56 samples, 0.04%)</title><rect x="19.0905%" y="1717" width="0.0427%" height="15" fill="rgb(221,70,22)" fg:x="25066" fg:w="56"/><text x="19.3405%" y="1727.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_optional_timeout (56 samples, 0.04%)</title><rect x="19.0905%" y="1701" width="0.0427%" height="15" fill="rgb(248,145,5)" fg:x="25066" fg:w="56"/><text x="19.3405%" y="1711.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (37 samples, 0.03%)</title><rect x="19.1491%" y="1733" width="0.0282%" height="15" fill="rgb(226,116,26)" fg:x="25143" fg:w="37"/><text x="19.3991%" y="1743.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (37 samples, 0.03%)</title><rect x="19.1491%" y="1717" width="0.0282%" height="15" fill="rgb(244,5,17)" fg:x="25143" fg:w="37"/><text x="19.3991%" y="1727.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_driver (138 samples, 0.11%)</title><rect x="19.1331%" y="1749" width="0.1051%" height="15" fill="rgb(252,159,33)" fg:x="25122" fg:w="138"/><text x="19.3831%" y="1759.50"></text></g><g><title>tokio::runtime::driver::Driver::park (77 samples, 0.06%)</title><rect x="19.1796%" y="1733" width="0.0586%" height="15" fill="rgb(206,71,0)" fg:x="25183" fg:w="77"/><text x="19.4296%" y="1743.50"></text></g><g><title>tokio::runtime::driver::TimeDriver::park (77 samples, 0.06%)</title><rect x="19.1796%" y="1717" width="0.0586%" height="15" fill="rgb(233,118,54)" fg:x="25183" fg:w="77"/><text x="19.4296%" y="1727.50"></text></g><g><title>tokio::runtime::time::Driver::park (75 samples, 0.06%)</title><rect x="19.1811%" y="1701" width="0.0571%" height="15" fill="rgb(234,83,48)" fg:x="25185" fg:w="75"/><text x="19.4311%" y="1711.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (266 samples, 0.20%)</title><rect x="19.0379%" y="1781" width="0.2026%" height="15" fill="rgb(228,3,54)" fg:x="24997" fg:w="266"/><text x="19.2879%" y="1791.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (266 samples, 0.20%)</title><rect x="19.0379%" y="1765" width="0.2026%" height="15" fill="rgb(226,155,13)" fg:x="24997" fg:w="266"/><text x="19.2879%" y="1775.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (432 samples, 0.33%)</title><rect x="18.9328%" y="1797" width="0.3290%" height="15" fill="rgb(241,28,37)" fg:x="24859" fg:w="432"/><text x="19.1828%" y="1807.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::should_notify_others (26 samples, 0.02%)</title><rect x="19.2420%" y="1781" width="0.0198%" height="15" fill="rgb(233,93,10)" fg:x="25265" fg:w="26"/><text x="19.4920%" y="1791.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (94 samples, 0.07%)</title><rect x="19.2961%" y="1733" width="0.0716%" height="15" fill="rgb(225,113,19)" fg:x="25336" fg:w="94"/><text x="19.5461%" y="1743.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (94 samples, 0.07%)</title><rect x="19.2961%" y="1717" width="0.0716%" height="15" fill="rgb(241,2,18)" fg:x="25336" fg:w="94"/><text x="19.5461%" y="1727.50"></text></g><g><title>core::cell::BorrowRefMut::new (94 samples, 0.07%)</title><rect x="19.2961%" y="1701" width="0.0716%" height="15" fill="rgb(228,207,21)" fg:x="25336" fg:w="94"/><text x="19.5461%" y="1711.50"></text></g><g><title>tokio::runtime::coop::budget (142 samples, 0.11%)</title><rect x="19.2771%" y="1781" width="0.1081%" height="15" fill="rgb(213,211,35)" fg:x="25311" fg:w="142"/><text x="19.5271%" y="1791.50"></text></g><g><title>tokio::runtime::coop::with_budget (142 samples, 0.11%)</title><rect x="19.2771%" y="1765" width="0.1081%" height="15" fill="rgb(209,83,10)" fg:x="25311" fg:w="142"/><text x="19.5271%" y="1775.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (121 samples, 0.09%)</title><rect x="19.2931%" y="1749" width="0.0922%" height="15" fill="rgb(209,164,1)" fg:x="25332" fg:w="121"/><text x="19.5431%" y="1759.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::start_poll (44 samples, 0.03%)</title><rect x="19.3852%" y="1781" width="0.0335%" height="15" fill="rgb(213,184,43)" fg:x="25453" fg:w="44"/><text x="19.6352%" y="1791.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (208 samples, 0.16%)</title><rect x="19.2618%" y="1797" width="0.1584%" height="15" fill="rgb(231,61,34)" fg:x="25291" fg:w="208"/><text x="19.5118%" y="1807.50"></text></g><g><title>tokio::runtime::signal::Driver::process (30 samples, 0.02%)</title><rect x="19.4203%" y="1797" width="0.0228%" height="15" fill="rgb(235,75,3)" fg:x="25499" fg:w="30"/><text x="19.6703%" y="1807.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (46 samples, 0.04%)</title><rect x="19.4637%" y="1781" width="0.0350%" height="15" fill="rgb(220,106,47)" fg:x="25556" fg:w="46"/><text x="19.7137%" y="1791.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage::{{closure}} (46 samples, 0.04%)</title><rect x="19.4637%" y="1765" width="0.0350%" height="15" fill="rgb(210,196,33)" fg:x="25556" fg:w="46"/><text x="19.7137%" y="1775.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::process_valid_request::{{closure}} (35 samples, 0.03%)</title><rect x="19.4721%" y="1749" width="0.0267%" height="15" fill="rgb(229,154,42)" fg:x="25567" fg:w="35"/><text x="19.7221%" y="1759.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (75 samples, 0.06%)</title><rect x="19.4431%" y="1797" width="0.0571%" height="15" fill="rgb(228,114,26)" fg:x="25529" fg:w="75"/><text x="19.6931%" y="1807.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_xor (76 samples, 0.06%)</title><rect x="19.5139%" y="1765" width="0.0579%" height="15" fill="rgb(208,144,1)" fg:x="25622" fg:w="76"/><text x="19.7639%" y="1775.50"></text></g><g><title>core::sync::atomic::atomic_xor (76 samples, 0.06%)</title><rect x="19.5139%" y="1749" width="0.0579%" height="15" fill="rgb(239,112,37)" fg:x="25622" fg:w="76"/><text x="19.7639%" y="1759.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_complete (79 samples, 0.06%)</title><rect x="19.5124%" y="1781" width="0.0602%" height="15" fill="rgb(210,96,50)" fg:x="25620" fg:w="79"/><text x="19.7624%" y="1791.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (113 samples, 0.09%)</title><rect x="19.5002%" y="1797" width="0.0861%" height="15" fill="rgb(222,178,2)" fg:x="25604" fg:w="113"/><text x="19.7502%" y="1807.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_terminal (18 samples, 0.01%)</title><rect x="19.5726%" y="1781" width="0.0137%" height="15" fill="rgb(226,74,18)" fg:x="25699" fg:w="18"/><text x="19.8226%" y="1791.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (28 samples, 0.02%)</title><rect x="19.5863%" y="1797" width="0.0213%" height="15" fill="rgb(225,67,54)" fg:x="25717" fg:w="28"/><text x="19.8363%" y="1807.50"></text></g><g><title>core::mem::drop (18 samples, 0.01%)</title><rect x="19.5939%" y="1781" width="0.0137%" height="15" fill="rgb(251,92,32)" fg:x="25727" fg:w="18"/><text x="19.8439%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;torrust_tracker::servers::udp::server::Udp::process_request::{{closure}},alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt;&gt; (18 samples, 0.01%)</title><rect x="19.5939%" y="1765" width="0.0137%" height="15" fill="rgb(228,149,22)" fg:x="25727" fg:w="18"/><text x="19.8439%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::util::sharded_list::ShardGuard&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;,tokio::runtime::task::core::Header&gt;&gt; (16 samples, 0.01%)</title><rect x="19.6487%" y="1765" width="0.0122%" height="15" fill="rgb(243,54,13)" fg:x="25799" fg:w="16"/><text x="19.8987%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::util::linked_list::LinkedList&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;,tokio::runtime::task::core::Header&gt;&gt;&gt; (16 samples, 0.01%)</title><rect x="19.6487%" y="1749" width="0.0122%" height="15" fill="rgb(243,180,28)" fg:x="25799" fg:w="16"/><text x="19.8987%" y="1759.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="19.6487%" y="1733" width="0.0122%" height="15" fill="rgb(208,167,24)" fg:x="25799" fg:w="16"/><text x="19.8987%" y="1743.50"></text></g><g><title>tokio::util::sharded_list::ShardGuard&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push (53 samples, 0.04%)</title><rect x="19.6419%" y="1781" width="0.0404%" height="15" fill="rgb(245,73,45)" fg:x="25790" fg:w="53"/><text x="19.8919%" y="1791.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push_front (21 samples, 0.02%)</title><rect x="19.6663%" y="1765" width="0.0160%" height="15" fill="rgb(237,203,48)" fg:x="25822" fg:w="21"/><text x="19.9163%" y="1775.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind_inner (113 samples, 0.09%)</title><rect x="19.6076%" y="1797" width="0.0861%" height="15" fill="rgb(211,197,16)" fg:x="25745" fg:w="113"/><text x="19.8576%" y="1807.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::lock_shard (15 samples, 0.01%)</title><rect x="19.6823%" y="1781" width="0.0114%" height="15" fill="rgb(243,99,51)" fg:x="25843" fg:w="15"/><text x="19.9323%" y="1791.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::shard_inner (15 samples, 0.01%)</title><rect x="19.6823%" y="1765" width="0.0114%" height="15" fill="rgb(215,123,29)" fg:x="25843" fg:w="15"/><text x="19.9323%" y="1775.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (15 samples, 0.01%)</title><rect x="19.6823%" y="1749" width="0.0114%" height="15" fill="rgb(239,186,37)" fg:x="25843" fg:w="15"/><text x="19.9323%" y="1759.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (15 samples, 0.01%)</title><rect x="19.6823%" y="1733" width="0.0114%" height="15" fill="rgb(252,136,39)" fg:x="25843" fg:w="15"/><text x="19.9323%" y="1743.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (14 samples, 0.01%)</title><rect x="19.6830%" y="1717" width="0.0107%" height="15" fill="rgb(223,213,32)" fg:x="25844" fg:w="14"/><text x="19.9330%" y="1727.50"></text></g><g><title>tokio::runtime::task::raw::drop_abort_handle (82 samples, 0.06%)</title><rect x="19.6937%" y="1797" width="0.0625%" height="15" fill="rgb(233,115,5)" fg:x="25858" fg:w="82"/><text x="19.9437%" y="1807.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (23 samples, 0.02%)</title><rect x="19.7386%" y="1781" width="0.0175%" height="15" fill="rgb(207,226,44)" fg:x="25917" fg:w="23"/><text x="19.9886%" y="1791.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (23 samples, 0.02%)</title><rect x="19.7386%" y="1765" width="0.0175%" height="15" fill="rgb(208,126,0)" fg:x="25917" fg:w="23"/><text x="19.9886%" y="1775.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (15 samples, 0.01%)</title><rect x="19.7653%" y="1733" width="0.0114%" height="15" fill="rgb(244,66,21)" fg:x="25952" fg:w="15"/><text x="20.0153%" y="1743.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (15 samples, 0.01%)</title><rect x="19.7653%" y="1717" width="0.0114%" height="15" fill="rgb(222,97,12)" fg:x="25952" fg:w="15"/><text x="20.0153%" y="1727.50"></text></g><g><title>tokio::runtime::task::raw::drop_join_handle_slow (34 samples, 0.03%)</title><rect x="19.7561%" y="1797" width="0.0259%" height="15" fill="rgb(219,213,19)" fg:x="25940" fg:w="34"/><text x="20.0061%" y="1807.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow (32 samples, 0.02%)</title><rect x="19.7577%" y="1781" width="0.0244%" height="15" fill="rgb(252,169,30)" fg:x="25942" fg:w="32"/><text x="20.0077%" y="1791.50"></text></g><g><title>tokio::runtime::task::state::State::unset_join_interested (23 samples, 0.02%)</title><rect x="19.7645%" y="1765" width="0.0175%" height="15" fill="rgb(206,32,51)" fg:x="25951" fg:w="23"/><text x="20.0145%" y="1775.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update (23 samples, 0.02%)</title><rect x="19.7645%" y="1749" width="0.0175%" height="15" fill="rgb(250,172,42)" fg:x="25951" fg:w="23"/><text x="20.0145%" y="1759.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::is_parked (14 samples, 0.01%)</title><rect x="19.8772%" y="1381" width="0.0107%" height="15" fill="rgb(209,34,43)" fg:x="26099" fg:w="14"/><text x="20.1272%" y="1391.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_parked (15 samples, 0.01%)</title><rect x="19.8772%" y="1397" width="0.0114%" height="15" fill="rgb(223,11,35)" fg:x="26099" fg:w="15"/><text x="20.1272%" y="1407.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (43 samples, 0.03%)</title><rect x="19.8635%" y="1413" width="0.0327%" height="15" fill="rgb(251,219,26)" fg:x="26081" fg:w="43"/><text x="20.1135%" y="1423.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (23 samples, 0.02%)</title><rect x="19.9153%" y="1333" width="0.0175%" height="15" fill="rgb(231,119,3)" fg:x="26149" fg:w="23"/><text x="20.1653%" y="1343.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (37 samples, 0.03%)</title><rect x="19.9062%" y="1381" width="0.0282%" height="15" fill="rgb(216,97,11)" fg:x="26137" fg:w="37"/><text x="20.1562%" y="1391.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task::{{closure}} (36 samples, 0.03%)</title><rect x="19.9069%" y="1365" width="0.0274%" height="15" fill="rgb(223,59,9)" fg:x="26138" fg:w="36"/><text x="20.1569%" y="1375.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::pop (36 samples, 0.03%)</title><rect x="19.9069%" y="1349" width="0.0274%" height="15" fill="rgb(233,93,31)" fg:x="26138" fg:w="36"/><text x="20.1569%" y="1359.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task (38 samples, 0.03%)</title><rect x="19.9062%" y="1397" width="0.0289%" height="15" fill="rgb(239,81,33)" fg:x="26137" fg:w="38"/><text x="20.1562%" y="1407.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task (59 samples, 0.04%)</title><rect x="19.8963%" y="1413" width="0.0449%" height="15" fill="rgb(213,120,34)" fg:x="26124" fg:w="59"/><text x="20.1463%" y="1423.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (45 samples, 0.03%)</title><rect x="20.0059%" y="1381" width="0.0343%" height="15" fill="rgb(243,49,53)" fg:x="26268" fg:w="45"/><text x="20.2559%" y="1391.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (132 samples, 0.10%)</title><rect x="19.9412%" y="1413" width="0.1005%" height="15" fill="rgb(247,216,33)" fg:x="26183" fg:w="132"/><text x="20.1912%" y="1423.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (63 samples, 0.05%)</title><rect x="19.9938%" y="1397" width="0.0480%" height="15" fill="rgb(226,26,14)" fg:x="26252" fg:w="63"/><text x="20.2438%" y="1407.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (290 samples, 0.22%)</title><rect x="19.8262%" y="1605" width="0.2209%" height="15" fill="rgb(215,49,53)" fg:x="26032" fg:w="290"/><text x="20.0762%" y="1615.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}} (290 samples, 0.22%)</title><rect x="19.8262%" y="1589" width="0.2209%" height="15" fill="rgb(245,162,40)" fg:x="26032" fg:w="290"/><text x="20.0762%" y="1599.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (290 samples, 0.22%)</title><rect x="19.8262%" y="1573" width="0.2209%" height="15" fill="rgb(229,68,17)" fg:x="26032" fg:w="290"/><text x="20.0762%" y="1583.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (290 samples, 0.22%)</title><rect x="19.8262%" y="1557" width="0.2209%" height="15" fill="rgb(213,182,10)" fg:x="26032" fg:w="290"/><text x="20.0762%" y="1567.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (290 samples, 0.22%)</title><rect x="19.8262%" y="1541" width="0.2209%" height="15" fill="rgb(245,125,30)" fg:x="26032" fg:w="290"/><text x="20.0762%" y="1551.50"></text></g><g><title>tokio::runtime::context::set_scheduler (290 samples, 0.22%)</title><rect x="19.8262%" y="1525" width="0.2209%" height="15" fill="rgb(232,202,2)" fg:x="26032" fg:w="290"/><text x="20.0762%" y="1535.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (290 samples, 0.22%)</title><rect x="19.8262%" y="1509" width="0.2209%" height="15" fill="rgb(237,140,51)" fg:x="26032" fg:w="290"/><text x="20.0762%" y="1519.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (290 samples, 0.22%)</title><rect x="19.8262%" y="1493" width="0.2209%" height="15" fill="rgb(236,157,25)" fg:x="26032" fg:w="290"/><text x="20.0762%" y="1503.50"></text></g><g><title>tokio::runtime::context::set_scheduler::{{closure}} (290 samples, 0.22%)</title><rect x="19.8262%" y="1477" width="0.2209%" height="15" fill="rgb(219,209,0)" fg:x="26032" fg:w="290"/><text x="20.0762%" y="1487.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (290 samples, 0.22%)</title><rect x="19.8262%" y="1461" width="0.2209%" height="15" fill="rgb(240,116,54)" fg:x="26032" fg:w="290"/><text x="20.0762%" y="1471.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}::{{closure}} (290 samples, 0.22%)</title><rect x="19.8262%" y="1445" width="0.2209%" height="15" fill="rgb(216,10,36)" fg:x="26032" fg:w="290"/><text x="20.0762%" y="1455.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (290 samples, 0.22%)</title><rect x="19.8262%" y="1429" width="0.2209%" height="15" fill="rgb(222,72,44)" fg:x="26032" fg:w="290"/><text x="20.0762%" y="1439.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (327 samples, 0.25%)</title><rect x="19.8056%" y="1637" width="0.2490%" height="15" fill="rgb(232,159,9)" fg:x="26005" fg:w="327"/><text x="20.0556%" y="1647.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (322 samples, 0.25%)</title><rect x="19.8094%" y="1621" width="0.2452%" height="15" fill="rgb(210,39,32)" fg:x="26010" fg:w="322"/><text x="20.0594%" y="1631.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (333 samples, 0.25%)</title><rect x="19.8056%" y="1653" width="0.2536%" height="15" fill="rgb(216,194,45)" fg:x="26005" fg:w="333"/><text x="20.0556%" y="1663.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (342 samples, 0.26%)</title><rect x="19.8056%" y="1685" width="0.2605%" height="15" fill="rgb(218,18,35)" fg:x="26005" fg:w="342"/><text x="20.0556%" y="1695.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (342 samples, 0.26%)</title><rect x="19.8056%" y="1669" width="0.2605%" height="15" fill="rgb(207,83,51)" fg:x="26005" fg:w="342"/><text x="20.0556%" y="1679.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (348 samples, 0.27%)</title><rect x="19.8049%" y="1749" width="0.2650%" height="15" fill="rgb(225,63,43)" fg:x="26004" fg:w="348"/><text x="20.0549%" y="1759.50"></text></g><g><title>std::panic::catch_unwind (347 samples, 0.26%)</title><rect x="19.8056%" y="1733" width="0.2643%" height="15" fill="rgb(207,57,36)" fg:x="26005" fg:w="347"/><text x="20.0556%" y="1743.50"></text></g><g><title>std::panicking::try (347 samples, 0.26%)</title><rect x="19.8056%" y="1717" width="0.2643%" height="15" fill="rgb(216,99,33)" fg:x="26005" fg:w="347"/><text x="20.0556%" y="1727.50"></text></g><g><title>std::panicking::try::do_call (347 samples, 0.26%)</title><rect x="19.8056%" y="1701" width="0.2643%" height="15" fill="rgb(225,42,16)" fg:x="26005" fg:w="347"/><text x="20.0556%" y="1711.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (18 samples, 0.01%)</title><rect x="20.0752%" y="1717" width="0.0137%" height="15" fill="rgb(220,201,45)" fg:x="26359" fg:w="18"/><text x="20.3252%" y="1727.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (18 samples, 0.01%)</title><rect x="20.0752%" y="1701" width="0.0137%" height="15" fill="rgb(225,33,4)" fg:x="26359" fg:w="18"/><text x="20.3252%" y="1711.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (47 samples, 0.04%)</title><rect x="20.0699%" y="1749" width="0.0358%" height="15" fill="rgb(224,33,50)" fg:x="26352" fg:w="47"/><text x="20.3199%" y="1759.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (47 samples, 0.04%)</title><rect x="20.0699%" y="1733" width="0.0358%" height="15" fill="rgb(246,198,51)" fg:x="26352" fg:w="47"/><text x="20.3199%" y="1743.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running::{{closure}} (19 samples, 0.01%)</title><rect x="20.0912%" y="1717" width="0.0145%" height="15" fill="rgb(205,22,4)" fg:x="26380" fg:w="19"/><text x="20.3412%" y="1727.50"></text></g><g><title>tokio::runtime::task::raw::poll (427 samples, 0.33%)</title><rect x="19.7820%" y="1797" width="0.3252%" height="15" fill="rgb(206,3,8)" fg:x="25974" fg:w="427"/><text x="20.0320%" y="1807.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (408 samples, 0.31%)</title><rect x="19.7965%" y="1781" width="0.3107%" height="15" fill="rgb(251,23,15)" fg:x="25993" fg:w="408"/><text x="20.0465%" y="1791.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (407 samples, 0.31%)</title><rect x="19.7973%" y="1765" width="0.3100%" height="15" fill="rgb(252,88,28)" fg:x="25994" fg:w="407"/><text x="20.0473%" y="1775.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (17 samples, 0.01%)</title><rect x="20.1103%" y="1797" width="0.0129%" height="15" fill="rgb(212,127,14)" fg:x="26405" fg:w="17"/><text x="20.3603%" y="1807.50"></text></g><g><title>core::array::&lt;impl core::default::Default for [T: 32]&gt;::default (21 samples, 0.02%)</title><rect x="20.1476%" y="1781" width="0.0160%" height="15" fill="rgb(247,145,37)" fg:x="26454" fg:w="21"/><text x="20.3976%" y="1791.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (14 samples, 0.01%)</title><rect x="20.1735%" y="1781" width="0.0107%" height="15" fill="rgb(209,117,53)" fg:x="26488" fg:w="14"/><text x="20.4235%" y="1791.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (72 samples, 0.05%)</title><rect x="20.1301%" y="1797" width="0.0548%" height="15" fill="rgb(212,90,42)" fg:x="26431" fg:w="72"/><text x="20.3801%" y="1807.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (23 samples, 0.02%)</title><rect x="20.2679%" y="1781" width="0.0175%" height="15" fill="rgb(218,164,37)" fg:x="26612" fg:w="23"/><text x="20.5179%" y="1791.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::now (15 samples, 0.01%)</title><rect x="20.2740%" y="1765" width="0.0114%" height="15" fill="rgb(246,65,34)" fg:x="26620" fg:w="15"/><text x="20.5240%" y="1775.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::now (14 samples, 0.01%)</title><rect x="20.2870%" y="1781" width="0.0107%" height="15" fill="rgb(231,100,33)" fg:x="26637" fg:w="14"/><text x="20.5370%" y="1791.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (155 samples, 0.12%)</title><rect x="20.1849%" y="1797" width="0.1180%" height="15" fill="rgb(228,126,14)" fg:x="26503" fg:w="155"/><text x="20.4349%" y="1807.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (96 samples, 0.07%)</title><rect x="20.3609%" y="1765" width="0.0731%" height="15" fill="rgb(215,173,21)" fg:x="26734" fg:w="96"/><text x="20.6109%" y="1775.50"></text></g><g><title>tokio::runtime::time::wheel::level::slot_range (35 samples, 0.03%)</title><rect x="20.4073%" y="1749" width="0.0267%" height="15" fill="rgb(210,6,40)" fg:x="26795" fg:w="35"/><text x="20.6573%" y="1759.50"></text></g><g><title>core::num::&lt;impl usize&gt;::pow (35 samples, 0.03%)</title><rect x="20.4073%" y="1733" width="0.0267%" height="15" fill="rgb(212,48,18)" fg:x="26795" fg:w="35"/><text x="20.6573%" y="1743.50"></text></g><g><title>tokio::runtime::time::wheel::level::level_range (39 samples, 0.03%)</title><rect x="20.4340%" y="1765" width="0.0297%" height="15" fill="rgb(230,214,11)" fg:x="26830" fg:w="39"/><text x="20.6840%" y="1775.50"></text></g><g><title>tokio::runtime::time::wheel::level::slot_range (33 samples, 0.03%)</title><rect x="20.4385%" y="1749" width="0.0251%" height="15" fill="rgb(254,105,39)" fg:x="26836" fg:w="33"/><text x="20.6885%" y="1759.50"></text></g><g><title>core::num::&lt;impl usize&gt;::pow (33 samples, 0.03%)</title><rect x="20.4385%" y="1733" width="0.0251%" height="15" fill="rgb(245,158,5)" fg:x="26836" fg:w="33"/><text x="20.6885%" y="1743.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (208 samples, 0.16%)</title><rect x="20.3418%" y="1781" width="0.1584%" height="15" fill="rgb(249,208,11)" fg:x="26709" fg:w="208"/><text x="20.5918%" y="1791.50"></text></g><g><title>tokio::runtime::time::wheel::level::slot_range (48 samples, 0.04%)</title><rect x="20.4637%" y="1765" width="0.0366%" height="15" fill="rgb(210,39,28)" fg:x="26869" fg:w="48"/><text x="20.7137%" y="1775.50"></text></g><g><title>core::num::&lt;impl usize&gt;::pow (48 samples, 0.04%)</title><rect x="20.4637%" y="1749" width="0.0366%" height="15" fill="rgb(211,56,53)" fg:x="26869" fg:w="48"/><text x="20.7137%" y="1759.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (277 samples, 0.21%)</title><rect x="20.3030%" y="1797" width="0.2110%" height="15" fill="rgb(226,201,30)" fg:x="26658" fg:w="277"/><text x="20.5530%" y="1807.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (18 samples, 0.01%)</title><rect x="20.5002%" y="1781" width="0.0137%" height="15" fill="rgb(239,101,34)" fg:x="26917" fg:w="18"/><text x="20.7502%" y="1791.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (18 samples, 0.01%)</title><rect x="20.5002%" y="1765" width="0.0137%" height="15" fill="rgb(226,209,5)" fg:x="26917" fg:w="18"/><text x="20.7502%" y="1775.50"></text></g><g><title>torrust_tracker::core::Tracker::authorize::{{closure}} (50 samples, 0.04%)</title><rect x="20.5139%" y="1797" width="0.0381%" height="15" fill="rgb(250,105,47)" fg:x="26935" fg:w="50"/><text x="20.7639%" y="1807.50"></text></g><g><title>torrust_tracker::core::Tracker::get_torrent_peers_for_peer (37 samples, 0.03%)</title><rect x="20.5520%" y="1797" width="0.0282%" height="15" fill="rgb(230,72,3)" fg:x="26985" fg:w="37"/><text x="20.8020%" y="1807.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::mutex_std::&lt;impl torrust_tracker_torrent_repository::entry::EntrySync for alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;::get_peers_for_client (27 samples, 0.02%)</title><rect x="20.5596%" y="1781" width="0.0206%" height="15" fill="rgb(232,218,39)" fg:x="26995" fg:w="27"/><text x="20.8096%" y="1791.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::single::&lt;impl torrust_tracker_torrent_repository::entry::Entry for torrust_tracker_torrent_repository::entry::Torrent&gt;::get_peers_for_client (19 samples, 0.01%)</title><rect x="20.5657%" y="1765" width="0.0145%" height="15" fill="rgb(248,166,6)" fg:x="27003" fg:w="19"/><text x="20.8157%" y="1775.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (17 samples, 0.01%)</title><rect x="20.5672%" y="1749" width="0.0129%" height="15" fill="rgb(247,89,20)" fg:x="27005" fg:w="17"/><text x="20.8172%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (17 samples, 0.01%)</title><rect x="20.5672%" y="1733" width="0.0129%" height="15" fill="rgb(248,130,54)" fg:x="27005" fg:w="17"/><text x="20.8172%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17 samples, 0.01%)</title><rect x="20.5672%" y="1717" width="0.0129%" height="15" fill="rgb(234,196,4)" fg:x="27005" fg:w="17"/><text x="20.8172%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (17 samples, 0.01%)</title><rect x="20.5672%" y="1701" width="0.0129%" height="15" fill="rgb(250,143,31)" fg:x="27005" fg:w="17"/><text x="20.8172%" y="1711.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (20 samples, 0.02%)</title><rect x="20.5931%" y="1781" width="0.0152%" height="15" fill="rgb(211,110,34)" fg:x="27039" fg:w="20"/><text x="20.8431%" y="1791.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (20 samples, 0.02%)</title><rect x="20.5931%" y="1765" width="0.0152%" height="15" fill="rgb(215,124,48)" fg:x="27039" fg:w="20"/><text x="20.8431%" y="1775.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (20 samples, 0.02%)</title><rect x="20.5931%" y="1749" width="0.0152%" height="15" fill="rgb(216,46,13)" fg:x="27039" fg:w="20"/><text x="20.8431%" y="1759.50"></text></g><g><title>torrust_tracker::servers::udp::connection_cookie::cookie_builder::build (62 samples, 0.05%)</title><rect x="20.5878%" y="1797" width="0.0472%" height="15" fill="rgb(205,184,25)" fg:x="27032" fg:w="62"/><text x="20.8378%" y="1807.50"></text></g><g><title>torrust_tracker::servers::udp::connection_cookie::cookie_builder::get_last_time_extent (40 samples, 0.03%)</title><rect x="20.6350%" y="1797" width="0.0305%" height="15" fill="rgb(228,1,10)" fg:x="27094" fg:w="40"/><text x="20.8850%" y="1807.50"></text></g><g><title>torrust_tracker_clock::time_extent::Make::now (27 samples, 0.02%)</title><rect x="20.6449%" y="1781" width="0.0206%" height="15" fill="rgb(213,116,27)" fg:x="27107" fg:w="27"/><text x="20.8949%" y="1791.50"></text></g><g><title>torrust_tracker_clock::clock::working::&lt;impl torrust_tracker_clock::clock::Time for torrust_tracker_clock::clock::Clock&lt;torrust_tracker_clock::clock::working::WorkingClock&gt;&gt;::now (17 samples, 0.01%)</title><rect x="20.6525%" y="1765" width="0.0129%" height="15" fill="rgb(241,95,50)" fg:x="27117" fg:w="17"/><text x="20.9025%" y="1775.50"></text></g><g><title>torrust_tracker::servers::udp::peer_builder::from_request (24 samples, 0.02%)</title><rect x="20.6663%" y="1797" width="0.0183%" height="15" fill="rgb(238,48,32)" fg:x="27135" fg:w="24"/><text x="20.9163%" y="1807.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (19 samples, 0.01%)</title><rect x="20.9351%" y="1781" width="0.0145%" height="15" fill="rgb(235,113,49)" fg:x="27488" fg:w="19"/><text x="21.1851%" y="1791.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::process_request::{{closure}} (355 samples, 0.27%)</title><rect x="20.6876%" y="1797" width="0.2704%" height="15" fill="rgb(205,127,43)" fg:x="27163" fg:w="355"/><text x="20.9376%" y="1807.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (24 samples, 0.02%)</title><rect x="21.1529%" y="1781" width="0.0183%" height="15" fill="rgb(250,162,2)" fg:x="27774" fg:w="24"/><text x="21.4029%" y="1791.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (37 samples, 0.03%)</title><rect x="21.1712%" y="1781" width="0.0282%" height="15" fill="rgb(220,13,41)" fg:x="27798" fg:w="37"/><text x="21.4212%" y="1791.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (25 samples, 0.02%)</title><rect x="21.1803%" y="1765" width="0.0190%" height="15" fill="rgb(249,221,25)" fg:x="27810" fg:w="25"/><text x="21.4303%" y="1775.50"></text></g><g><title>core::sync::atomic::atomic_add (25 samples, 0.02%)</title><rect x="21.1803%" y="1749" width="0.0190%" height="15" fill="rgb(215,208,19)" fg:x="27810" fg:w="25"/><text x="21.4303%" y="1759.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_packet (14 samples, 0.01%)</title><rect x="21.2040%" y="1781" width="0.0107%" height="15" fill="rgb(236,175,2)" fg:x="27841" fg:w="14"/><text x="21.4540%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;torrust_tracker::servers::udp::UdpRequest&gt; (20 samples, 0.02%)</title><rect x="21.3487%" y="1765" width="0.0152%" height="15" fill="rgb(241,52,2)" fg:x="28031" fg:w="20"/><text x="21.5987%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (20 samples, 0.02%)</title><rect x="21.3487%" y="1749" width="0.0152%" height="15" fill="rgb(248,140,14)" fg:x="28031" fg:w="20"/><text x="21.5987%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (20 samples, 0.02%)</title><rect x="21.3487%" y="1733" width="0.0152%" height="15" fill="rgb(253,22,42)" fg:x="28031" fg:w="20"/><text x="21.5987%" y="1743.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="21.3487%" y="1717" width="0.0152%" height="15" fill="rgb(234,61,47)" fg:x="28031" fg:w="20"/><text x="21.5987%" y="1727.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (16 samples, 0.01%)</title><rect x="21.3639%" y="1765" width="0.0122%" height="15" fill="rgb(208,226,15)" fg:x="28051" fg:w="16"/><text x="21.6139%" y="1775.50"></text></g><g><title>torrust_tracker::core::Tracker::update_torrent_with_peer_and_get_stats::{{closure}} (136 samples, 0.10%)</title><rect x="21.5589%" y="1717" width="0.1036%" height="15" fill="rgb(217,221,4)" fg:x="28307" fg:w="136"/><text x="21.8089%" y="1727.50"></text></g><g><title>torrust_tracker::core::Tracker::announce::{{closure}} (173 samples, 0.13%)</title><rect x="21.5421%" y="1733" width="0.1318%" height="15" fill="rgb(212,174,34)" fg:x="28285" fg:w="173"/><text x="21.7921%" y="1743.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_announce::{{closure}} (267 samples, 0.20%)</title><rect x="21.4766%" y="1749" width="0.2033%" height="15" fill="rgb(253,83,4)" fg:x="28199" fg:w="267"/><text x="21.7266%" y="1759.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_connect::{{closure}} (30 samples, 0.02%)</title><rect x="21.6800%" y="1749" width="0.0228%" height="15" fill="rgb(250,195,49)" fg:x="28466" fg:w="30"/><text x="21.9300%" y="1759.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_request::{{closure}} (423 samples, 0.32%)</title><rect x="21.3875%" y="1765" width="0.3222%" height="15" fill="rgb(241,192,25)" fg:x="28082" fg:w="423"/><text x="21.6375%" y="1775.50"></text></g><g><title>core::fmt::Formatter::new (26 samples, 0.02%)</title><rect x="21.7736%" y="1733" width="0.0198%" height="15" fill="rgb(208,124,10)" fg:x="28589" fg:w="26"/><text x="22.0236%" y="1743.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (80 samples, 0.06%)</title><rect x="21.7934%" y="1733" width="0.0609%" height="15" fill="rgb(222,33,0)" fg:x="28615" fg:w="80"/><text x="22.0434%" y="1743.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (58 samples, 0.04%)</title><rect x="21.8102%" y="1717" width="0.0442%" height="15" fill="rgb(234,209,28)" fg:x="28637" fg:w="58"/><text x="22.0602%" y="1727.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15 samples, 0.01%)</title><rect x="21.8963%" y="1701" width="0.0114%" height="15" fill="rgb(224,11,23)" fg:x="28750" fg:w="15"/><text x="22.1463%" y="1711.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (74 samples, 0.06%)</title><rect x="21.8544%" y="1733" width="0.0564%" height="15" fill="rgb(232,99,1)" fg:x="28695" fg:w="74"/><text x="22.1044%" y="1743.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (70 samples, 0.05%)</title><rect x="21.8574%" y="1717" width="0.0533%" height="15" fill="rgb(237,95,45)" fg:x="28699" fg:w="70"/><text x="22.1074%" y="1727.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (207 samples, 0.16%)</title><rect x="21.7546%" y="1749" width="0.1577%" height="15" fill="rgb(208,109,11)" fg:x="28564" fg:w="207"/><text x="22.0046%" y="1759.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (19 samples, 0.01%)</title><rect x="21.9122%" y="1749" width="0.0145%" height="15" fill="rgb(216,190,48)" fg:x="28771" fg:w="19"/><text x="22.1622%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (18 samples, 0.01%)</title><rect x="21.9267%" y="1749" width="0.0137%" height="15" fill="rgb(251,171,36)" fg:x="28790" fg:w="18"/><text x="22.1767%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (18 samples, 0.01%)</title><rect x="21.9267%" y="1733" width="0.0137%" height="15" fill="rgb(230,62,22)" fg:x="28790" fg:w="18"/><text x="22.1767%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (18 samples, 0.01%)</title><rect x="21.9267%" y="1717" width="0.0137%" height="15" fill="rgb(225,114,35)" fg:x="28790" fg:w="18"/><text x="22.1767%" y="1727.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.01%)</title><rect x="21.9267%" y="1701" width="0.0137%" height="15" fill="rgb(215,118,42)" fg:x="28790" fg:w="18"/><text x="22.1767%" y="1711.50"></text></g><g><title>torrust_tracker::servers::udp::logging::map_action_name (25 samples, 0.02%)</title><rect x="21.9412%" y="1749" width="0.0190%" height="15" fill="rgb(243,119,21)" fg:x="28809" fg:w="25"/><text x="22.1912%" y="1759.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (14 samples, 0.01%)</title><rect x="21.9496%" y="1733" width="0.0107%" height="15" fill="rgb(252,177,53)" fg:x="28820" fg:w="14"/><text x="22.1996%" y="1743.50"></text></g><g><title>torrust_tracker::servers::udp::logging::log_request (345 samples, 0.26%)</title><rect x="21.7097%" y="1765" width="0.2628%" height="15" fill="rgb(237,209,29)" fg:x="28505" fg:w="345"/><text x="21.9597%" y="1775.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (18 samples, 0.01%)</title><rect x="21.9937%" y="1733" width="0.0137%" height="15" fill="rgb(212,65,23)" fg:x="28878" fg:w="18"/><text x="22.2437%" y="1743.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (14 samples, 0.01%)</title><rect x="21.9968%" y="1717" width="0.0107%" height="15" fill="rgb(230,222,46)" fg:x="28882" fg:w="14"/><text x="22.2468%" y="1727.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (35 samples, 0.03%)</title><rect x="21.9816%" y="1749" width="0.0267%" height="15" fill="rgb(215,135,32)" fg:x="28862" fg:w="35"/><text x="22.2316%" y="1759.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_packet::{{closure}} (1,067 samples, 0.81%)</title><rect x="21.2146%" y="1781" width="0.8126%" height="15" fill="rgb(246,101,22)" fg:x="27855" fg:w="1067"/><text x="21.4646%" y="1791.50"></text></g><g><title>torrust_tracker::servers::udp::logging::log_response (72 samples, 0.05%)</title><rect x="21.9724%" y="1765" width="0.0548%" height="15" fill="rgb(206,107,13)" fg:x="28850" fg:w="72"/><text x="22.2224%" y="1775.50"></text></g><g><title>alloc::vec::from_elem (68 samples, 0.05%)</title><rect x="22.0600%" y="1765" width="0.0518%" height="15" fill="rgb(250,100,44)" fg:x="28965" fg:w="68"/><text x="22.3100%" y="1775.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (68 samples, 0.05%)</title><rect x="22.0600%" y="1749" width="0.0518%" height="15" fill="rgb(231,147,38)" fg:x="28965" fg:w="68"/><text x="22.3100%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (68 samples, 0.05%)</title><rect x="22.0600%" y="1733" width="0.0518%" height="15" fill="rgb(229,8,40)" fg:x="28965" fg:w="68"/><text x="22.3100%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (68 samples, 0.05%)</title><rect x="22.0600%" y="1717" width="0.0518%" height="15" fill="rgb(221,135,30)" fg:x="28965" fg:w="68"/><text x="22.3100%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (68 samples, 0.05%)</title><rect x="22.0600%" y="1701" width="0.0518%" height="15" fill="rgb(249,193,18)" fg:x="28965" fg:w="68"/><text x="22.3100%" y="1711.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (68 samples, 0.05%)</title><rect x="22.0600%" y="1685" width="0.0518%" height="15" fill="rgb(209,133,39)" fg:x="28965" fg:w="68"/><text x="22.3100%" y="1695.50"></text></g><g><title>alloc::alloc::alloc_zeroed (68 samples, 0.05%)</title><rect x="22.0600%" y="1669" width="0.0518%" height="15" fill="rgb(232,100,14)" fg:x="28965" fg:w="68"/><text x="22.3100%" y="1679.50"></text></g><g><title>__rdl_alloc_zeroed (68 samples, 0.05%)</title><rect x="22.0600%" y="1653" width="0.0518%" height="15" fill="rgb(224,185,1)" fg:x="28965" fg:w="68"/><text x="22.3100%" y="1663.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (68 samples, 0.05%)</title><rect x="22.0600%" y="1637" width="0.0518%" height="15" fill="rgb(223,139,8)" fg:x="28965" fg:w="68"/><text x="22.3100%" y="1647.50"></text></g><g><title>[unknown] (48 samples, 0.04%)</title><rect x="22.2100%" y="1701" width="0.0366%" height="15" fill="rgb(232,213,38)" fg:x="29162" fg:w="48"/><text x="22.4600%" y="1711.50"></text></g><g><title>[unknown] (16 samples, 0.01%)</title><rect x="22.2580%" y="1685" width="0.0122%" height="15" fill="rgb(207,94,22)" fg:x="29225" fg:w="16"/><text x="22.5080%" y="1695.50"></text></g><g><title>[unknown] (28 samples, 0.02%)</title><rect x="22.2824%" y="1589" width="0.0213%" height="15" fill="rgb(219,183,54)" fg:x="29257" fg:w="28"/><text x="22.5324%" y="1599.50"></text></g><g><title>std::sys::pal::unix::cvt (134 samples, 0.10%)</title><rect x="22.3037%" y="1589" width="0.1021%" height="15" fill="rgb(216,185,54)" fg:x="29285" fg:w="134"/><text x="22.5537%" y="1599.50"></text></g><g><title>&lt;isize as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (134 samples, 0.10%)</title><rect x="22.3037%" y="1573" width="0.1021%" height="15" fill="rgb(254,217,39)" fg:x="29285" fg:w="134"/><text x="22.5537%" y="1583.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::process_valid_request::{{closure}} (1,908 samples, 1.45%)</title><rect x="20.9580%" y="1797" width="1.4531%" height="15" fill="rgb(240,178,23)" fg:x="27518" fg:w="1908"/><text x="21.2080%" y="1807.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::send_response::{{closure}} (504 samples, 0.38%)</title><rect x="22.0273%" y="1781" width="0.3839%" height="15" fill="rgb(218,11,47)" fg:x="28922" fg:w="504"/><text x="22.2773%" y="1791.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::send_packet::{{closure}} (382 samples, 0.29%)</title><rect x="22.1202%" y="1765" width="0.2909%" height="15" fill="rgb(218,51,51)" fg:x="29044" fg:w="382"/><text x="22.3702%" y="1775.50"></text></g><g><title>tokio::net::udp::UdpSocket::send_to::{{closure}} (344 samples, 0.26%)</title><rect x="22.1491%" y="1749" width="0.2620%" height="15" fill="rgb(238,126,27)" fg:x="29082" fg:w="344"/><text x="22.3991%" y="1759.50"></text></g><g><title>tokio::net::udp::UdpSocket::send_to_addr::{{closure}} (332 samples, 0.25%)</title><rect x="22.1582%" y="1733" width="0.2529%" height="15" fill="rgb(249,202,22)" fg:x="29094" fg:w="332"/><text x="22.4082%" y="1743.50"></text></g><g><title>tokio::runtime::io::registration::Registration::async_io::{{closure}} (304 samples, 0.23%)</title><rect x="22.1796%" y="1717" width="0.2315%" height="15" fill="rgb(254,195,49)" fg:x="29122" fg:w="304"/><text x="22.4296%" y="1727.50"></text></g><g><title>tokio::net::udp::UdpSocket::send_to_addr::{{closure}}::{{closure}} (215 samples, 0.16%)</title><rect x="22.2474%" y="1701" width="0.1637%" height="15" fill="rgb(208,123,14)" fg:x="29211" fg:w="215"/><text x="22.4974%" y="1711.50"></text></g><g><title>mio::net::udp::UdpSocket::send_to (185 samples, 0.14%)</title><rect x="22.2702%" y="1685" width="0.1409%" height="15" fill="rgb(224,200,8)" fg:x="29241" fg:w="185"/><text x="22.5202%" y="1695.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (185 samples, 0.14%)</title><rect x="22.2702%" y="1669" width="0.1409%" height="15" fill="rgb(217,61,36)" fg:x="29241" fg:w="185"/><text x="22.5202%" y="1679.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (185 samples, 0.14%)</title><rect x="22.2702%" y="1653" width="0.1409%" height="15" fill="rgb(206,35,45)" fg:x="29241" fg:w="185"/><text x="22.5202%" y="1663.50"></text></g><g><title>mio::net::udp::UdpSocket::send_to::{{closure}} (185 samples, 0.14%)</title><rect x="22.2702%" y="1637" width="0.1409%" height="15" fill="rgb(217,65,33)" fg:x="29241" fg:w="185"/><text x="22.5202%" y="1647.50"></text></g><g><title>std::net::udp::UdpSocket::send_to (185 samples, 0.14%)</title><rect x="22.2702%" y="1621" width="0.1409%" height="15" fill="rgb(222,158,48)" fg:x="29241" fg:w="185"/><text x="22.5202%" y="1631.50"></text></g><g><title>std::sys_common::net::UdpSocket::send_to (169 samples, 0.13%)</title><rect x="22.2824%" y="1605" width="0.1287%" height="15" fill="rgb(254,2,54)" fg:x="29257" fg:w="169"/><text x="22.5324%" y="1615.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (17 samples, 0.01%)</title><rect x="22.4629%" y="1749" width="0.0129%" height="15" fill="rgb(250,143,38)" fg:x="29494" fg:w="17"/><text x="22.7129%" y="1759.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (17 samples, 0.01%)</title><rect x="22.4629%" y="1733" width="0.0129%" height="15" fill="rgb(248,25,0)" fg:x="29494" fg:w="17"/><text x="22.7129%" y="1743.50"></text></g><g><title>tokio::net::udp::UdpSocket::readable::{{closure}} (104 samples, 0.08%)</title><rect x="22.4758%" y="1749" width="0.0792%" height="15" fill="rgb(206,152,27)" fg:x="29511" fg:w="104"/><text x="22.7258%" y="1759.50"></text></g><g><title>tokio::net::udp::UdpSocket::ready::{{closure}} (85 samples, 0.06%)</title><rect x="22.4903%" y="1733" width="0.0647%" height="15" fill="rgb(240,77,30)" fg:x="29530" fg:w="85"/><text x="22.7403%" y="1743.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::receive_request::{{closure}} (190 samples, 0.14%)</title><rect x="22.4477%" y="1765" width="0.1447%" height="15" fill="rgb(231,5,3)" fg:x="29474" fg:w="190"/><text x="22.6977%" y="1775.50"></text></g><g><title>tokio::net::udp::UdpSocket::recv_buf_from::{{closure}} (49 samples, 0.04%)</title><rect x="22.5550%" y="1749" width="0.0373%" height="15" fill="rgb(207,226,32)" fg:x="29615" fg:w="49"/><text x="22.8050%" y="1759.50"></text></g><g><title>tokio::runtime::io::registration::Registration::async_io::{{closure}} (28 samples, 0.02%)</title><rect x="22.5710%" y="1733" width="0.0213%" height="15" fill="rgb(222,207,47)" fg:x="29636" fg:w="28"/><text x="22.8210%" y="1743.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::run_with_graceful_shutdown::{{closure}}::{{closure}} (330 samples, 0.25%)</title><rect x="22.4111%" y="1797" width="0.2513%" height="15" fill="rgb(229,115,45)" fg:x="29426" fg:w="330"/><text x="22.6611%" y="1807.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::run_udp_server::{{closure}} (327 samples, 0.25%)</title><rect x="22.4134%" y="1781" width="0.2490%" height="15" fill="rgb(224,191,6)" fg:x="29429" fg:w="327"/><text x="22.6634%" y="1791.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::spawn_request_processor (92 samples, 0.07%)</title><rect x="22.5924%" y="1765" width="0.0701%" height="15" fill="rgb(230,227,24)" fg:x="29664" fg:w="92"/><text x="22.8424%" y="1775.50"></text></g><g><title>tokio::task::spawn::spawn (92 samples, 0.07%)</title><rect x="22.5924%" y="1749" width="0.0701%" height="15" fill="rgb(228,80,19)" fg:x="29664" fg:w="92"/><text x="22.8424%" y="1759.50"></text></g><g><title>tokio::task::spawn::spawn_inner (92 samples, 0.07%)</title><rect x="22.5924%" y="1733" width="0.0701%" height="15" fill="rgb(247,229,0)" fg:x="29664" fg:w="92"/><text x="22.8424%" y="1743.50"></text></g><g><title>tokio::runtime::context::current::with_current (92 samples, 0.07%)</title><rect x="22.5924%" y="1717" width="0.0701%" height="15" fill="rgb(237,194,15)" fg:x="29664" fg:w="92"/><text x="22.8424%" y="1727.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (92 samples, 0.07%)</title><rect x="22.5924%" y="1701" width="0.0701%" height="15" fill="rgb(219,203,20)" fg:x="29664" fg:w="92"/><text x="22.8424%" y="1711.50"></text></g><g><title>tokio::runtime::context::current::with_current::{{closure}} (92 samples, 0.07%)</title><rect x="22.5924%" y="1685" width="0.0701%" height="15" fill="rgb(234,128,8)" fg:x="29664" fg:w="92"/><text x="22.8424%" y="1695.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (92 samples, 0.07%)</title><rect x="22.5924%" y="1669" width="0.0701%" height="15" fill="rgb(248,202,8)" fg:x="29664" fg:w="92"/><text x="22.8424%" y="1679.50"></text></g><g><title>tokio::task::spawn::spawn_inner::{{closure}} (92 samples, 0.07%)</title><rect x="22.5924%" y="1653" width="0.0701%" height="15" fill="rgb(206,104,37)" fg:x="29664" fg:w="92"/><text x="22.8424%" y="1663.50"></text></g><g><title>tokio::runtime::scheduler::Handle::spawn (92 samples, 0.07%)</title><rect x="22.5924%" y="1637" width="0.0701%" height="15" fill="rgb(223,8,27)" fg:x="29664" fg:w="92"/><text x="22.8424%" y="1647.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::spawn (92 samples, 0.07%)</title><rect x="22.5924%" y="1621" width="0.0701%" height="15" fill="rgb(216,217,28)" fg:x="29664" fg:w="92"/><text x="22.8424%" y="1631.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (92 samples, 0.07%)</title><rect x="22.5924%" y="1605" width="0.0701%" height="15" fill="rgb(249,199,1)" fg:x="29664" fg:w="92"/><text x="22.8424%" y="1615.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (90 samples, 0.07%)</title><rect x="22.5939%" y="1589" width="0.0685%" height="15" fill="rgb(240,85,17)" fg:x="29666" fg:w="90"/><text x="22.8439%" y="1599.50"></text></g><g><title>tokio::runtime::task::new_task (89 samples, 0.07%)</title><rect x="22.5946%" y="1573" width="0.0678%" height="15" fill="rgb(206,108,45)" fg:x="29667" fg:w="89"/><text x="22.8446%" y="1583.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (89 samples, 0.07%)</title><rect x="22.5946%" y="1557" width="0.0678%" height="15" fill="rgb(245,210,41)" fg:x="29667" fg:w="89"/><text x="22.8446%" y="1567.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (89 samples, 0.07%)</title><rect x="22.5946%" y="1541" width="0.0678%" height="15" fill="rgb(206,13,37)" fg:x="29667" fg:w="89"/><text x="22.8446%" y="1551.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::single::&lt;impl torrust_tracker_torrent_repository::entry::Entry for torrust_tracker_torrent_repository::entry::Torrent&gt;::get_stats (34 samples, 0.03%)</title><rect x="22.6952%" y="1765" width="0.0259%" height="15" fill="rgb(250,61,18)" fg:x="29799" fg:w="34"/><text x="22.9452%" y="1775.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::values (27 samples, 0.02%)</title><rect x="22.7005%" y="1749" width="0.0206%" height="15" fill="rgb(235,172,48)" fg:x="29806" fg:w="27"/><text x="22.9505%" y="1759.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (21 samples, 0.02%)</title><rect x="22.7569%" y="1749" width="0.0160%" height="15" fill="rgb(249,201,17)" fg:x="29880" fg:w="21"/><text x="23.0069%" y="1759.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (21 samples, 0.02%)</title><rect x="22.7569%" y="1733" width="0.0160%" height="15" fill="rgb(219,208,6)" fg:x="29880" fg:w="21"/><text x="23.0069%" y="1743.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::mutex_std::&lt;impl torrust_tracker_torrent_repository::entry::EntrySync for alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;::insert_or_update_peer_and_get_stats (152 samples, 0.12%)</title><rect x="22.6723%" y="1797" width="0.1158%" height="15" fill="rgb(248,31,23)" fg:x="29769" fg:w="152"/><text x="22.9223%" y="1807.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::single::&lt;impl torrust_tracker_torrent_repository::entry::Entry for torrust_tracker_torrent_repository::entry::Torrent&gt;::insert_or_update_peer_and_get_stats (125 samples, 0.10%)</title><rect x="22.6929%" y="1781" width="0.0952%" height="15" fill="rgb(245,15,42)" fg:x="29796" fg:w="125"/><text x="22.9429%" y="1791.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::single::&lt;impl torrust_tracker_torrent_repository::entry::Entry for torrust_tracker_torrent_repository::entry::Torrent&gt;::insert_or_update_peer (88 samples, 0.07%)</title><rect x="22.7211%" y="1765" width="0.0670%" height="15" fill="rgb(222,217,39)" fg:x="29833" fg:w="88"/><text x="22.9711%" y="1775.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some_and (18 samples, 0.01%)</title><rect x="22.7744%" y="1749" width="0.0137%" height="15" fill="rgb(210,219,27)" fg:x="29903" fg:w="18"/><text x="23.0244%" y="1759.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::single::&lt;impl torrust_tracker_torrent_repository::entry::Entry for torrust_tracker_torrent_repository::entry::Torrent&gt;::insert_or_update_peer::{{closure}} (17 samples, 0.01%)</title><rect x="22.7752%" y="1733" width="0.0129%" height="15" fill="rgb(252,166,36)" fg:x="29904" fg:w="17"/><text x="23.0252%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;torrust_tracker_primitives::peer::Peer&gt;&gt; (17 samples, 0.01%)</title><rect x="22.7752%" y="1717" width="0.0129%" height="15" fill="rgb(245,132,34)" fg:x="29904" fg:w="17"/><text x="23.0252%" y="1727.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.01%)</title><rect x="22.7752%" y="1701" width="0.0129%" height="15" fill="rgb(236,54,3)" fg:x="29904" fg:w="17"/><text x="23.0252%" y="1711.50"></text></g><g><title>torrust_tracker_torrent_repository::repository::rw_lock_std_mutex_std::&lt;impl torrust_tracker_torrent_repository::repository::Repository&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt; for torrust_tracker_torrent_repository::repository::RwLockStd&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;&gt;::get (22 samples, 0.02%)</title><rect x="22.7881%" y="1797" width="0.0168%" height="15" fill="rgb(241,173,43)" fg:x="29921" fg:w="22"/><text x="23.0381%" y="1807.50"></text></g><g><title>torrust_tracker_torrent_repository::repository::rw_lock_std_mutex_std::&lt;impl torrust_tracker_torrent_repository::repository::Repository&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt; for torrust_tracker_torrent_repository::repository::RwLockStd&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;&gt;::update_torrent_with_peer_and_get_stats (22 samples, 0.02%)</title><rect x="22.8049%" y="1797" width="0.0168%" height="15" fill="rgb(215,190,9)" fg:x="29943" fg:w="22"/><text x="23.0549%" y="1807.50"></text></g><g><title>torrust_tracker_torrent_repository::repository::rw_lock_std_mutex_std::&lt;impl torrust_tracker_torrent_repository::repository::RwLockStd&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;&gt;::get_torrents (17 samples, 0.01%)</title><rect x="22.8216%" y="1797" width="0.0129%" height="15" fill="rgb(242,101,16)" fg:x="29965" fg:w="17"/><text x="23.0716%" y="1807.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (16 samples, 0.01%)</title><rect x="22.8224%" y="1781" width="0.0122%" height="15" fill="rgb(223,190,21)" fg:x="29966" fg:w="16"/><text x="23.0724%" y="1791.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::read (16 samples, 0.01%)</title><rect x="22.8224%" y="1765" width="0.0122%" height="15" fill="rgb(215,228,25)" fg:x="29966" fg:w="16"/><text x="23.0724%" y="1775.50"></text></g><g><title>tracing::span::Span::log (26 samples, 0.02%)</title><rect x="22.8399%" y="1797" width="0.0198%" height="15" fill="rgb(225,36,22)" fg:x="29989" fg:w="26"/><text x="23.0899%" y="1807.50"></text></g><g><title>core::fmt::Arguments::new_v1 (15 samples, 0.01%)</title><rect x="22.9252%" y="1781" width="0.0114%" height="15" fill="rgb(251,106,46)" fg:x="30101" fg:w="15"/><text x="23.1752%" y="1791.50"></text></g><g><title>tracing_core::span::Record::is_empty (34 samples, 0.03%)</title><rect x="22.9397%" y="1781" width="0.0259%" height="15" fill="rgb(208,90,1)" fg:x="30120" fg:w="34"/><text x="23.1897%" y="1791.50"></text></g><g><title>tracing_core::field::ValueSet::is_empty (34 samples, 0.03%)</title><rect x="22.9397%" y="1765" width="0.0259%" height="15" fill="rgb(243,10,4)" fg:x="30120" fg:w="34"/><text x="23.1897%" y="1775.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (22 samples, 0.02%)</title><rect x="22.9488%" y="1749" width="0.0168%" height="15" fill="rgb(212,137,27)" fg:x="30132" fg:w="22"/><text x="23.1988%" y="1759.50"></text></g><g><title>tracing_core::field::ValueSet::is_empty::{{closure}} (18 samples, 0.01%)</title><rect x="22.9518%" y="1733" width="0.0137%" height="15" fill="rgb(231,220,49)" fg:x="30136" fg:w="18"/><text x="23.2018%" y="1743.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (16 samples, 0.01%)</title><rect x="22.9534%" y="1717" width="0.0122%" height="15" fill="rgb(237,96,20)" fg:x="30138" fg:w="16"/><text x="23.2034%" y="1727.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (16 samples, 0.01%)</title><rect x="22.9534%" y="1701" width="0.0122%" height="15" fill="rgb(239,229,30)" fg:x="30138" fg:w="16"/><text x="23.2034%" y="1711.50"></text></g><g><title>tracing::span::Span::record_all (143 samples, 0.11%)</title><rect x="22.8597%" y="1797" width="0.1089%" height="15" fill="rgb(219,65,33)" fg:x="30015" fg:w="143"/><text x="23.1097%" y="1807.50"></text></g><g><title>unlink_chunk (185 samples, 0.14%)</title><rect x="22.9686%" y="1797" width="0.1409%" height="15" fill="rgb(243,134,7)" fg:x="30158" fg:w="185"/><text x="23.2186%" y="1807.50"></text></g><g><title>uuid::builder::Builder::with_variant (48 samples, 0.04%)</title><rect x="23.1118%" y="1765" width="0.0366%" height="15" fill="rgb(216,177,54)" fg:x="30346" fg:w="48"/><text x="23.3618%" y="1775.50"></text></g><g><title>[unknown] (40 samples, 0.03%)</title><rect x="23.1179%" y="1749" width="0.0305%" height="15" fill="rgb(211,160,20)" fg:x="30354" fg:w="40"/><text x="23.3679%" y="1759.50"></text></g><g><title>uuid::builder::Builder::from_random_bytes (77 samples, 0.06%)</title><rect x="23.1118%" y="1781" width="0.0586%" height="15" fill="rgb(239,85,39)" fg:x="30346" fg:w="77"/><text x="23.3618%" y="1791.50"></text></g><g><title>uuid::builder::Builder::with_version (29 samples, 0.02%)</title><rect x="23.1483%" y="1765" width="0.0221%" height="15" fill="rgb(232,125,22)" fg:x="30394" fg:w="29"/><text x="23.3983%" y="1775.50"></text></g><g><title>[unknown] (24 samples, 0.02%)</title><rect x="23.1521%" y="1749" width="0.0183%" height="15" fill="rgb(244,57,34)" fg:x="30399" fg:w="24"/><text x="23.4021%" y="1759.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u32 (161 samples, 0.12%)</title><rect x="23.1887%" y="1669" width="0.1226%" height="15" fill="rgb(214,203,32)" fg:x="30447" fg:w="161"/><text x="23.4387%" y="1679.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (161 samples, 0.12%)</title><rect x="23.1887%" y="1653" width="0.1226%" height="15" fill="rgb(207,58,43)" fg:x="30447" fg:w="161"/><text x="23.4387%" y="1663.50"></text></g><g><title>[unknown] (92 samples, 0.07%)</title><rect x="23.2413%" y="1637" width="0.0701%" height="15" fill="rgb(215,193,15)" fg:x="30516" fg:w="92"/><text x="23.4913%" y="1647.50"></text></g><g><title>rand::rng::Rng::gen (162 samples, 0.12%)</title><rect x="23.1887%" y="1749" width="0.1234%" height="15" fill="rgb(232,15,44)" fg:x="30447" fg:w="162"/><text x="23.4387%" y="1759.50"></text></g><g><title>rand::distributions::other::&lt;impl rand::distributions::distribution::Distribution&lt;[T: _]&gt; for rand::distributions::Standard&gt;::sample (162 samples, 0.12%)</title><rect x="23.1887%" y="1733" width="0.1234%" height="15" fill="rgb(212,3,48)" fg:x="30447" fg:w="162"/><text x="23.4387%" y="1743.50"></text></g><g><title>rand::rng::Rng::gen (162 samples, 0.12%)</title><rect x="23.1887%" y="1717" width="0.1234%" height="15" fill="rgb(218,128,7)" fg:x="30447" fg:w="162"/><text x="23.4387%" y="1727.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u8&gt; for rand::distributions::Standard&gt;::sample (162 samples, 0.12%)</title><rect x="23.1887%" y="1701" width="0.1234%" height="15" fill="rgb(226,216,39)" fg:x="30447" fg:w="162"/><text x="23.4387%" y="1711.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u32 (162 samples, 0.12%)</title><rect x="23.1887%" y="1685" width="0.1234%" height="15" fill="rgb(243,47,51)" fg:x="30447" fg:w="162"/><text x="23.4387%" y="1695.50"></text></g><g><title>[unknown] (18,233 samples, 13.89%)</title><rect x="9.4287%" y="1813" width="13.8864%" height="15" fill="rgb(241,183,40)" fg:x="12380" fg:w="18233"/><text x="9.6787%" y="1823.50">[unknown]</text></g><g><title>uuid::v4::&lt;impl uuid::Uuid&gt;::new_v4 (270 samples, 0.21%)</title><rect x="23.1095%" y="1797" width="0.2056%" height="15" fill="rgb(231,217,32)" fg:x="30343" fg:w="270"/><text x="23.3595%" y="1807.50"></text></g><g><title>uuid::rng::bytes (190 samples, 0.14%)</title><rect x="23.1704%" y="1781" width="0.1447%" height="15" fill="rgb(229,61,38)" fg:x="30423" fg:w="190"/><text x="23.4204%" y="1791.50"></text></g><g><title>rand::random (190 samples, 0.14%)</title><rect x="23.1704%" y="1765" width="0.1447%" height="15" fill="rgb(225,210,5)" fg:x="30423" fg:w="190"/><text x="23.4204%" y="1775.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (69 samples, 0.05%)</title><rect x="23.3342%" y="1813" width="0.0526%" height="15" fill="rgb(231,79,45)" fg:x="30638" fg:w="69"/><text x="23.5842%" y="1823.50"></text></g><g><title>_int_free (23 samples, 0.02%)</title><rect x="23.3921%" y="1813" width="0.0175%" height="15" fill="rgb(224,100,7)" fg:x="30714" fg:w="23"/><text x="23.6421%" y="1823.50"></text></g><g><title>_int_malloc (23 samples, 0.02%)</title><rect x="23.4096%" y="1813" width="0.0175%" height="15" fill="rgb(241,198,18)" fg:x="30737" fg:w="23"/><text x="23.6596%" y="1823.50"></text></g><g><title>[unknown] (16 samples, 0.01%)</title><rect x="23.4393%" y="1781" width="0.0122%" height="15" fill="rgb(252,97,53)" fg:x="30776" fg:w="16"/><text x="23.6893%" y="1791.50"></text></g><g><title>[unknown] (16 samples, 0.01%)</title><rect x="23.4393%" y="1765" width="0.0122%" height="15" fill="rgb(220,88,7)" fg:x="30776" fg:w="16"/><text x="23.6893%" y="1775.50"></text></g><g><title>[unknown] (16 samples, 0.01%)</title><rect x="23.4393%" y="1749" width="0.0122%" height="15" fill="rgb(213,176,14)" fg:x="30776" fg:w="16"/><text x="23.6893%" y="1759.50"></text></g><g><title>[unknown] (16 samples, 0.01%)</title><rect x="23.4393%" y="1733" width="0.0122%" height="15" fill="rgb(246,73,7)" fg:x="30776" fg:w="16"/><text x="23.6893%" y="1743.50"></text></g><g><title>[unknown] (16 samples, 0.01%)</title><rect x="23.4393%" y="1717" width="0.0122%" height="15" fill="rgb(245,64,36)" fg:x="30776" fg:w="16"/><text x="23.6893%" y="1727.50"></text></g><g><title>[unknown] (16 samples, 0.01%)</title><rect x="23.4393%" y="1701" width="0.0122%" height="15" fill="rgb(245,80,10)" fg:x="30776" fg:w="16"/><text x="23.6893%" y="1711.50"></text></g><g><title>[unknown] (16 samples, 0.01%)</title><rect x="23.4393%" y="1685" width="0.0122%" height="15" fill="rgb(232,107,50)" fg:x="30776" fg:w="16"/><text x="23.6893%" y="1695.50"></text></g><g><title>[unknown] (16 samples, 0.01%)</title><rect x="23.4393%" y="1669" width="0.0122%" height="15" fill="rgb(253,3,0)" fg:x="30776" fg:w="16"/><text x="23.6893%" y="1679.50"></text></g><g><title>[unknown] (16 samples, 0.01%)</title><rect x="23.4393%" y="1653" width="0.0122%" height="15" fill="rgb(212,99,53)" fg:x="30776" fg:w="16"/><text x="23.6893%" y="1663.50"></text></g><g><title>[unknown] (16 samples, 0.01%)</title><rect x="23.4393%" y="1637" width="0.0122%" height="15" fill="rgb(249,111,54)" fg:x="30776" fg:w="16"/><text x="23.6893%" y="1647.50"></text></g><g><title>[unknown] (16 samples, 0.01%)</title><rect x="23.4393%" y="1621" width="0.0122%" height="15" fill="rgb(249,55,30)" fg:x="30776" fg:w="16"/><text x="23.6893%" y="1631.50"></text></g><g><title>[unknown] (16 samples, 0.01%)</title><rect x="23.4393%" y="1605" width="0.0122%" height="15" fill="rgb(237,47,42)" fg:x="30776" fg:w="16"/><text x="23.6893%" y="1615.50"></text></g><g><title>[unknown] (16 samples, 0.01%)</title><rect x="23.4393%" y="1589" width="0.0122%" height="15" fill="rgb(211,20,18)" fg:x="30776" fg:w="16"/><text x="23.6893%" y="1599.50"></text></g><g><title>advise_stack_range (31 samples, 0.02%)</title><rect x="23.4515%" y="1781" width="0.0236%" height="15" fill="rgb(231,203,46)" fg:x="30792" fg:w="31"/><text x="23.7015%" y="1791.50"></text></g><g><title>__GI_madvise (31 samples, 0.02%)</title><rect x="23.4515%" y="1765" width="0.0236%" height="15" fill="rgb(237,142,3)" fg:x="30792" fg:w="31"/><text x="23.7015%" y="1775.50"></text></g><g><title>[unknown] (31 samples, 0.02%)</title><rect x="23.4515%" y="1749" width="0.0236%" height="15" fill="rgb(241,107,1)" fg:x="30792" fg:w="31"/><text x="23.7015%" y="1759.50"></text></g><g><title>[unknown] (31 samples, 0.02%)</title><rect x="23.4515%" y="1733" width="0.0236%" height="15" fill="rgb(229,83,13)" fg:x="30792" fg:w="31"/><text x="23.7015%" y="1743.50"></text></g><g><title>[unknown] (31 samples, 0.02%)</title><rect x="23.4515%" y="1717" width="0.0236%" height="15" fill="rgb(241,91,40)" fg:x="30792" fg:w="31"/><text x="23.7015%" y="1727.50"></text></g><g><title>[unknown] (31 samples, 0.02%)</title><rect x="23.4515%" y="1701" width="0.0236%" height="15" fill="rgb(225,3,45)" fg:x="30792" fg:w="31"/><text x="23.7015%" y="1711.50"></text></g><g><title>[unknown] (31 samples, 0.02%)</title><rect x="23.4515%" y="1685" width="0.0236%" height="15" fill="rgb(244,223,14)" fg:x="30792" fg:w="31"/><text x="23.7015%" y="1695.50"></text></g><g><title>[unknown] (30 samples, 0.02%)</title><rect x="23.4522%" y="1669" width="0.0228%" height="15" fill="rgb(224,124,37)" fg:x="30793" fg:w="30"/><text x="23.7022%" y="1679.50"></text></g><g><title>[unknown] (30 samples, 0.02%)</title><rect x="23.4522%" y="1653" width="0.0228%" height="15" fill="rgb(251,171,30)" fg:x="30793" fg:w="30"/><text x="23.7022%" y="1663.50"></text></g><g><title>[unknown] (30 samples, 0.02%)</title><rect x="23.4522%" y="1637" width="0.0228%" height="15" fill="rgb(236,46,54)" fg:x="30793" fg:w="30"/><text x="23.7022%" y="1647.50"></text></g><g><title>[unknown] (30 samples, 0.02%)</title><rect x="23.4522%" y="1621" width="0.0228%" height="15" fill="rgb(245,213,5)" fg:x="30793" fg:w="30"/><text x="23.7022%" y="1631.50"></text></g><g><title>[unknown] (29 samples, 0.02%)</title><rect x="23.4530%" y="1605" width="0.0221%" height="15" fill="rgb(230,144,27)" fg:x="30794" fg:w="29"/><text x="23.7030%" y="1615.50"></text></g><g><title>[unknown] (28 samples, 0.02%)</title><rect x="23.4537%" y="1589" width="0.0213%" height="15" fill="rgb(220,86,6)" fg:x="30795" fg:w="28"/><text x="23.7037%" y="1599.50"></text></g><g><title>[unknown] (28 samples, 0.02%)</title><rect x="23.4537%" y="1573" width="0.0213%" height="15" fill="rgb(240,20,13)" fg:x="30795" fg:w="28"/><text x="23.7037%" y="1583.50"></text></g><g><title>[unknown] (21 samples, 0.02%)</title><rect x="23.4591%" y="1557" width="0.0160%" height="15" fill="rgb(217,89,34)" fg:x="30802" fg:w="21"/><text x="23.7091%" y="1567.50"></text></g><g><title>[unknown] (17 samples, 0.01%)</title><rect x="23.4621%" y="1541" width="0.0129%" height="15" fill="rgb(229,13,5)" fg:x="30806" fg:w="17"/><text x="23.7121%" y="1551.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (31 samples, 0.02%)</title><rect x="23.4774%" y="1525" width="0.0236%" height="15" fill="rgb(244,67,35)" fg:x="30826" fg:w="31"/><text x="23.7274%" y="1535.50"></text></g><g><title>syscall (31 samples, 0.02%)</title><rect x="23.4774%" y="1509" width="0.0236%" height="15" fill="rgb(221,40,2)" fg:x="30826" fg:w="31"/><text x="23.7274%" y="1519.50"></text></g><g><title>[unknown] (31 samples, 0.02%)</title><rect x="23.4774%" y="1493" width="0.0236%" height="15" fill="rgb(237,157,21)" fg:x="30826" fg:w="31"/><text x="23.7274%" y="1503.50"></text></g><g><title>[unknown] (31 samples, 0.02%)</title><rect x="23.4774%" y="1477" width="0.0236%" height="15" fill="rgb(222,94,11)" fg:x="30826" fg:w="31"/><text x="23.7274%" y="1487.50"></text></g><g><title>[unknown] (30 samples, 0.02%)</title><rect x="23.4781%" y="1461" width="0.0228%" height="15" fill="rgb(249,113,6)" fg:x="30827" fg:w="30"/><text x="23.7281%" y="1471.50"></text></g><g><title>[unknown] (30 samples, 0.02%)</title><rect x="23.4781%" y="1445" width="0.0228%" height="15" fill="rgb(238,137,36)" fg:x="30827" fg:w="30"/><text x="23.7281%" y="1455.50"></text></g><g><title>[unknown] (30 samples, 0.02%)</title><rect x="23.4781%" y="1429" width="0.0228%" height="15" fill="rgb(210,102,26)" fg:x="30827" fg:w="30"/><text x="23.7281%" y="1439.50"></text></g><g><title>[unknown] (30 samples, 0.02%)</title><rect x="23.4781%" y="1413" width="0.0228%" height="15" fill="rgb(218,30,30)" fg:x="30827" fg:w="30"/><text x="23.7281%" y="1423.50"></text></g><g><title>[unknown] (30 samples, 0.02%)</title><rect x="23.4781%" y="1397" width="0.0228%" height="15" fill="rgb(214,67,26)" fg:x="30827" fg:w="30"/><text x="23.7281%" y="1407.50"></text></g><g><title>[unknown] (30 samples, 0.02%)</title><rect x="23.4781%" y="1381" width="0.0228%" height="15" fill="rgb(251,9,53)" fg:x="30827" fg:w="30"/><text x="23.7281%" y="1391.50"></text></g><g><title>[unknown] (30 samples, 0.02%)</title><rect x="23.4781%" y="1365" width="0.0228%" height="15" fill="rgb(228,204,25)" fg:x="30827" fg:w="30"/><text x="23.7281%" y="1375.50"></text></g><g><title>[unknown] (30 samples, 0.02%)</title><rect x="23.4781%" y="1349" width="0.0228%" height="15" fill="rgb(207,153,8)" fg:x="30827" fg:w="30"/><text x="23.7281%" y="1359.50"></text></g><g><title>[unknown] (29 samples, 0.02%)</title><rect x="23.4789%" y="1333" width="0.0221%" height="15" fill="rgb(242,9,16)" fg:x="30828" fg:w="29"/><text x="23.7289%" y="1343.50"></text></g><g><title>[unknown] (21 samples, 0.02%)</title><rect x="23.4850%" y="1317" width="0.0160%" height="15" fill="rgb(217,211,10)" fg:x="30836" fg:w="21"/><text x="23.7350%" y="1327.50"></text></g><g><title>[unknown] (17 samples, 0.01%)</title><rect x="23.4880%" y="1301" width="0.0129%" height="15" fill="rgb(219,228,52)" fg:x="30840" fg:w="17"/><text x="23.7380%" y="1311.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (35 samples, 0.03%)</title><rect x="23.4774%" y="1573" width="0.0267%" height="15" fill="rgb(231,92,29)" fg:x="30826" fg:w="35"/><text x="23.7274%" y="1583.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_timeout (35 samples, 0.03%)</title><rect x="23.4774%" y="1557" width="0.0267%" height="15" fill="rgb(232,8,23)" fg:x="30826" fg:w="35"/><text x="23.7274%" y="1567.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_optional_timeout (35 samples, 0.03%)</title><rect x="23.4774%" y="1541" width="0.0267%" height="15" fill="rgb(216,211,34)" fg:x="30826" fg:w="35"/><text x="23.7274%" y="1551.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (56 samples, 0.04%)</title><rect x="23.5040%" y="1573" width="0.0427%" height="15" fill="rgb(236,151,0)" fg:x="30861" fg:w="56"/><text x="23.7540%" y="1583.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (56 samples, 0.04%)</title><rect x="23.5040%" y="1557" width="0.0427%" height="15" fill="rgb(209,168,3)" fg:x="30861" fg:w="56"/><text x="23.7540%" y="1567.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (56 samples, 0.04%)</title><rect x="23.5040%" y="1541" width="0.0427%" height="15" fill="rgb(208,129,28)" fg:x="30861" fg:w="56"/><text x="23.7540%" y="1551.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (56 samples, 0.04%)</title><rect x="23.5040%" y="1525" width="0.0427%" height="15" fill="rgb(229,78,22)" fg:x="30861" fg:w="56"/><text x="23.7540%" y="1535.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (56 samples, 0.04%)</title><rect x="23.5040%" y="1509" width="0.0427%" height="15" fill="rgb(228,187,13)" fg:x="30861" fg:w="56"/><text x="23.7540%" y="1519.50"></text></g><g><title>syscall (56 samples, 0.04%)</title><rect x="23.5040%" y="1493" width="0.0427%" height="15" fill="rgb(240,119,24)" fg:x="30861" fg:w="56"/><text x="23.7540%" y="1503.50"></text></g><g><title>[unknown] (56 samples, 0.04%)</title><rect x="23.5040%" y="1477" width="0.0427%" height="15" fill="rgb(209,194,42)" fg:x="30861" fg:w="56"/><text x="23.7540%" y="1487.50"></text></g><g><title>[unknown] (55 samples, 0.04%)</title><rect x="23.5048%" y="1461" width="0.0419%" height="15" fill="rgb(247,200,46)" fg:x="30862" fg:w="55"/><text x="23.7548%" y="1471.50"></text></g><g><title>[unknown] (55 samples, 0.04%)</title><rect x="23.5048%" y="1445" width="0.0419%" height="15" fill="rgb(218,76,16)" fg:x="30862" fg:w="55"/><text x="23.7548%" y="1455.50"></text></g><g><title>[unknown] (55 samples, 0.04%)</title><rect x="23.5048%" y="1429" width="0.0419%" height="15" fill="rgb(225,21,48)" fg:x="30862" fg:w="55"/><text x="23.7548%" y="1439.50"></text></g><g><title>[unknown] (55 samples, 0.04%)</title><rect x="23.5048%" y="1413" width="0.0419%" height="15" fill="rgb(239,223,50)" fg:x="30862" fg:w="55"/><text x="23.7548%" y="1423.50"></text></g><g><title>[unknown] (54 samples, 0.04%)</title><rect x="23.5055%" y="1397" width="0.0411%" height="15" fill="rgb(244,45,21)" fg:x="30863" fg:w="54"/><text x="23.7555%" y="1407.50"></text></g><g><title>[unknown] (54 samples, 0.04%)</title><rect x="23.5055%" y="1381" width="0.0411%" height="15" fill="rgb(232,33,43)" fg:x="30863" fg:w="54"/><text x="23.7555%" y="1391.50"></text></g><g><title>[unknown] (54 samples, 0.04%)</title><rect x="23.5055%" y="1365" width="0.0411%" height="15" fill="rgb(209,8,3)" fg:x="30863" fg:w="54"/><text x="23.7555%" y="1375.50"></text></g><g><title>[unknown] (53 samples, 0.04%)</title><rect x="23.5063%" y="1349" width="0.0404%" height="15" fill="rgb(214,25,53)" fg:x="30864" fg:w="53"/><text x="23.7563%" y="1359.50"></text></g><g><title>[unknown] (52 samples, 0.04%)</title><rect x="23.5071%" y="1333" width="0.0396%" height="15" fill="rgb(254,186,54)" fg:x="30865" fg:w="52"/><text x="23.7571%" y="1343.50"></text></g><g><title>[unknown] (46 samples, 0.04%)</title><rect x="23.5116%" y="1317" width="0.0350%" height="15" fill="rgb(208,174,49)" fg:x="30871" fg:w="46"/><text x="23.7616%" y="1327.50"></text></g><g><title>[unknown] (39 samples, 0.03%)</title><rect x="23.5170%" y="1301" width="0.0297%" height="15" fill="rgb(233,191,51)" fg:x="30878" fg:w="39"/><text x="23.7670%" y="1311.50"></text></g><g><title>[unknown] (38 samples, 0.03%)</title><rect x="23.5177%" y="1285" width="0.0289%" height="15" fill="rgb(222,134,10)" fg:x="30879" fg:w="38"/><text x="23.7677%" y="1295.50"></text></g><g><title>[unknown] (16 samples, 0.01%)</title><rect x="23.5345%" y="1269" width="0.0122%" height="15" fill="rgb(230,226,20)" fg:x="30901" fg:w="16"/><text x="23.7845%" y="1279.50"></text></g><g><title>[unknown] (16 samples, 0.01%)</title><rect x="23.5345%" y="1253" width="0.0122%" height="15" fill="rgb(251,111,25)" fg:x="30901" fg:w="16"/><text x="23.7845%" y="1263.50"></text></g><g><title>[unknown] (15 samples, 0.01%)</title><rect x="23.5352%" y="1237" width="0.0114%" height="15" fill="rgb(224,40,46)" fg:x="30902" fg:w="15"/><text x="23.7852%" y="1247.50"></text></g><g><title>[[vdso]] (26 samples, 0.02%)</title><rect x="23.6304%" y="1109" width="0.0198%" height="15" fill="rgb(236,108,47)" fg:x="31027" fg:w="26"/><text x="23.8804%" y="1119.50"></text></g><g><title>[[vdso]] (263 samples, 0.20%)</title><rect x="23.6510%" y="1093" width="0.2003%" height="15" fill="rgb(234,93,0)" fg:x="31054" fg:w="263"/><text x="23.9010%" y="1103.50"></text></g><g><title>__ieee754_pow_fma (26 samples, 0.02%)</title><rect x="23.8643%" y="1093" width="0.0198%" height="15" fill="rgb(224,213,32)" fg:x="31334" fg:w="26"/><text x="24.1143%" y="1103.50"></text></g><g><title>__pow (314 samples, 0.24%)</title><rect x="23.6510%" y="1109" width="0.2391%" height="15" fill="rgb(251,11,48)" fg:x="31054" fg:w="314"/><text x="23.9010%" y="1119.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (345 samples, 0.26%)</title><rect x="23.6282%" y="1125" width="0.2628%" height="15" fill="rgb(236,173,5)" fg:x="31024" fg:w="345"/><text x="23.8782%" y="1135.50"></text></g><g><title>__GI___clock_gettime (14 samples, 0.01%)</title><rect x="23.9016%" y="1077" width="0.0107%" height="15" fill="rgb(230,95,12)" fg:x="31383" fg:w="14"/><text x="24.1516%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (416 samples, 0.32%)</title><rect x="23.5962%" y="1141" width="0.3168%" height="15" fill="rgb(232,209,1)" fg:x="30982" fg:w="416"/><text x="23.8462%" y="1151.50"></text></g><g><title>std::time::Instant::now (20 samples, 0.02%)</title><rect x="23.8978%" y="1125" width="0.0152%" height="15" fill="rgb(232,6,1)" fg:x="31378" fg:w="20"/><text x="24.1478%" y="1135.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (20 samples, 0.02%)</title><rect x="23.8978%" y="1109" width="0.0152%" height="15" fill="rgb(210,224,50)" fg:x="31378" fg:w="20"/><text x="24.1478%" y="1119.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (15 samples, 0.01%)</title><rect x="23.9016%" y="1093" width="0.0114%" height="15" fill="rgb(228,127,35)" fg:x="31383" fg:w="15"/><text x="24.1516%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::start_processing_scheduled_tasks (24 samples, 0.02%)</title><rect x="23.9130%" y="1141" width="0.0183%" height="15" fill="rgb(245,102,45)" fg:x="31398" fg:w="24"/><text x="24.1630%" y="1151.50"></text></g><g><title>std::time::Instant::now (18 samples, 0.01%)</title><rect x="23.9176%" y="1125" width="0.0137%" height="15" fill="rgb(214,1,49)" fg:x="31404" fg:w="18"/><text x="24.1676%" y="1135.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (18 samples, 0.01%)</title><rect x="23.9176%" y="1109" width="0.0137%" height="15" fill="rgb(226,163,40)" fg:x="31404" fg:w="18"/><text x="24.1676%" y="1119.50"></text></g><g><title>mio::poll::Poll::poll (102 samples, 0.08%)</title><rect x="23.9541%" y="1013" width="0.0777%" height="15" fill="rgb(239,212,28)" fg:x="31452" fg:w="102"/><text x="24.2041%" y="1023.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (102 samples, 0.08%)</title><rect x="23.9541%" y="997" width="0.0777%" height="15" fill="rgb(220,20,13)" fg:x="31452" fg:w="102"/><text x="24.2041%" y="1007.50"></text></g><g><title>epoll_wait (99 samples, 0.08%)</title><rect x="23.9564%" y="981" width="0.0754%" height="15" fill="rgb(210,164,35)" fg:x="31455" fg:w="99"/><text x="24.2064%" y="991.50"></text></g><g><title>[unknown] (92 samples, 0.07%)</title><rect x="23.9617%" y="965" width="0.0701%" height="15" fill="rgb(248,109,41)" fg:x="31462" fg:w="92"/><text x="24.2117%" y="975.50"></text></g><g><title>[unknown] (91 samples, 0.07%)</title><rect x="23.9625%" y="949" width="0.0693%" height="15" fill="rgb(238,23,50)" fg:x="31463" fg:w="91"/><text x="24.2125%" y="959.50"></text></g><g><title>[unknown] (91 samples, 0.07%)</title><rect x="23.9625%" y="933" width="0.0693%" height="15" fill="rgb(211,48,49)" fg:x="31463" fg:w="91"/><text x="24.2125%" y="943.50"></text></g><g><title>[unknown] (88 samples, 0.07%)</title><rect x="23.9648%" y="917" width="0.0670%" height="15" fill="rgb(223,36,21)" fg:x="31466" fg:w="88"/><text x="24.2148%" y="927.50"></text></g><g><title>[unknown] (85 samples, 0.06%)</title><rect x="23.9671%" y="901" width="0.0647%" height="15" fill="rgb(207,123,46)" fg:x="31469" fg:w="85"/><text x="24.2171%" y="911.50"></text></g><g><title>[unknown] (84 samples, 0.06%)</title><rect x="23.9678%" y="885" width="0.0640%" height="15" fill="rgb(240,218,32)" fg:x="31470" fg:w="84"/><text x="24.2178%" y="895.50"></text></g><g><title>[unknown] (43 samples, 0.03%)</title><rect x="23.9991%" y="869" width="0.0327%" height="15" fill="rgb(252,5,43)" fg:x="31511" fg:w="43"/><text x="24.2491%" y="879.50"></text></g><g><title>[unknown] (29 samples, 0.02%)</title><rect x="24.0097%" y="853" width="0.0221%" height="15" fill="rgb(252,84,19)" fg:x="31525" fg:w="29"/><text x="24.2597%" y="863.50"></text></g><g><title>[unknown] (14 samples, 0.01%)</title><rect x="24.0211%" y="837" width="0.0107%" height="15" fill="rgb(243,152,39)" fg:x="31540" fg:w="14"/><text x="24.2711%" y="847.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (125 samples, 0.10%)</title><rect x="23.9465%" y="1125" width="0.0952%" height="15" fill="rgb(234,160,15)" fg:x="31442" fg:w="125"/><text x="24.1965%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park_timeout (125 samples, 0.10%)</title><rect x="23.9465%" y="1109" width="0.0952%" height="15" fill="rgb(237,34,20)" fg:x="31442" fg:w="125"/><text x="24.1965%" y="1119.50"></text></g><g><title>tokio::runtime::driver::Driver::park_timeout (125 samples, 0.10%)</title><rect x="23.9465%" y="1093" width="0.0952%" height="15" fill="rgb(229,97,13)" fg:x="31442" fg:w="125"/><text x="24.1965%" y="1103.50"></text></g><g><title>tokio::runtime::driver::TimeDriver::park_timeout (125 samples, 0.10%)</title><rect x="23.9465%" y="1077" width="0.0952%" height="15" fill="rgb(234,71,50)" fg:x="31442" fg:w="125"/><text x="24.1965%" y="1087.50"></text></g><g><title>tokio::runtime::time::Driver::park_timeout (125 samples, 0.10%)</title><rect x="23.9465%" y="1061" width="0.0952%" height="15" fill="rgb(253,155,4)" fg:x="31442" fg:w="125"/><text x="24.1965%" y="1071.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (116 samples, 0.09%)</title><rect x="23.9534%" y="1045" width="0.0883%" height="15" fill="rgb(222,185,37)" fg:x="31451" fg:w="116"/><text x="24.2034%" y="1055.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (116 samples, 0.09%)</title><rect x="23.9534%" y="1029" width="0.0883%" height="15" fill="rgb(251,177,13)" fg:x="31451" fg:w="116"/><text x="24.2034%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::maintenance (148 samples, 0.11%)</title><rect x="23.9313%" y="1141" width="0.1127%" height="15" fill="rgb(250,179,40)" fg:x="31422" fg:w="148"/><text x="24.1813%" y="1151.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (111 samples, 0.08%)</title><rect x="24.2085%" y="1125" width="0.0845%" height="15" fill="rgb(242,44,2)" fg:x="31786" fg:w="111"/><text x="24.4585%" y="1135.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (111 samples, 0.08%)</title><rect x="24.2085%" y="1109" width="0.0845%" height="15" fill="rgb(216,177,13)" fg:x="31786" fg:w="111"/><text x="24.4585%" y="1119.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (111 samples, 0.08%)</title><rect x="24.2085%" y="1093" width="0.0845%" height="15" fill="rgb(216,106,43)" fg:x="31786" fg:w="111"/><text x="24.4585%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (16 samples, 0.01%)</title><rect x="24.3441%" y="1077" width="0.0122%" height="15" fill="rgb(216,183,2)" fg:x="31964" fg:w="16"/><text x="24.5941%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (16 samples, 0.01%)</title><rect x="24.3441%" y="1061" width="0.0122%" height="15" fill="rgb(249,75,3)" fg:x="31964" fg:w="16"/><text x="24.5941%" y="1071.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (88 samples, 0.07%)</title><rect x="24.5573%" y="997" width="0.0670%" height="15" fill="rgb(219,67,39)" fg:x="32244" fg:w="88"/><text x="24.8073%" y="1007.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (13,339 samples, 10.16%)</title><rect x="24.3684%" y="1013" width="10.1591%" height="15" fill="rgb(253,228,2)" fg:x="31996" fg:w="13339"/><text x="24.6184%" y="1023.50">std::sys::pal::..</text></g><g><title>syscall (13,003 samples, 9.90%)</title><rect x="24.6243%" y="997" width="9.9032%" height="15" fill="rgb(235,138,27)" fg:x="32332" fg:w="13003"/><text x="24.8743%" y="1007.50">syscall</text></g><g><title>[unknown] (12,895 samples, 9.82%)</title><rect x="24.7066%" y="981" width="9.8209%" height="15" fill="rgb(236,97,51)" fg:x="32440" fg:w="12895"/><text x="24.9566%" y="991.50">[unknown]</text></g><g><title>[unknown] (12,759 samples, 9.72%)</title><rect x="24.8102%" y="965" width="9.7174%" height="15" fill="rgb(240,80,30)" fg:x="32576" fg:w="12759"/><text x="25.0602%" y="975.50">[unknown]</text></g><g><title>[unknown] (12,313 samples, 9.38%)</title><rect x="25.1498%" y="949" width="9.3777%" height="15" fill="rgb(230,178,19)" fg:x="33022" fg:w="12313"/><text x="25.3998%" y="959.50">[unknown]</text></g><g><title>[unknown] (12,032 samples, 9.16%)</title><rect x="25.3639%" y="933" width="9.1637%" height="15" fill="rgb(210,190,27)" fg:x="33303" fg:w="12032"/><text x="25.6139%" y="943.50">[unknown]</text></g><g><title>[unknown] (11,734 samples, 8.94%)</title><rect x="25.5908%" y="917" width="8.9367%" height="15" fill="rgb(222,107,31)" fg:x="33601" fg:w="11734"/><text x="25.8408%" y="927.50">[unknown]</text></g><g><title>[unknown] (11,209 samples, 8.54%)</title><rect x="25.9907%" y="901" width="8.5369%" height="15" fill="rgb(216,127,34)" fg:x="34126" fg:w="11209"/><text x="26.2407%" y="911.50">[unknown]</text></g><g><title>[unknown] (10,265 samples, 7.82%)</title><rect x="26.7096%" y="885" width="7.8179%" height="15" fill="rgb(234,116,52)" fg:x="35070" fg:w="10265"/><text x="26.9596%" y="895.50">[unknown]</text></g><g><title>[unknown] (9,345 samples, 7.12%)</title><rect x="27.4103%" y="869" width="7.1172%" height="15" fill="rgb(222,124,15)" fg:x="35990" fg:w="9345"/><text x="27.6603%" y="879.50">[unknown]</text></g><g><title>[unknown] (8,623 samples, 6.57%)</title><rect x="27.9602%" y="853" width="6.5674%" height="15" fill="rgb(231,179,28)" fg:x="36712" fg:w="8623"/><text x="28.2102%" y="863.50">[unknown]</text></g><g><title>[unknown] (7,744 samples, 5.90%)</title><rect x="28.6296%" y="837" width="5.8979%" height="15" fill="rgb(226,93,45)" fg:x="37591" fg:w="7744"/><text x="28.8796%" y="847.50">[unknow..</text></g><g><title>[unknown] (5,922 samples, 4.51%)</title><rect x="30.0173%" y="821" width="4.5102%" height="15" fill="rgb(215,8,51)" fg:x="39413" fg:w="5922"/><text x="30.2673%" y="831.50">[unkn..</text></g><g><title>[unknown] (4,459 samples, 3.40%)</title><rect x="31.1315%" y="805" width="3.3960%" height="15" fill="rgb(223,106,5)" fg:x="40876" fg:w="4459"/><text x="31.3815%" y="815.50">[un..</text></g><g><title>[unknown] (2,808 samples, 2.14%)</title><rect x="32.3889%" y="789" width="2.1386%" height="15" fill="rgb(250,191,5)" fg:x="42527" fg:w="2808"/><text x="32.6389%" y="799.50">[..</text></g><g><title>[unknown] (1,275 samples, 0.97%)</title><rect x="33.5565%" y="773" width="0.9711%" height="15" fill="rgb(242,132,44)" fg:x="44060" fg:w="1275"/><text x="33.8065%" y="783.50"></text></g><g><title>[unknown] (1,022 samples, 0.78%)</title><rect x="33.7492%" y="757" width="0.7784%" height="15" fill="rgb(251,152,29)" fg:x="44313" fg:w="1022"/><text x="33.9992%" y="767.50"></text></g><g><title>[unknown] (738 samples, 0.56%)</title><rect x="33.9655%" y="741" width="0.5621%" height="15" fill="rgb(218,179,5)" fg:x="44597" fg:w="738"/><text x="34.2155%" y="751.50"></text></g><g><title>[unknown] (607 samples, 0.46%)</title><rect x="34.0652%" y="725" width="0.4623%" height="15" fill="rgb(227,67,19)" fg:x="44728" fg:w="607"/><text x="34.3152%" y="735.50"></text></g><g><title>[unknown] (155 samples, 0.12%)</title><rect x="34.4095%" y="709" width="0.1180%" height="15" fill="rgb(233,119,31)" fg:x="45180" fg:w="155"/><text x="34.6595%" y="719.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (77 samples, 0.06%)</title><rect x="34.5275%" y="997" width="0.0586%" height="15" fill="rgb(241,120,22)" fg:x="45335" fg:w="77"/><text x="34.7775%" y="1007.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (77 samples, 0.06%)</title><rect x="34.5275%" y="981" width="0.0586%" height="15" fill="rgb(224,102,30)" fg:x="45335" fg:w="77"/><text x="34.7775%" y="991.50"></text></g><g><title>std::sync::condvar::Condvar::wait (13,429 samples, 10.23%)</title><rect x="24.3677%" y="1061" width="10.2276%" height="15" fill="rgb(210,164,37)" fg:x="31995" fg:w="13429"/><text x="24.6177%" y="1071.50">std::sync::cond..</text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (13,428 samples, 10.23%)</title><rect x="24.3684%" y="1045" width="10.2269%" height="15" fill="rgb(226,191,16)" fg:x="31996" fg:w="13428"/><text x="24.6184%" y="1055.50">std::sys::sync:..</text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_optional_timeout (13,428 samples, 10.23%)</title><rect x="24.3684%" y="1029" width="10.2269%" height="15" fill="rgb(214,40,45)" fg:x="31996" fg:w="13428"/><text x="24.6184%" y="1039.50">std::sys::sync:..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (89 samples, 0.07%)</title><rect x="34.5275%" y="1013" width="0.0678%" height="15" fill="rgb(244,29,26)" fg:x="45335" fg:w="89"/><text x="34.7775%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_condvar (13,508 samples, 10.29%)</title><rect x="24.3563%" y="1077" width="10.2878%" height="15" fill="rgb(216,16,5)" fg:x="31980" fg:w="13508"/><text x="24.6063%" y="1087.50">tokio::runtime:..</text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (64 samples, 0.05%)</title><rect x="34.5953%" y="1061" width="0.0487%" height="15" fill="rgb(249,76,35)" fg:x="45424" fg:w="64"/><text x="34.8453%" y="1071.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (32 samples, 0.02%)</title><rect x="34.6197%" y="1045" width="0.0244%" height="15" fill="rgb(207,11,44)" fg:x="45456" fg:w="32"/><text x="34.8697%" y="1055.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (31 samples, 0.02%)</title><rect x="34.6205%" y="1029" width="0.0236%" height="15" fill="rgb(228,190,49)" fg:x="45457" fg:w="31"/><text x="34.8705%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (30 samples, 0.02%)</title><rect x="34.6212%" y="1013" width="0.0228%" height="15" fill="rgb(214,173,12)" fg:x="45458" fg:w="30"/><text x="34.8712%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (30 samples, 0.02%)</title><rect x="34.6212%" y="997" width="0.0228%" height="15" fill="rgb(218,26,35)" fg:x="45458" fg:w="30"/><text x="34.8712%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (15 samples, 0.01%)</title><rect x="34.6783%" y="965" width="0.0114%" height="15" fill="rgb(220,200,19)" fg:x="45533" fg:w="15"/><text x="34.9283%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (15 samples, 0.01%)</title><rect x="34.6783%" y="949" width="0.0114%" height="15" fill="rgb(239,95,49)" fg:x="45533" fg:w="15"/><text x="34.9283%" y="959.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (38 samples, 0.03%)</title><rect x="34.6669%" y="1013" width="0.0289%" height="15" fill="rgb(235,85,53)" fg:x="45518" fg:w="38"/><text x="34.9169%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (34 samples, 0.03%)</title><rect x="34.6700%" y="997" width="0.0259%" height="15" fill="rgb(233,133,31)" fg:x="45522" fg:w="34"/><text x="34.9200%" y="1007.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (34 samples, 0.03%)</title><rect x="34.6700%" y="981" width="0.0259%" height="15" fill="rgb(218,25,20)" fg:x="45522" fg:w="34"/><text x="34.9200%" y="991.50"></text></g><g><title>core::array::&lt;impl core::default::Default for [T: 32]&gt;::default (17 samples, 0.01%)</title><rect x="34.7004%" y="997" width="0.0129%" height="15" fill="rgb(252,210,38)" fg:x="45562" fg:w="17"/><text x="34.9504%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt;: 32]&gt; (19 samples, 0.01%)</title><rect x="34.7134%" y="997" width="0.0145%" height="15" fill="rgb(242,134,21)" fg:x="45579" fg:w="19"/><text x="34.9634%" y="1007.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (33 samples, 0.03%)</title><rect x="34.7560%" y="965" width="0.0251%" height="15" fill="rgb(213,28,48)" fg:x="45635" fg:w="33"/><text x="35.0060%" y="975.50"></text></g><g><title>tokio::runtime::time::wheel::level::slot_range (15 samples, 0.01%)</title><rect x="34.7697%" y="949" width="0.0114%" height="15" fill="rgb(250,196,2)" fg:x="45653" fg:w="15"/><text x="35.0197%" y="959.50"></text></g><g><title>core::num::&lt;impl usize&gt;::pow (15 samples, 0.01%)</title><rect x="34.7697%" y="933" width="0.0114%" height="15" fill="rgb(227,5,17)" fg:x="45653" fg:w="15"/><text x="35.0197%" y="943.50"></text></g><g><title>tokio::runtime::time::wheel::level::level_range (17 samples, 0.01%)</title><rect x="34.7812%" y="965" width="0.0129%" height="15" fill="rgb(221,226,24)" fg:x="45668" fg:w="17"/><text x="35.0312%" y="975.50"></text></g><g><title>tokio::runtime::time::wheel::level::slot_range (15 samples, 0.01%)</title><rect x="34.7827%" y="949" width="0.0114%" height="15" fill="rgb(211,5,48)" fg:x="45670" fg:w="15"/><text x="35.0327%" y="959.50"></text></g><g><title>core::num::&lt;impl usize&gt;::pow (15 samples, 0.01%)</title><rect x="34.7827%" y="933" width="0.0114%" height="15" fill="rgb(219,150,6)" fg:x="45670" fg:w="15"/><text x="35.0327%" y="943.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (95 samples, 0.07%)</title><rect x="34.7530%" y="981" width="0.0724%" height="15" fill="rgb(251,46,16)" fg:x="45631" fg:w="95"/><text x="35.0030%" y="991.50"></text></g><g><title>tokio::runtime::time::wheel::level::slot_range (41 samples, 0.03%)</title><rect x="34.7941%" y="965" width="0.0312%" height="15" fill="rgb(220,204,40)" fg:x="45685" fg:w="41"/><text x="35.0441%" y="975.50"></text></g><g><title>core::num::&lt;impl usize&gt;::pow (41 samples, 0.03%)</title><rect x="34.7941%" y="949" width="0.0312%" height="15" fill="rgb(211,85,2)" fg:x="45685" fg:w="41"/><text x="35.0441%" y="959.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (129 samples, 0.10%)</title><rect x="34.7324%" y="997" width="0.0982%" height="15" fill="rgb(229,17,7)" fg:x="45604" fg:w="129"/><text x="34.9824%" y="1007.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (202 samples, 0.15%)</title><rect x="34.6959%" y="1013" width="0.1538%" height="15" fill="rgb(239,72,28)" fg:x="45556" fg:w="202"/><text x="34.9459%" y="1023.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll_at (17 samples, 0.01%)</title><rect x="34.8367%" y="997" width="0.0129%" height="15" fill="rgb(230,47,54)" fg:x="45741" fg:w="17"/><text x="35.0867%" y="1007.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (15 samples, 0.01%)</title><rect x="34.8383%" y="981" width="0.0114%" height="15" fill="rgb(214,50,8)" fg:x="45743" fg:w="15"/><text x="35.0883%" y="991.50"></text></g><g><title>&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.03%)</title><rect x="34.8809%" y="981" width="0.0289%" height="15" fill="rgb(216,198,43)" fg:x="45799" fg:w="38"/><text x="35.1309%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (38 samples, 0.03%)</title><rect x="34.8809%" y="965" width="0.0289%" height="15" fill="rgb(234,20,35)" fg:x="45799" fg:w="38"/><text x="35.1309%" y="975.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (31 samples, 0.02%)</title><rect x="34.9617%" y="949" width="0.0236%" height="15" fill="rgb(254,45,19)" fg:x="45905" fg:w="31"/><text x="35.2117%" y="959.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select::{{closure}} (31 samples, 0.02%)</title><rect x="34.9617%" y="933" width="0.0236%" height="15" fill="rgb(219,14,44)" fg:x="45905" fg:w="31"/><text x="35.2117%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (17 samples, 0.01%)</title><rect x="34.9723%" y="917" width="0.0129%" height="15" fill="rgb(217,220,26)" fg:x="45919" fg:w="17"/><text x="35.2223%" y="927.50"></text></g><g><title>[[vdso]] (28 samples, 0.02%)</title><rect x="35.0759%" y="933" width="0.0213%" height="15" fill="rgb(213,158,28)" fg:x="46055" fg:w="28"/><text x="35.3259%" y="943.50"></text></g><g><title>[unknown] (11,031 samples, 8.40%)</title><rect x="35.0972%" y="933" width="8.4013%" height="15" fill="rgb(252,51,52)" fg:x="46083" fg:w="11031"/><text x="35.3472%" y="943.50">[unknown]</text></g><g><title>[unknown] (10,941 samples, 8.33%)</title><rect x="35.1658%" y="917" width="8.3328%" height="15" fill="rgb(246,89,16)" fg:x="46173" fg:w="10941"/><text x="35.4158%" y="927.50">[unknown]</text></g><g><title>[unknown] (10,850 samples, 8.26%)</title><rect x="35.2351%" y="901" width="8.2635%" height="15" fill="rgb(216,158,49)" fg:x="46264" fg:w="10850"/><text x="35.4851%" y="911.50">[unknown]</text></g><g><title>[unknown] (10,691 samples, 8.14%)</title><rect x="35.3562%" y="885" width="8.1424%" height="15" fill="rgb(236,107,19)" fg:x="46423" fg:w="10691"/><text x="35.6062%" y="895.50">[unknown]</text></g><g><title>[unknown] (10,070 samples, 7.67%)</title><rect x="35.8291%" y="869" width="7.6694%" height="15" fill="rgb(228,185,30)" fg:x="47044" fg:w="10070"/><text x="36.0791%" y="879.50">[unknown]</text></g><g><title>[unknown] (9,737 samples, 7.42%)</title><rect x="36.0827%" y="853" width="7.4158%" height="15" fill="rgb(246,134,8)" fg:x="47377" fg:w="9737"/><text x="36.3327%" y="863.50">[unknown]</text></g><g><title>[unknown] (7,659 samples, 5.83%)</title><rect x="37.6654%" y="837" width="5.8332%" height="15" fill="rgb(214,143,50)" fg:x="49455" fg:w="7659"/><text x="37.9154%" y="847.50">[unknow..</text></g><g><title>[unknown] (6,530 samples, 4.97%)</title><rect x="38.5252%" y="821" width="4.9733%" height="15" fill="rgb(228,75,8)" fg:x="50584" fg:w="6530"/><text x="38.7752%" y="831.50">[unkno..</text></g><g><title>[unknown] (5,633 samples, 4.29%)</title><rect x="39.2084%" y="805" width="4.2901%" height="15" fill="rgb(207,175,4)" fg:x="51481" fg:w="5633"/><text x="39.4584%" y="815.50">[unkn..</text></g><g><title>[unknown] (5,055 samples, 3.85%)</title><rect x="39.6486%" y="789" width="3.8499%" height="15" fill="rgb(205,108,24)" fg:x="52059" fg:w="5055"/><text x="39.8986%" y="799.50">[unk..</text></g><g><title>[unknown] (4,046 samples, 3.08%)</title><rect x="40.4171%" y="773" width="3.0815%" height="15" fill="rgb(244,120,49)" fg:x="53068" fg:w="4046"/><text x="40.6671%" y="783.50">[un..</text></g><g><title>[unknown] (2,911 samples, 2.22%)</title><rect x="41.2815%" y="757" width="2.2170%" height="15" fill="rgb(223,47,38)" fg:x="54203" fg:w="2911"/><text x="41.5315%" y="767.50">[..</text></g><g><title>[unknown] (2,115 samples, 1.61%)</title><rect x="41.8877%" y="741" width="1.6108%" height="15" fill="rgb(229,179,11)" fg:x="54999" fg:w="2115"/><text x="42.1377%" y="751.50"></text></g><g><title>[unknown] (1,226 samples, 0.93%)</title><rect x="42.5648%" y="725" width="0.9337%" height="15" fill="rgb(231,122,1)" fg:x="55888" fg:w="1226"/><text x="42.8148%" y="735.50"></text></g><g><title>[unknown] (455 samples, 0.35%)</title><rect x="43.1520%" y="709" width="0.3465%" height="15" fill="rgb(245,119,9)" fg:x="56659" fg:w="455"/><text x="43.4020%" y="719.50"></text></g><g><title>[unknown] (408 samples, 0.31%)</title><rect x="43.1878%" y="693" width="0.3107%" height="15" fill="rgb(241,163,25)" fg:x="56706" fg:w="408"/><text x="43.4378%" y="703.50"></text></g><g><title>[unknown] (249 samples, 0.19%)</title><rect x="43.3089%" y="677" width="0.1896%" height="15" fill="rgb(217,214,3)" fg:x="56865" fg:w="249"/><text x="43.5589%" y="687.50"></text></g><g><title>[unknown] (202 samples, 0.15%)</title><rect x="43.3447%" y="661" width="0.1538%" height="15" fill="rgb(240,86,28)" fg:x="56912" fg:w="202"/><text x="43.5947%" y="671.50"></text></g><g><title>[unknown] (100 samples, 0.08%)</title><rect x="43.4224%" y="645" width="0.0762%" height="15" fill="rgb(215,47,9)" fg:x="57014" fg:w="100"/><text x="43.6724%" y="655.50"></text></g><g><title>mio::poll::Poll::poll (11,328 samples, 8.63%)</title><rect x="34.9099%" y="981" width="8.6275%" height="15" fill="rgb(252,25,45)" fg:x="45837" fg:w="11328"/><text x="35.1599%" y="991.50">mio::poll::P..</text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (11,328 samples, 8.63%)</title><rect x="34.9099%" y="965" width="8.6275%" height="15" fill="rgb(251,164,9)" fg:x="45837" fg:w="11328"/><text x="35.1599%" y="975.50">mio::sys::un..</text></g><g><title>epoll_wait (11,229 samples, 8.55%)</title><rect x="34.9853%" y="949" width="8.5521%" height="15" fill="rgb(233,194,0)" fg:x="45936" fg:w="11229"/><text x="35.2353%" y="959.50">epoll_wait</text></g><g><title>__GI___pthread_disable_asynccancel (50 samples, 0.04%)</title><rect x="43.4993%" y="933" width="0.0381%" height="15" fill="rgb(249,111,24)" fg:x="57115" fg:w="50"/><text x="43.7493%" y="943.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness (47 samples, 0.04%)</title><rect x="43.5404%" y="981" width="0.0358%" height="15" fill="rgb(250,223,3)" fg:x="57169" fg:w="47"/><text x="43.7904%" y="991.50"></text></g><g><title>tokio::util::bit::Pack::pack (38 samples, 0.03%)</title><rect x="43.5473%" y="965" width="0.0289%" height="15" fill="rgb(236,178,37)" fg:x="57178" fg:w="38"/><text x="43.7973%" y="975.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (25 samples, 0.02%)</title><rect x="43.6798%" y="965" width="0.0190%" height="15" fill="rgb(241,158,50)" fg:x="57352" fg:w="25"/><text x="43.9298%" y="975.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (23 samples, 0.02%)</title><rect x="43.6813%" y="949" width="0.0175%" height="15" fill="rgb(213,121,41)" fg:x="57354" fg:w="23"/><text x="43.9313%" y="959.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (19 samples, 0.01%)</title><rect x="43.6844%" y="933" width="0.0145%" height="15" fill="rgb(240,92,3)" fg:x="57358" fg:w="19"/><text x="43.9344%" y="943.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (11,595 samples, 8.83%)</title><rect x="34.8786%" y="997" width="8.8309%" height="15" fill="rgb(205,123,3)" fg:x="45796" fg:w="11595"/><text x="35.1286%" y="1007.50">tokio::runti..</text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (175 samples, 0.13%)</title><rect x="43.5762%" y="981" width="0.1333%" height="15" fill="rgb(205,97,47)" fg:x="57216" fg:w="175"/><text x="43.8262%" y="991.50"></text></g><g><title>__GI___clock_gettime (15 samples, 0.01%)</title><rect x="43.7163%" y="885" width="0.0114%" height="15" fill="rgb(247,152,14)" fg:x="57400" fg:w="15"/><text x="43.9663%" y="895.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (18 samples, 0.01%)</title><rect x="43.7148%" y="901" width="0.0137%" height="15" fill="rgb(248,195,53)" fg:x="57398" fg:w="18"/><text x="43.9648%" y="911.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (26 samples, 0.02%)</title><rect x="43.7103%" y="997" width="0.0198%" height="15" fill="rgb(226,201,16)" fg:x="57392" fg:w="26"/><text x="43.9603%" y="1007.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::now (26 samples, 0.02%)</title><rect x="43.7103%" y="981" width="0.0198%" height="15" fill="rgb(205,98,0)" fg:x="57392" fg:w="26"/><text x="43.9603%" y="991.50"></text></g><g><title>tokio::time::clock::Clock::now (20 samples, 0.02%)</title><rect x="43.7148%" y="965" width="0.0152%" height="15" fill="rgb(214,191,48)" fg:x="57398" fg:w="20"/><text x="43.9648%" y="975.50"></text></g><g><title>tokio::time::clock::now (20 samples, 0.02%)</title><rect x="43.7148%" y="949" width="0.0152%" height="15" fill="rgb(237,112,39)" fg:x="57398" fg:w="20"/><text x="43.9648%" y="959.50"></text></g><g><title>std::time::Instant::now (20 samples, 0.02%)</title><rect x="43.7148%" y="933" width="0.0152%" height="15" fill="rgb(247,203,27)" fg:x="57398" fg:w="20"/><text x="43.9648%" y="943.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (20 samples, 0.02%)</title><rect x="43.7148%" y="917" width="0.0152%" height="15" fill="rgb(235,124,28)" fg:x="57398" fg:w="20"/><text x="43.9648%" y="927.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::now (17 samples, 0.01%)</title><rect x="43.7316%" y="997" width="0.0129%" height="15" fill="rgb(208,207,46)" fg:x="57420" fg:w="17"/><text x="43.9816%" y="1007.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (11,686 samples, 8.90%)</title><rect x="34.8497%" y="1013" width="8.9002%" height="15" fill="rgb(234,176,4)" fg:x="45758" fg:w="11686"/><text x="35.0997%" y="1023.50">tokio::runtim..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_driver (11,957 samples, 9.11%)</title><rect x="34.6441%" y="1077" width="9.1066%" height="15" fill="rgb(230,133,28)" fg:x="45488" fg:w="11957"/><text x="34.8941%" y="1087.50">tokio::runtim..</text></g><g><title>tokio::runtime::driver::Driver::park (11,950 samples, 9.10%)</title><rect x="34.6494%" y="1061" width="9.1012%" height="15" fill="rgb(211,137,40)" fg:x="45495" fg:w="11950"/><text x="34.8994%" y="1071.50">tokio::runtim..</text></g><g><title>tokio::runtime::driver::TimeDriver::park (11,950 samples, 9.10%)</title><rect x="34.6494%" y="1045" width="9.1012%" height="15" fill="rgb(254,35,13)" fg:x="45495" fg:w="11950"/><text x="34.8994%" y="1055.50">tokio::runtim..</text></g><g><title>tokio::runtime::time::Driver::park (11,950 samples, 9.10%)</title><rect x="34.6494%" y="1029" width="9.1012%" height="15" fill="rgb(225,49,51)" fg:x="45495" fg:w="11950"/><text x="34.8994%" y="1039.50">tokio::runtim..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (25,502 samples, 19.42%)</title><rect x="24.3288%" y="1109" width="19.4225%" height="15" fill="rgb(251,10,15)" fg:x="31944" fg:w="25502"/><text x="24.5788%" y="1119.50">tokio::runtime::scheduler::mul..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (25,502 samples, 19.42%)</title><rect x="24.3288%" y="1093" width="19.4225%" height="15" fill="rgb(228,207,15)" fg:x="31944" fg:w="25502"/><text x="24.5788%" y="1103.50">tokio::runtime::scheduler::mul..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (25,547 samples, 19.46%)</title><rect x="24.2953%" y="1125" width="19.4568%" height="15" fill="rgb(241,99,19)" fg:x="31900" fg:w="25547"/><text x="24.5453%" y="1135.50">tokio::runtime::scheduler::mul..</text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (14 samples, 0.01%)</title><rect x="43.7925%" y="1061" width="0.0107%" height="15" fill="rgb(207,104,49)" fg:x="57500" fg:w="14"/><text x="44.0425%" y="1071.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (14 samples, 0.01%)</title><rect x="43.7925%" y="1045" width="0.0107%" height="15" fill="rgb(234,99,18)" fg:x="57500" fg:w="14"/><text x="44.0425%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (45 samples, 0.03%)</title><rect x="43.8032%" y="1061" width="0.0343%" height="15" fill="rgb(213,191,49)" fg:x="57514" fg:w="45"/><text x="44.0532%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (45 samples, 0.03%)</title><rect x="43.8032%" y="1045" width="0.0343%" height="15" fill="rgb(210,226,19)" fg:x="57514" fg:w="45"/><text x="44.0532%" y="1055.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (84 samples, 0.06%)</title><rect x="43.7803%" y="1109" width="0.0640%" height="15" fill="rgb(229,97,18)" fg:x="57484" fg:w="84"/><text x="44.0303%" y="1119.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (81 samples, 0.06%)</title><rect x="43.7826%" y="1093" width="0.0617%" height="15" fill="rgb(211,167,15)" fg:x="57487" fg:w="81"/><text x="44.0326%" y="1103.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (73 samples, 0.06%)</title><rect x="43.7887%" y="1077" width="0.0556%" height="15" fill="rgb(210,169,34)" fg:x="57495" fg:w="73"/><text x="44.0387%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::maintenance (122 samples, 0.09%)</title><rect x="43.7521%" y="1125" width="0.0929%" height="15" fill="rgb(241,121,31)" fg:x="57447" fg:w="122"/><text x="44.0021%" y="1135.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::{{closure}} (90 samples, 0.07%)</title><rect x="43.9220%" y="1045" width="0.0685%" height="15" fill="rgb(232,40,11)" fg:x="57670" fg:w="90"/><text x="44.1720%" y="1055.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (90 samples, 0.07%)</title><rect x="43.9220%" y="1029" width="0.0685%" height="15" fill="rgb(205,86,26)" fg:x="57670" fg:w="90"/><text x="44.1720%" y="1039.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (241 samples, 0.18%)</title><rect x="43.8641%" y="1093" width="0.1835%" height="15" fill="rgb(231,126,28)" fg:x="57594" fg:w="241"/><text x="44.1141%" y="1103.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (241 samples, 0.18%)</title><rect x="43.8641%" y="1077" width="0.1835%" height="15" fill="rgb(219,221,18)" fg:x="57594" fg:w="241"/><text x="44.1141%" y="1087.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (241 samples, 0.18%)</title><rect x="43.8641%" y="1061" width="0.1835%" height="15" fill="rgb(211,40,0)" fg:x="57594" fg:w="241"/><text x="44.1141%" y="1071.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (75 samples, 0.06%)</title><rect x="43.9905%" y="1045" width="0.0571%" height="15" fill="rgb(239,85,43)" fg:x="57760" fg:w="75"/><text x="44.2405%" y="1055.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (75 samples, 0.06%)</title><rect x="43.9905%" y="1029" width="0.0571%" height="15" fill="rgb(231,55,21)" fg:x="57760" fg:w="75"/><text x="44.2405%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (20 samples, 0.02%)</title><rect x="44.0553%" y="1045" width="0.0152%" height="15" fill="rgb(225,184,43)" fg:x="57845" fg:w="20"/><text x="44.3053%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (20 samples, 0.02%)</title><rect x="44.0553%" y="1029" width="0.0152%" height="15" fill="rgb(251,158,41)" fg:x="57845" fg:w="20"/><text x="44.3053%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::is_parked (283 samples, 0.22%)</title><rect x="43.8565%" y="1109" width="0.2155%" height="15" fill="rgb(234,159,37)" fg:x="57584" fg:w="283"/><text x="44.1065%" y="1119.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (32 samples, 0.02%)</title><rect x="44.0476%" y="1093" width="0.0244%" height="15" fill="rgb(216,204,22)" fg:x="57835" fg:w="32"/><text x="44.2976%" y="1103.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (32 samples, 0.02%)</title><rect x="44.0476%" y="1077" width="0.0244%" height="15" fill="rgb(214,17,3)" fg:x="57835" fg:w="32"/><text x="44.2976%" y="1087.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (24 samples, 0.02%)</title><rect x="44.0537%" y="1061" width="0.0183%" height="15" fill="rgb(212,111,17)" fg:x="57843" fg:w="24"/><text x="44.3037%" y="1071.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (33 samples, 0.03%)</title><rect x="44.1101%" y="1093" width="0.0251%" height="15" fill="rgb(221,157,24)" fg:x="57917" fg:w="33"/><text x="44.3601%" y="1103.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (33 samples, 0.03%)</title><rect x="44.1101%" y="1077" width="0.0251%" height="15" fill="rgb(252,16,13)" fg:x="57917" fg:w="33"/><text x="44.3601%" y="1087.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (33 samples, 0.03%)</title><rect x="44.1101%" y="1061" width="0.0251%" height="15" fill="rgb(221,62,2)" fg:x="57917" fg:w="33"/><text x="44.3601%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::unpark_worker_by_id (98 samples, 0.07%)</title><rect x="44.0720%" y="1109" width="0.0746%" height="15" fill="rgb(247,87,22)" fg:x="57867" fg:w="98"/><text x="44.3220%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_parked (401 samples, 0.31%)</title><rect x="43.8451%" y="1125" width="0.3054%" height="15" fill="rgb(215,73,9)" fg:x="57569" fg:w="401"/><text x="44.0951%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (14 samples, 0.01%)</title><rect x="44.1710%" y="1093" width="0.0107%" height="15" fill="rgb(207,175,33)" fg:x="57997" fg:w="14"/><text x="44.4210%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (15 samples, 0.01%)</title><rect x="44.1817%" y="1093" width="0.0114%" height="15" fill="rgb(243,129,54)" fg:x="58011" fg:w="15"/><text x="44.4317%" y="1103.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="44.1817%" y="1077" width="0.0114%" height="15" fill="rgb(227,119,45)" fg:x="58011" fg:w="15"/><text x="44.4317%" y="1087.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (14 samples, 0.01%)</title><rect x="44.1825%" y="1061" width="0.0107%" height="15" fill="rgb(205,109,36)" fg:x="58012" fg:w="14"/><text x="44.4325%" y="1071.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (15 samples, 0.01%)</title><rect x="44.1969%" y="1045" width="0.0114%" height="15" fill="rgb(205,6,39)" fg:x="58031" fg:w="15"/><text x="44.4469%" y="1055.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (15 samples, 0.01%)</title><rect x="44.1969%" y="1029" width="0.0114%" height="15" fill="rgb(221,32,16)" fg:x="58031" fg:w="15"/><text x="44.4469%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (22 samples, 0.02%)</title><rect x="44.2083%" y="1045" width="0.0168%" height="15" fill="rgb(228,144,50)" fg:x="58046" fg:w="22"/><text x="44.4583%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (22 samples, 0.02%)</title><rect x="44.2083%" y="1029" width="0.0168%" height="15" fill="rgb(229,201,53)" fg:x="58046" fg:w="22"/><text x="44.4583%" y="1039.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (63 samples, 0.05%)</title><rect x="44.1931%" y="1093" width="0.0480%" height="15" fill="rgb(249,153,27)" fg:x="58026" fg:w="63"/><text x="44.4431%" y="1103.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (62 samples, 0.05%)</title><rect x="44.1939%" y="1077" width="0.0472%" height="15" fill="rgb(227,106,25)" fg:x="58027" fg:w="62"/><text x="44.4439%" y="1087.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (59 samples, 0.04%)</title><rect x="44.1962%" y="1061" width="0.0449%" height="15" fill="rgb(230,65,29)" fg:x="58030" fg:w="59"/><text x="44.4462%" y="1071.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (21 samples, 0.02%)</title><rect x="44.2251%" y="1045" width="0.0160%" height="15" fill="rgb(221,57,46)" fg:x="58068" fg:w="21"/><text x="44.4751%" y="1055.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (106 samples, 0.08%)</title><rect x="44.1710%" y="1109" width="0.0807%" height="15" fill="rgb(229,161,17)" fg:x="57997" fg:w="106"/><text x="44.4210%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::dec_num_unparked (14 samples, 0.01%)</title><rect x="44.2411%" y="1093" width="0.0107%" height="15" fill="rgb(222,213,11)" fg:x="58089" fg:w="14"/><text x="44.4911%" y="1103.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="44.2639%" y="1093" width="0.0160%" height="15" fill="rgb(235,35,13)" fg:x="58119" fg:w="21"/><text x="44.5139%" y="1103.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (21 samples, 0.02%)</title><rect x="44.2639%" y="1077" width="0.0160%" height="15" fill="rgb(233,158,34)" fg:x="58119" fg:w="21"/><text x="44.5139%" y="1087.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (17 samples, 0.01%)</title><rect x="44.2799%" y="1077" width="0.0129%" height="15" fill="rgb(215,151,48)" fg:x="58140" fg:w="17"/><text x="44.5299%" y="1087.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (17 samples, 0.01%)</title><rect x="44.2799%" y="1061" width="0.0129%" height="15" fill="rgb(229,84,14)" fg:x="58140" fg:w="17"/><text x="44.5299%" y="1071.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (17 samples, 0.01%)</title><rect x="44.2799%" y="1045" width="0.0129%" height="15" fill="rgb(229,68,14)" fg:x="58140" fg:w="17"/><text x="44.5299%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (17 samples, 0.01%)</title><rect x="44.3066%" y="1045" width="0.0129%" height="15" fill="rgb(243,106,26)" fg:x="58175" fg:w="17"/><text x="44.5566%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_load (17 samples, 0.01%)</title><rect x="44.3066%" y="1029" width="0.0129%" height="15" fill="rgb(206,45,38)" fg:x="58175" fg:w="17"/><text x="44.5566%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::is_empty (68 samples, 0.05%)</title><rect x="44.2799%" y="1093" width="0.0518%" height="15" fill="rgb(226,6,15)" fg:x="58140" fg:w="68"/><text x="44.5299%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::is_empty (51 samples, 0.04%)</title><rect x="44.2929%" y="1077" width="0.0388%" height="15" fill="rgb(232,22,54)" fg:x="58157" fg:w="51"/><text x="44.5429%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::len (33 samples, 0.03%)</title><rect x="44.3066%" y="1061" width="0.0251%" height="15" fill="rgb(229,222,32)" fg:x="58175" fg:w="33"/><text x="44.5566%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (16 samples, 0.01%)</title><rect x="44.3195%" y="1045" width="0.0122%" height="15" fill="rgb(228,62,29)" fg:x="58192" fg:w="16"/><text x="44.5695%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_load (16 samples, 0.01%)</title><rect x="44.3195%" y="1029" width="0.0122%" height="15" fill="rgb(251,103,34)" fg:x="58192" fg:w="16"/><text x="44.5695%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_if_work_pending (106 samples, 0.08%)</title><rect x="44.2518%" y="1109" width="0.0807%" height="15" fill="rgb(233,12,30)" fg:x="58103" fg:w="106"/><text x="44.5018%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (26,672 samples, 20.31%)</title><rect x="24.0440%" y="1141" width="20.3136%" height="15" fill="rgb(238,52,0)" fg:x="31570" fg:w="26672"/><text x="24.2940%" y="1151.50">tokio::runtime::scheduler::multi..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_parked (272 samples, 0.21%)</title><rect x="44.1505%" y="1125" width="0.2072%" height="15" fill="rgb(223,98,5)" fg:x="57970" fg:w="272"/><text x="44.4005%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::has_tasks (33 samples, 0.03%)</title><rect x="44.3325%" y="1109" width="0.0251%" height="15" fill="rgb(228,75,37)" fg:x="58209" fg:w="33"/><text x="44.5825%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::has_tasks (24 samples, 0.02%)</title><rect x="44.3393%" y="1093" width="0.0183%" height="15" fill="rgb(205,115,49)" fg:x="58218" fg:w="24"/><text x="44.5893%" y="1103.50"></text></g><g><title>tokio::runtime::context::budget (18 samples, 0.01%)</title><rect x="44.3690%" y="1093" width="0.0137%" height="15" fill="rgb(250,154,43)" fg:x="58257" fg:w="18"/><text x="44.6190%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (18 samples, 0.01%)</title><rect x="44.3690%" y="1077" width="0.0137%" height="15" fill="rgb(226,43,29)" fg:x="58257" fg:w="18"/><text x="44.6190%" y="1087.50"></text></g><g><title>syscall (61 samples, 0.05%)</title><rect x="44.6950%" y="1045" width="0.0465%" height="15" fill="rgb(249,228,39)" fg:x="58685" fg:w="61"/><text x="44.9450%" y="1055.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (172 samples, 0.13%)</title><rect x="44.7841%" y="869" width="0.1310%" height="15" fill="rgb(216,79,43)" fg:x="58802" fg:w="172"/><text x="45.0341%" y="879.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (224 samples, 0.17%)</title><rect x="44.9159%" y="837" width="0.1706%" height="15" fill="rgb(228,95,12)" fg:x="58975" fg:w="224"/><text x="45.1659%" y="847.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (228 samples, 0.17%)</title><rect x="44.9151%" y="869" width="0.1736%" height="15" fill="rgb(249,221,15)" fg:x="58974" fg:w="228"/><text x="45.1651%" y="879.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage::{{closure}} (228 samples, 0.17%)</title><rect x="44.9151%" y="853" width="0.1736%" height="15" fill="rgb(233,34,13)" fg:x="58974" fg:w="228"/><text x="45.1651%" y="863.50"></text></g><g><title>std::panic::catch_unwind (415 samples, 0.32%)</title><rect x="44.7788%" y="997" width="0.3161%" height="15" fill="rgb(214,103,39)" fg:x="58795" fg:w="415"/><text x="45.0288%" y="1007.50"></text></g><g><title>std::panicking::try (415 samples, 0.32%)</title><rect x="44.7788%" y="981" width="0.3161%" height="15" fill="rgb(251,126,39)" fg:x="58795" fg:w="415"/><text x="45.0288%" y="991.50"></text></g><g><title>std::panicking::try::do_call (415 samples, 0.32%)</title><rect x="44.7788%" y="965" width="0.3161%" height="15" fill="rgb(214,216,36)" fg:x="58795" fg:w="415"/><text x="45.0288%" y="975.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (415 samples, 0.32%)</title><rect x="44.7788%" y="949" width="0.3161%" height="15" fill="rgb(220,221,8)" fg:x="58795" fg:w="415"/><text x="45.0288%" y="959.50"></text></g><g><title>core::ops::function::FnOnce::call_once (415 samples, 0.32%)</title><rect x="44.7788%" y="933" width="0.3161%" height="15" fill="rgb(240,216,3)" fg:x="58795" fg:w="415"/><text x="45.0288%" y="943.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete::{{closure}} (415 samples, 0.32%)</title><rect x="44.7788%" y="917" width="0.3161%" height="15" fill="rgb(232,218,17)" fg:x="58795" fg:w="415"/><text x="45.0288%" y="927.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::drop_future_or_output (415 samples, 0.32%)</title><rect x="44.7788%" y="901" width="0.3161%" height="15" fill="rgb(229,163,45)" fg:x="58795" fg:w="415"/><text x="45.0288%" y="911.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (410 samples, 0.31%)</title><rect x="44.7826%" y="885" width="0.3123%" height="15" fill="rgb(231,110,42)" fg:x="58800" fg:w="410"/><text x="45.0326%" y="895.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (27 samples, 0.02%)</title><rect x="45.1428%" y="933" width="0.0206%" height="15" fill="rgb(208,170,48)" fg:x="59273" fg:w="27"/><text x="45.3928%" y="943.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (43 samples, 0.03%)</title><rect x="45.1718%" y="869" width="0.0327%" height="15" fill="rgb(239,116,25)" fg:x="59311" fg:w="43"/><text x="45.4218%" y="879.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (43 samples, 0.03%)</title><rect x="45.1718%" y="853" width="0.0327%" height="15" fill="rgb(219,200,50)" fg:x="59311" fg:w="43"/><text x="45.4218%" y="863.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (570 samples, 0.43%)</title><rect x="44.7788%" y="1013" width="0.4341%" height="15" fill="rgb(245,200,0)" fg:x="58795" fg:w="570"/><text x="45.0288%" y="1023.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::release (155 samples, 0.12%)</title><rect x="45.0949%" y="997" width="0.1180%" height="15" fill="rgb(245,119,33)" fg:x="59210" fg:w="155"/><text x="45.3449%" y="1007.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::release (152 samples, 0.12%)</title><rect x="45.0971%" y="981" width="0.1158%" height="15" fill="rgb(231,125,12)" fg:x="59213" fg:w="152"/><text x="45.3471%" y="991.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::remove (152 samples, 0.12%)</title><rect x="45.0971%" y="965" width="0.1158%" height="15" fill="rgb(216,96,41)" fg:x="59213" fg:w="152"/><text x="45.3471%" y="975.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (103 samples, 0.08%)</title><rect x="45.1345%" y="949" width="0.0784%" height="15" fill="rgb(248,43,45)" fg:x="59262" fg:w="103"/><text x="45.3845%" y="959.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::shard_inner (65 samples, 0.05%)</title><rect x="45.1634%" y="933" width="0.0495%" height="15" fill="rgb(217,222,7)" fg:x="59300" fg:w="65"/><text x="45.4134%" y="943.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (58 samples, 0.04%)</title><rect x="45.1687%" y="917" width="0.0442%" height="15" fill="rgb(233,28,6)" fg:x="59307" fg:w="58"/><text x="45.4187%" y="927.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (58 samples, 0.04%)</title><rect x="45.1687%" y="901" width="0.0442%" height="15" fill="rgb(231,218,15)" fg:x="59307" fg:w="58"/><text x="45.4187%" y="911.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (54 samples, 0.04%)</title><rect x="45.1718%" y="885" width="0.0411%" height="15" fill="rgb(226,171,48)" fg:x="59311" fg:w="54"/><text x="45.4218%" y="895.50"></text></g><g><title>std::io::stdio::stderr::INSTANCE (17 samples, 0.01%)</title><rect x="45.2297%" y="853" width="0.0129%" height="15" fill="rgb(235,201,9)" fg:x="59387" fg:w="17"/><text x="45.4797%" y="863.50"></text></g><g><title>tokio::runtime::coop::budget (26 samples, 0.02%)</title><rect x="45.2495%" y="837" width="0.0198%" height="15" fill="rgb(217,80,15)" fg:x="59413" fg:w="26"/><text x="45.4995%" y="847.50"></text></g><g><title>tokio::runtime::coop::with_budget (26 samples, 0.02%)</title><rect x="45.2495%" y="821" width="0.0198%" height="15" fill="rgb(219,152,8)" fg:x="59413" fg:w="26"/><text x="45.4995%" y="831.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (17 samples, 0.01%)</title><rect x="45.2563%" y="805" width="0.0129%" height="15" fill="rgb(243,107,38)" fg:x="59422" fg:w="17"/><text x="45.5063%" y="815.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::start_poll (35 samples, 0.03%)</title><rect x="45.2693%" y="837" width="0.0267%" height="15" fill="rgb(231,17,5)" fg:x="59439" fg:w="35"/><text x="45.5193%" y="847.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (70 samples, 0.05%)</title><rect x="45.2434%" y="853" width="0.0533%" height="15" fill="rgb(209,25,54)" fg:x="59405" fg:w="70"/><text x="45.4934%" y="863.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (42 samples, 0.03%)</title><rect x="46.1223%" y="821" width="0.0320%" height="15" fill="rgb(219,0,2)" fg:x="60559" fg:w="42"/><text x="46.3723%" y="831.50"></text></g><g><title>core::cmp::Ord::min (22 samples, 0.02%)</title><rect x="46.4231%" y="757" width="0.0168%" height="15" fill="rgb(246,9,5)" fg:x="60954" fg:w="22"/><text x="46.6731%" y="767.50"></text></g><g><title>core::cmp::min_by (22 samples, 0.02%)</title><rect x="46.4231%" y="741" width="0.0168%" height="15" fill="rgb(226,159,4)" fg:x="60954" fg:w="22"/><text x="46.6731%" y="751.50"></text></g><g><title>std::io::cursor::Cursor&lt;T&gt;::remaining_slice (27 samples, 0.02%)</title><rect x="46.4231%" y="773" width="0.0206%" height="15" fill="rgb(219,175,34)" fg:x="60954" fg:w="27"/><text x="46.6731%" y="783.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (30 samples, 0.02%)</title><rect x="46.4231%" y="789" width="0.0228%" height="15" fill="rgb(236,10,46)" fg:x="60954" fg:w="30"/><text x="46.6731%" y="799.50"></text></g><g><title>std::io::cursor::Cursor&lt;T&gt;::remaining_slice (24 samples, 0.02%)</title><rect x="46.4490%" y="757" width="0.0183%" height="15" fill="rgb(240,211,16)" fg:x="60988" fg:w="24"/><text x="46.6990%" y="767.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (19 samples, 0.01%)</title><rect x="46.4528%" y="741" width="0.0145%" height="15" fill="rgb(205,3,43)" fg:x="60993" fg:w="19"/><text x="46.7028%" y="751.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (19 samples, 0.01%)</title><rect x="46.4528%" y="725" width="0.0145%" height="15" fill="rgb(245,7,22)" fg:x="60993" fg:w="19"/><text x="46.7028%" y="735.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (19 samples, 0.01%)</title><rect x="46.4528%" y="709" width="0.0145%" height="15" fill="rgb(239,132,32)" fg:x="60993" fg:w="19"/><text x="46.7028%" y="719.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (19 samples, 0.01%)</title><rect x="46.4528%" y="693" width="0.0145%" height="15" fill="rgb(228,202,34)" fg:x="60993" fg:w="19"/><text x="46.7028%" y="703.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (44 samples, 0.03%)</title><rect x="46.4490%" y="773" width="0.0335%" height="15" fill="rgb(254,200,22)" fg:x="60988" fg:w="44"/><text x="46.6990%" y="783.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (20 samples, 0.02%)</title><rect x="46.4673%" y="757" width="0.0152%" height="15" fill="rgb(219,10,39)" fg:x="61012" fg:w="20"/><text x="46.7173%" y="767.50"></text></g><g><title>byteorder::io::ReadBytesExt::read_i32 (46 samples, 0.04%)</title><rect x="46.4490%" y="789" width="0.0350%" height="15" fill="rgb(226,210,39)" fg:x="60988" fg:w="46"/><text x="46.6990%" y="799.50"></text></g><g><title>core::cmp::Ord::min (14 samples, 0.01%)</title><rect x="46.4840%" y="741" width="0.0107%" height="15" fill="rgb(208,219,16)" fg:x="61034" fg:w="14"/><text x="46.7340%" y="751.50"></text></g><g><title>core::cmp::min_by (14 samples, 0.01%)</title><rect x="46.4840%" y="725" width="0.0107%" height="15" fill="rgb(216,158,51)" fg:x="61034" fg:w="14"/><text x="46.7340%" y="735.50"></text></g><g><title>std::io::cursor::Cursor&lt;T&gt;::remaining_slice (19 samples, 0.01%)</title><rect x="46.4840%" y="757" width="0.0145%" height="15" fill="rgb(233,14,44)" fg:x="61034" fg:w="19"/><text x="46.7340%" y="767.50"></text></g><g><title>byteorder::io::ReadBytesExt::read_i64 (24 samples, 0.02%)</title><rect x="46.4840%" y="789" width="0.0183%" height="15" fill="rgb(237,97,39)" fg:x="61034" fg:w="24"/><text x="46.7340%" y="799.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (24 samples, 0.02%)</title><rect x="46.4840%" y="773" width="0.0183%" height="15" fill="rgb(218,198,43)" fg:x="61034" fg:w="24"/><text x="46.7340%" y="783.50"></text></g><g><title>aquatic_udp_protocol::request::Request::from_bytes (349 samples, 0.27%)</title><rect x="46.2540%" y="805" width="0.2658%" height="15" fill="rgb(231,104,20)" fg:x="60732" fg:w="349"/><text x="46.5040%" y="815.50"></text></g><g><title>__GI___lll_lock_wake_private (148 samples, 0.11%)</title><rect x="46.5290%" y="661" width="0.1127%" height="15" fill="rgb(254,36,13)" fg:x="61093" fg:w="148"/><text x="46.7790%" y="671.50"></text></g><g><title>[unknown] (139 samples, 0.11%)</title><rect x="46.5358%" y="645" width="0.1059%" height="15" fill="rgb(248,14,50)" fg:x="61102" fg:w="139"/><text x="46.7858%" y="655.50"></text></g><g><title>[unknown] (137 samples, 0.10%)</title><rect x="46.5373%" y="629" width="0.1043%" height="15" fill="rgb(217,107,29)" fg:x="61104" fg:w="137"/><text x="46.7873%" y="639.50"></text></g><g><title>[unknown] (123 samples, 0.09%)</title><rect x="46.5480%" y="613" width="0.0937%" height="15" fill="rgb(251,169,33)" fg:x="61118" fg:w="123"/><text x="46.7980%" y="623.50"></text></g><g><title>[unknown] (111 samples, 0.08%)</title><rect x="46.5571%" y="597" width="0.0845%" height="15" fill="rgb(217,108,32)" fg:x="61130" fg:w="111"/><text x="46.8071%" y="607.50"></text></g><g><title>[unknown] (98 samples, 0.07%)</title><rect x="46.5670%" y="581" width="0.0746%" height="15" fill="rgb(219,66,42)" fg:x="61143" fg:w="98"/><text x="46.8170%" y="591.50"></text></g><g><title>[unknown] (42 samples, 0.03%)</title><rect x="46.6097%" y="565" width="0.0320%" height="15" fill="rgb(206,180,7)" fg:x="61199" fg:w="42"/><text x="46.8597%" y="575.50"></text></g><g><title>[unknown] (30 samples, 0.02%)</title><rect x="46.6188%" y="549" width="0.0228%" height="15" fill="rgb(208,226,31)" fg:x="61211" fg:w="30"/><text x="46.8688%" y="559.50"></text></g><g><title>__GI___lll_lock_wait_private (553 samples, 0.42%)</title><rect x="46.7483%" y="645" width="0.4212%" height="15" fill="rgb(218,26,49)" fg:x="61381" fg:w="553"/><text x="46.9983%" y="655.50"></text></g><g><title>futex_wait (541 samples, 0.41%)</title><rect x="46.7575%" y="629" width="0.4120%" height="15" fill="rgb(233,197,48)" fg:x="61393" fg:w="541"/><text x="47.0075%" y="639.50"></text></g><g><title>[unknown] (536 samples, 0.41%)</title><rect x="46.7613%" y="613" width="0.4082%" height="15" fill="rgb(252,181,51)" fg:x="61398" fg:w="536"/><text x="47.0113%" y="623.50"></text></g><g><title>[unknown] (531 samples, 0.40%)</title><rect x="46.7651%" y="597" width="0.4044%" height="15" fill="rgb(253,90,19)" fg:x="61403" fg:w="531"/><text x="47.0151%" y="607.50"></text></g><g><title>[unknown] (524 samples, 0.40%)</title><rect x="46.7704%" y="581" width="0.3991%" height="15" fill="rgb(215,171,30)" fg:x="61410" fg:w="524"/><text x="47.0204%" y="591.50"></text></g><g><title>[unknown] (515 samples, 0.39%)</title><rect x="46.7773%" y="565" width="0.3922%" height="15" fill="rgb(214,222,9)" fg:x="61419" fg:w="515"/><text x="47.0273%" y="575.50"></text></g><g><title>[unknown] (498 samples, 0.38%)</title><rect x="46.7902%" y="549" width="0.3793%" height="15" fill="rgb(223,3,22)" fg:x="61436" fg:w="498"/><text x="47.0402%" y="559.50"></text></g><g><title>[unknown] (470 samples, 0.36%)</title><rect x="46.8115%" y="533" width="0.3580%" height="15" fill="rgb(225,196,46)" fg:x="61464" fg:w="470"/><text x="47.0615%" y="543.50"></text></g><g><title>[unknown] (435 samples, 0.33%)</title><rect x="46.8382%" y="517" width="0.3313%" height="15" fill="rgb(209,110,37)" fg:x="61499" fg:w="435"/><text x="47.0882%" y="527.50"></text></g><g><title>[unknown] (350 samples, 0.27%)</title><rect x="46.9029%" y="501" width="0.2666%" height="15" fill="rgb(249,89,12)" fg:x="61584" fg:w="350"/><text x="47.1529%" y="511.50"></text></g><g><title>[unknown] (327 samples, 0.25%)</title><rect x="46.9204%" y="485" width="0.2490%" height="15" fill="rgb(226,27,33)" fg:x="61607" fg:w="327"/><text x="47.1704%" y="495.50"></text></g><g><title>[unknown] (290 samples, 0.22%)</title><rect x="46.9486%" y="469" width="0.2209%" height="15" fill="rgb(213,82,22)" fg:x="61644" fg:w="290"/><text x="47.1986%" y="479.50"></text></g><g><title>[unknown] (222 samples, 0.17%)</title><rect x="47.0004%" y="453" width="0.1691%" height="15" fill="rgb(248,140,0)" fg:x="61712" fg:w="222"/><text x="47.2504%" y="463.50"></text></g><g><title>[unknown] (160 samples, 0.12%)</title><rect x="47.0476%" y="437" width="0.1219%" height="15" fill="rgb(228,106,3)" fg:x="61774" fg:w="160"/><text x="47.2976%" y="447.50"></text></g><g><title>[unknown] (104 samples, 0.08%)</title><rect x="47.0903%" y="421" width="0.0792%" height="15" fill="rgb(209,23,37)" fg:x="61830" fg:w="104"/><text x="47.3403%" y="431.50"></text></g><g><title>[unknown] (33 samples, 0.03%)</title><rect x="47.1443%" y="405" width="0.0251%" height="15" fill="rgb(241,93,50)" fg:x="61901" fg:w="33"/><text x="47.3943%" y="415.50"></text></g><g><title>[unknown] (25 samples, 0.02%)</title><rect x="47.1504%" y="389" width="0.0190%" height="15" fill="rgb(253,46,43)" fg:x="61909" fg:w="25"/><text x="47.4004%" y="399.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="47.1558%" y="373" width="0.0137%" height="15" fill="rgb(226,206,43)" fg:x="61916" fg:w="18"/><text x="47.4058%" y="383.50"></text></g><g><title>[unknown] (14 samples, 0.01%)</title><rect x="47.1588%" y="357" width="0.0107%" height="15" fill="rgb(217,54,7)" fg:x="61920" fg:w="14"/><text x="47.4088%" y="367.50"></text></g><g><title>_int_free (703 samples, 0.54%)</title><rect x="46.6417%" y="661" width="0.5354%" height="15" fill="rgb(223,5,52)" fg:x="61241" fg:w="703"/><text x="46.8917%" y="671.50"></text></g><g><title>__GI___libc_free (866 samples, 0.66%)</title><rect x="46.5206%" y="677" width="0.6596%" height="15" fill="rgb(206,52,46)" fg:x="61082" fg:w="866"/><text x="46.7706%" y="687.50"></text></g><g><title>tracing::span::Span::record_all (30 samples, 0.02%)</title><rect x="47.1817%" y="677" width="0.0228%" height="15" fill="rgb(253,136,11)" fg:x="61950" fg:w="30"/><text x="47.4317%" y="687.50"></text></g><g><title>unlink_chunk (26 samples, 0.02%)</title><rect x="47.1847%" y="661" width="0.0198%" height="15" fill="rgb(208,106,33)" fg:x="61954" fg:w="26"/><text x="47.4347%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;torrust_tracker::servers::udp::UdpRequest&gt; (899 samples, 0.68%)</title><rect x="46.5206%" y="805" width="0.6847%" height="15" fill="rgb(206,54,4)" fg:x="61082" fg:w="899"/><text x="46.7706%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (899 samples, 0.68%)</title><rect x="46.5206%" y="789" width="0.6847%" height="15" fill="rgb(213,3,15)" fg:x="61082" fg:w="899"/><text x="46.7706%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (899 samples, 0.68%)</title><rect x="46.5206%" y="773" width="0.6847%" height="15" fill="rgb(252,211,39)" fg:x="61082" fg:w="899"/><text x="46.7706%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (899 samples, 0.68%)</title><rect x="46.5206%" y="757" width="0.6847%" height="15" fill="rgb(223,6,36)" fg:x="61082" fg:w="899"/><text x="46.7706%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (899 samples, 0.68%)</title><rect x="46.5206%" y="741" width="0.6847%" height="15" fill="rgb(252,169,45)" fg:x="61082" fg:w="899"/><text x="46.7706%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (899 samples, 0.68%)</title><rect x="46.5206%" y="725" width="0.6847%" height="15" fill="rgb(212,48,26)" fg:x="61082" fg:w="899"/><text x="46.7706%" y="735.50"></text></g><g><title>__rdl_dealloc (899 samples, 0.68%)</title><rect x="46.5206%" y="709" width="0.6847%" height="15" fill="rgb(251,102,48)" fg:x="61082" fg:w="899"/><text x="46.7706%" y="719.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (899 samples, 0.68%)</title><rect x="46.5206%" y="693" width="0.6847%" height="15" fill="rgb(243,208,16)" fg:x="61082" fg:w="899"/><text x="46.7706%" y="703.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (91 samples, 0.07%)</title><rect x="47.2060%" y="805" width="0.0693%" height="15" fill="rgb(219,96,24)" fg:x="61982" fg:w="91"/><text x="47.4560%" y="815.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (28 samples, 0.02%)</title><rect x="47.2753%" y="805" width="0.0213%" height="15" fill="rgb(219,33,29)" fg:x="62073" fg:w="28"/><text x="47.5253%" y="815.50"></text></g><g><title>[[vdso]] (28 samples, 0.02%)</title><rect x="47.3111%" y="725" width="0.0213%" height="15" fill="rgb(223,176,5)" fg:x="62120" fg:w="28"/><text x="47.5611%" y="735.50"></text></g><g><title>__GI___clock_gettime (47 samples, 0.04%)</title><rect x="47.3104%" y="741" width="0.0358%" height="15" fill="rgb(228,140,14)" fg:x="62119" fg:w="47"/><text x="47.5604%" y="751.50"></text></g><g><title>std::time::Instant::elapsed (67 samples, 0.05%)</title><rect x="47.2967%" y="805" width="0.0510%" height="15" fill="rgb(217,179,31)" fg:x="62101" fg:w="67"/><text x="47.5467%" y="815.50"></text></g><g><title>std::time::Instant::now (54 samples, 0.04%)</title><rect x="47.3066%" y="789" width="0.0411%" height="15" fill="rgb(230,9,30)" fg:x="62114" fg:w="54"/><text x="47.5566%" y="799.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (54 samples, 0.04%)</title><rect x="47.3066%" y="773" width="0.0411%" height="15" fill="rgb(230,136,20)" fg:x="62114" fg:w="54"/><text x="47.5566%" y="783.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (53 samples, 0.04%)</title><rect x="47.3073%" y="757" width="0.0404%" height="15" fill="rgb(215,210,22)" fg:x="62115" fg:w="53"/><text x="47.5573%" y="767.50"></text></g><g><title>std::sys::pal::unix::cvt (23 samples, 0.02%)</title><rect x="47.3591%" y="725" width="0.0175%" height="15" fill="rgb(218,43,5)" fg:x="62183" fg:w="23"/><text x="47.6091%" y="735.50"></text></g><g><title>__GI_getsockname (3,792 samples, 2.89%)</title><rect x="47.3766%" y="709" width="2.8880%" height="15" fill="rgb(216,11,5)" fg:x="62206" fg:w="3792"/><text x="47.6266%" y="719.50">__..</text></g><g><title>[unknown] (3,714 samples, 2.83%)</title><rect x="47.4360%" y="693" width="2.8286%" height="15" fill="rgb(209,82,29)" fg:x="62284" fg:w="3714"/><text x="47.6860%" y="703.50">[u..</text></g><g><title>[unknown] (3,661 samples, 2.79%)</title><rect x="47.4764%" y="677" width="2.7882%" height="15" fill="rgb(244,115,12)" fg:x="62337" fg:w="3661"/><text x="47.7264%" y="687.50">[u..</text></g><g><title>[unknown] (3,557 samples, 2.71%)</title><rect x="47.5556%" y="661" width="2.7090%" height="15" fill="rgb(222,82,18)" fg:x="62441" fg:w="3557"/><text x="47.8056%" y="671.50">[u..</text></g><g><title>[unknown] (3,416 samples, 2.60%)</title><rect x="47.6630%" y="645" width="2.6017%" height="15" fill="rgb(249,227,8)" fg:x="62582" fg:w="3416"/><text x="47.9130%" y="655.50">[u..</text></g><g><title>[unknown] (2,695 samples, 2.05%)</title><rect x="48.2121%" y="629" width="2.0525%" height="15" fill="rgb(253,141,45)" fg:x="63303" fg:w="2695"/><text x="48.4621%" y="639.50">[..</text></g><g><title>[unknown] (2,063 samples, 1.57%)</title><rect x="48.6935%" y="613" width="1.5712%" height="15" fill="rgb(234,184,4)" fg:x="63935" fg:w="2063"/><text x="48.9435%" y="623.50"></text></g><g><title>[unknown] (891 samples, 0.68%)</title><rect x="49.5861%" y="597" width="0.6786%" height="15" fill="rgb(218,194,23)" fg:x="65107" fg:w="891"/><text x="49.8361%" y="607.50"></text></g><g><title>[unknown] (270 samples, 0.21%)</title><rect x="50.0590%" y="581" width="0.2056%" height="15" fill="rgb(235,66,41)" fg:x="65728" fg:w="270"/><text x="50.3090%" y="591.50"></text></g><g><title>[unknown] (99 samples, 0.08%)</title><rect x="50.1893%" y="565" width="0.0754%" height="15" fill="rgb(245,217,1)" fg:x="65899" fg:w="99"/><text x="50.4393%" y="575.50"></text></g><g><title>[unknown] (94 samples, 0.07%)</title><rect x="50.1931%" y="549" width="0.0716%" height="15" fill="rgb(229,91,1)" fg:x="65904" fg:w="94"/><text x="50.4431%" y="559.50"></text></g><g><title>[unknown] (84 samples, 0.06%)</title><rect x="50.2007%" y="533" width="0.0640%" height="15" fill="rgb(207,101,30)" fg:x="65914" fg:w="84"/><text x="50.4507%" y="543.50"></text></g><g><title>[unknown] (77 samples, 0.06%)</title><rect x="50.2060%" y="517" width="0.0586%" height="15" fill="rgb(223,82,49)" fg:x="65921" fg:w="77"/><text x="50.4560%" y="527.50"></text></g><g><title>[unknown] (25 samples, 0.02%)</title><rect x="50.2456%" y="501" width="0.0190%" height="15" fill="rgb(218,167,17)" fg:x="65973" fg:w="25"/><text x="50.4956%" y="511.50"></text></g><g><title>[unknown] (16 samples, 0.01%)</title><rect x="50.2525%" y="485" width="0.0122%" height="15" fill="rgb(208,103,14)" fg:x="65982" fg:w="16"/><text x="50.5025%" y="495.50"></text></g><g><title>std::sys_common::net::TcpListener::socket_addr::{{closure}} (3,800 samples, 2.89%)</title><rect x="47.3766%" y="725" width="2.8941%" height="15" fill="rgb(238,20,8)" fg:x="62206" fg:w="3800"/><text x="47.6266%" y="735.50">st..</text></g><g><title>tokio::net::udp::UdpSocket::local_addr (3,838 samples, 2.92%)</title><rect x="47.3561%" y="805" width="2.9231%" height="15" fill="rgb(218,80,54)" fg:x="62179" fg:w="3838"/><text x="47.6061%" y="815.50">to..</text></g><g><title>mio::net::udp::UdpSocket::local_addr (3,838 samples, 2.92%)</title><rect x="47.3561%" y="789" width="2.9231%" height="15" fill="rgb(240,144,17)" fg:x="62179" fg:w="3838"/><text x="47.6061%" y="799.50">mi..</text></g><g><title>std::net::tcp::TcpListener::local_addr (3,838 samples, 2.92%)</title><rect x="47.3561%" y="773" width="2.9231%" height="15" fill="rgb(245,27,50)" fg:x="62179" fg:w="3838"/><text x="47.6061%" y="783.50">st..</text></g><g><title>std::sys_common::net::TcpListener::socket_addr (3,838 samples, 2.92%)</title><rect x="47.3561%" y="757" width="2.9231%" height="15" fill="rgb(251,51,7)" fg:x="62179" fg:w="3838"/><text x="47.6061%" y="767.50">st..</text></g><g><title>std::sys_common::net::sockname (3,835 samples, 2.92%)</title><rect x="47.3584%" y="741" width="2.9208%" height="15" fill="rgb(245,217,29)" fg:x="62182" fg:w="3835"/><text x="47.6084%" y="751.50">st..</text></g><g><title>[[vdso]] (60 samples, 0.05%)</title><rect x="50.3149%" y="565" width="0.0457%" height="15" fill="rgb(221,176,29)" fg:x="66064" fg:w="60"/><text x="50.5649%" y="575.50"></text></g><g><title>rand_chacha::guts::ChaCha::pos64 (168 samples, 0.13%)</title><rect x="50.3736%" y="517" width="0.1280%" height="15" fill="rgb(212,180,24)" fg:x="66141" fg:w="168"/><text x="50.6236%" y="527.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (26 samples, 0.02%)</title><rect x="50.5046%" y="501" width="0.0198%" height="15" fill="rgb(254,24,2)" fg:x="66313" fg:w="26"/><text x="50.7546%" y="511.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (26 samples, 0.02%)</title><rect x="50.5046%" y="485" width="0.0198%" height="15" fill="rgb(230,100,2)" fg:x="66313" fg:w="26"/><text x="50.7546%" y="495.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (26 samples, 0.02%)</title><rect x="50.5046%" y="469" width="0.0198%" height="15" fill="rgb(219,142,25)" fg:x="66313" fg:w="26"/><text x="50.7546%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (26 samples, 0.02%)</title><rect x="50.5046%" y="453" width="0.0198%" height="15" fill="rgb(240,73,43)" fg:x="66313" fg:w="26"/><text x="50.7546%" y="463.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (26 samples, 0.02%)</title><rect x="50.5305%" y="501" width="0.0198%" height="15" fill="rgb(214,114,15)" fg:x="66347" fg:w="26"/><text x="50.7805%" y="511.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (26 samples, 0.02%)</title><rect x="50.5305%" y="485" width="0.0198%" height="15" fill="rgb(207,130,4)" fg:x="66347" fg:w="26"/><text x="50.7805%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (26 samples, 0.02%)</title><rect x="50.5305%" y="469" width="0.0198%" height="15" fill="rgb(221,25,40)" fg:x="66347" fg:w="26"/><text x="50.7805%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (29 samples, 0.02%)</title><rect x="50.5503%" y="469" width="0.0221%" height="15" fill="rgb(241,184,7)" fg:x="66373" fg:w="29"/><text x="50.8003%" y="479.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (31 samples, 0.02%)</title><rect x="50.5503%" y="501" width="0.0236%" height="15" fill="rgb(235,159,4)" fg:x="66373" fg:w="31"/><text x="50.8003%" y="511.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (31 samples, 0.02%)</title><rect x="50.5503%" y="485" width="0.0236%" height="15" fill="rgb(214,87,48)" fg:x="66373" fg:w="31"/><text x="50.8003%" y="495.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (18 samples, 0.01%)</title><rect x="50.5739%" y="501" width="0.0137%" height="15" fill="rgb(246,198,24)" fg:x="66404" fg:w="18"/><text x="50.8239%" y="511.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (18 samples, 0.01%)</title><rect x="50.5739%" y="485" width="0.0137%" height="15" fill="rgb(209,66,40)" fg:x="66404" fg:w="18"/><text x="50.8239%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (18 samples, 0.01%)</title><rect x="50.5739%" y="469" width="0.0137%" height="15" fill="rgb(233,147,39)" fg:x="66404" fg:w="18"/><text x="50.8239%" y="479.50"></text></g><g><title>rand_chacha::guts::round (118 samples, 0.09%)</title><rect x="50.5046%" y="517" width="0.0899%" height="15" fill="rgb(231,145,52)" fg:x="66313" fg:w="118"/><text x="50.7546%" y="527.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (312 samples, 0.24%)</title><rect x="50.3621%" y="565" width="0.2376%" height="15" fill="rgb(206,20,26)" fg:x="66126" fg:w="312"/><text x="50.6121%" y="575.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (312 samples, 0.24%)</title><rect x="50.3621%" y="549" width="0.2376%" height="15" fill="rgb(238,220,4)" fg:x="66126" fg:w="312"/><text x="50.6121%" y="559.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (312 samples, 0.24%)</title><rect x="50.3621%" y="533" width="0.2376%" height="15" fill="rgb(252,195,42)" fg:x="66126" fg:w="312"/><text x="50.6121%" y="543.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (384 samples, 0.29%)</title><rect x="50.3149%" y="597" width="0.2925%" height="15" fill="rgb(209,10,6)" fg:x="66064" fg:w="384"/><text x="50.5649%" y="607.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (384 samples, 0.29%)</title><rect x="50.3149%" y="581" width="0.2925%" height="15" fill="rgb(229,3,52)" fg:x="66064" fg:w="384"/><text x="50.5649%" y="591.50"></text></g><g><title>rand::rng::Rng::gen (432 samples, 0.33%)</title><rect x="50.2845%" y="741" width="0.3290%" height="15" fill="rgb(253,49,37)" fg:x="66024" fg:w="432"/><text x="50.5345%" y="751.50"></text></g><g><title>rand::distributions::other::&lt;impl rand::distributions::distribution::Distribution&lt;[T: _]&gt; for rand::distributions::Standard&gt;::sample (432 samples, 0.33%)</title><rect x="50.2845%" y="725" width="0.3290%" height="15" fill="rgb(240,103,49)" fg:x="66024" fg:w="432"/><text x="50.5345%" y="735.50"></text></g><g><title>rand::rng::Rng::gen (432 samples, 0.33%)</title><rect x="50.2845%" y="709" width="0.3290%" height="15" fill="rgb(250,182,30)" fg:x="66024" fg:w="432"/><text x="50.5345%" y="719.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u8&gt; for rand::distributions::Standard&gt;::sample (432 samples, 0.33%)</title><rect x="50.2845%" y="693" width="0.3290%" height="15" fill="rgb(248,8,30)" fg:x="66024" fg:w="432"/><text x="50.5345%" y="703.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u32 (432 samples, 0.33%)</title><rect x="50.2845%" y="677" width="0.3290%" height="15" fill="rgb(237,120,30)" fg:x="66024" fg:w="432"/><text x="50.5345%" y="687.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u32 (432 samples, 0.33%)</title><rect x="50.2845%" y="661" width="0.3290%" height="15" fill="rgb(221,146,34)" fg:x="66024" fg:w="432"/><text x="50.5345%" y="671.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (432 samples, 0.33%)</title><rect x="50.2845%" y="645" width="0.3290%" height="15" fill="rgb(242,55,13)" fg:x="66024" fg:w="432"/><text x="50.5345%" y="655.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (392 samples, 0.30%)</title><rect x="50.3149%" y="629" width="0.2986%" height="15" fill="rgb(242,112,31)" fg:x="66064" fg:w="392"/><text x="50.5649%" y="639.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (392 samples, 0.30%)</title><rect x="50.3149%" y="613" width="0.2986%" height="15" fill="rgb(249,192,27)" fg:x="66064" fg:w="392"/><text x="50.5649%" y="623.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::RequestId::make (440 samples, 0.34%)</title><rect x="50.2799%" y="805" width="0.3351%" height="15" fill="rgb(208,204,44)" fg:x="66018" fg:w="440"/><text x="50.5299%" y="815.50"></text></g><g><title>uuid::v4::&lt;impl uuid::Uuid&gt;::new_v4 (436 samples, 0.33%)</title><rect x="50.2829%" y="789" width="0.3321%" height="15" fill="rgb(208,93,54)" fg:x="66022" fg:w="436"/><text x="50.5329%" y="799.50"></text></g><g><title>uuid::rng::bytes (435 samples, 0.33%)</title><rect x="50.2837%" y="773" width="0.3313%" height="15" fill="rgb(242,1,31)" fg:x="66023" fg:w="435"/><text x="50.5337%" y="783.50"></text></g><g><title>rand::random (435 samples, 0.33%)</title><rect x="50.2837%" y="757" width="0.3313%" height="15" fill="rgb(241,83,25)" fg:x="66023" fg:w="435"/><text x="50.5337%" y="767.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::mutex_std::&lt;impl torrust_tracker_torrent_repository::entry::EntrySync for alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;::get_peers_for_client (34 samples, 0.03%)</title><rect x="50.6683%" y="741" width="0.0259%" height="15" fill="rgb(205,169,50)" fg:x="66528" fg:w="34"/><text x="50.9183%" y="751.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::single::&lt;impl torrust_tracker_torrent_repository::entry::Entry for torrust_tracker_torrent_repository::entry::Torrent&gt;::get_peers_for_client (22 samples, 0.02%)</title><rect x="50.6775%" y="725" width="0.0168%" height="15" fill="rgb(239,186,37)" fg:x="66540" fg:w="22"/><text x="50.9275%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (16 samples, 0.01%)</title><rect x="50.6820%" y="709" width="0.0122%" height="15" fill="rgb(205,221,10)" fg:x="66546" fg:w="16"/><text x="50.9320%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (16 samples, 0.01%)</title><rect x="50.6820%" y="693" width="0.0122%" height="15" fill="rgb(218,196,15)" fg:x="66546" fg:w="16"/><text x="50.9320%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 0.01%)</title><rect x="50.6820%" y="677" width="0.0122%" height="15" fill="rgb(218,196,35)" fg:x="66546" fg:w="16"/><text x="50.9320%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (16 samples, 0.01%)</title><rect x="50.6820%" y="661" width="0.0122%" height="15" fill="rgb(233,63,24)" fg:x="66546" fg:w="16"/><text x="50.9320%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.01%)</title><rect x="50.6820%" y="645" width="0.0122%" height="15" fill="rgb(225,8,4)" fg:x="66546" fg:w="16"/><text x="50.9320%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.01%)</title><rect x="50.6820%" y="629" width="0.0122%" height="15" fill="rgb(234,105,35)" fg:x="66546" fg:w="16"/><text x="50.9320%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="50.6828%" y="613" width="0.0114%" height="15" fill="rgb(236,21,32)" fg:x="66547" fg:w="15"/><text x="50.9328%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (15 samples, 0.01%)</title><rect x="50.6828%" y="597" width="0.0114%" height="15" fill="rgb(228,109,6)" fg:x="66547" fg:w="15"/><text x="50.9328%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (15 samples, 0.01%)</title><rect x="50.6828%" y="581" width="0.0114%" height="15" fill="rgb(229,215,31)" fg:x="66547" fg:w="15"/><text x="50.9328%" y="591.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (31 samples, 0.02%)</title><rect x="50.8092%" y="629" width="0.0236%" height="15" fill="rgb(221,52,54)" fg:x="66713" fg:w="31"/><text x="51.0592%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 0.03%)</title><rect x="50.8092%" y="661" width="0.0343%" height="15" fill="rgb(252,129,43)" fg:x="66713" fg:w="45"/><text x="51.0592%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 0.03%)</title><rect x="50.8092%" y="645" width="0.0343%" height="15" fill="rgb(248,183,27)" fg:x="66713" fg:w="45"/><text x="51.0592%" y="655.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (14 samples, 0.01%)</title><rect x="50.8328%" y="629" width="0.0107%" height="15" fill="rgb(250,0,22)" fg:x="66744" fg:w="14"/><text x="51.0828%" y="639.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (14 samples, 0.01%)</title><rect x="50.8328%" y="613" width="0.0107%" height="15" fill="rgb(213,166,10)" fg:x="66744" fg:w="14"/><text x="51.0828%" y="623.50"></text></g><g><title>__memcmp_evex_movbe (79 samples, 0.06%)</title><rect x="50.8816%" y="581" width="0.0602%" height="15" fill="rgb(207,163,36)" fg:x="66808" fg:w="79"/><text x="51.1316%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (26 samples, 0.02%)</title><rect x="50.9417%" y="581" width="0.0198%" height="15" fill="rgb(208,122,22)" fg:x="66887" fg:w="26"/><text x="51.1917%" y="591.50"></text></g><g><title>&lt;torrust_tracker_primitives::info_hash::InfoHash as core::cmp::Ord&gt;::cmp (165 samples, 0.13%)</title><rect x="50.8435%" y="661" width="0.1257%" height="15" fill="rgb(207,104,49)" fg:x="66758" fg:w="165"/><text x="51.0935%" y="671.50"></text></g><g><title>core::array::&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (165 samples, 0.13%)</title><rect x="50.8435%" y="645" width="0.1257%" height="15" fill="rgb(248,211,50)" fg:x="66758" fg:w="165"/><text x="51.0935%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (165 samples, 0.13%)</title><rect x="50.8435%" y="629" width="0.1257%" height="15" fill="rgb(217,13,45)" fg:x="66758" fg:w="165"/><text x="51.0935%" y="639.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (165 samples, 0.13%)</title><rect x="50.8435%" y="613" width="0.1257%" height="15" fill="rgb(211,216,49)" fg:x="66758" fg:w="165"/><text x="51.0935%" y="623.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (165 samples, 0.13%)</title><rect x="50.8435%" y="597" width="0.1257%" height="15" fill="rgb(221,58,53)" fg:x="66758" fg:w="165"/><text x="51.0935%" y="607.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (339 samples, 0.26%)</title><rect x="50.7140%" y="709" width="0.2582%" height="15" fill="rgb(220,112,41)" fg:x="66588" fg:w="339"/><text x="50.9640%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (308 samples, 0.23%)</title><rect x="50.7376%" y="693" width="0.2346%" height="15" fill="rgb(236,38,28)" fg:x="66619" fg:w="308"/><text x="50.9876%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (308 samples, 0.23%)</title><rect x="50.7376%" y="677" width="0.2346%" height="15" fill="rgb(227,195,22)" fg:x="66619" fg:w="308"/><text x="50.9876%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (342 samples, 0.26%)</title><rect x="50.7125%" y="725" width="0.2605%" height="15" fill="rgb(214,55,33)" fg:x="66586" fg:w="342"/><text x="50.9625%" y="735.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::spin_read (25 samples, 0.02%)</title><rect x="50.9760%" y="661" width="0.0190%" height="15" fill="rgb(248,80,13)" fg:x="66932" fg:w="25"/><text x="51.2260%" y="671.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::spin_until (25 samples, 0.02%)</title><rect x="50.9760%" y="645" width="0.0190%" height="15" fill="rgb(238,52,6)" fg:x="66932" fg:w="25"/><text x="51.2260%" y="655.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::read_contended (28 samples, 0.02%)</title><rect x="50.9745%" y="677" width="0.0213%" height="15" fill="rgb(224,198,47)" fg:x="66930" fg:w="28"/><text x="51.2245%" y="687.50"></text></g><g><title>torrust_tracker::core::Tracker::get_torrent_peers_for_peer (436 samples, 0.33%)</title><rect x="50.6645%" y="757" width="0.3321%" height="15" fill="rgb(233,171,20)" fg:x="66523" fg:w="436"/><text x="50.9145%" y="767.50"></text></g><g><title>torrust_tracker_torrent_repository::repository::rw_lock_std_mutex_std::&lt;impl torrust_tracker_torrent_repository::repository::Repository&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt; for torrust_tracker_torrent_repository::repository::RwLockStd&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;&gt;::get (397 samples, 0.30%)</title><rect x="50.6942%" y="741" width="0.3024%" height="15" fill="rgb(241,30,25)" fg:x="66562" fg:w="397"/><text x="50.9442%" y="751.50"></text></g><g><title>torrust_tracker_torrent_repository::repository::rw_lock_std_mutex_std::&lt;impl torrust_tracker_torrent_repository::repository::RwLockStd&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;&gt;::get_torrents (29 samples, 0.02%)</title><rect x="50.9745%" y="725" width="0.0221%" height="15" fill="rgb(207,171,38)" fg:x="66930" fg:w="29"/><text x="51.2245%" y="735.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (29 samples, 0.02%)</title><rect x="50.9745%" y="709" width="0.0221%" height="15" fill="rgb(234,70,1)" fg:x="66930" fg:w="29"/><text x="51.2245%" y="719.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::read (29 samples, 0.02%)</title><rect x="50.9745%" y="693" width="0.0221%" height="15" fill="rgb(232,178,18)" fg:x="66930" fg:w="29"/><text x="51.2245%" y="703.50"></text></g><g><title>__memcmp_evex_movbe (31 samples, 0.02%)</title><rect x="51.0659%" y="581" width="0.0236%" height="15" fill="rgb(241,78,40)" fg:x="67050" fg:w="31"/><text x="51.3159%" y="591.50"></text></g><g><title>&lt;torrust_tracker_primitives::info_hash::InfoHash as core::cmp::Ord&gt;::cmp (52 samples, 0.04%)</title><rect x="51.0514%" y="661" width="0.0396%" height="15" fill="rgb(222,35,25)" fg:x="67031" fg:w="52"/><text x="51.3014%" y="671.50"></text></g><g><title>core::array::&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (52 samples, 0.04%)</title><rect x="51.0514%" y="645" width="0.0396%" height="15" fill="rgb(207,92,16)" fg:x="67031" fg:w="52"/><text x="51.3014%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (52 samples, 0.04%)</title><rect x="51.0514%" y="629" width="0.0396%" height="15" fill="rgb(216,59,51)" fg:x="67031" fg:w="52"/><text x="51.3014%" y="639.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (52 samples, 0.04%)</title><rect x="51.0514%" y="613" width="0.0396%" height="15" fill="rgb(213,80,28)" fg:x="67031" fg:w="52"/><text x="51.3014%" y="623.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (52 samples, 0.04%)</title><rect x="51.0514%" y="597" width="0.0396%" height="15" fill="rgb(220,93,7)" fg:x="67031" fg:w="52"/><text x="51.3014%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (103 samples, 0.08%)</title><rect x="51.0133%" y="725" width="0.0784%" height="15" fill="rgb(225,24,44)" fg:x="66981" fg:w="103"/><text x="51.2633%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (102 samples, 0.08%)</title><rect x="51.0141%" y="709" width="0.0777%" height="15" fill="rgb(243,74,40)" fg:x="66982" fg:w="102"/><text x="51.2641%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (96 samples, 0.07%)</title><rect x="51.0187%" y="693" width="0.0731%" height="15" fill="rgb(228,39,7)" fg:x="66988" fg:w="96"/><text x="51.2687%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (96 samples, 0.07%)</title><rect x="51.0187%" y="677" width="0.0731%" height="15" fill="rgb(227,79,8)" fg:x="66988" fg:w="96"/><text x="51.2687%" y="687.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (72 samples, 0.05%)</title><rect x="51.2608%" y="629" width="0.0548%" height="15" fill="rgb(236,58,11)" fg:x="67306" fg:w="72"/><text x="51.5108%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (104 samples, 0.08%)</title><rect x="51.2608%" y="661" width="0.0792%" height="15" fill="rgb(249,63,35)" fg:x="67306" fg:w="104"/><text x="51.5108%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (104 samples, 0.08%)</title><rect x="51.2608%" y="645" width="0.0792%" height="15" fill="rgb(252,114,16)" fg:x="67306" fg:w="104"/><text x="51.5108%" y="655.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (32 samples, 0.02%)</title><rect x="51.3157%" y="629" width="0.0244%" height="15" fill="rgb(254,151,24)" fg:x="67378" fg:w="32"/><text x="51.5657%" y="639.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (32 samples, 0.02%)</title><rect x="51.3157%" y="613" width="0.0244%" height="15" fill="rgb(253,54,39)" fg:x="67378" fg:w="32"/><text x="51.5657%" y="623.50"></text></g><g><title>__memcmp_evex_movbe (79 samples, 0.06%)</title><rect x="51.4231%" y="581" width="0.0602%" height="15" fill="rgb(243,25,45)" fg:x="67519" fg:w="79"/><text x="51.6731%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (81 samples, 0.06%)</title><rect x="51.4832%" y="581" width="0.0617%" height="15" fill="rgb(234,134,9)" fg:x="67598" fg:w="81"/><text x="51.7332%" y="591.50"></text></g><g><title>&lt;torrust_tracker_primitives::info_hash::InfoHash as core::cmp::Ord&gt;::cmp (271 samples, 0.21%)</title><rect x="51.3401%" y="661" width="0.2064%" height="15" fill="rgb(227,166,31)" fg:x="67410" fg:w="271"/><text x="51.5901%" y="671.50"></text></g><g><title>core::array::&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (271 samples, 0.21%)</title><rect x="51.3401%" y="645" width="0.2064%" height="15" fill="rgb(245,143,41)" fg:x="67410" fg:w="271"/><text x="51.5901%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (271 samples, 0.21%)</title><rect x="51.3401%" y="629" width="0.2064%" height="15" fill="rgb(238,181,32)" fg:x="67410" fg:w="271"/><text x="51.5901%" y="639.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (271 samples, 0.21%)</title><rect x="51.3401%" y="613" width="0.2064%" height="15" fill="rgb(224,113,18)" fg:x="67410" fg:w="271"/><text x="51.5901%" y="623.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (271 samples, 0.21%)</title><rect x="51.3401%" y="597" width="0.2064%" height="15" fill="rgb(240,229,28)" fg:x="67410" fg:w="271"/><text x="51.5901%" y="607.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (610 samples, 0.46%)</title><rect x="51.0956%" y="709" width="0.4646%" height="15" fill="rgb(250,185,3)" fg:x="67089" fg:w="610"/><text x="51.3456%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (566 samples, 0.43%)</title><rect x="51.1291%" y="693" width="0.4311%" height="15" fill="rgb(212,59,25)" fg:x="67133" fg:w="566"/><text x="51.3791%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (566 samples, 0.43%)</title><rect x="51.1291%" y="677" width="0.4311%" height="15" fill="rgb(221,87,20)" fg:x="67133" fg:w="566"/><text x="51.3791%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (18 samples, 0.01%)</title><rect x="51.5464%" y="661" width="0.0137%" height="15" fill="rgb(213,74,28)" fg:x="67681" fg:w="18"/><text x="51.7964%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (616 samples, 0.47%)</title><rect x="51.0918%" y="725" width="0.4692%" height="15" fill="rgb(224,132,34)" fg:x="67084" fg:w="616"/><text x="51.3418%" y="735.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::split (15 samples, 0.01%)</title><rect x="51.5838%" y="661" width="0.0114%" height="15" fill="rgb(222,101,24)" fg:x="67730" fg:w="15"/><text x="51.8338%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::Entry&lt;K,V,A&gt;::or_insert (46 samples, 0.04%)</title><rect x="51.5609%" y="725" width="0.0350%" height="15" fill="rgb(254,142,4)" fg:x="67700" fg:w="46"/><text x="51.8109%" y="735.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (45 samples, 0.03%)</title><rect x="51.5617%" y="709" width="0.0343%" height="15" fill="rgb(230,229,49)" fg:x="67701" fg:w="45"/><text x="51.8117%" y="719.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (40 samples, 0.03%)</title><rect x="51.5655%" y="693" width="0.0305%" height="15" fill="rgb(238,70,47)" fg:x="67706" fg:w="40"/><text x="51.8155%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (27 samples, 0.02%)</title><rect x="51.5754%" y="677" width="0.0206%" height="15" fill="rgb(231,160,17)" fg:x="67719" fg:w="27"/><text x="51.8254%" y="687.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::single::&lt;impl torrust_tracker_torrent_repository::entry::Entry for torrust_tracker_torrent_repository::entry::Torrent&gt;::get_stats (29 samples, 0.02%)</title><rect x="51.6119%" y="693" width="0.0221%" height="15" fill="rgb(218,68,53)" fg:x="67767" fg:w="29"/><text x="51.8619%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::values (20 samples, 0.02%)</title><rect x="51.6188%" y="677" width="0.0152%" height="15" fill="rgb(236,111,10)" fg:x="67776" fg:w="20"/><text x="51.8688%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (120 samples, 0.09%)</title><rect x="51.6508%" y="677" width="0.0914%" height="15" fill="rgb(224,34,41)" fg:x="67818" fg:w="120"/><text x="51.9008%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (118 samples, 0.09%)</title><rect x="51.6523%" y="661" width="0.0899%" height="15" fill="rgb(241,118,19)" fg:x="67820" fg:w="118"/><text x="51.9023%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (118 samples, 0.09%)</title><rect x="51.6523%" y="645" width="0.0899%" height="15" fill="rgb(238,129,25)" fg:x="67820" fg:w="118"/><text x="51.9023%" y="655.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (118 samples, 0.09%)</title><rect x="51.6523%" y="629" width="0.0899%" height="15" fill="rgb(238,22,31)" fg:x="67820" fg:w="118"/><text x="51.9023%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (118 samples, 0.09%)</title><rect x="51.6523%" y="613" width="0.0899%" height="15" fill="rgb(222,174,48)" fg:x="67820" fg:w="118"/><text x="51.9023%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (118 samples, 0.09%)</title><rect x="51.6523%" y="597" width="0.0899%" height="15" fill="rgb(206,152,40)" fg:x="67820" fg:w="118"/><text x="51.9023%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (118 samples, 0.09%)</title><rect x="51.6523%" y="581" width="0.0899%" height="15" fill="rgb(218,99,54)" fg:x="67820" fg:w="118"/><text x="51.9023%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (118 samples, 0.09%)</title><rect x="51.6523%" y="565" width="0.0899%" height="15" fill="rgb(220,174,26)" fg:x="67820" fg:w="118"/><text x="51.9023%" y="575.50"></text></g><g><title>alloc::alloc::alloc (118 samples, 0.09%)</title><rect x="51.6523%" y="549" width="0.0899%" height="15" fill="rgb(245,116,9)" fg:x="67820" fg:w="118"/><text x="51.9023%" y="559.50"></text></g><g><title>__rdl_alloc (118 samples, 0.09%)</title><rect x="51.6523%" y="533" width="0.0899%" height="15" fill="rgb(209,72,35)" fg:x="67820" fg:w="118"/><text x="51.9023%" y="543.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (118 samples, 0.09%)</title><rect x="51.6523%" y="517" width="0.0899%" height="15" fill="rgb(226,126,21)" fg:x="67820" fg:w="118"/><text x="51.9023%" y="527.50"></text></g><g><title>__GI___libc_malloc (118 samples, 0.09%)</title><rect x="51.6523%" y="501" width="0.0899%" height="15" fill="rgb(227,192,1)" fg:x="67820" fg:w="118"/><text x="51.9023%" y="511.50"></text></g><g><title>_int_malloc (107 samples, 0.08%)</title><rect x="51.6607%" y="485" width="0.0815%" height="15" fill="rgb(237,180,29)" fg:x="67831" fg:w="107"/><text x="51.9107%" y="495.50"></text></g><g><title>_int_malloc (28 samples, 0.02%)</title><rect x="51.7483%" y="533" width="0.0213%" height="15" fill="rgb(230,197,35)" fg:x="67946" fg:w="28"/><text x="51.9983%" y="543.50"></text></g><g><title>__GI___libc_malloc (32 samples, 0.02%)</title><rect x="51.7460%" y="549" width="0.0244%" height="15" fill="rgb(246,193,31)" fg:x="67943" fg:w="32"/><text x="51.9960%" y="559.50"></text></g><g><title>__rdl_alloc (36 samples, 0.03%)</title><rect x="51.7445%" y="581" width="0.0274%" height="15" fill="rgb(241,36,4)" fg:x="67941" fg:w="36"/><text x="51.9945%" y="591.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (36 samples, 0.03%)</title><rect x="51.7445%" y="565" width="0.0274%" height="15" fill="rgb(241,130,17)" fg:x="67941" fg:w="36"/><text x="51.9945%" y="575.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (42 samples, 0.03%)</title><rect x="51.7422%" y="677" width="0.0320%" height="15" fill="rgb(206,137,32)" fg:x="67938" fg:w="42"/><text x="51.9922%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (42 samples, 0.03%)</title><rect x="51.7422%" y="661" width="0.0320%" height="15" fill="rgb(237,228,51)" fg:x="67938" fg:w="42"/><text x="51.9922%" y="671.50"></text></g><g><title>alloc::alloc::exchange_malloc (39 samples, 0.03%)</title><rect x="51.7445%" y="645" width="0.0297%" height="15" fill="rgb(243,6,42)" fg:x="67941" fg:w="39"/><text x="51.9945%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (39 samples, 0.03%)</title><rect x="51.7445%" y="629" width="0.0297%" height="15" fill="rgb(251,74,28)" fg:x="67941" fg:w="39"/><text x="51.9945%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (39 samples, 0.03%)</title><rect x="51.7445%" y="613" width="0.0297%" height="15" fill="rgb(218,20,49)" fg:x="67941" fg:w="39"/><text x="51.9945%" y="623.50"></text></g><g><title>alloc::alloc::alloc (39 samples, 0.03%)</title><rect x="51.7445%" y="597" width="0.0297%" height="15" fill="rgb(238,28,14)" fg:x="67941" fg:w="39"/><text x="51.9945%" y="607.50"></text></g><g><title>core::mem::drop (15 samples, 0.01%)</title><rect x="51.7742%" y="677" width="0.0114%" height="15" fill="rgb(229,40,46)" fg:x="67980" fg:w="15"/><text x="52.0242%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;torrust_tracker_primitives::peer::Peer&gt;&gt;&gt; (15 samples, 0.01%)</title><rect x="51.7742%" y="661" width="0.0114%" height="15" fill="rgb(244,195,20)" fg:x="67980" fg:w="15"/><text x="52.0242%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;torrust_tracker_primitives::peer::Peer&gt;&gt; (15 samples, 0.01%)</title><rect x="51.7742%" y="645" width="0.0114%" height="15" fill="rgb(253,56,35)" fg:x="67980" fg:w="15"/><text x="52.0242%" y="655.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="51.7742%" y="629" width="0.0114%" height="15" fill="rgb(210,149,44)" fg:x="67980" fg:w="15"/><text x="52.0242%" y="639.50"></text></g><g><title>__GI___libc_free (39 samples, 0.03%)</title><rect x="51.7902%" y="613" width="0.0297%" height="15" fill="rgb(240,135,12)" fg:x="68001" fg:w="39"/><text x="52.0402%" y="623.50"></text></g><g><title>_int_free (37 samples, 0.03%)</title><rect x="51.7917%" y="597" width="0.0282%" height="15" fill="rgb(251,24,50)" fg:x="68003" fg:w="37"/><text x="52.0417%" y="607.50"></text></g><g><title>get_max_fast (16 samples, 0.01%)</title><rect x="51.8077%" y="581" width="0.0122%" height="15" fill="rgb(243,200,47)" fg:x="68024" fg:w="16"/><text x="52.0577%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some_and (50 samples, 0.04%)</title><rect x="51.7856%" y="677" width="0.0381%" height="15" fill="rgb(224,166,26)" fg:x="67995" fg:w="50"/><text x="52.0356%" y="687.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::single::&lt;impl torrust_tracker_torrent_repository::entry::Entry for torrust_tracker_torrent_repository::entry::Torrent&gt;::insert_or_update_peer::{{closure}} (50 samples, 0.04%)</title><rect x="51.7856%" y="661" width="0.0381%" height="15" fill="rgb(233,0,47)" fg:x="67995" fg:w="50"/><text x="52.0356%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;torrust_tracker_primitives::peer::Peer&gt;&gt; (50 samples, 0.04%)</title><rect x="51.7856%" y="645" width="0.0381%" height="15" fill="rgb(253,80,5)" fg:x="67995" fg:w="50"/><text x="52.0356%" y="655.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 0.04%)</title><rect x="51.7856%" y="629" width="0.0381%" height="15" fill="rgb(214,133,25)" fg:x="67995" fg:w="50"/><text x="52.0356%" y="639.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::mutex_std::&lt;impl torrust_tracker_torrent_repository::entry::EntrySync for alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;::insert_or_update_peer_and_get_stats (290 samples, 0.22%)</title><rect x="51.6074%" y="725" width="0.2209%" height="15" fill="rgb(209,27,14)" fg:x="67761" fg:w="290"/><text x="51.8574%" y="735.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::single::&lt;impl torrust_tracker_torrent_repository::entry::Entry for torrust_tracker_torrent_repository::entry::Torrent&gt;::insert_or_update_peer_and_get_stats (284 samples, 0.22%)</title><rect x="51.6119%" y="709" width="0.2163%" height="15" fill="rgb(219,102,51)" fg:x="67767" fg:w="284"/><text x="51.8619%" y="719.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::single::&lt;impl torrust_tracker_torrent_repository::entry::Entry for torrust_tracker_torrent_repository::entry::Torrent&gt;::insert_or_update_peer (255 samples, 0.19%)</title><rect x="51.6340%" y="693" width="0.1942%" height="15" fill="rgb(237,18,16)" fg:x="67796" fg:w="255"/><text x="51.8840%" y="703.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::spin_read (16 samples, 0.01%)</title><rect x="51.8328%" y="661" width="0.0122%" height="15" fill="rgb(241,85,17)" fg:x="68057" fg:w="16"/><text x="52.0828%" y="671.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::spin_until (16 samples, 0.01%)</title><rect x="51.8328%" y="645" width="0.0122%" height="15" fill="rgb(236,90,42)" fg:x="68057" fg:w="16"/><text x="52.0828%" y="655.50"></text></g><g><title>torrust_tracker_torrent_repository::repository::rw_lock_std_mutex_std::&lt;impl torrust_tracker_torrent_repository::repository::RwLockStd&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;&gt;::get_torrents (21 samples, 0.02%)</title><rect x="51.8298%" y="725" width="0.0160%" height="15" fill="rgb(249,57,21)" fg:x="68053" fg:w="21"/><text x="52.0798%" y="735.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (21 samples, 0.02%)</title><rect x="51.8298%" y="709" width="0.0160%" height="15" fill="rgb(243,12,36)" fg:x="68053" fg:w="21"/><text x="52.0798%" y="719.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::read (21 samples, 0.02%)</title><rect x="51.8298%" y="693" width="0.0160%" height="15" fill="rgb(253,128,47)" fg:x="68053" fg:w="21"/><text x="52.0798%" y="703.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::read_contended (21 samples, 0.02%)</title><rect x="51.8298%" y="677" width="0.0160%" height="15" fill="rgb(207,33,20)" fg:x="68053" fg:w="21"/><text x="52.0798%" y="687.50"></text></g><g><title>torrust_tracker::core::Tracker::update_torrent_with_peer_and_get_stats::{{closure}} (1,147 samples, 0.87%)</title><rect x="50.9966%" y="757" width="0.8736%" height="15" fill="rgb(233,215,35)" fg:x="66959" fg:w="1147"/><text x="51.2466%" y="767.50"></text></g><g><title>torrust_tracker_torrent_repository::repository::rw_lock_std_mutex_std::&lt;impl torrust_tracker_torrent_repository::repository::Repository&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt; for torrust_tracker_torrent_repository::repository::RwLockStd&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;&gt;::update_torrent_with_peer_and_get_stats (1,144 samples, 0.87%)</title><rect x="50.9988%" y="741" width="0.8713%" height="15" fill="rgb(249,188,52)" fg:x="66962" fg:w="1144"/><text x="51.2488%" y="751.50"></text></g><g><title>torrust_tracker_torrent_repository::repository::rw_lock_std_mutex_std::&lt;impl torrust_tracker_torrent_repository::repository::RwLockStd&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;&gt;::get_torrents_mut (32 samples, 0.02%)</title><rect x="51.8458%" y="725" width="0.0244%" height="15" fill="rgb(225,12,32)" fg:x="68074" fg:w="32"/><text x="52.0958%" y="735.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (32 samples, 0.02%)</title><rect x="51.8458%" y="709" width="0.0244%" height="15" fill="rgb(247,98,14)" fg:x="68074" fg:w="32"/><text x="52.0958%" y="719.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::write (32 samples, 0.02%)</title><rect x="51.8458%" y="693" width="0.0244%" height="15" fill="rgb(247,219,48)" fg:x="68074" fg:w="32"/><text x="52.0958%" y="703.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::write_contended (32 samples, 0.02%)</title><rect x="51.8458%" y="677" width="0.0244%" height="15" fill="rgb(253,60,48)" fg:x="68074" fg:w="32"/><text x="52.0958%" y="687.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::spin_write (28 samples, 0.02%)</title><rect x="51.8488%" y="661" width="0.0213%" height="15" fill="rgb(245,15,52)" fg:x="68078" fg:w="28"/><text x="52.0988%" y="671.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::spin_until (28 samples, 0.02%)</title><rect x="51.8488%" y="645" width="0.0213%" height="15" fill="rgb(220,133,28)" fg:x="68078" fg:w="28"/><text x="52.0988%" y="655.50"></text></g><g><title>torrust_tracker::core::Tracker::announce::{{closure}} (1,597 samples, 1.22%)</title><rect x="50.6576%" y="773" width="1.2163%" height="15" fill="rgb(217,180,4)" fg:x="66514" fg:w="1597"/><text x="50.9076%" y="783.50"></text></g><g><title>&lt;core::net::socket_addr::SocketAddrV4 as core::hash::Hash&gt;::hash (14 samples, 0.01%)</title><rect x="51.8861%" y="725" width="0.0107%" height="15" fill="rgb(251,24,1)" fg:x="68127" fg:w="14"/><text x="52.1361%" y="735.50"></text></g><g><title>&lt;core::net::ip_addr::Ipv4Addr as core::hash::Hash&gt;::hash (14 samples, 0.01%)</title><rect x="51.8861%" y="709" width="0.0107%" height="15" fill="rgb(212,185,49)" fg:x="68127" fg:w="14"/><text x="52.1361%" y="719.50"></text></g><g><title>&lt;core::net::socket_addr::SocketAddr as core::hash::Hash&gt;::hash (29 samples, 0.02%)</title><rect x="51.8762%" y="741" width="0.0221%" height="15" fill="rgb(215,175,22)" fg:x="68114" fg:w="29"/><text x="52.1262%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (24 samples, 0.02%)</title><rect x="51.8991%" y="629" width="0.0183%" height="15" fill="rgb(250,205,14)" fg:x="68144" fg:w="24"/><text x="52.1491%" y="639.50"></text></g><g><title>&lt;core::time::Nanoseconds as core::hash::Hash&gt;::hash (25 samples, 0.02%)</title><rect x="51.8991%" y="709" width="0.0190%" height="15" fill="rgb(225,211,22)" fg:x="68144" fg:w="25"/><text x="52.1491%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (25 samples, 0.02%)</title><rect x="51.8991%" y="693" width="0.0190%" height="15" fill="rgb(251,179,42)" fg:x="68144" fg:w="25"/><text x="52.1491%" y="703.50"></text></g><g><title>core::hash::Hasher::write_u32 (25 samples, 0.02%)</title><rect x="51.8991%" y="677" width="0.0190%" height="15" fill="rgb(208,216,51)" fg:x="68144" fg:w="25"/><text x="52.1491%" y="687.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (25 samples, 0.02%)</title><rect x="51.8991%" y="661" width="0.0190%" height="15" fill="rgb(235,36,11)" fg:x="68144" fg:w="25"/><text x="52.1491%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (25 samples, 0.02%)</title><rect x="51.8991%" y="645" width="0.0190%" height="15" fill="rgb(213,189,28)" fg:x="68144" fg:w="25"/><text x="52.1491%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (36 samples, 0.03%)</title><rect x="51.9181%" y="645" width="0.0274%" height="15" fill="rgb(227,203,42)" fg:x="68169" fg:w="36"/><text x="52.1681%" y="655.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (37 samples, 0.03%)</title><rect x="51.9181%" y="677" width="0.0282%" height="15" fill="rgb(244,72,36)" fg:x="68169" fg:w="37"/><text x="52.1681%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (37 samples, 0.03%)</title><rect x="51.9181%" y="661" width="0.0282%" height="15" fill="rgb(213,53,17)" fg:x="68169" fg:w="37"/><text x="52.1681%" y="671.50"></text></g><g><title>&lt;core::time::Duration as core::hash::Hash&gt;::hash (64 samples, 0.05%)</title><rect x="51.8991%" y="725" width="0.0487%" height="15" fill="rgb(207,167,3)" fg:x="68144" fg:w="64"/><text x="52.1491%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (39 samples, 0.03%)</title><rect x="51.9181%" y="709" width="0.0297%" height="15" fill="rgb(216,98,30)" fg:x="68169" fg:w="39"/><text x="52.1681%" y="719.50"></text></g><g><title>core::hash::Hasher::write_u64 (39 samples, 0.03%)</title><rect x="51.9181%" y="693" width="0.0297%" height="15" fill="rgb(236,123,15)" fg:x="68169" fg:w="39"/><text x="52.1681%" y="703.50"></text></g><g><title>&lt;torrust_tracker_clock::time_extent::TimeExtent as core::hash::Hash&gt;::hash (122 samples, 0.09%)</title><rect x="51.8991%" y="741" width="0.0929%" height="15" fill="rgb(248,81,50)" fg:x="68144" fg:w="122"/><text x="52.1491%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (58 samples, 0.04%)</title><rect x="51.9478%" y="725" width="0.0442%" height="15" fill="rgb(214,120,4)" fg:x="68208" fg:w="58"/><text x="52.1978%" y="735.50"></text></g><g><title>core::hash::Hasher::write_u64 (58 samples, 0.04%)</title><rect x="51.9478%" y="709" width="0.0442%" height="15" fill="rgb(208,179,34)" fg:x="68208" fg:w="58"/><text x="52.1978%" y="719.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (58 samples, 0.04%)</title><rect x="51.9478%" y="693" width="0.0442%" height="15" fill="rgb(227,140,7)" fg:x="68208" fg:w="58"/><text x="52.1978%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (58 samples, 0.04%)</title><rect x="51.9478%" y="677" width="0.0442%" height="15" fill="rgb(214,22,6)" fg:x="68208" fg:w="58"/><text x="52.1978%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (57 samples, 0.04%)</title><rect x="51.9486%" y="661" width="0.0434%" height="15" fill="rgb(207,137,27)" fg:x="68209" fg:w="57"/><text x="52.1986%" y="671.50"></text></g><g><title>core::hash::sip::u8to64_le (23 samples, 0.02%)</title><rect x="51.9745%" y="645" width="0.0175%" height="15" fill="rgb(210,8,46)" fg:x="68243" fg:w="23"/><text x="52.2245%" y="655.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (27 samples, 0.02%)</title><rect x="51.9927%" y="709" width="0.0206%" height="15" fill="rgb(240,16,54)" fg:x="68267" fg:w="27"/><text x="52.2427%" y="719.50"></text></g><g><title>core::hash::Hasher::write_usize (27 samples, 0.02%)</title><rect x="51.9927%" y="693" width="0.0206%" height="15" fill="rgb(211,209,29)" fg:x="68267" fg:w="27"/><text x="52.2427%" y="703.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (27 samples, 0.02%)</title><rect x="51.9927%" y="677" width="0.0206%" height="15" fill="rgb(226,228,24)" fg:x="68267" fg:w="27"/><text x="52.2427%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (27 samples, 0.02%)</title><rect x="51.9927%" y="661" width="0.0206%" height="15" fill="rgb(222,84,9)" fg:x="68267" fg:w="27"/><text x="52.2427%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (27 samples, 0.02%)</title><rect x="51.9927%" y="645" width="0.0206%" height="15" fill="rgb(234,203,30)" fg:x="68267" fg:w="27"/><text x="52.2427%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (16 samples, 0.01%)</title><rect x="52.0384%" y="645" width="0.0122%" height="15" fill="rgb(238,109,14)" fg:x="68327" fg:w="16"/><text x="52.2884%" y="655.50"></text></g><g><title>torrust_tracker::servers::udp::connection_cookie::cookie_builder::build (246 samples, 0.19%)</title><rect x="51.8762%" y="757" width="0.1874%" height="15" fill="rgb(233,206,34)" fg:x="68114" fg:w="246"/><text x="52.1262%" y="767.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (93 samples, 0.07%)</title><rect x="51.9927%" y="741" width="0.0708%" height="15" fill="rgb(220,167,47)" fg:x="68267" fg:w="93"/><text x="52.2427%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (93 samples, 0.07%)</title><rect x="51.9927%" y="725" width="0.0708%" height="15" fill="rgb(238,105,10)" fg:x="68267" fg:w="93"/><text x="52.2427%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (66 samples, 0.05%)</title><rect x="52.0133%" y="709" width="0.0503%" height="15" fill="rgb(213,227,17)" fg:x="68294" fg:w="66"/><text x="52.2633%" y="719.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (66 samples, 0.05%)</title><rect x="52.0133%" y="693" width="0.0503%" height="15" fill="rgb(217,132,38)" fg:x="68294" fg:w="66"/><text x="52.2633%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (66 samples, 0.05%)</title><rect x="52.0133%" y="677" width="0.0503%" height="15" fill="rgb(242,146,4)" fg:x="68294" fg:w="66"/><text x="52.2633%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (62 samples, 0.05%)</title><rect x="52.0164%" y="661" width="0.0472%" height="15" fill="rgb(212,61,9)" fg:x="68298" fg:w="62"/><text x="52.2664%" y="671.50"></text></g><g><title>core::hash::sip::u8to64_le (17 samples, 0.01%)</title><rect x="52.0506%" y="645" width="0.0129%" height="15" fill="rgb(247,126,22)" fg:x="68343" fg:w="17"/><text x="52.3006%" y="655.50"></text></g><g><title>torrust_tracker::servers::udp::connection_cookie::check (285 samples, 0.22%)</title><rect x="51.8739%" y="773" width="0.2171%" height="15" fill="rgb(220,196,2)" fg:x="68111" fg:w="285"/><text x="52.1239%" y="783.50"></text></g><g><title>torrust_tracker::servers::udp::connection_cookie::cookie_builder::get_last_time_extent (36 samples, 0.03%)</title><rect x="52.0636%" y="757" width="0.0274%" height="15" fill="rgb(208,46,4)" fg:x="68360" fg:w="36"/><text x="52.3136%" y="767.50"></text></g><g><title>torrust_tracker_clock::time_extent::Make::now (36 samples, 0.03%)</title><rect x="52.0636%" y="741" width="0.0274%" height="15" fill="rgb(252,104,46)" fg:x="68360" fg:w="36"/><text x="52.3136%" y="751.50"></text></g><g><title>torrust_tracker_clock::clock::working::&lt;impl torrust_tracker_clock::clock::Time for torrust_tracker_clock::clock::Clock&lt;torrust_tracker_clock::clock::working::WorkingClock&gt;&gt;::now (24 samples, 0.02%)</title><rect x="52.0727%" y="725" width="0.0183%" height="15" fill="rgb(237,152,48)" fg:x="68372" fg:w="24"/><text x="52.3227%" y="735.50"></text></g><g><title>std::time::SystemTime::now (19 samples, 0.01%)</title><rect x="52.0765%" y="709" width="0.0145%" height="15" fill="rgb(221,59,37)" fg:x="68377" fg:w="19"/><text x="52.3265%" y="719.50"></text></g><g><title>std::sys::pal::unix::time::SystemTime::now (19 samples, 0.01%)</title><rect x="52.0765%" y="693" width="0.0145%" height="15" fill="rgb(209,202,51)" fg:x="68377" fg:w="19"/><text x="52.3265%" y="703.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_announce::{{closure}} (1,954 samples, 1.49%)</title><rect x="50.6234%" y="789" width="1.4882%" height="15" fill="rgb(228,81,30)" fg:x="66469" fg:w="1954"/><text x="50.8734%" y="799.50"></text></g><g><title>&lt;core::net::socket_addr::SocketAddr as core::hash::Hash&gt;::hash (24 samples, 0.02%)</title><rect x="52.1138%" y="741" width="0.0183%" height="15" fill="rgb(227,42,39)" fg:x="68426" fg:w="24"/><text x="52.3638%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (18 samples, 0.01%)</title><rect x="52.1321%" y="629" width="0.0137%" height="15" fill="rgb(221,26,2)" fg:x="68450" fg:w="18"/><text x="52.3821%" y="639.50"></text></g><g><title>&lt;core::time::Nanoseconds as core::hash::Hash&gt;::hash (20 samples, 0.02%)</title><rect x="52.1321%" y="709" width="0.0152%" height="15" fill="rgb(254,61,31)" fg:x="68450" fg:w="20"/><text x="52.3821%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (20 samples, 0.02%)</title><rect x="52.1321%" y="693" width="0.0152%" height="15" fill="rgb(222,173,38)" fg:x="68450" fg:w="20"/><text x="52.3821%" y="703.50"></text></g><g><title>core::hash::Hasher::write_u32 (20 samples, 0.02%)</title><rect x="52.1321%" y="677" width="0.0152%" height="15" fill="rgb(218,50,12)" fg:x="68450" fg:w="20"/><text x="52.3821%" y="687.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (20 samples, 0.02%)</title><rect x="52.1321%" y="661" width="0.0152%" height="15" fill="rgb(223,88,40)" fg:x="68450" fg:w="20"/><text x="52.3821%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (20 samples, 0.02%)</title><rect x="52.1321%" y="645" width="0.0152%" height="15" fill="rgb(237,54,19)" fg:x="68450" fg:w="20"/><text x="52.3821%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (44 samples, 0.03%)</title><rect x="52.1474%" y="645" width="0.0335%" height="15" fill="rgb(251,129,25)" fg:x="68470" fg:w="44"/><text x="52.3974%" y="655.50"></text></g><g><title>&lt;core::time::Duration as core::hash::Hash&gt;::hash (65 samples, 0.05%)</title><rect x="52.1321%" y="725" width="0.0495%" height="15" fill="rgb(238,97,19)" fg:x="68450" fg:w="65"/><text x="52.3821%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (45 samples, 0.03%)</title><rect x="52.1474%" y="709" width="0.0343%" height="15" fill="rgb(240,169,18)" fg:x="68470" fg:w="45"/><text x="52.3974%" y="719.50"></text></g><g><title>core::hash::Hasher::write_u64 (45 samples, 0.03%)</title><rect x="52.1474%" y="693" width="0.0343%" height="15" fill="rgb(230,187,49)" fg:x="68470" fg:w="45"/><text x="52.3974%" y="703.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (45 samples, 0.03%)</title><rect x="52.1474%" y="677" width="0.0343%" height="15" fill="rgb(209,44,26)" fg:x="68470" fg:w="45"/><text x="52.3974%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (45 samples, 0.03%)</title><rect x="52.1474%" y="661" width="0.0343%" height="15" fill="rgb(244,0,6)" fg:x="68470" fg:w="45"/><text x="52.3974%" y="671.50"></text></g><g><title>&lt;torrust_tracker_clock::time_extent::TimeExtent as core::hash::Hash&gt;::hash (105 samples, 0.08%)</title><rect x="52.1321%" y="741" width="0.0800%" height="15" fill="rgb(248,18,21)" fg:x="68450" fg:w="105"/><text x="52.3821%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (40 samples, 0.03%)</title><rect x="52.1816%" y="725" width="0.0305%" height="15" fill="rgb(245,180,19)" fg:x="68515" fg:w="40"/><text x="52.4316%" y="735.50"></text></g><g><title>core::hash::Hasher::write_u64 (40 samples, 0.03%)</title><rect x="52.1816%" y="709" width="0.0305%" height="15" fill="rgb(252,118,36)" fg:x="68515" fg:w="40"/><text x="52.4316%" y="719.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (40 samples, 0.03%)</title><rect x="52.1816%" y="693" width="0.0305%" height="15" fill="rgb(210,224,19)" fg:x="68515" fg:w="40"/><text x="52.4316%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (40 samples, 0.03%)</title><rect x="52.1816%" y="677" width="0.0305%" height="15" fill="rgb(218,30,24)" fg:x="68515" fg:w="40"/><text x="52.4316%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (39 samples, 0.03%)</title><rect x="52.1824%" y="661" width="0.0297%" height="15" fill="rgb(219,75,50)" fg:x="68516" fg:w="39"/><text x="52.4324%" y="671.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (34 samples, 0.03%)</title><rect x="52.2136%" y="709" width="0.0259%" height="15" fill="rgb(234,72,50)" fg:x="68557" fg:w="34"/><text x="52.4636%" y="719.50"></text></g><g><title>core::hash::Hasher::write_usize (34 samples, 0.03%)</title><rect x="52.2136%" y="693" width="0.0259%" height="15" fill="rgb(219,100,48)" fg:x="68557" fg:w="34"/><text x="52.4636%" y="703.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (34 samples, 0.03%)</title><rect x="52.2136%" y="677" width="0.0259%" height="15" fill="rgb(253,5,41)" fg:x="68557" fg:w="34"/><text x="52.4636%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (34 samples, 0.03%)</title><rect x="52.2136%" y="661" width="0.0259%" height="15" fill="rgb(247,181,11)" fg:x="68557" fg:w="34"/><text x="52.4636%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (33 samples, 0.03%)</title><rect x="52.2144%" y="645" width="0.0251%" height="15" fill="rgb(222,223,25)" fg:x="68558" fg:w="33"/><text x="52.4644%" y="655.50"></text></g><g><title>torrust_tracker::servers::udp::connection_cookie::cookie_builder::build (231 samples, 0.18%)</title><rect x="52.1138%" y="757" width="0.1759%" height="15" fill="rgb(214,198,28)" fg:x="68426" fg:w="231"/><text x="52.3638%" y="767.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (100 samples, 0.08%)</title><rect x="52.2136%" y="741" width="0.0762%" height="15" fill="rgb(230,46,43)" fg:x="68557" fg:w="100"/><text x="52.4636%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (100 samples, 0.08%)</title><rect x="52.2136%" y="725" width="0.0762%" height="15" fill="rgb(233,65,53)" fg:x="68557" fg:w="100"/><text x="52.4636%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (66 samples, 0.05%)</title><rect x="52.2395%" y="709" width="0.0503%" height="15" fill="rgb(221,121,27)" fg:x="68591" fg:w="66"/><text x="52.4895%" y="719.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (66 samples, 0.05%)</title><rect x="52.2395%" y="693" width="0.0503%" height="15" fill="rgb(247,70,47)" fg:x="68591" fg:w="66"/><text x="52.4895%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (66 samples, 0.05%)</title><rect x="52.2395%" y="677" width="0.0503%" height="15" fill="rgb(228,85,35)" fg:x="68591" fg:w="66"/><text x="52.4895%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (61 samples, 0.05%)</title><rect x="52.2433%" y="661" width="0.0465%" height="15" fill="rgb(209,50,18)" fg:x="68596" fg:w="61"/><text x="52.4933%" y="671.50"></text></g><g><title>core::hash::sip::u8to64_le (16 samples, 0.01%)</title><rect x="52.2776%" y="645" width="0.0122%" height="15" fill="rgb(250,19,35)" fg:x="68641" fg:w="16"/><text x="52.5276%" y="655.50"></text></g><g><title>_int_free (16 samples, 0.01%)</title><rect x="52.2982%" y="677" width="0.0122%" height="15" fill="rgb(253,107,29)" fg:x="68668" fg:w="16"/><text x="52.5482%" y="687.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_connect::{{closure}} (270 samples, 0.21%)</title><rect x="52.1116%" y="789" width="0.2056%" height="15" fill="rgb(252,179,29)" fg:x="68423" fg:w="270"/><text x="52.3616%" y="799.50"></text></g><g><title>torrust_tracker::servers::udp::connection_cookie::make (268 samples, 0.20%)</title><rect x="52.1131%" y="773" width="0.2041%" height="15" fill="rgb(238,194,6)" fg:x="68425" fg:w="268"/><text x="52.3631%" y="783.50"></text></g><g><title>torrust_tracker::servers::udp::connection_cookie::cookie_builder::get_last_time_extent (36 samples, 0.03%)</title><rect x="52.2898%" y="757" width="0.0274%" height="15" fill="rgb(238,164,29)" fg:x="68657" fg:w="36"/><text x="52.5398%" y="767.50"></text></g><g><title>torrust_tracker_clock::time_extent::Make::now (35 samples, 0.03%)</title><rect x="52.2905%" y="741" width="0.0267%" height="15" fill="rgb(224,25,9)" fg:x="68658" fg:w="35"/><text x="52.5405%" y="751.50"></text></g><g><title>torrust_tracker_clock::clock::working::&lt;impl torrust_tracker_clock::clock::Time for torrust_tracker_clock::clock::Clock&lt;torrust_tracker_clock::clock::working::WorkingClock&gt;&gt;::now (31 samples, 0.02%)</title><rect x="52.2936%" y="725" width="0.0236%" height="15" fill="rgb(244,153,23)" fg:x="68662" fg:w="31"/><text x="52.5436%" y="735.50"></text></g><g><title>std::time::SystemTime::now (26 samples, 0.02%)</title><rect x="52.2974%" y="709" width="0.0198%" height="15" fill="rgb(212,203,14)" fg:x="68667" fg:w="26"/><text x="52.5474%" y="719.50"></text></g><g><title>std::sys::pal::unix::time::SystemTime::now (26 samples, 0.02%)</title><rect x="52.2974%" y="693" width="0.0198%" height="15" fill="rgb(220,164,20)" fg:x="68667" fg:w="26"/><text x="52.5474%" y="703.50"></text></g><g><title>torrust_tracker::core::ScrapeData::add_file (19 samples, 0.01%)</title><rect x="52.3279%" y="757" width="0.0145%" height="15" fill="rgb(222,203,48)" fg:x="68707" fg:w="19"/><text x="52.5779%" y="767.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (19 samples, 0.01%)</title><rect x="52.3279%" y="741" width="0.0145%" height="15" fill="rgb(215,159,22)" fg:x="68707" fg:w="19"/><text x="52.5779%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (19 samples, 0.01%)</title><rect x="52.3279%" y="725" width="0.0145%" height="15" fill="rgb(216,183,47)" fg:x="68707" fg:w="19"/><text x="52.5779%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (16 samples, 0.01%)</title><rect x="52.3301%" y="709" width="0.0122%" height="15" fill="rgb(229,195,25)" fg:x="68710" fg:w="16"/><text x="52.5801%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (16 samples, 0.01%)</title><rect x="52.3301%" y="693" width="0.0122%" height="15" fill="rgb(224,132,51)" fg:x="68710" fg:w="16"/><text x="52.5801%" y="703.50"></text></g><g><title>&lt;torrust_tracker_primitives::info_hash::InfoHash as core::cmp::Ord&gt;::cmp (17 samples, 0.01%)</title><rect x="52.3766%" y="661" width="0.0129%" height="15" fill="rgb(240,63,7)" fg:x="68771" fg:w="17"/><text x="52.6266%" y="671.50"></text></g><g><title>core::array::&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (17 samples, 0.01%)</title><rect x="52.3766%" y="645" width="0.0129%" height="15" fill="rgb(249,182,41)" fg:x="68771" fg:w="17"/><text x="52.6266%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (17 samples, 0.01%)</title><rect x="52.3766%" y="629" width="0.0129%" height="15" fill="rgb(243,47,26)" fg:x="68771" fg:w="17"/><text x="52.6266%" y="639.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (17 samples, 0.01%)</title><rect x="52.3766%" y="613" width="0.0129%" height="15" fill="rgb(233,48,2)" fg:x="68771" fg:w="17"/><text x="52.6266%" y="623.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (17 samples, 0.01%)</title><rect x="52.3766%" y="597" width="0.0129%" height="15" fill="rgb(244,165,34)" fg:x="68771" fg:w="17"/><text x="52.6266%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (61 samples, 0.05%)</title><rect x="52.3454%" y="725" width="0.0465%" height="15" fill="rgb(207,89,7)" fg:x="68730" fg:w="61"/><text x="52.5954%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (61 samples, 0.05%)</title><rect x="52.3454%" y="709" width="0.0465%" height="15" fill="rgb(244,117,36)" fg:x="68730" fg:w="61"/><text x="52.5954%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (53 samples, 0.04%)</title><rect x="52.3515%" y="693" width="0.0404%" height="15" fill="rgb(226,144,34)" fg:x="68738" fg:w="53"/><text x="52.6015%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (53 samples, 0.04%)</title><rect x="52.3515%" y="677" width="0.0404%" height="15" fill="rgb(213,23,19)" fg:x="68738" fg:w="53"/><text x="52.6015%" y="687.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_request::{{closure}} (2,336 samples, 1.78%)</title><rect x="50.6150%" y="805" width="1.7791%" height="15" fill="rgb(217,75,12)" fg:x="66458" fg:w="2336"/><text x="50.8650%" y="815.50">t..</text></g><g><title>torrust_tracker::servers::udp::handlers::handle_scrape::{{closure}} (101 samples, 0.08%)</title><rect x="52.3172%" y="789" width="0.0769%" height="15" fill="rgb(224,159,17)" fg:x="68693" fg:w="101"/><text x="52.5672%" y="799.50"></text></g><g><title>torrust_tracker::core::Tracker::scrape::{{closure}} (90 samples, 0.07%)</title><rect x="52.3256%" y="773" width="0.0685%" height="15" fill="rgb(217,118,1)" fg:x="68704" fg:w="90"/><text x="52.5756%" y="783.50"></text></g><g><title>torrust_tracker::core::Tracker::get_swarm_metadata (68 samples, 0.05%)</title><rect x="52.3423%" y="757" width="0.0518%" height="15" fill="rgb(232,180,48)" fg:x="68726" fg:w="68"/><text x="52.5923%" y="767.50"></text></g><g><title>torrust_tracker_torrent_repository::repository::rw_lock_std_mutex_std::&lt;impl torrust_tracker_torrent_repository::repository::Repository&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt; for torrust_tracker_torrent_repository::repository::RwLockStd&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;&gt;::get (64 samples, 0.05%)</title><rect x="52.3454%" y="741" width="0.0487%" height="15" fill="rgb(230,27,33)" fg:x="68730" fg:w="64"/><text x="52.5954%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (19 samples, 0.01%)</title><rect x="52.4840%" y="597" width="0.0145%" height="15" fill="rgb(205,31,21)" fg:x="68912" fg:w="19"/><text x="52.7340%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (21 samples, 0.02%)</title><rect x="52.4840%" y="661" width="0.0160%" height="15" fill="rgb(253,59,4)" fg:x="68912" fg:w="21"/><text x="52.7340%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (21 samples, 0.02%)</title><rect x="52.4840%" y="645" width="0.0160%" height="15" fill="rgb(224,201,9)" fg:x="68912" fg:w="21"/><text x="52.7340%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (21 samples, 0.02%)</title><rect x="52.4840%" y="629" width="0.0160%" height="15" fill="rgb(229,206,30)" fg:x="68912" fg:w="21"/><text x="52.7340%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (21 samples, 0.02%)</title><rect x="52.4840%" y="613" width="0.0160%" height="15" fill="rgb(212,67,47)" fg:x="68912" fg:w="21"/><text x="52.7340%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (23 samples, 0.02%)</title><rect x="52.4840%" y="741" width="0.0175%" height="15" fill="rgb(211,96,50)" fg:x="68912" fg:w="23"/><text x="52.7340%" y="751.50"></text></g><g><title>alloc::string::String::push_str (23 samples, 0.02%)</title><rect x="52.4840%" y="725" width="0.0175%" height="15" fill="rgb(252,114,18)" fg:x="68912" fg:w="23"/><text x="52.7340%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (23 samples, 0.02%)</title><rect x="52.4840%" y="709" width="0.0175%" height="15" fill="rgb(223,58,37)" fg:x="68912" fg:w="23"/><text x="52.7340%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (23 samples, 0.02%)</title><rect x="52.4840%" y="693" width="0.0175%" height="15" fill="rgb(237,70,4)" fg:x="68912" fg:w="23"/><text x="52.7340%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (23 samples, 0.02%)</title><rect x="52.4840%" y="677" width="0.0175%" height="15" fill="rgb(244,85,46)" fg:x="68912" fg:w="23"/><text x="52.7340%" y="687.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (85 samples, 0.06%)</title><rect x="52.4482%" y="773" width="0.0647%" height="15" fill="rgb(223,39,52)" fg:x="68865" fg:w="85"/><text x="52.6982%" y="783.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (78 samples, 0.06%)</title><rect x="52.4535%" y="757" width="0.0594%" height="15" fill="rgb(218,200,14)" fg:x="68872" fg:w="78"/><text x="52.7035%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (15 samples, 0.01%)</title><rect x="52.5244%" y="741" width="0.0114%" height="15" fill="rgb(208,171,16)" fg:x="68965" fg:w="15"/><text x="52.7744%" y="751.50"></text></g><g><title>alloc::string::String::push_str (15 samples, 0.01%)</title><rect x="52.5244%" y="725" width="0.0114%" height="15" fill="rgb(234,200,18)" fg:x="68965" fg:w="15"/><text x="52.7744%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (15 samples, 0.01%)</title><rect x="52.5244%" y="709" width="0.0114%" height="15" fill="rgb(228,45,11)" fg:x="68965" fg:w="15"/><text x="52.7744%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (15 samples, 0.01%)</title><rect x="52.5244%" y="693" width="0.0114%" height="15" fill="rgb(237,182,11)" fg:x="68965" fg:w="15"/><text x="52.7744%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (15 samples, 0.01%)</title><rect x="52.5244%" y="677" width="0.0114%" height="15" fill="rgb(241,175,49)" fg:x="68965" fg:w="15"/><text x="52.7744%" y="687.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (37 samples, 0.03%)</title><rect x="52.5129%" y="773" width="0.0282%" height="15" fill="rgb(247,38,35)" fg:x="68950" fg:w="37"/><text x="52.7629%" y="783.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (36 samples, 0.03%)</title><rect x="52.5137%" y="757" width="0.0274%" height="15" fill="rgb(228,39,49)" fg:x="68951" fg:w="36"/><text x="52.7637%" y="767.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (141 samples, 0.11%)</title><rect x="52.4345%" y="789" width="0.1074%" height="15" fill="rgb(226,101,26)" fg:x="68847" fg:w="141"/><text x="52.6845%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (34 samples, 0.03%)</title><rect x="52.5442%" y="789" width="0.0259%" height="15" fill="rgb(206,141,19)" fg:x="68991" fg:w="34"/><text x="52.7942%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (28 samples, 0.02%)</title><rect x="52.5754%" y="725" width="0.0213%" height="15" fill="rgb(211,200,13)" fg:x="69032" fg:w="28"/><text x="52.8254%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (28 samples, 0.02%)</title><rect x="52.5754%" y="709" width="0.0213%" height="15" fill="rgb(241,121,6)" fg:x="69032" fg:w="28"/><text x="52.8254%" y="719.50"></text></g><g><title>__rdl_dealloc (28 samples, 0.02%)</title><rect x="52.5754%" y="693" width="0.0213%" height="15" fill="rgb(234,221,29)" fg:x="69032" fg:w="28"/><text x="52.8254%" y="703.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (28 samples, 0.02%)</title><rect x="52.5754%" y="677" width="0.0213%" height="15" fill="rgb(229,136,5)" fg:x="69032" fg:w="28"/><text x="52.8254%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (55 samples, 0.04%)</title><rect x="52.5700%" y="789" width="0.0419%" height="15" fill="rgb(238,36,11)" fg:x="69025" fg:w="55"/><text x="52.8200%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (55 samples, 0.04%)</title><rect x="52.5700%" y="773" width="0.0419%" height="15" fill="rgb(251,55,41)" fg:x="69025" fg:w="55"/><text x="52.8200%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (55 samples, 0.04%)</title><rect x="52.5700%" y="757" width="0.0419%" height="15" fill="rgb(242,34,40)" fg:x="69025" fg:w="55"/><text x="52.8200%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (55 samples, 0.04%)</title><rect x="52.5700%" y="741" width="0.0419%" height="15" fill="rgb(215,42,17)" fg:x="69025" fg:w="55"/><text x="52.8200%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (20 samples, 0.02%)</title><rect x="52.5967%" y="725" width="0.0152%" height="15" fill="rgb(207,44,46)" fg:x="69060" fg:w="20"/><text x="52.8467%" y="735.50"></text></g><g><title>torrust_tracker::servers::udp::logging::map_action_name (16 samples, 0.01%)</title><rect x="52.6142%" y="789" width="0.0122%" height="15" fill="rgb(211,206,28)" fg:x="69083" fg:w="16"/><text x="52.8642%" y="799.50"></text></g><g><title>binascii::bin2hex (51 samples, 0.04%)</title><rect x="52.6355%" y="741" width="0.0388%" height="15" fill="rgb(237,167,16)" fg:x="69111" fg:w="51"/><text x="52.8855%" y="751.50"></text></g><g><title>&lt;torrust_tracker_primitives::info_hash::InfoHash as core::fmt::Display&gt;::fmt (16 samples, 0.01%)</title><rect x="52.6744%" y="725" width="0.0122%" height="15" fill="rgb(233,66,6)" fg:x="69162" fg:w="16"/><text x="52.9244%" y="735.50"></text></g><g><title>core::fmt::write (25 samples, 0.02%)</title><rect x="52.6889%" y="725" width="0.0190%" height="15" fill="rgb(246,123,29)" fg:x="69181" fg:w="25"/><text x="52.9389%" y="735.50"></text></g><g><title>core::fmt::rt::Argument::fmt (15 samples, 0.01%)</title><rect x="52.6965%" y="709" width="0.0114%" height="15" fill="rgb(209,62,40)" fg:x="69191" fg:w="15"/><text x="52.9465%" y="719.50"></text></g><g><title>core::fmt::Formatter::write_fmt (87 samples, 0.07%)</title><rect x="52.6744%" y="741" width="0.0663%" height="15" fill="rgb(218,4,25)" fg:x="69162" fg:w="87"/><text x="52.9244%" y="751.50"></text></g><g><title>core::str::converts::from_utf8 (43 samples, 0.03%)</title><rect x="52.7079%" y="725" width="0.0327%" height="15" fill="rgb(253,91,49)" fg:x="69206" fg:w="43"/><text x="52.9579%" y="735.50"></text></g><g><title>core::str::validations::run_utf8_validation (37 samples, 0.03%)</title><rect x="52.7125%" y="709" width="0.0282%" height="15" fill="rgb(228,155,29)" fg:x="69212" fg:w="37"/><text x="52.9625%" y="719.50"></text></g><g><title>torrust_tracker_primitives::info_hash::InfoHash::to_hex_string (161 samples, 0.12%)</title><rect x="52.6264%" y="789" width="0.1226%" height="15" fill="rgb(243,57,37)" fg:x="69099" fg:w="161"/><text x="52.8764%" y="799.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (161 samples, 0.12%)</title><rect x="52.6264%" y="773" width="0.1226%" height="15" fill="rgb(244,167,17)" fg:x="69099" fg:w="161"/><text x="52.8764%" y="783.50"></text></g><g><title>&lt;torrust_tracker_primitives::info_hash::InfoHash as core::fmt::Display&gt;::fmt (156 samples, 0.12%)</title><rect x="52.6302%" y="757" width="0.1188%" height="15" fill="rgb(207,181,38)" fg:x="69104" fg:w="156"/><text x="52.8802%" y="767.50"></text></g><g><title>torrust_tracker::servers::udp::logging::log_request (479 samples, 0.36%)</title><rect x="52.3941%" y="805" width="0.3648%" height="15" fill="rgb(211,8,23)" fg:x="68794" fg:w="479"/><text x="52.6441%" y="815.50"></text></g><g><title>[[vdso]] (51 samples, 0.04%)</title><rect x="52.8153%" y="581" width="0.0388%" height="15" fill="rgb(235,11,44)" fg:x="69347" fg:w="51"/><text x="53.0653%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (56 samples, 0.04%)</title><rect x="52.8145%" y="597" width="0.0427%" height="15" fill="rgb(248,18,52)" fg:x="69346" fg:w="56"/><text x="53.0645%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (64 samples, 0.05%)</title><rect x="52.8092%" y="661" width="0.0487%" height="15" fill="rgb(208,4,7)" fg:x="69339" fg:w="64"/><text x="53.0592%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (64 samples, 0.05%)</title><rect x="52.8092%" y="645" width="0.0487%" height="15" fill="rgb(240,17,39)" fg:x="69339" fg:w="64"/><text x="53.0592%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (64 samples, 0.05%)</title><rect x="52.8092%" y="629" width="0.0487%" height="15" fill="rgb(207,170,3)" fg:x="69339" fg:w="64"/><text x="53.0592%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (64 samples, 0.05%)</title><rect x="52.8092%" y="613" width="0.0487%" height="15" fill="rgb(236,100,52)" fg:x="69339" fg:w="64"/><text x="53.0592%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (65 samples, 0.05%)</title><rect x="52.8092%" y="741" width="0.0495%" height="15" fill="rgb(246,78,51)" fg:x="69339" fg:w="65"/><text x="53.0592%" y="751.50"></text></g><g><title>alloc::string::String::push_str (65 samples, 0.05%)</title><rect x="52.8092%" y="725" width="0.0495%" height="15" fill="rgb(211,17,15)" fg:x="69339" fg:w="65"/><text x="53.0592%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (65 samples, 0.05%)</title><rect x="52.8092%" y="709" width="0.0495%" height="15" fill="rgb(209,59,46)" fg:x="69339" fg:w="65"/><text x="53.0592%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (65 samples, 0.05%)</title><rect x="52.8092%" y="693" width="0.0495%" height="15" fill="rgb(210,92,25)" fg:x="69339" fg:w="65"/><text x="53.0592%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (65 samples, 0.05%)</title><rect x="52.8092%" y="677" width="0.0495%" height="15" fill="rgb(238,174,52)" fg:x="69339" fg:w="65"/><text x="53.0592%" y="687.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (114 samples, 0.09%)</title><rect x="52.7947%" y="773" width="0.0868%" height="15" fill="rgb(230,73,7)" fg:x="69320" fg:w="114"/><text x="53.0447%" y="783.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (110 samples, 0.08%)</title><rect x="52.7978%" y="757" width="0.0838%" height="15" fill="rgb(243,124,40)" fg:x="69324" fg:w="110"/><text x="53.0478%" y="767.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (132 samples, 0.10%)</title><rect x="52.7848%" y="789" width="0.1005%" height="15" fill="rgb(244,170,11)" fg:x="69307" fg:w="132"/><text x="53.0348%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (20 samples, 0.02%)</title><rect x="52.8876%" y="789" width="0.0152%" height="15" fill="rgb(207,114,54)" fg:x="69442" fg:w="20"/><text x="53.1376%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (22 samples, 0.02%)</title><rect x="52.9029%" y="789" width="0.0168%" height="15" fill="rgb(205,42,20)" fg:x="69462" fg:w="22"/><text x="53.1529%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (22 samples, 0.02%)</title><rect x="52.9029%" y="773" width="0.0168%" height="15" fill="rgb(230,30,28)" fg:x="69462" fg:w="22"/><text x="53.1529%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (22 samples, 0.02%)</title><rect x="52.9029%" y="757" width="0.0168%" height="15" fill="rgb(205,73,54)" fg:x="69462" fg:w="22"/><text x="53.1529%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="52.9029%" y="741" width="0.0168%" height="15" fill="rgb(254,227,23)" fg:x="69462" fg:w="22"/><text x="53.1529%" y="751.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_packet::{{closure}} (8,883 samples, 6.77%)</title><rect x="46.1748%" y="821" width="6.7654%" height="15" fill="rgb(228,202,34)" fg:x="60628" fg:w="8883"/><text x="46.4248%" y="831.50">torrust_t..</text></g><g><title>torrust_tracker::servers::udp::logging::log_response (238 samples, 0.18%)</title><rect x="52.7589%" y="805" width="0.1813%" height="15" fill="rgb(222,225,37)" fg:x="69273" fg:w="238"/><text x="53.0089%" y="815.50"></text></g><g><title>__GI___lll_lock_wait_private (14 samples, 0.01%)</title><rect x="53.0643%" y="645" width="0.0107%" height="15" fill="rgb(221,14,54)" fg:x="69674" fg:w="14"/><text x="53.3143%" y="655.50"></text></g><g><title>futex_wait (14 samples, 0.01%)</title><rect x="53.0643%" y="629" width="0.0107%" height="15" fill="rgb(254,102,2)" fg:x="69674" fg:w="14"/><text x="53.3143%" y="639.50"></text></g><g><title>__GI___lll_lock_wake_private (20 samples, 0.02%)</title><rect x="53.0750%" y="645" width="0.0152%" height="15" fill="rgb(232,104,17)" fg:x="69688" fg:w="20"/><text x="53.3250%" y="655.50"></text></g><g><title>[unknown] (20 samples, 0.02%)</title><rect x="53.0750%" y="629" width="0.0152%" height="15" fill="rgb(250,220,14)" fg:x="69688" fg:w="20"/><text x="53.3250%" y="639.50"></text></g><g><title>[unknown] (20 samples, 0.02%)</title><rect x="53.0750%" y="613" width="0.0152%" height="15" fill="rgb(241,158,9)" fg:x="69688" fg:w="20"/><text x="53.3250%" y="623.50"></text></g><g><title>[unknown] (20 samples, 0.02%)</title><rect x="53.0750%" y="597" width="0.0152%" height="15" fill="rgb(246,9,43)" fg:x="69688" fg:w="20"/><text x="53.3250%" y="607.50"></text></g><g><title>[unknown] (20 samples, 0.02%)</title><rect x="53.0750%" y="581" width="0.0152%" height="15" fill="rgb(206,73,33)" fg:x="69688" fg:w="20"/><text x="53.3250%" y="591.50"></text></g><g><title>[unknown] (17 samples, 0.01%)</title><rect x="53.0773%" y="565" width="0.0129%" height="15" fill="rgb(222,79,8)" fg:x="69691" fg:w="17"/><text x="53.3273%" y="575.50"></text></g><g><title>_int_malloc (191 samples, 0.15%)</title><rect x="53.0902%" y="645" width="0.1455%" height="15" fill="rgb(234,8,54)" fg:x="69708" fg:w="191"/><text x="53.3402%" y="655.50"></text></g><g><title>__libc_calloc (238 samples, 0.18%)</title><rect x="53.0567%" y="661" width="0.1813%" height="15" fill="rgb(209,134,38)" fg:x="69664" fg:w="238"/><text x="53.3067%" y="671.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (34 samples, 0.03%)</title><rect x="53.2380%" y="661" width="0.0259%" height="15" fill="rgb(230,127,29)" fg:x="69902" fg:w="34"/><text x="53.4880%" y="671.50"></text></g><g><title>alloc::vec::from_elem (316 samples, 0.24%)</title><rect x="53.0415%" y="805" width="0.2407%" height="15" fill="rgb(242,44,41)" fg:x="69644" fg:w="316"/><text x="53.2915%" y="815.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (316 samples, 0.24%)</title><rect x="53.0415%" y="789" width="0.2407%" height="15" fill="rgb(222,56,43)" fg:x="69644" fg:w="316"/><text x="53.2915%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (316 samples, 0.24%)</title><rect x="53.0415%" y="773" width="0.2407%" height="15" fill="rgb(238,39,47)" fg:x="69644" fg:w="316"/><text x="53.2915%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (316 samples, 0.24%)</title><rect x="53.0415%" y="757" width="0.2407%" height="15" fill="rgb(226,79,43)" fg:x="69644" fg:w="316"/><text x="53.2915%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (312 samples, 0.24%)</title><rect x="53.0445%" y="741" width="0.2376%" height="15" fill="rgb(242,105,53)" fg:x="69648" fg:w="312"/><text x="53.2945%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (312 samples, 0.24%)</title><rect x="53.0445%" y="725" width="0.2376%" height="15" fill="rgb(251,132,46)" fg:x="69648" fg:w="312"/><text x="53.2945%" y="735.50"></text></g><g><title>alloc::alloc::alloc_zeroed (312 samples, 0.24%)</title><rect x="53.0445%" y="709" width="0.2376%" height="15" fill="rgb(231,77,14)" fg:x="69648" fg:w="312"/><text x="53.2945%" y="719.50"></text></g><g><title>__rdl_alloc_zeroed (312 samples, 0.24%)</title><rect x="53.0445%" y="693" width="0.2376%" height="15" fill="rgb(240,135,9)" fg:x="69648" fg:w="312"/><text x="53.2945%" y="703.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (312 samples, 0.24%)</title><rect x="53.0445%" y="677" width="0.2376%" height="15" fill="rgb(248,109,14)" fg:x="69648" fg:w="312"/><text x="53.2945%" y="687.50"></text></g><g><title>byteorder::ByteOrder::write_i32 (18 samples, 0.01%)</title><rect x="53.3659%" y="773" width="0.0137%" height="15" fill="rgb(227,146,52)" fg:x="70070" fg:w="18"/><text x="53.6159%" y="783.50"></text></g><g><title>&lt;byteorder::BigEndian as byteorder::ByteOrder&gt;::write_u32 (18 samples, 0.01%)</title><rect x="53.3659%" y="757" width="0.0137%" height="15" fill="rgb(232,54,3)" fg:x="70070" fg:w="18"/><text x="53.6159%" y="767.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_be_bytes (18 samples, 0.01%)</title><rect x="53.3659%" y="741" width="0.0137%" height="15" fill="rgb(229,201,43)" fg:x="70070" fg:w="18"/><text x="53.6159%" y="751.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_be (18 samples, 0.01%)</title><rect x="53.3659%" y="725" width="0.0137%" height="15" fill="rgb(252,161,33)" fg:x="70070" fg:w="18"/><text x="53.6159%" y="735.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (18 samples, 0.01%)</title><rect x="53.3659%" y="709" width="0.0137%" height="15" fill="rgb(226,146,40)" fg:x="70070" fg:w="18"/><text x="53.6159%" y="719.50"></text></g><g><title>byteorder::io::WriteBytesExt::write_i32 (89 samples, 0.07%)</title><rect x="53.3659%" y="789" width="0.0678%" height="15" fill="rgb(219,47,25)" fg:x="70070" fg:w="89"/><text x="53.6159%" y="799.50"></text></g><g><title>std::io::Write::write_all (71 samples, 0.05%)</title><rect x="53.3796%" y="773" width="0.0541%" height="15" fill="rgb(250,135,13)" fg:x="70088" fg:w="71"/><text x="53.6296%" y="783.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;alloc::vec::Vec&lt;u8,A&gt;&gt; as std::io::Write&gt;::write (71 samples, 0.05%)</title><rect x="53.3796%" y="757" width="0.0541%" height="15" fill="rgb(219,229,18)" fg:x="70088" fg:w="71"/><text x="53.6296%" y="767.50"></text></g><g><title>std::io::cursor::vec_write (71 samples, 0.05%)</title><rect x="53.3796%" y="741" width="0.0541%" height="15" fill="rgb(217,152,27)" fg:x="70088" fg:w="71"/><text x="53.6296%" y="751.50"></text></g><g><title>std::io::cursor::vec_write_unchecked (51 samples, 0.04%)</title><rect x="53.3949%" y="725" width="0.0388%" height="15" fill="rgb(225,71,47)" fg:x="70108" fg:w="51"/><text x="53.6449%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from (51 samples, 0.04%)</title><rect x="53.3949%" y="709" width="0.0388%" height="15" fill="rgb(220,139,14)" fg:x="70108" fg:w="51"/><text x="53.6449%" y="719.50"></text></g><g><title>core::intrinsics::copy (51 samples, 0.04%)</title><rect x="53.3949%" y="693" width="0.0388%" height="15" fill="rgb(247,54,32)" fg:x="70108" fg:w="51"/><text x="53.6449%" y="703.50"></text></g><g><title>aquatic_udp_protocol::response::Response::write (227 samples, 0.17%)</title><rect x="53.2822%" y="805" width="0.1729%" height="15" fill="rgb(252,131,39)" fg:x="69960" fg:w="227"/><text x="53.5322%" y="815.50"></text></g><g><title>byteorder::io::WriteBytesExt::write_i64 (28 samples, 0.02%)</title><rect x="53.4337%" y="789" width="0.0213%" height="15" fill="rgb(210,108,39)" fg:x="70159" fg:w="28"/><text x="53.6837%" y="799.50"></text></g><g><title>std::io::Write::write_all (21 samples, 0.02%)</title><rect x="53.4390%" y="773" width="0.0160%" height="15" fill="rgb(205,23,29)" fg:x="70166" fg:w="21"/><text x="53.6890%" y="783.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;alloc::vec::Vec&lt;u8,A&gt;&gt; as std::io::Write&gt;::write (21 samples, 0.02%)</title><rect x="53.4390%" y="757" width="0.0160%" height="15" fill="rgb(246,139,46)" fg:x="70166" fg:w="21"/><text x="53.6890%" y="767.50"></text></g><g><title>std::io::cursor::vec_write (21 samples, 0.02%)</title><rect x="53.4390%" y="741" width="0.0160%" height="15" fill="rgb(250,81,26)" fg:x="70166" fg:w="21"/><text x="53.6890%" y="751.50"></text></g><g><title>std::io::cursor::vec_write_unchecked (21 samples, 0.02%)</title><rect x="53.4390%" y="725" width="0.0160%" height="15" fill="rgb(214,104,7)" fg:x="70166" fg:w="21"/><text x="53.6890%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from (21 samples, 0.02%)</title><rect x="53.4390%" y="709" width="0.0160%" height="15" fill="rgb(233,189,8)" fg:x="70166" fg:w="21"/><text x="53.6890%" y="719.50"></text></g><g><title>core::intrinsics::copy (21 samples, 0.02%)</title><rect x="53.4390%" y="693" width="0.0160%" height="15" fill="rgb(228,141,17)" fg:x="70166" fg:w="21"/><text x="53.6890%" y="703.50"></text></g><g><title>__GI___lll_lock_wake_private (17 samples, 0.01%)</title><rect x="53.5007%" y="661" width="0.0129%" height="15" fill="rgb(247,157,1)" fg:x="70247" fg:w="17"/><text x="53.7507%" y="671.50"></text></g><g><title>[unknown] (15 samples, 0.01%)</title><rect x="53.5023%" y="645" width="0.0114%" height="15" fill="rgb(249,225,5)" fg:x="70249" fg:w="15"/><text x="53.7523%" y="655.50"></text></g><g><title>[unknown] (14 samples, 0.01%)</title><rect x="53.5030%" y="629" width="0.0107%" height="15" fill="rgb(242,55,13)" fg:x="70250" fg:w="14"/><text x="53.7530%" y="639.50"></text></g><g><title>__GI___lll_lock_wait_private (16 samples, 0.01%)</title><rect x="53.6013%" y="645" width="0.0122%" height="15" fill="rgb(230,49,50)" fg:x="70379" fg:w="16"/><text x="53.8513%" y="655.50"></text></g><g><title>futex_wait (15 samples, 0.01%)</title><rect x="53.6020%" y="629" width="0.0114%" height="15" fill="rgb(241,111,38)" fg:x="70380" fg:w="15"/><text x="53.8520%" y="639.50"></text></g><g><title>[unknown] (14 samples, 0.01%)</title><rect x="53.6028%" y="613" width="0.0107%" height="15" fill="rgb(252,155,4)" fg:x="70381" fg:w="14"/><text x="53.8528%" y="623.50"></text></g><g><title>[unknown] (14 samples, 0.01%)</title><rect x="53.6028%" y="597" width="0.0107%" height="15" fill="rgb(212,69,32)" fg:x="70381" fg:w="14"/><text x="53.8528%" y="607.50"></text></g><g><title>[unknown] (14 samples, 0.01%)</title><rect x="53.6028%" y="581" width="0.0107%" height="15" fill="rgb(243,107,47)" fg:x="70381" fg:w="14"/><text x="53.8528%" y="591.50"></text></g><g><title>[unknown] (14 samples, 0.01%)</title><rect x="53.6028%" y="565" width="0.0107%" height="15" fill="rgb(247,130,12)" fg:x="70381" fg:w="14"/><text x="53.8528%" y="575.50"></text></g><g><title>_int_free (136 samples, 0.10%)</title><rect x="53.5137%" y="661" width="0.1036%" height="15" fill="rgb(233,74,16)" fg:x="70264" fg:w="136"/><text x="53.7637%" y="671.50"></text></g><g><title>__GI___libc_free (206 samples, 0.16%)</title><rect x="53.4619%" y="677" width="0.1569%" height="15" fill="rgb(208,58,18)" fg:x="70196" fg:w="206"/><text x="53.7119%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (211 samples, 0.16%)</title><rect x="53.4611%" y="741" width="0.1607%" height="15" fill="rgb(242,225,1)" fg:x="70195" fg:w="211"/><text x="53.7111%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (211 samples, 0.16%)</title><rect x="53.4611%" y="725" width="0.1607%" height="15" fill="rgb(249,39,40)" fg:x="70195" fg:w="211"/><text x="53.7111%" y="735.50"></text></g><g><title>__rdl_dealloc (211 samples, 0.16%)</title><rect x="53.4611%" y="709" width="0.1607%" height="15" fill="rgb(207,72,44)" fg:x="70195" fg:w="211"/><text x="53.7111%" y="719.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (211 samples, 0.16%)</title><rect x="53.4611%" y="693" width="0.1607%" height="15" fill="rgb(215,193,12)" fg:x="70195" fg:w="211"/><text x="53.7111%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::cursor::Cursor&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (224 samples, 0.17%)</title><rect x="53.4581%" y="805" width="0.1706%" height="15" fill="rgb(248,41,39)" fg:x="70191" fg:w="224"/><text x="53.7081%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (224 samples, 0.17%)</title><rect x="53.4581%" y="789" width="0.1706%" height="15" fill="rgb(253,85,4)" fg:x="70191" fg:w="224"/><text x="53.7081%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (224 samples, 0.17%)</title><rect x="53.4581%" y="773" width="0.1706%" height="15" fill="rgb(243,70,31)" fg:x="70191" fg:w="224"/><text x="53.7081%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (224 samples, 0.17%)</title><rect x="53.4581%" y="757" width="0.1706%" height="15" fill="rgb(253,195,26)" fg:x="70191" fg:w="224"/><text x="53.7081%" y="767.50"></text></g><g><title>std::io::cursor::Cursor&lt;T&gt;::new (56 samples, 0.04%)</title><rect x="53.6287%" y="805" width="0.0427%" height="15" fill="rgb(243,42,11)" fg:x="70415" fg:w="56"/><text x="53.8787%" y="815.50"></text></g><g><title>tokio::io::ready::Ready::intersection (23 samples, 0.02%)</title><rect x="53.9196%" y="725" width="0.0175%" height="15" fill="rgb(239,66,17)" fg:x="70797" fg:w="23"/><text x="54.1696%" y="735.50"></text></g><g><title>tokio::io::ready::Ready::from_interest (23 samples, 0.02%)</title><rect x="53.9196%" y="709" width="0.0175%" height="15" fill="rgb(217,132,21)" fg:x="70797" fg:w="23"/><text x="54.1696%" y="719.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::future::future::Future&gt;::poll (83 samples, 0.06%)</title><rect x="53.8747%" y="741" width="0.0632%" height="15" fill="rgb(252,202,21)" fg:x="70738" fg:w="83"/><text x="54.1247%" y="751.50"></text></g><g><title>[unknown] (32,674 samples, 24.88%)</title><rect x="54.0552%" y="613" width="24.8848%" height="15" fill="rgb(233,98,36)" fg:x="70975" fg:w="32674"/><text x="54.3052%" y="623.50">[unknown]</text></g><g><title>[unknown] (32,402 samples, 24.68%)</title><rect x="54.2623%" y="597" width="24.6776%" height="15" fill="rgb(216,153,54)" fg:x="71247" fg:w="32402"/><text x="54.5123%" y="607.50">[unknown]</text></g><g><title>[unknown] (32,272 samples, 24.58%)</title><rect x="54.3614%" y="581" width="24.5786%" height="15" fill="rgb(250,99,7)" fg:x="71377" fg:w="32272"/><text x="54.6114%" y="591.50">[unknown]</text></g><g><title>[unknown] (32,215 samples, 24.54%)</title><rect x="54.4048%" y="565" width="24.5352%" height="15" fill="rgb(207,56,50)" fg:x="71434" fg:w="32215"/><text x="54.6548%" y="575.50">[unknown]</text></g><g><title>[unknown] (31,174 samples, 23.74%)</title><rect x="55.1976%" y="549" width="23.7424%" height="15" fill="rgb(244,61,34)" fg:x="72475" fg:w="31174"/><text x="55.4476%" y="559.50">[unknown]</text></g><g><title>[unknown] (30,794 samples, 23.45%)</title><rect x="55.4870%" y="533" width="23.4530%" height="15" fill="rgb(241,50,38)" fg:x="72855" fg:w="30794"/><text x="55.7370%" y="543.50">[unknown]</text></g><g><title>[unknown] (30,036 samples, 22.88%)</title><rect x="56.0643%" y="517" width="22.8757%" height="15" fill="rgb(212,166,30)" fg:x="73613" fg:w="30036"/><text x="56.3143%" y="527.50">[unknown]</text></g><g><title>[unknown] (28,639 samples, 21.81%)</title><rect x="57.1283%" y="501" width="21.8117%" height="15" fill="rgb(249,127,32)" fg:x="75010" fg:w="28639"/><text x="57.3783%" y="511.50">[unknown]</text></g><g><title>[unknown] (27,908 samples, 21.25%)</title><rect x="57.6850%" y="485" width="21.2550%" height="15" fill="rgb(209,103,0)" fg:x="75741" fg:w="27908"/><text x="57.9350%" y="495.50">[unknown]</text></g><g><title>[unknown] (26,013 samples, 19.81%)</title><rect x="59.1283%" y="469" width="19.8117%" height="15" fill="rgb(238,209,51)" fg:x="77636" fg:w="26013"/><text x="59.3783%" y="479.50">[unknown]</text></g><g><title>[unknown] (23,181 samples, 17.65%)</title><rect x="61.2851%" y="453" width="17.6549%" height="15" fill="rgb(237,56,23)" fg:x="80468" fg:w="23181"/><text x="61.5351%" y="463.50">[unknown]</text></g><g><title>[unknown] (19,559 samples, 14.90%)</title><rect x="64.0437%" y="437" width="14.8963%" height="15" fill="rgb(215,153,46)" fg:x="84090" fg:w="19559"/><text x="64.2937%" y="447.50">[unknown]</text></g><g><title>[unknown] (18,052 samples, 13.75%)</title><rect x="65.1914%" y="421" width="13.7486%" height="15" fill="rgb(224,49,31)" fg:x="85597" fg:w="18052"/><text x="65.4414%" y="431.50">[unknown]</text></g><g><title>[unknown] (15,794 samples, 12.03%)</title><rect x="66.9111%" y="405" width="12.0288%" height="15" fill="rgb(250,18,42)" fg:x="87855" fg:w="15794"/><text x="67.1611%" y="415.50">[unknown]</text></g><g><title>[unknown] (14,740 samples, 11.23%)</title><rect x="67.7139%" y="389" width="11.2261%" height="15" fill="rgb(215,176,39)" fg:x="88909" fg:w="14740"/><text x="67.9639%" y="399.50">[unknown]</text></g><g><title>[unknown] (12,486 samples, 9.51%)</title><rect x="69.4305%" y="373" width="9.5094%" height="15" fill="rgb(223,77,29)" fg:x="91163" fg:w="12486"/><text x="69.6805%" y="383.50">[unknown]</text></g><g><title>[unknown] (11,317 samples, 8.62%)</title><rect x="70.3209%" y="357" width="8.6191%" height="15" fill="rgb(234,94,52)" fg:x="92332" fg:w="11317"/><text x="70.5709%" y="367.50">[unknown]</text></g><g><title>[unknown] (10,725 samples, 8.17%)</title><rect x="70.7717%" y="341" width="8.1683%" height="15" fill="rgb(220,154,50)" fg:x="92924" fg:w="10725"/><text x="71.0217%" y="351.50">[unknown]</text></g><g><title>[unknown] (10,017 samples, 7.63%)</title><rect x="71.3110%" y="325" width="7.6290%" height="15" fill="rgb(212,11,10)" fg:x="93632" fg:w="10017"/><text x="71.5610%" y="335.50">[unknown]</text></g><g><title>[unknown] (9,713 samples, 7.40%)</title><rect x="71.5425%" y="309" width="7.3975%" height="15" fill="rgb(205,166,19)" fg:x="93936" fg:w="9713"/><text x="71.7925%" y="319.50">[unknown]</text></g><g><title>[unknown] (8,432 samples, 6.42%)</title><rect x="72.5181%" y="293" width="6.4219%" height="15" fill="rgb(244,198,16)" fg:x="95217" fg:w="8432"/><text x="72.7681%" y="303.50">[unknown]</text></g><g><title>[unknown] (8,062 samples, 6.14%)</title><rect x="72.7999%" y="277" width="6.1401%" height="15" fill="rgb(219,69,12)" fg:x="95587" fg:w="8062"/><text x="73.0499%" y="287.50">[unknown]</text></g><g><title>[unknown] (6,973 samples, 5.31%)</title><rect x="73.6293%" y="261" width="5.3107%" height="15" fill="rgb(245,30,7)" fg:x="96676" fg:w="6973"/><text x="73.8793%" y="271.50">[unknow..</text></g><g><title>[unknown] (5,328 samples, 4.06%)</title><rect x="74.8821%" y="245" width="4.0579%" height="15" fill="rgb(218,221,48)" fg:x="98321" fg:w="5328"/><text x="75.1321%" y="255.50">[unk..</text></g><g><title>[unknown] (4,352 samples, 3.31%)</title><rect x="75.6255%" y="229" width="3.3145%" height="15" fill="rgb(216,66,15)" fg:x="99297" fg:w="4352"/><text x="75.8755%" y="239.50">[un..</text></g><g><title>[unknown] (3,786 samples, 2.88%)</title><rect x="76.0565%" y="213" width="2.8835%" height="15" fill="rgb(226,122,50)" fg:x="99863" fg:w="3786"/><text x="76.3065%" y="223.50">[u..</text></g><g><title>[unknown] (3,659 samples, 2.79%)</title><rect x="76.1533%" y="197" width="2.7867%" height="15" fill="rgb(239,156,16)" fg:x="99990" fg:w="3659"/><text x="76.4033%" y="207.50">[u..</text></g><g><title>[unknown] (3,276 samples, 2.50%)</title><rect x="76.4450%" y="181" width="2.4950%" height="15" fill="rgb(224,27,38)" fg:x="100373" fg:w="3276"/><text x="76.6950%" y="191.50">[u..</text></g><g><title>[unknown] (2,417 samples, 1.84%)</title><rect x="77.0992%" y="165" width="1.8408%" height="15" fill="rgb(224,39,27)" fg:x="101232" fg:w="2417"/><text x="77.3492%" y="175.50">[..</text></g><g><title>[unknown] (2,115 samples, 1.61%)</title><rect x="77.3292%" y="149" width="1.6108%" height="15" fill="rgb(215,92,29)" fg:x="101534" fg:w="2115"/><text x="77.5792%" y="159.50"></text></g><g><title>[unknown] (1,610 samples, 1.23%)</title><rect x="77.7138%" y="133" width="1.2262%" height="15" fill="rgb(207,159,16)" fg:x="102039" fg:w="1610"/><text x="77.9638%" y="143.50"></text></g><g><title>[unknown] (422 samples, 0.32%)</title><rect x="78.6186%" y="117" width="0.3214%" height="15" fill="rgb(238,163,47)" fg:x="103227" fg:w="422"/><text x="78.8686%" y="127.50"></text></g><g><title>[unknown] (84 samples, 0.06%)</title><rect x="78.8760%" y="101" width="0.0640%" height="15" fill="rgb(219,91,49)" fg:x="103565" fg:w="84"/><text x="79.1260%" y="111.50"></text></g><g><title>[unknown] (69 samples, 0.05%)</title><rect x="78.8874%" y="85" width="0.0526%" height="15" fill="rgb(227,167,31)" fg:x="103580" fg:w="69"/><text x="79.1374%" y="95.50"></text></g><g><title>__GI___pthread_disable_asynccancel (67 samples, 0.05%)</title><rect x="78.9400%" y="613" width="0.0510%" height="15" fill="rgb(234,80,54)" fg:x="103649" fg:w="67"/><text x="79.1900%" y="623.50"></text></g><g><title>__libc_sendto (32,896 samples, 25.05%)</title><rect x="53.9387%" y="629" width="25.0539%" height="15" fill="rgb(212,114,2)" fg:x="70822" fg:w="32896"/><text x="54.1887%" y="639.50">__libc_sendto</text></g><g><title>tokio::net::udp::UdpSocket::send_to_addr::{{closure}}::{{closure}} (32,981 samples, 25.12%)</title><rect x="53.9387%" y="741" width="25.1186%" height="15" fill="rgb(234,50,24)" fg:x="70822" fg:w="32981"/><text x="54.1887%" y="751.50">tokio::net::udp::UdpSocket::send_to_addr..</text></g><g><title>mio::net::udp::UdpSocket::send_to (32,981 samples, 25.12%)</title><rect x="53.9387%" y="725" width="25.1186%" height="15" fill="rgb(221,68,8)" fg:x="70822" fg:w="32981"/><text x="54.1887%" y="735.50">mio::net::udp::UdpSocket::send_to</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (32,981 samples, 25.12%)</title><rect x="53.9387%" y="709" width="25.1186%" height="15" fill="rgb(254,180,31)" fg:x="70822" fg:w="32981"/><text x="54.1887%" y="719.50">mio::io_source::IoSource&lt;T&gt;::do_io</text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (32,981 samples, 25.12%)</title><rect x="53.9387%" y="693" width="25.1186%" height="15" fill="rgb(247,130,50)" fg:x="70822" fg:w="32981"/><text x="54.1887%" y="703.50">mio::sys::unix::stateless_io_source::IoS..</text></g><g><title>mio::net::udp::UdpSocket::send_to::{{closure}} (32,981 samples, 25.12%)</title><rect x="53.9387%" y="677" width="25.1186%" height="15" fill="rgb(211,109,4)" fg:x="70822" fg:w="32981"/><text x="54.1887%" y="687.50">mio::net::udp::UdpSocket::send_to::{{clo..</text></g><g><title>std::net::udp::UdpSocket::send_to (32,981 samples, 25.12%)</title><rect x="53.9387%" y="661" width="25.1186%" height="15" fill="rgb(238,50,21)" fg:x="70822" fg:w="32981"/><text x="54.1887%" y="671.50">std::net::udp::UdpSocket::send_to</text></g><g><title>std::sys_common::net::UdpSocket::send_to (32,981 samples, 25.12%)</title><rect x="53.9387%" y="645" width="25.1186%" height="15" fill="rgb(225,57,45)" fg:x="70822" fg:w="32981"/><text x="54.1887%" y="655.50">std::sys_common::net::UdpSocket::send_to</text></g><g><title>std::sys::pal::unix::cvt (85 samples, 0.06%)</title><rect x="78.9925%" y="629" width="0.0647%" height="15" fill="rgb(209,196,50)" fg:x="103718" fg:w="85"/><text x="79.2425%" y="639.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::process_request::{{closure}} (44,349 samples, 33.78%)</title><rect x="45.3020%" y="853" width="33.7766%" height="15" fill="rgb(242,140,13)" fg:x="59482" fg:w="44349"/><text x="45.5520%" y="863.50">torrust_tracker::servers::udp::server::Udp::process_req..</text></g><g><title>torrust_tracker::servers::udp::server::Udp::process_valid_request::{{closure}} (43,412 samples, 33.06%)</title><rect x="46.0156%" y="837" width="33.0630%" height="15" fill="rgb(217,111,7)" fg:x="60419" fg:w="43412"/><text x="46.2656%" y="847.50">torrust_tracker::servers::udp::server::Udp::process_va..</text></g><g><title>torrust_tracker::servers::udp::server::Udp::send_response::{{closure}} (34,320 samples, 26.14%)</title><rect x="52.9402%" y="821" width="26.1384%" height="15" fill="rgb(253,193,51)" fg:x="69511" fg:w="34320"/><text x="53.1902%" y="831.50">torrust_tracker::servers::udp::server::Udp..</text></g><g><title>torrust_tracker::servers::udp::server::Udp::send_packet::{{closure}} (33,360 samples, 25.41%)</title><rect x="53.6713%" y="805" width="25.4073%" height="15" fill="rgb(252,70,29)" fg:x="70471" fg:w="33360"/><text x="53.9213%" y="815.50">torrust_tracker::servers::udp::server::Ud..</text></g><g><title>tokio::net::udp::UdpSocket::send_to::{{closure}} (33,227 samples, 25.31%)</title><rect x="53.7726%" y="789" width="25.3060%" height="15" fill="rgb(232,127,12)" fg:x="70604" fg:w="33227"/><text x="54.0226%" y="799.50">tokio::net::udp::UdpSocket::send_to::{{c..</text></g><g><title>tokio::net::udp::UdpSocket::send_to_addr::{{closure}} (33,142 samples, 25.24%)</title><rect x="53.8374%" y="773" width="25.2412%" height="15" fill="rgb(211,180,21)" fg:x="70689" fg:w="33142"/><text x="54.0874%" y="783.50">tokio::net::udp::UdpSocket::send_to_addr..</text></g><g><title>tokio::runtime::io::registration::Registration::async_io::{{closure}} (33,115 samples, 25.22%)</title><rect x="53.8579%" y="757" width="25.2207%" height="15" fill="rgb(229,72,13)" fg:x="70716" fg:w="33115"/><text x="54.1079%" y="767.50">tokio::runtime::io::registration::Regist..</text></g><g><title>tokio::runtime::io::registration::Registration::readiness::{{closure}} (28 samples, 0.02%)</title><rect x="79.0573%" y="741" width="0.0213%" height="15" fill="rgb(240,211,49)" fg:x="103803" fg:w="28"/><text x="79.3073%" y="751.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::readiness::{{closure}} (18 samples, 0.01%)</title><rect x="79.0649%" y="725" width="0.0137%" height="15" fill="rgb(219,149,40)" fg:x="103813" fg:w="18"/><text x="79.3149%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::io::scheduled_io::Readiness&gt; (15 samples, 0.01%)</title><rect x="79.0672%" y="709" width="0.0114%" height="15" fill="rgb(210,127,46)" fg:x="103816" fg:w="15"/><text x="79.3172%" y="719.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="79.0679%" y="693" width="0.0107%" height="15" fill="rgb(220,106,7)" fg:x="103817" fg:w="14"/><text x="79.3179%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="79.1159%" y="821" width="0.0114%" height="15" fill="rgb(249,31,22)" fg:x="103880" fg:w="15"/><text x="79.3659%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (15 samples, 0.01%)</title><rect x="79.1159%" y="805" width="0.0114%" height="15" fill="rgb(253,1,49)" fg:x="103880" fg:w="15"/><text x="79.3659%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_add (15 samples, 0.01%)</title><rect x="79.1159%" y="789" width="0.0114%" height="15" fill="rgb(227,144,33)" fg:x="103880" fg:w="15"/><text x="79.3659%" y="799.50"></text></g><g><title>__GI___lll_lock_wait_private (16 samples, 0.01%)</title><rect x="79.2286%" y="741" width="0.0122%" height="15" fill="rgb(249,163,44)" fg:x="104028" fg:w="16"/><text x="79.4786%" y="751.50"></text></g><g><title>futex_wait (16 samples, 0.01%)</title><rect x="79.2286%" y="725" width="0.0122%" height="15" fill="rgb(234,15,39)" fg:x="104028" fg:w="16"/><text x="79.4786%" y="735.50"></text></g><g><title>[unknown] (16 samples, 0.01%)</title><rect x="79.2286%" y="709" width="0.0122%" height="15" fill="rgb(207,66,16)" fg:x="104028" fg:w="16"/><text x="79.4786%" y="719.50"></text></g><g><title>[unknown] (15 samples, 0.01%)</title><rect x="79.2294%" y="693" width="0.0114%" height="15" fill="rgb(233,112,24)" fg:x="104029" fg:w="15"/><text x="79.4794%" y="703.50"></text></g><g><title>[unknown] (15 samples, 0.01%)</title><rect x="79.2294%" y="677" width="0.0114%" height="15" fill="rgb(230,90,22)" fg:x="104029" fg:w="15"/><text x="79.4794%" y="687.50"></text></g><g><title>[unknown] (14 samples, 0.01%)</title><rect x="79.2302%" y="661" width="0.0107%" height="15" fill="rgb(229,61,13)" fg:x="104030" fg:w="14"/><text x="79.4802%" y="671.50"></text></g><g><title>[unknown] (14 samples, 0.01%)</title><rect x="79.2302%" y="645" width="0.0107%" height="15" fill="rgb(225,57,24)" fg:x="104030" fg:w="14"/><text x="79.4802%" y="655.50"></text></g><g><title>_int_free (135 samples, 0.10%)</title><rect x="79.1426%" y="757" width="0.1028%" height="15" fill="rgb(208,169,48)" fg:x="103915" fg:w="135"/><text x="79.3926%" y="767.50"></text></g><g><title>__GI___libc_free (147 samples, 0.11%)</title><rect x="79.1342%" y="773" width="0.1120%" height="15" fill="rgb(244,218,51)" fg:x="103904" fg:w="147"/><text x="79.3842%" y="783.50"></text></g><g><title>syscall (22 samples, 0.02%)</title><rect x="79.2462%" y="773" width="0.0168%" height="15" fill="rgb(214,148,10)" fg:x="104051" fg:w="22"/><text x="79.4962%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Core&lt;torrust_tracker::servers::udp::server::Udp::process_request::{{closure}},alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt; (15 samples, 0.01%)</title><rect x="79.2644%" y="709" width="0.0114%" height="15" fill="rgb(225,174,27)" fg:x="104075" fg:w="15"/><text x="79.5144%" y="719.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (24 samples, 0.02%)</title><rect x="79.2644%" y="773" width="0.0183%" height="15" fill="rgb(230,96,26)" fg:x="104075" fg:w="24"/><text x="79.5144%" y="783.50"></text></g><g><title>core::mem::drop (24 samples, 0.02%)</title><rect x="79.2644%" y="757" width="0.0183%" height="15" fill="rgb(232,10,30)" fg:x="104075" fg:w="24"/><text x="79.5144%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;torrust_tracker::servers::udp::server::Udp::process_request::{{closure}},alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt;&gt; (24 samples, 0.02%)</title><rect x="79.2644%" y="741" width="0.0183%" height="15" fill="rgb(222,8,50)" fg:x="104075" fg:w="24"/><text x="79.5144%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Cell&lt;torrust_tracker::servers::udp::server::Udp::process_request::{{closure}},alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt; (24 samples, 0.02%)</title><rect x="79.2644%" y="725" width="0.0183%" height="15" fill="rgb(213,81,27)" fg:x="104075" fg:w="24"/><text x="79.5144%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::abort::AbortHandle&gt; (262 samples, 0.20%)</title><rect x="79.1281%" y="821" width="0.1995%" height="15" fill="rgb(245,50,10)" fg:x="103896" fg:w="262"/><text x="79.3781%" y="831.50"></text></g><g><title>&lt;tokio::runtime::task::abort::AbortHandle as core::ops::drop::Drop&gt;::drop (262 samples, 0.20%)</title><rect x="79.1281%" y="805" width="0.1995%" height="15" fill="rgb(216,100,18)" fg:x="103896" fg:w="262"/><text x="79.3781%" y="815.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::drop_abort_handle (256 samples, 0.19%)</title><rect x="79.1327%" y="789" width="0.1950%" height="15" fill="rgb(236,147,54)" fg:x="103902" fg:w="256"/><text x="79.3827%" y="799.50"></text></g><g><title>tokio::runtime::task::raw::drop_abort_handle (59 samples, 0.04%)</title><rect x="79.2827%" y="773" width="0.0449%" height="15" fill="rgb(205,143,26)" fg:x="104099" fg:w="59"/><text x="79.5327%" y="783.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (50 samples, 0.04%)</title><rect x="79.2896%" y="757" width="0.0381%" height="15" fill="rgb(236,26,9)" fg:x="104108" fg:w="50"/><text x="79.5396%" y="767.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (50 samples, 0.04%)</title><rect x="79.2896%" y="741" width="0.0381%" height="15" fill="rgb(221,165,53)" fg:x="104108" fg:w="50"/><text x="79.5396%" y="751.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::drop_join_handle_slow (16 samples, 0.01%)</title><rect x="79.3337%" y="789" width="0.0122%" height="15" fill="rgb(214,110,17)" fg:x="104166" fg:w="16"/><text x="79.5837%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::join::JoinHandle&lt;()&gt;&gt; (47 samples, 0.04%)</title><rect x="79.3277%" y="821" width="0.0358%" height="15" fill="rgb(237,197,12)" fg:x="104158" fg:w="47"/><text x="79.5777%" y="831.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (47 samples, 0.04%)</title><rect x="79.3277%" y="805" width="0.0358%" height="15" fill="rgb(205,84,17)" fg:x="104158" fg:w="47"/><text x="79.5777%" y="815.50"></text></g><g><title>tokio::runtime::task::state::State::drop_join_handle_fast (19 samples, 0.01%)</title><rect x="79.3490%" y="789" width="0.0145%" height="15" fill="rgb(237,18,45)" fg:x="104186" fg:w="19"/><text x="79.5990%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (19 samples, 0.01%)</title><rect x="79.3490%" y="773" width="0.0145%" height="15" fill="rgb(221,87,14)" fg:x="104186" fg:w="19"/><text x="79.5990%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (19 samples, 0.01%)</title><rect x="79.3490%" y="757" width="0.0145%" height="15" fill="rgb(238,186,15)" fg:x="104186" fg:w="19"/><text x="79.5990%" y="767.50"></text></g><g><title>ringbuf::ring_buffer::base::RbBase::is_full (14 samples, 0.01%)</title><rect x="79.3634%" y="805" width="0.0107%" height="15" fill="rgb(208,115,11)" fg:x="104205" fg:w="14"/><text x="79.6134%" y="815.50"></text></g><g><title>&lt;ringbuf::ring_buffer::shared::SharedRb&lt;T,C&gt; as ringbuf::ring_buffer::base::RbBase&lt;T&gt;&gt;::head (14 samples, 0.01%)</title><rect x="79.3756%" y="741" width="0.0107%" height="15" fill="rgb(254,175,0)" fg:x="104221" fg:w="14"/><text x="79.6256%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (14 samples, 0.01%)</title><rect x="79.3756%" y="725" width="0.0107%" height="15" fill="rgb(227,24,42)" fg:x="104221" fg:w="14"/><text x="79.6256%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_load (14 samples, 0.01%)</title><rect x="79.3756%" y="709" width="0.0107%" height="15" fill="rgb(223,211,37)" fg:x="104221" fg:w="14"/><text x="79.6256%" y="719.50"></text></g><g><title>ringbuf::consumer::Consumer&lt;T,R&gt;::advance (29 samples, 0.02%)</title><rect x="79.3741%" y="773" width="0.0221%" height="15" fill="rgb(235,49,27)" fg:x="104219" fg:w="29"/><text x="79.6241%" y="783.50"></text></g><g><title>ringbuf::ring_buffer::base::RbRead::advance_head (29 samples, 0.02%)</title><rect x="79.3741%" y="757" width="0.0221%" height="15" fill="rgb(254,97,51)" fg:x="104219" fg:w="29"/><text x="79.6241%" y="767.50"></text></g><g><title>ringbuf::ring_buffer::rb::Rb::pop (50 samples, 0.04%)</title><rect x="79.3741%" y="805" width="0.0381%" height="15" fill="rgb(249,51,40)" fg:x="104219" fg:w="50"/><text x="79.6241%" y="815.50"></text></g><g><title>ringbuf::consumer::Consumer&lt;T,R&gt;::pop (50 samples, 0.04%)</title><rect x="79.3741%" y="789" width="0.0381%" height="15" fill="rgb(210,128,45)" fg:x="104219" fg:w="50"/><text x="79.6241%" y="799.50"></text></g><g><title>ringbuf::producer::Producer&lt;T,R&gt;::advance (23 samples, 0.02%)</title><rect x="79.4122%" y="773" width="0.0175%" height="15" fill="rgb(224,137,50)" fg:x="104269" fg:w="23"/><text x="79.6622%" y="783.50"></text></g><g><title>ringbuf::ring_buffer::base::RbWrite::advance_tail (23 samples, 0.02%)</title><rect x="79.4122%" y="757" width="0.0175%" height="15" fill="rgb(242,15,9)" fg:x="104269" fg:w="23"/><text x="79.6622%" y="767.50"></text></g><g><title>core::num::nonzero::&lt;impl core::ops::arith::Rem&lt;core::num::nonzero::NonZero&lt;usize&gt;&gt; for usize&gt;::rem (19 samples, 0.01%)</title><rect x="79.4152%" y="741" width="0.0145%" height="15" fill="rgb(233,187,41)" fg:x="104273" fg:w="19"/><text x="79.6652%" y="751.50"></text></g><g><title>ringbuf::ring_buffer::rb::Rb::push_overwrite (107 samples, 0.08%)</title><rect x="79.3634%" y="821" width="0.0815%" height="15" fill="rgb(227,2,29)" fg:x="104205" fg:w="107"/><text x="79.6134%" y="831.50"></text></g><g><title>ringbuf::ring_buffer::rb::Rb::push (43 samples, 0.03%)</title><rect x="79.4122%" y="805" width="0.0327%" height="15" fill="rgb(222,70,3)" fg:x="104269" fg:w="43"/><text x="79.6622%" y="815.50"></text></g><g><title>ringbuf::producer::Producer&lt;T,R&gt;::push (43 samples, 0.03%)</title><rect x="79.4122%" y="789" width="0.0327%" height="15" fill="rgb(213,11,42)" fg:x="104269" fg:w="43"/><text x="79.6622%" y="799.50"></text></g><g><title>tokio::runtime::task::abort::AbortHandle::is_finished (84 samples, 0.06%)</title><rect x="79.4449%" y="821" width="0.0640%" height="15" fill="rgb(225,150,9)" fg:x="104312" fg:w="84"/><text x="79.6949%" y="831.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::is_complete (84 samples, 0.06%)</title><rect x="79.4449%" y="805" width="0.0640%" height="15" fill="rgb(230,162,45)" fg:x="104312" fg:w="84"/><text x="79.6949%" y="815.50"></text></g><g><title>tokio::runtime::task::join::JoinHandle&lt;T&gt;::abort_handle (17 samples, 0.01%)</title><rect x="79.5089%" y="821" width="0.0129%" height="15" fill="rgb(222,14,52)" fg:x="104396" fg:w="17"/><text x="79.7589%" y="831.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::ref_inc (17 samples, 0.01%)</title><rect x="79.5089%" y="805" width="0.0129%" height="15" fill="rgb(254,198,14)" fg:x="104396" fg:w="17"/><text x="79.7589%" y="815.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (17 samples, 0.01%)</title><rect x="79.5089%" y="789" width="0.0129%" height="15" fill="rgb(220,217,30)" fg:x="104396" fg:w="17"/><text x="79.7589%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (14 samples, 0.01%)</title><rect x="79.5112%" y="773" width="0.0107%" height="15" fill="rgb(215,146,41)" fg:x="104399" fg:w="14"/><text x="79.7612%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_add (14 samples, 0.01%)</title><rect x="79.5112%" y="757" width="0.0107%" height="15" fill="rgb(217,27,36)" fg:x="104399" fg:w="14"/><text x="79.7612%" y="767.50"></text></g><g><title>__GI___lll_lock_wake_private (22 samples, 0.02%)</title><rect x="79.6247%" y="645" width="0.0168%" height="15" fill="rgb(219,218,39)" fg:x="104548" fg:w="22"/><text x="79.8747%" y="655.50"></text></g><g><title>[unknown] (20 samples, 0.02%)</title><rect x="79.6262%" y="629" width="0.0152%" height="15" fill="rgb(219,4,42)" fg:x="104550" fg:w="20"/><text x="79.8762%" y="639.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="79.6277%" y="613" width="0.0137%" height="15" fill="rgb(249,119,36)" fg:x="104552" fg:w="18"/><text x="79.8777%" y="623.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="79.6277%" y="597" width="0.0137%" height="15" fill="rgb(209,23,33)" fg:x="104552" fg:w="18"/><text x="79.8777%" y="607.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="79.6277%" y="581" width="0.0137%" height="15" fill="rgb(211,10,0)" fg:x="104552" fg:w="18"/><text x="79.8777%" y="591.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="79.6277%" y="565" width="0.0137%" height="15" fill="rgb(208,99,37)" fg:x="104552" fg:w="18"/><text x="79.8777%" y="575.50"></text></g><g><title>malloc_consolidate (95 samples, 0.07%)</title><rect x="79.7252%" y="629" width="0.0724%" height="15" fill="rgb(213,132,31)" fg:x="104680" fg:w="95"/><text x="79.9752%" y="639.50"></text></g><g><title>tokio::runtime::io::registration::Registration::readiness::{{closure}} (76 samples, 0.06%)</title><rect x="79.7976%" y="629" width="0.0579%" height="15" fill="rgb(243,129,40)" fg:x="104775" fg:w="76"/><text x="80.0476%" y="639.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::readiness::{{closure}} (31 samples, 0.02%)</title><rect x="79.8318%" y="613" width="0.0236%" height="15" fill="rgb(210,66,33)" fg:x="104820" fg:w="31"/><text x="80.0818%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::io::scheduled_io::Readiness&gt; (26 samples, 0.02%)</title><rect x="79.8356%" y="597" width="0.0198%" height="15" fill="rgb(209,189,4)" fg:x="104825" fg:w="26"/><text x="80.0856%" y="607.50"></text></g><g><title>_int_malloc (282 samples, 0.21%)</title><rect x="79.6414%" y="645" width="0.2148%" height="15" fill="rgb(214,107,37)" fg:x="104570" fg:w="282"/><text x="79.8914%" y="655.50"></text></g><g><title>__GI___libc_malloc (323 samples, 0.25%)</title><rect x="79.6163%" y="661" width="0.2460%" height="15" fill="rgb(245,88,54)" fg:x="104537" fg:w="323"/><text x="79.8663%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (326 samples, 0.25%)</title><rect x="79.6148%" y="805" width="0.2483%" height="15" fill="rgb(205,146,20)" fg:x="104535" fg:w="326"/><text x="79.8648%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (326 samples, 0.25%)</title><rect x="79.6148%" y="789" width="0.2483%" height="15" fill="rgb(220,161,25)" fg:x="104535" fg:w="326"/><text x="79.8648%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (324 samples, 0.25%)</title><rect x="79.6163%" y="773" width="0.2468%" height="15" fill="rgb(215,152,15)" fg:x="104537" fg:w="324"/><text x="79.8663%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (324 samples, 0.25%)</title><rect x="79.6163%" y="757" width="0.2468%" height="15" fill="rgb(233,192,44)" fg:x="104537" fg:w="324"/><text x="79.8663%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (324 samples, 0.25%)</title><rect x="79.6163%" y="741" width="0.2468%" height="15" fill="rgb(240,170,46)" fg:x="104537" fg:w="324"/><text x="79.8663%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (324 samples, 0.25%)</title><rect x="79.6163%" y="725" width="0.2468%" height="15" fill="rgb(207,104,33)" fg:x="104537" fg:w="324"/><text x="79.8663%" y="735.50"></text></g><g><title>alloc::alloc::alloc (324 samples, 0.25%)</title><rect x="79.6163%" y="709" width="0.2468%" height="15" fill="rgb(219,21,39)" fg:x="104537" fg:w="324"/><text x="79.8663%" y="719.50"></text></g><g><title>__rdl_alloc (324 samples, 0.25%)</title><rect x="79.6163%" y="693" width="0.2468%" height="15" fill="rgb(214,133,29)" fg:x="104537" fg:w="324"/><text x="79.8663%" y="703.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (324 samples, 0.25%)</title><rect x="79.6163%" y="677" width="0.2468%" height="15" fill="rgb(226,93,6)" fg:x="104537" fg:w="324"/><text x="79.8663%" y="687.50"></text></g><g><title>tokio::io::ready::Ready::intersection (24 samples, 0.02%)</title><rect x="79.9910%" y="757" width="0.0183%" height="15" fill="rgb(252,222,34)" fg:x="105029" fg:w="24"/><text x="80.2410%" y="767.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::future::future::Future&gt;::poll (199 samples, 0.15%)</title><rect x="79.8699%" y="773" width="0.1516%" height="15" fill="rgb(252,92,48)" fg:x="104870" fg:w="199"/><text x="80.1199%" y="783.50"></text></g><g><title>tokio::util::bit::Pack::unpack (16 samples, 0.01%)</title><rect x="80.0093%" y="757" width="0.0122%" height="15" fill="rgb(245,223,24)" fg:x="105053" fg:w="16"/><text x="80.2593%" y="767.50"></text></g><g><title>tokio::util::bit::unpack (16 samples, 0.01%)</title><rect x="80.0093%" y="741" width="0.0122%" height="15" fill="rgb(205,176,3)" fg:x="105053" fg:w="16"/><text x="80.2593%" y="751.50"></text></g><g><title>tokio::runtime::io::registration::Registration::readiness::{{closure}} (19 samples, 0.01%)</title><rect x="80.0215%" y="773" width="0.0145%" height="15" fill="rgb(235,151,15)" fg:x="105069" fg:w="19"/><text x="80.2715%" y="783.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::readiness::{{closure}} (17 samples, 0.01%)</title><rect x="80.0230%" y="757" width="0.0129%" height="15" fill="rgb(237,209,11)" fg:x="105071" fg:w="17"/><text x="80.2730%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::io::scheduled_io::Readiness&gt; (16 samples, 0.01%)</title><rect x="80.0238%" y="741" width="0.0122%" height="15" fill="rgb(243,227,24)" fg:x="105072" fg:w="16"/><text x="80.2738%" y="751.50"></text></g><g><title>tokio::net::udp::UdpSocket::readable::{{closure}} (222 samples, 0.17%)</title><rect x="79.8676%" y="805" width="0.1691%" height="15" fill="rgb(239,193,16)" fg:x="104867" fg:w="222"/><text x="80.1176%" y="815.50"></text></g><g><title>tokio::net::udp::UdpSocket::ready::{{closure}} (222 samples, 0.17%)</title><rect x="79.8676%" y="789" width="0.1691%" height="15" fill="rgb(231,27,9)" fg:x="104867" fg:w="222"/><text x="80.1176%" y="799.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::future::future::Future&gt;::poll (50 samples, 0.04%)</title><rect x="80.1494%" y="773" width="0.0381%" height="15" fill="rgb(219,169,10)" fg:x="105237" fg:w="50"/><text x="80.3994%" y="783.50"></text></g><g><title>std::io::error::repr_bitpacked::Repr::data (14 samples, 0.01%)</title><rect x="80.1944%" y="757" width="0.0107%" height="15" fill="rgb(244,229,43)" fg:x="105296" fg:w="14"/><text x="80.4444%" y="767.50"></text></g><g><title>std::io::error::repr_bitpacked::decode_repr (14 samples, 0.01%)</title><rect x="80.1944%" y="741" width="0.0107%" height="15" fill="rgb(254,38,20)" fg:x="105296" fg:w="14"/><text x="80.4444%" y="751.50"></text></g><g><title>std::io::error::Error::kind (16 samples, 0.01%)</title><rect x="80.1944%" y="773" width="0.0122%" height="15" fill="rgb(250,47,30)" fg:x="105296" fg:w="16"/><text x="80.4444%" y="783.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (14 samples, 0.01%)</title><rect x="80.2401%" y="629" width="0.0107%" height="15" fill="rgb(224,124,36)" fg:x="105356" fg:w="14"/><text x="80.4901%" y="639.50"></text></g><g><title>[unknown] (8,756 samples, 6.67%)</title><rect x="80.3459%" y="613" width="6.6686%" height="15" fill="rgb(246,68,51)" fg:x="105495" fg:w="8756"/><text x="80.5959%" y="623.50">[unknown]</text></g><g><title>[unknown] (8,685 samples, 6.61%)</title><rect x="80.4000%" y="597" width="6.6146%" height="15" fill="rgb(253,43,49)" fg:x="105566" fg:w="8685"/><text x="80.6500%" y="607.50">[unknown]</text></g><g><title>[unknown] (8,574 samples, 6.53%)</title><rect x="80.4845%" y="581" width="6.5300%" height="15" fill="rgb(219,54,36)" fg:x="105677" fg:w="8574"/><text x="80.7345%" y="591.50">[unknown]</text></g><g><title>[unknown] (8,415 samples, 6.41%)</title><rect x="80.6056%" y="565" width="6.4089%" height="15" fill="rgb(227,133,34)" fg:x="105836" fg:w="8415"/><text x="80.8556%" y="575.50">[unknown]</text></g><g><title>[unknown] (7,686 samples, 5.85%)</title><rect x="81.1608%" y="549" width="5.8537%" height="15" fill="rgb(247,227,15)" fg:x="106565" fg:w="7686"/><text x="81.4108%" y="559.50">[unknow..</text></g><g><title>[unknown] (7,239 samples, 5.51%)</title><rect x="81.5013%" y="533" width="5.5133%" height="15" fill="rgb(229,96,14)" fg:x="107012" fg:w="7239"/><text x="81.7513%" y="543.50">[unknow..</text></g><g><title>[unknown] (6,566 samples, 5.00%)</title><rect x="82.0138%" y="517" width="5.0007%" height="15" fill="rgb(220,79,17)" fg:x="107685" fg:w="6566"/><text x="82.2638%" y="527.50">[unkno..</text></g><g><title>[unknown] (5,304 samples, 4.04%)</title><rect x="82.9750%" y="501" width="4.0396%" height="15" fill="rgb(205,131,53)" fg:x="108947" fg:w="5304"/><text x="83.2250%" y="511.50">[unk..</text></g><g><title>[unknown] (4,008 samples, 3.05%)</title><rect x="83.9620%" y="485" width="3.0525%" height="15" fill="rgb(209,50,29)" fg:x="110243" fg:w="4008"/><text x="84.2120%" y="495.50">[un..</text></g><g><title>[unknown] (3,571 samples, 2.72%)</title><rect x="84.2949%" y="469" width="2.7197%" height="15" fill="rgb(245,86,46)" fg:x="110680" fg:w="3571"/><text x="84.5449%" y="479.50">[u..</text></g><g><title>[unknown] (2,375 samples, 1.81%)</title><rect x="85.2057%" y="453" width="1.8088%" height="15" fill="rgb(235,66,46)" fg:x="111876" fg:w="2375"/><text x="85.4557%" y="463.50">[..</text></g><g><title>[unknown] (1,844 samples, 1.40%)</title><rect x="85.6102%" y="437" width="1.4044%" height="15" fill="rgb(232,148,31)" fg:x="112407" fg:w="1844"/><text x="85.8602%" y="447.50"></text></g><g><title>[unknown] (1,030 samples, 0.78%)</title><rect x="86.2301%" y="421" width="0.7845%" height="15" fill="rgb(217,149,8)" fg:x="113221" fg:w="1030"/><text x="86.4801%" y="431.50"></text></g><g><title>[unknown] (344 samples, 0.26%)</title><rect x="86.7526%" y="405" width="0.2620%" height="15" fill="rgb(209,183,11)" fg:x="113907" fg:w="344"/><text x="87.0026%" y="415.50"></text></g><g><title>[unknown] (113 samples, 0.09%)</title><rect x="86.9285%" y="389" width="0.0861%" height="15" fill="rgb(208,55,20)" fg:x="114138" fg:w="113"/><text x="87.1785%" y="399.50"></text></g><g><title>__libc_recvfrom (8,903 samples, 6.78%)</title><rect x="80.2507%" y="629" width="6.7806%" height="15" fill="rgb(218,39,14)" fg:x="105370" fg:w="8903"/><text x="80.5007%" y="639.50">__libc_re..</text></g><g><title>__GI___pthread_disable_asynccancel (22 samples, 0.02%)</title><rect x="87.0146%" y="613" width="0.0168%" height="15" fill="rgb(216,169,33)" fg:x="114251" fg:w="22"/><text x="87.2646%" y="623.50"></text></g><g><title>std::sys::pal::unix::cvt (20 samples, 0.02%)</title><rect x="87.0321%" y="629" width="0.0152%" height="15" fill="rgb(233,80,24)" fg:x="114274" fg:w="20"/><text x="87.2821%" y="639.50"></text></g><g><title>tokio::net::udp::UdpSocket::recv_buf_from::{{closure}}::{{closure}} (9,005 samples, 6.86%)</title><rect x="80.2065%" y="773" width="6.8583%" height="15" fill="rgb(213,179,31)" fg:x="105312" fg:w="9005"/><text x="80.4565%" y="783.50">tokio::ne..</text></g><g><title>mio::net::udp::UdpSocket::recv_from (8,964 samples, 6.83%)</title><rect x="80.2378%" y="757" width="6.8271%" height="15" fill="rgb(209,19,5)" fg:x="105353" fg:w="8964"/><text x="80.4878%" y="767.50">mio::net:..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (8,964 samples, 6.83%)</title><rect x="80.2378%" y="741" width="6.8271%" height="15" fill="rgb(219,18,35)" fg:x="105353" fg:w="8964"/><text x="80.4878%" y="751.50">mio::io_s..</text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (8,964 samples, 6.83%)</title><rect x="80.2378%" y="725" width="6.8271%" height="15" fill="rgb(209,169,16)" fg:x="105353" fg:w="8964"/><text x="80.4878%" y="735.50">mio::sys:..</text></g><g><title>mio::net::udp::UdpSocket::recv_from::{{closure}} (8,964 samples, 6.83%)</title><rect x="80.2378%" y="709" width="6.8271%" height="15" fill="rgb(245,90,51)" fg:x="105353" fg:w="8964"/><text x="80.4878%" y="719.50">mio::net:..</text></g><g><title>std::net::udp::UdpSocket::recv_from (8,964 samples, 6.83%)</title><rect x="80.2378%" y="693" width="6.8271%" height="15" fill="rgb(220,99,45)" fg:x="105353" fg:w="8964"/><text x="80.4878%" y="703.50">std::net:..</text></g><g><title>std::sys_common::net::UdpSocket::recv_from (8,964 samples, 6.83%)</title><rect x="80.2378%" y="677" width="6.8271%" height="15" fill="rgb(249,89,25)" fg:x="105353" fg:w="8964"/><text x="80.4878%" y="687.50">std::sys_..</text></g><g><title>std::sys::pal::unix::net::Socket::recv_from (8,964 samples, 6.83%)</title><rect x="80.2378%" y="661" width="6.8271%" height="15" fill="rgb(239,193,0)" fg:x="105353" fg:w="8964"/><text x="80.4878%" y="671.50">std::sys:..</text></g><g><title>std::sys::pal::unix::net::Socket::recv_from_with_flags (8,964 samples, 6.83%)</title><rect x="80.2378%" y="645" width="6.8271%" height="15" fill="rgb(231,126,1)" fg:x="105353" fg:w="8964"/><text x="80.4878%" y="655.50">std::sys:..</text></g><g><title>std::sys_common::net::sockaddr_to_addr (23 samples, 0.02%)</title><rect x="87.0473%" y="629" width="0.0175%" height="15" fill="rgb(243,166,3)" fg:x="114294" fg:w="23"/><text x="87.2973%" y="639.50"></text></g><g><title>tokio::runtime::io::registration::Registration::clear_readiness (18 samples, 0.01%)</title><rect x="87.0648%" y="773" width="0.0137%" height="15" fill="rgb(223,22,34)" fg:x="114317" fg:w="18"/><text x="87.3148%" y="783.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::clear_readiness (18 samples, 0.01%)</title><rect x="87.0648%" y="757" width="0.0137%" height="15" fill="rgb(251,52,51)" fg:x="114317" fg:w="18"/><text x="87.3148%" y="767.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::future::future::Future&gt;::poll (32 samples, 0.02%)</title><rect x="87.0846%" y="741" width="0.0244%" height="15" fill="rgb(221,165,28)" fg:x="114343" fg:w="32"/><text x="87.3346%" y="751.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::receive_request::{{closure}} (9,967 samples, 7.59%)</title><rect x="79.5219%" y="821" width="7.5910%" height="15" fill="rgb(218,121,47)" fg:x="104413" fg:w="9967"/><text x="79.7719%" y="831.50">torrust_tr..</text></g><g><title>tokio::net::udp::UdpSocket::recv_buf_from::{{closure}} (9,291 samples, 7.08%)</title><rect x="80.0367%" y="805" width="7.0761%" height="15" fill="rgb(209,120,9)" fg:x="105089" fg:w="9291"/><text x="80.2867%" y="815.50">tokio::ne..</text></g><g><title>tokio::runtime::io::registration::Registration::async_io::{{closure}} (9,287 samples, 7.07%)</title><rect x="80.0398%" y="789" width="7.0731%" height="15" fill="rgb(236,68,12)" fg:x="105093" fg:w="9287"/><text x="80.2898%" y="799.50">tokio::ru..</text></g><g><title>tokio::runtime::io::registration::Registration::readiness::{{closure}} (45 samples, 0.03%)</title><rect x="87.0785%" y="773" width="0.0343%" height="15" fill="rgb(225,194,26)" fg:x="114335" fg:w="45"/><text x="87.3285%" y="783.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::readiness::{{closure}} (41 samples, 0.03%)</title><rect x="87.0816%" y="757" width="0.0312%" height="15" fill="rgb(231,84,39)" fg:x="114339" fg:w="41"/><text x="87.3316%" y="767.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (424 samples, 0.32%)</title><rect x="87.1326%" y="741" width="0.3229%" height="15" fill="rgb(210,11,45)" fg:x="114406" fg:w="424"/><text x="87.3826%" y="751.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (493 samples, 0.38%)</title><rect x="87.4670%" y="725" width="0.3755%" height="15" fill="rgb(224,54,52)" fg:x="114845" fg:w="493"/><text x="87.7170%" y="735.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (298 samples, 0.23%)</title><rect x="87.8744%" y="645" width="0.2270%" height="15" fill="rgb(238,102,14)" fg:x="115380" fg:w="298"/><text x="88.1244%" y="655.50"></text></g><g><title>syscall (1,105 samples, 0.84%)</title><rect x="88.1296%" y="469" width="0.8416%" height="15" fill="rgb(243,160,52)" fg:x="115715" fg:w="1105"/><text x="88.3796%" y="479.50"></text></g><g><title>[unknown] (1,095 samples, 0.83%)</title><rect x="88.1372%" y="453" width="0.8340%" height="15" fill="rgb(216,114,19)" fg:x="115725" fg:w="1095"/><text x="88.3872%" y="463.50"></text></g><g><title>[unknown] (1,091 samples, 0.83%)</title><rect x="88.1402%" y="437" width="0.8309%" height="15" fill="rgb(244,166,37)" fg:x="115729" fg:w="1091"/><text x="88.3902%" y="447.50"></text></g><g><title>[unknown] (1,049 samples, 0.80%)</title><rect x="88.1722%" y="421" width="0.7989%" height="15" fill="rgb(246,29,44)" fg:x="115771" fg:w="1049"/><text x="88.4222%" y="431.50"></text></g><g><title>[unknown] (998 samples, 0.76%)</title><rect x="88.2111%" y="405" width="0.7601%" height="15" fill="rgb(215,56,53)" fg:x="115822" fg:w="998"/><text x="88.4611%" y="415.50"></text></g><g><title>[unknown] (907 samples, 0.69%)</title><rect x="88.2804%" y="389" width="0.6908%" height="15" fill="rgb(217,60,2)" fg:x="115913" fg:w="907"/><text x="88.5304%" y="399.50"></text></g><g><title>[unknown] (710 samples, 0.54%)</title><rect x="88.4304%" y="373" width="0.5407%" height="15" fill="rgb(207,26,24)" fg:x="116110" fg:w="710"/><text x="88.6804%" y="383.50"></text></g><g><title>[unknown] (635 samples, 0.48%)</title><rect x="88.4875%" y="357" width="0.4836%" height="15" fill="rgb(252,210,15)" fg:x="116185" fg:w="635"/><text x="88.7375%" y="367.50"></text></g><g><title>[unknown] (538 samples, 0.41%)</title><rect x="88.5614%" y="341" width="0.4097%" height="15" fill="rgb(253,209,26)" fg:x="116282" fg:w="538"/><text x="88.8114%" y="351.50"></text></g><g><title>[unknown] (358 samples, 0.27%)</title><rect x="88.6985%" y="325" width="0.2727%" height="15" fill="rgb(238,170,14)" fg:x="116462" fg:w="358"/><text x="88.9485%" y="335.50"></text></g><g><title>[unknown] (256 samples, 0.19%)</title><rect x="88.7762%" y="309" width="0.1950%" height="15" fill="rgb(216,178,15)" fg:x="116564" fg:w="256"/><text x="89.0262%" y="319.50"></text></g><g><title>[unknown] (153 samples, 0.12%)</title><rect x="88.8546%" y="293" width="0.1165%" height="15" fill="rgb(250,197,2)" fg:x="116667" fg:w="153"/><text x="89.1046%" y="303.50"></text></g><g><title>[unknown] (96 samples, 0.07%)</title><rect x="88.8980%" y="277" width="0.0731%" height="15" fill="rgb(212,70,42)" fg:x="116724" fg:w="96"/><text x="89.1480%" y="287.50"></text></g><g><title>[unknown] (81 samples, 0.06%)</title><rect x="88.9095%" y="261" width="0.0617%" height="15" fill="rgb(227,213,9)" fg:x="116739" fg:w="81"/><text x="89.1595%" y="271.50"></text></g><g><title>tokio::runtime::context::with_scheduler (36 samples, 0.03%)</title><rect x="88.9711%" y="469" width="0.0274%" height="15" fill="rgb(245,99,25)" fg:x="116820" fg:w="36"/><text x="89.2211%" y="479.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (31 samples, 0.02%)</title><rect x="88.9750%" y="453" width="0.0236%" height="15" fill="rgb(250,82,29)" fg:x="116825" fg:w="31"/><text x="89.2250%" y="463.50"></text></g><g><title>tokio::runtime::context::with_scheduler::{{closure}} (27 samples, 0.02%)</title><rect x="88.9780%" y="437" width="0.0206%" height="15" fill="rgb(241,226,54)" fg:x="116829" fg:w="27"/><text x="89.2280%" y="447.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (27 samples, 0.02%)</title><rect x="88.9780%" y="421" width="0.0206%" height="15" fill="rgb(221,99,41)" fg:x="116829" fg:w="27"/><text x="89.2280%" y="431.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::{{closure}} (25 samples, 0.02%)</title><rect x="88.9795%" y="405" width="0.0190%" height="15" fill="rgb(213,90,21)" fg:x="116831" fg:w="25"/><text x="89.2295%" y="415.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::{{closure}} (22 samples, 0.02%)</title><rect x="88.9818%" y="389" width="0.0168%" height="15" fill="rgb(205,208,24)" fg:x="116834" fg:w="22"/><text x="89.2318%" y="399.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (15 samples, 0.01%)</title><rect x="88.9871%" y="373" width="0.0114%" height="15" fill="rgb(246,31,12)" fg:x="116841" fg:w="15"/><text x="89.2371%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (340 samples, 0.26%)</title><rect x="89.0107%" y="437" width="0.2589%" height="15" fill="rgb(213,154,6)" fg:x="116872" fg:w="340"/><text x="89.2607%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_add (340 samples, 0.26%)</title><rect x="89.0107%" y="421" width="0.2589%" height="15" fill="rgb(222,163,29)" fg:x="116872" fg:w="340"/><text x="89.2607%" y="431.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (354 samples, 0.27%)</title><rect x="89.0077%" y="453" width="0.2696%" height="15" fill="rgb(227,201,8)" fg:x="116868" fg:w="354"/><text x="89.2577%" y="463.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (367 samples, 0.28%)</title><rect x="88.9986%" y="469" width="0.2795%" height="15" fill="rgb(233,9,32)" fg:x="116856" fg:w="367"/><text x="89.2486%" y="479.50"></text></g><g><title>[unknown] (95 samples, 0.07%)</title><rect x="89.2811%" y="261" width="0.0724%" height="15" fill="rgb(217,54,24)" fg:x="117227" fg:w="95"/><text x="89.5311%" y="271.50"></text></g><g><title>[unknown] (93 samples, 0.07%)</title><rect x="89.2826%" y="245" width="0.0708%" height="15" fill="rgb(235,192,0)" fg:x="117229" fg:w="93"/><text x="89.5326%" y="255.50"></text></g><g><title>[unknown] (92 samples, 0.07%)</title><rect x="89.2834%" y="229" width="0.0701%" height="15" fill="rgb(235,45,9)" fg:x="117230" fg:w="92"/><text x="89.5334%" y="239.50"></text></g><g><title>[unknown] (90 samples, 0.07%)</title><rect x="89.2849%" y="213" width="0.0685%" height="15" fill="rgb(246,42,40)" fg:x="117232" fg:w="90"/><text x="89.5349%" y="223.50"></text></g><g><title>[unknown] (82 samples, 0.06%)</title><rect x="89.2910%" y="197" width="0.0625%" height="15" fill="rgb(248,111,24)" fg:x="117240" fg:w="82"/><text x="89.5410%" y="207.50"></text></g><g><title>[unknown] (73 samples, 0.06%)</title><rect x="89.2979%" y="181" width="0.0556%" height="15" fill="rgb(249,65,22)" fg:x="117249" fg:w="73"/><text x="89.5479%" y="191.50"></text></g><g><title>[unknown] (63 samples, 0.05%)</title><rect x="89.3055%" y="165" width="0.0480%" height="15" fill="rgb(238,111,51)" fg:x="117259" fg:w="63"/><text x="89.5555%" y="175.50"></text></g><g><title>[unknown] (44 samples, 0.03%)</title><rect x="89.3200%" y="149" width="0.0335%" height="15" fill="rgb(250,118,22)" fg:x="117278" fg:w="44"/><text x="89.5700%" y="159.50"></text></g><g><title>[unknown] (40 samples, 0.03%)</title><rect x="89.3230%" y="133" width="0.0305%" height="15" fill="rgb(234,84,26)" fg:x="117282" fg:w="40"/><text x="89.5730%" y="143.50"></text></g><g><title>[unknown] (35 samples, 0.03%)</title><rect x="89.3268%" y="117" width="0.0267%" height="15" fill="rgb(243,172,12)" fg:x="117287" fg:w="35"/><text x="89.5768%" y="127.50"></text></g><g><title>[unknown] (30 samples, 0.02%)</title><rect x="89.3306%" y="101" width="0.0228%" height="15" fill="rgb(236,150,49)" fg:x="117292" fg:w="30"/><text x="89.5806%" y="111.50"></text></g><g><title>[unknown] (22 samples, 0.02%)</title><rect x="89.3367%" y="85" width="0.0168%" height="15" fill="rgb(225,197,26)" fg:x="117300" fg:w="22"/><text x="89.5867%" y="95.50"></text></g><g><title>[unknown] (21 samples, 0.02%)</title><rect x="89.3375%" y="69" width="0.0160%" height="15" fill="rgb(214,17,42)" fg:x="117301" fg:w="21"/><text x="89.5875%" y="79.50"></text></g><g><title>[unknown] (20 samples, 0.02%)</title><rect x="89.3382%" y="53" width="0.0152%" height="15" fill="rgb(224,165,40)" fg:x="117302" fg:w="20"/><text x="89.5882%" y="63.50"></text></g><g><title>[unknown] (17 samples, 0.01%)</title><rect x="89.3405%" y="37" width="0.0129%" height="15" fill="rgb(246,100,4)" fg:x="117305" fg:w="17"/><text x="89.5905%" y="47.50"></text></g><g><title>tokio::runtime::driver::Handle::unpark (99 samples, 0.08%)</title><rect x="89.2788%" y="437" width="0.0754%" height="15" fill="rgb(222,103,0)" fg:x="117224" fg:w="99"/><text x="89.5288%" y="447.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (99 samples, 0.08%)</title><rect x="89.2788%" y="421" width="0.0754%" height="15" fill="rgb(227,189,26)" fg:x="117224" fg:w="99"/><text x="89.5288%" y="431.50"></text></g><g><title>tokio::runtime::io::driver::Handle::unpark (99 samples, 0.08%)</title><rect x="89.2788%" y="405" width="0.0754%" height="15" fill="rgb(214,202,17)" fg:x="117224" fg:w="99"/><text x="89.5288%" y="415.50"></text></g><g><title>mio::waker::Waker::wake (99 samples, 0.08%)</title><rect x="89.2788%" y="389" width="0.0754%" height="15" fill="rgb(229,111,3)" fg:x="117224" fg:w="99"/><text x="89.5288%" y="399.50"></text></g><g><title>mio::sys::unix::waker::fdbased::Waker::wake (99 samples, 0.08%)</title><rect x="89.2788%" y="373" width="0.0754%" height="15" fill="rgb(229,172,15)" fg:x="117224" fg:w="99"/><text x="89.5288%" y="383.50"></text></g><g><title>mio::sys::unix::waker::eventfd::WakerInternal::wake (99 samples, 0.08%)</title><rect x="89.2788%" y="357" width="0.0754%" height="15" fill="rgb(230,224,35)" fg:x="117224" fg:w="99"/><text x="89.5288%" y="367.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (99 samples, 0.08%)</title><rect x="89.2788%" y="341" width="0.0754%" height="15" fill="rgb(251,141,6)" fg:x="117224" fg:w="99"/><text x="89.5288%" y="351.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (99 samples, 0.08%)</title><rect x="89.2788%" y="325" width="0.0754%" height="15" fill="rgb(225,208,6)" fg:x="117224" fg:w="99"/><text x="89.5288%" y="335.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (99 samples, 0.08%)</title><rect x="89.2788%" y="309" width="0.0754%" height="15" fill="rgb(246,181,16)" fg:x="117224" fg:w="99"/><text x="89.5288%" y="319.50"></text></g><g><title>__GI___libc_write (99 samples, 0.08%)</title><rect x="89.2788%" y="293" width="0.0754%" height="15" fill="rgb(227,129,36)" fg:x="117224" fg:w="99"/><text x="89.5288%" y="303.50"></text></g><g><title>__GI___libc_write (99 samples, 0.08%)</title><rect x="89.2788%" y="277" width="0.0754%" height="15" fill="rgb(248,117,24)" fg:x="117224" fg:w="99"/><text x="89.5288%" y="287.50"></text></g><g><title>tokio::runtime::context::with_scheduler (1,615 samples, 1.23%)</title><rect x="88.1250%" y="597" width="1.2300%" height="15" fill="rgb(214,185,35)" fg:x="115709" fg:w="1615"/><text x="88.3750%" y="607.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,613 samples, 1.23%)</title><rect x="88.1265%" y="581" width="1.2285%" height="15" fill="rgb(236,150,34)" fg:x="115711" fg:w="1613"/><text x="88.3765%" y="591.50"></text></g><g><title>tokio::runtime::context::with_scheduler::{{closure}} (1,612 samples, 1.23%)</title><rect x="88.1273%" y="565" width="1.2277%" height="15" fill="rgb(243,228,27)" fg:x="115712" fg:w="1612"/><text x="88.3773%" y="575.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (1,611 samples, 1.23%)</title><rect x="88.1280%" y="549" width="1.2270%" height="15" fill="rgb(245,77,44)" fg:x="115713" fg:w="1611"/><text x="88.3780%" y="559.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::{{closure}} (1,611 samples, 1.23%)</title><rect x="88.1280%" y="533" width="1.2270%" height="15" fill="rgb(235,214,42)" fg:x="115713" fg:w="1611"/><text x="88.3780%" y="543.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::{{closure}} (1,611 samples, 1.23%)</title><rect x="88.1280%" y="517" width="1.2270%" height="15" fill="rgb(221,74,3)" fg:x="115713" fg:w="1611"/><text x="88.3780%" y="527.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (1,609 samples, 1.23%)</title><rect x="88.1296%" y="501" width="1.2254%" height="15" fill="rgb(206,121,29)" fg:x="115715" fg:w="1609"/><text x="88.3796%" y="511.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (1,609 samples, 1.23%)</title><rect x="88.1296%" y="485" width="1.2254%" height="15" fill="rgb(249,131,53)" fg:x="115715" fg:w="1609"/><text x="88.3796%" y="495.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (101 samples, 0.08%)</title><rect x="89.2781%" y="469" width="0.0769%" height="15" fill="rgb(236,170,29)" fg:x="117223" fg:w="101"/><text x="89.5281%" y="479.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (101 samples, 0.08%)</title><rect x="89.2781%" y="453" width="0.0769%" height="15" fill="rgb(247,96,15)" fg:x="117223" fg:w="101"/><text x="89.5281%" y="463.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_option_task_without_yield (1,647 samples, 1.25%)</title><rect x="88.1014%" y="645" width="1.2544%" height="15" fill="rgb(211,210,7)" fg:x="115678" fg:w="1647"/><text x="88.3514%" y="655.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (1,646 samples, 1.25%)</title><rect x="88.1021%" y="629" width="1.2536%" height="15" fill="rgb(240,88,50)" fg:x="115679" fg:w="1646"/><text x="88.3521%" y="639.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (1,646 samples, 1.25%)</title><rect x="88.1021%" y="613" width="1.2536%" height="15" fill="rgb(209,229,26)" fg:x="115679" fg:w="1646"/><text x="88.3521%" y="623.50"></text></g><g><title>tokio::util::sharded_list::ShardGuard&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push (23 samples, 0.02%)</title><rect x="89.3786%" y="613" width="0.0175%" height="15" fill="rgb(210,68,23)" fg:x="117355" fg:w="23"/><text x="89.6286%" y="623.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push_front (18 samples, 0.01%)</title><rect x="89.3824%" y="597" width="0.0137%" height="15" fill="rgb(229,180,13)" fg:x="117360" fg:w="18"/><text x="89.6324%" y="607.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind_inner (104 samples, 0.08%)</title><rect x="89.3626%" y="629" width="0.0792%" height="15" fill="rgb(236,53,44)" fg:x="117334" fg:w="104"/><text x="89.6126%" y="639.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::lock_shard (60 samples, 0.05%)</title><rect x="89.3961%" y="613" width="0.0457%" height="15" fill="rgb(244,214,29)" fg:x="117378" fg:w="60"/><text x="89.6461%" y="623.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::shard_inner (57 samples, 0.04%)</title><rect x="89.3984%" y="597" width="0.0434%" height="15" fill="rgb(220,75,29)" fg:x="117381" fg:w="57"/><text x="89.6484%" y="607.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (51 samples, 0.04%)</title><rect x="89.4030%" y="581" width="0.0388%" height="15" fill="rgb(214,183,37)" fg:x="117387" fg:w="51"/><text x="89.6530%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (51 samples, 0.04%)</title><rect x="89.4030%" y="565" width="0.0388%" height="15" fill="rgb(239,117,29)" fg:x="117387" fg:w="51"/><text x="89.6530%" y="575.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (49 samples, 0.04%)</title><rect x="89.4045%" y="549" width="0.0373%" height="15" fill="rgb(237,171,35)" fg:x="117389" fg:w="49"/><text x="89.6545%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (38 samples, 0.03%)</title><rect x="89.4129%" y="533" width="0.0289%" height="15" fill="rgb(229,178,53)" fg:x="117400" fg:w="38"/><text x="89.6629%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (38 samples, 0.03%)</title><rect x="89.4129%" y="517" width="0.0289%" height="15" fill="rgb(210,102,19)" fg:x="117400" fg:w="38"/><text x="89.6629%" y="527.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (162 samples, 0.12%)</title><rect x="89.4631%" y="581" width="0.1234%" height="15" fill="rgb(235,127,22)" fg:x="117466" fg:w="162"/><text x="89.7131%" y="591.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (34 samples, 0.03%)</title><rect x="89.5995%" y="565" width="0.0259%" height="15" fill="rgb(244,31,31)" fg:x="117645" fg:w="34"/><text x="89.8495%" y="575.50"></text></g><g><title>__GI___lll_lock_wake_private (127 samples, 0.10%)</title><rect x="89.6711%" y="405" width="0.0967%" height="15" fill="rgb(231,43,21)" fg:x="117739" fg:w="127"/><text x="89.9211%" y="415.50"></text></g><g><title>[unknown] (125 samples, 0.10%)</title><rect x="89.6726%" y="389" width="0.0952%" height="15" fill="rgb(217,131,35)" fg:x="117741" fg:w="125"/><text x="89.9226%" y="399.50"></text></g><g><title>[unknown] (124 samples, 0.09%)</title><rect x="89.6733%" y="373" width="0.0944%" height="15" fill="rgb(221,149,4)" fg:x="117742" fg:w="124"/><text x="89.9233%" y="383.50"></text></g><g><title>[unknown] (119 samples, 0.09%)</title><rect x="89.6772%" y="357" width="0.0906%" height="15" fill="rgb(232,170,28)" fg:x="117747" fg:w="119"/><text x="89.9272%" y="367.50"></text></g><g><title>[unknown] (110 samples, 0.08%)</title><rect x="89.6840%" y="341" width="0.0838%" height="15" fill="rgb(238,56,10)" fg:x="117756" fg:w="110"/><text x="89.9340%" y="351.50"></text></g><g><title>[unknown] (106 samples, 0.08%)</title><rect x="89.6871%" y="325" width="0.0807%" height="15" fill="rgb(235,196,14)" fg:x="117760" fg:w="106"/><text x="89.9371%" y="335.50"></text></g><g><title>[unknown] (87 samples, 0.07%)</title><rect x="89.7015%" y="309" width="0.0663%" height="15" fill="rgb(216,45,48)" fg:x="117779" fg:w="87"/><text x="89.9515%" y="319.50"></text></g><g><title>[unknown] (82 samples, 0.06%)</title><rect x="89.7053%" y="293" width="0.0625%" height="15" fill="rgb(238,213,17)" fg:x="117784" fg:w="82"/><text x="89.9553%" y="303.50"></text></g><g><title>[unknown] (51 samples, 0.04%)</title><rect x="89.7289%" y="277" width="0.0388%" height="15" fill="rgb(212,13,2)" fg:x="117815" fg:w="51"/><text x="89.9789%" y="287.50"></text></g><g><title>[unknown] (27 samples, 0.02%)</title><rect x="89.7472%" y="261" width="0.0206%" height="15" fill="rgb(240,114,20)" fg:x="117839" fg:w="27"/><text x="89.9972%" y="271.50"></text></g><g><title>[unknown] (19 samples, 0.01%)</title><rect x="89.7533%" y="245" width="0.0145%" height="15" fill="rgb(228,41,40)" fg:x="117847" fg:w="19"/><text x="90.0033%" y="255.50"></text></g><g><title>[unknown] (14 samples, 0.01%)</title><rect x="89.7571%" y="229" width="0.0107%" height="15" fill="rgb(244,132,35)" fg:x="117852" fg:w="14"/><text x="90.0071%" y="239.50"></text></g><g><title>_int_free (77 samples, 0.06%)</title><rect x="89.7800%" y="389" width="0.0586%" height="15" fill="rgb(253,189,4)" fg:x="117882" fg:w="77"/><text x="90.0300%" y="399.50"></text></g><g><title>[unknown] (1,207 samples, 0.92%)</title><rect x="90.0602%" y="357" width="0.9193%" height="15" fill="rgb(224,37,19)" fg:x="118250" fg:w="1207"/><text x="90.3102%" y="367.50"></text></g><g><title>[unknown] (1,146 samples, 0.87%)</title><rect x="90.1067%" y="341" width="0.8728%" height="15" fill="rgb(235,223,18)" fg:x="118311" fg:w="1146"/><text x="90.3567%" y="351.50"></text></g><g><title>[unknown] (1,126 samples, 0.86%)</title><rect x="90.1219%" y="325" width="0.8576%" height="15" fill="rgb(235,163,25)" fg:x="118331" fg:w="1126"/><text x="90.3719%" y="335.50"></text></g><g><title>[unknown] (1,091 samples, 0.83%)</title><rect x="90.1486%" y="309" width="0.8309%" height="15" fill="rgb(217,145,28)" fg:x="118366" fg:w="1091"/><text x="90.3986%" y="319.50"></text></g><g><title>[unknown] (1,046 samples, 0.80%)</title><rect x="90.1829%" y="293" width="0.7966%" height="15" fill="rgb(223,223,32)" fg:x="118411" fg:w="1046"/><text x="90.4329%" y="303.50"></text></g><g><title>[unknown] (962 samples, 0.73%)</title><rect x="90.2468%" y="277" width="0.7327%" height="15" fill="rgb(227,189,39)" fg:x="118495" fg:w="962"/><text x="90.4968%" y="287.50"></text></g><g><title>[unknown] (914 samples, 0.70%)</title><rect x="90.2834%" y="261" width="0.6961%" height="15" fill="rgb(248,10,22)" fg:x="118543" fg:w="914"/><text x="90.5334%" y="271.50"></text></g><g><title>[unknown] (848 samples, 0.65%)</title><rect x="90.3337%" y="245" width="0.6458%" height="15" fill="rgb(248,46,39)" fg:x="118609" fg:w="848"/><text x="90.5837%" y="255.50"></text></g><g><title>[unknown] (774 samples, 0.59%)</title><rect x="90.3900%" y="229" width="0.5895%" height="15" fill="rgb(248,113,48)" fg:x="118683" fg:w="774"/><text x="90.6400%" y="239.50"></text></g><g><title>[unknown] (580 samples, 0.44%)</title><rect x="90.5378%" y="213" width="0.4417%" height="15" fill="rgb(245,16,25)" fg:x="118877" fg:w="580"/><text x="90.7878%" y="223.50"></text></g><g><title>[unknown] (456 samples, 0.35%)</title><rect x="90.6322%" y="197" width="0.3473%" height="15" fill="rgb(249,152,16)" fg:x="119001" fg:w="456"/><text x="90.8822%" y="207.50"></text></g><g><title>[unknown] (305 samples, 0.23%)</title><rect x="90.7472%" y="181" width="0.2323%" height="15" fill="rgb(250,16,1)" fg:x="119152" fg:w="305"/><text x="90.9972%" y="191.50"></text></g><g><title>[unknown] (85 samples, 0.06%)</title><rect x="90.9148%" y="165" width="0.0647%" height="15" fill="rgb(249,138,3)" fg:x="119372" fg:w="85"/><text x="91.1648%" y="175.50"></text></g><g><title>__GI_mprotect (2,474 samples, 1.88%)</title><rect x="91.0031%" y="341" width="1.8842%" height="15" fill="rgb(227,71,41)" fg:x="119488" fg:w="2474"/><text x="91.2531%" y="351.50">_..</text></g><g><title>[unknown] (2,457 samples, 1.87%)</title><rect x="91.0161%" y="325" width="1.8713%" height="15" fill="rgb(209,184,23)" fg:x="119505" fg:w="2457"/><text x="91.2661%" y="335.50">[..</text></g><g><title>[unknown] (2,440 samples, 1.86%)</title><rect x="91.0290%" y="309" width="1.8583%" height="15" fill="rgb(223,215,31)" fg:x="119522" fg:w="2440"/><text x="91.2790%" y="319.50">[..</text></g><g><title>[unknown] (2,436 samples, 1.86%)</title><rect x="91.0321%" y="293" width="1.8553%" height="15" fill="rgb(210,146,28)" fg:x="119526" fg:w="2436"/><text x="91.2821%" y="303.50">[..</text></g><g><title>[unknown] (2,435 samples, 1.85%)</title><rect x="91.0328%" y="277" width="1.8545%" height="15" fill="rgb(209,183,41)" fg:x="119527" fg:w="2435"/><text x="91.2828%" y="287.50">[..</text></g><g><title>[unknown] (2,360 samples, 1.80%)</title><rect x="91.0899%" y="261" width="1.7974%" height="15" fill="rgb(209,224,45)" fg:x="119602" fg:w="2360"/><text x="91.3399%" y="271.50">[..</text></g><g><title>[unknown] (2,203 samples, 1.68%)</title><rect x="91.2095%" y="245" width="1.6778%" height="15" fill="rgb(224,209,51)" fg:x="119759" fg:w="2203"/><text x="91.4595%" y="255.50"></text></g><g><title>[unknown] (1,995 samples, 1.52%)</title><rect x="91.3679%" y="229" width="1.5194%" height="15" fill="rgb(223,17,39)" fg:x="119967" fg:w="1995"/><text x="91.6179%" y="239.50"></text></g><g><title>[unknown] (1,709 samples, 1.30%)</title><rect x="91.5857%" y="213" width="1.3016%" height="15" fill="rgb(234,204,37)" fg:x="120253" fg:w="1709"/><text x="91.8357%" y="223.50"></text></g><g><title>[unknown] (1,524 samples, 1.16%)</title><rect x="91.7266%" y="197" width="1.1607%" height="15" fill="rgb(236,120,5)" fg:x="120438" fg:w="1524"/><text x="91.9766%" y="207.50"></text></g><g><title>[unknown] (1,193 samples, 0.91%)</title><rect x="91.9787%" y="181" width="0.9086%" height="15" fill="rgb(248,97,27)" fg:x="120769" fg:w="1193"/><text x="92.2287%" y="191.50"></text></g><g><title>[unknown] (865 samples, 0.66%)</title><rect x="92.2285%" y="165" width="0.6588%" height="15" fill="rgb(240,66,17)" fg:x="121097" fg:w="865"/><text x="92.4785%" y="175.50"></text></g><g><title>[unknown] (539 samples, 0.41%)</title><rect x="92.4768%" y="149" width="0.4105%" height="15" fill="rgb(210,79,3)" fg:x="121423" fg:w="539"/><text x="92.7268%" y="159.50"></text></g><g><title>[unknown] (259 samples, 0.20%)</title><rect x="92.6901%" y="133" width="0.1973%" height="15" fill="rgb(214,176,27)" fg:x="121703" fg:w="259"/><text x="92.9401%" y="143.50"></text></g><g><title>[unknown] (80 samples, 0.06%)</title><rect x="92.8264%" y="117" width="0.0609%" height="15" fill="rgb(235,185,3)" fg:x="121882" fg:w="80"/><text x="93.0764%" y="127.50"></text></g><g><title>[unknown] (29 samples, 0.02%)</title><rect x="92.8652%" y="101" width="0.0221%" height="15" fill="rgb(227,24,12)" fg:x="121933" fg:w="29"/><text x="93.1152%" y="111.50"></text></g><g><title>sysmalloc (3,786 samples, 2.88%)</title><rect x="90.0069%" y="373" width="2.8835%" height="15" fill="rgb(252,169,48)" fg:x="118180" fg:w="3786"/><text x="90.2569%" y="383.50">sy..</text></g><g><title>grow_heap (2,509 samples, 1.91%)</title><rect x="90.9795%" y="357" width="1.9109%" height="15" fill="rgb(212,65,1)" fg:x="119457" fg:w="2509"/><text x="91.2295%" y="367.50">g..</text></g><g><title>_int_malloc (4,038 samples, 3.08%)</title><rect x="89.8386%" y="389" width="3.0754%" height="15" fill="rgb(242,39,24)" fg:x="117959" fg:w="4038"/><text x="90.0886%" y="399.50">_in..</text></g><g><title>unlink_chunk (31 samples, 0.02%)</title><rect x="92.8904%" y="373" width="0.0236%" height="15" fill="rgb(249,32,23)" fg:x="121966" fg:w="31"/><text x="93.1404%" y="383.50"></text></g><g><title>alloc::alloc::exchange_malloc (4,335 samples, 3.30%)</title><rect x="89.6261%" y="565" width="3.3016%" height="15" fill="rgb(251,195,23)" fg:x="117680" fg:w="4335"/><text x="89.8761%" y="575.50">all..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,329 samples, 3.30%)</title><rect x="89.6307%" y="549" width="3.2970%" height="15" fill="rgb(236,174,8)" fg:x="117686" fg:w="4329"/><text x="89.8807%" y="559.50">&lt;al..</text></g><g><title>alloc::alloc::Global::alloc_impl (4,329 samples, 3.30%)</title><rect x="89.6307%" y="533" width="3.2970%" height="15" fill="rgb(220,197,8)" fg:x="117686" fg:w="4329"/><text x="89.8807%" y="543.50">all..</text></g><g><title>alloc::alloc::alloc (4,329 samples, 3.30%)</title><rect x="89.6307%" y="517" width="3.2970%" height="15" fill="rgb(240,108,37)" fg:x="117686" fg:w="4329"/><text x="89.8807%" y="527.50">all..</text></g><g><title>__rdl_alloc (4,329 samples, 3.30%)</title><rect x="89.6307%" y="501" width="3.2970%" height="15" fill="rgb(232,176,24)" fg:x="117686" fg:w="4329"/><text x="89.8807%" y="511.50">__r..</text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (4,329 samples, 3.30%)</title><rect x="89.6307%" y="485" width="3.2970%" height="15" fill="rgb(243,35,29)" fg:x="117686" fg:w="4329"/><text x="89.8807%" y="495.50">std..</text></g><g><title>std::sys::pal::unix::alloc::aligned_malloc (4,329 samples, 3.30%)</title><rect x="89.6307%" y="469" width="3.2970%" height="15" fill="rgb(210,37,18)" fg:x="117686" fg:w="4329"/><text x="89.8807%" y="479.50">std..</text></g><g><title>__posix_memalign (4,297 samples, 3.27%)</title><rect x="89.6551%" y="453" width="3.2726%" height="15" fill="rgb(224,184,40)" fg:x="117718" fg:w="4297"/><text x="89.9051%" y="463.50">__p..</text></g><g><title>__posix_memalign (4,297 samples, 3.27%)</title><rect x="89.6551%" y="437" width="3.2726%" height="15" fill="rgb(236,39,29)" fg:x="117718" fg:w="4297"/><text x="89.9051%" y="447.50">__p..</text></g><g><title>_mid_memalign (4,297 samples, 3.27%)</title><rect x="89.6551%" y="421" width="3.2726%" height="15" fill="rgb(232,48,39)" fg:x="117718" fg:w="4297"/><text x="89.9051%" y="431.50">_mi..</text></g><g><title>_int_memalign (4,149 samples, 3.16%)</title><rect x="89.7678%" y="405" width="3.1599%" height="15" fill="rgb(236,34,42)" fg:x="117866" fg:w="4149"/><text x="90.0178%" y="415.50">_in..</text></g><g><title>sysmalloc (18 samples, 0.01%)</title><rect x="92.9140%" y="389" width="0.0137%" height="15" fill="rgb(243,106,37)" fg:x="121997" fg:w="18"/><text x="93.1640%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6,666 samples, 5.08%)</title><rect x="87.8523%" y="725" width="5.0769%" height="15" fill="rgb(218,96,6)" fg:x="115351" fg:w="6666"/><text x="88.1023%" y="735.50">core::..</text></g><g><title>tokio::task::spawn::spawn_inner::{{closure}} (6,665 samples, 5.08%)</title><rect x="87.8531%" y="709" width="5.0761%" height="15" fill="rgb(235,130,12)" fg:x="115352" fg:w="6665"/><text x="88.1031%" y="719.50">tokio:..</text></g><g><title>tokio::runtime::scheduler::Handle::spawn (6,665 samples, 5.08%)</title><rect x="87.8531%" y="693" width="5.0761%" height="15" fill="rgb(231,95,0)" fg:x="115352" fg:w="6665"/><text x="88.1031%" y="703.50">tokio:..</text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::spawn (6,664 samples, 5.08%)</title><rect x="87.8539%" y="677" width="5.0754%" height="15" fill="rgb(228,12,23)" fg:x="115353" fg:w="6664"/><text x="88.1039%" y="687.50">tokio:..</text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (6,661 samples, 5.07%)</title><rect x="87.8561%" y="661" width="5.0731%" height="15" fill="rgb(216,12,1)" fg:x="115356" fg:w="6661"/><text x="88.1061%" y="671.50">tokio:..</text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (4,692 samples, 3.57%)</title><rect x="89.3558%" y="645" width="3.5735%" height="15" fill="rgb(219,59,3)" fg:x="117325" fg:w="4692"/><text x="89.6058%" y="655.50">toki..</text></g><g><title>tokio::runtime::task::new_task (4,579 samples, 3.49%)</title><rect x="89.4418%" y="629" width="3.4874%" height="15" fill="rgb(215,208,46)" fg:x="117438" fg:w="4579"/><text x="89.6918%" y="639.50">tok..</text></g><g><title>tokio::runtime::task::raw::RawTask::new (4,579 samples, 3.49%)</title><rect x="89.4418%" y="613" width="3.4874%" height="15" fill="rgb(254,224,29)" fg:x="117438" fg:w="4579"/><text x="89.6918%" y="623.50">tok..</text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (4,579 samples, 3.49%)</title><rect x="89.4418%" y="597" width="3.4874%" height="15" fill="rgb(232,14,29)" fg:x="117438" fg:w="4579"/><text x="89.6918%" y="607.50">tok..</text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (4,389 samples, 3.34%)</title><rect x="89.5865%" y="581" width="3.3427%" height="15" fill="rgb(208,45,52)" fg:x="117628" fg:w="4389"/><text x="89.8365%" y="591.50">all..</text></g><g><title>tokio::runtime::context::current::with_current (7,636 samples, 5.82%)</title><rect x="87.1204%" y="773" width="5.8156%" height="15" fill="rgb(234,191,28)" fg:x="114390" fg:w="7636"/><text x="87.3704%" y="783.50">tokio::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (7,635 samples, 5.81%)</title><rect x="87.1212%" y="757" width="5.8149%" height="15" fill="rgb(244,67,43)" fg:x="114391" fg:w="7635"/><text x="87.3712%" y="767.50">std::th..</text></g><g><title>tokio::runtime::context::current::with_current::{{closure}} (7,188 samples, 5.47%)</title><rect x="87.4616%" y="741" width="5.4744%" height="15" fill="rgb(236,189,24)" fg:x="114838" fg:w="7188"/><text x="87.7116%" y="751.50">tokio::..</text></g><g><title>tokio::task::spawn::spawn (7,670 samples, 5.84%)</title><rect x="87.1128%" y="805" width="5.8415%" height="15" fill="rgb(239,214,33)" fg:x="114380" fg:w="7670"/><text x="87.3628%" y="815.50">tokio::..</text></g><g><title>tokio::task::spawn::spawn_inner (7,670 samples, 5.84%)</title><rect x="87.1128%" y="789" width="5.8415%" height="15" fill="rgb(226,176,41)" fg:x="114380" fg:w="7670"/><text x="87.3628%" y="799.50">tokio::..</text></g><g><title>tokio::runtime::task::id::Id::next (24 samples, 0.02%)</title><rect x="92.9361%" y="773" width="0.0183%" height="15" fill="rgb(248,47,8)" fg:x="122026" fg:w="24"/><text x="93.1861%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_add (24 samples, 0.02%)</title><rect x="92.9361%" y="757" width="0.0183%" height="15" fill="rgb(218,81,44)" fg:x="122026" fg:w="24"/><text x="93.1861%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_add (24 samples, 0.02%)</title><rect x="92.9361%" y="741" width="0.0183%" height="15" fill="rgb(213,98,6)" fg:x="122026" fg:w="24"/><text x="93.1861%" y="751.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (62,691 samples, 47.75%)</title><rect x="45.2152%" y="885" width="47.7460%" height="15" fill="rgb(222,85,22)" fg:x="59368" fg:w="62691"/><text x="45.4652%" y="895.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (62,691 samples, 47.75%)</title><rect x="45.2152%" y="869" width="47.7460%" height="15" fill="rgb(239,46,39)" fg:x="59368" fg:w="62691"/><text x="45.4652%" y="879.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}}</text></g><g><title>torrust_tracker::servers::udp::server::Udp::run_with_graceful_shutdown::{{closure}}::{{closure}} (18,228 samples, 13.88%)</title><rect x="79.0786%" y="853" width="13.8826%" height="15" fill="rgb(237,12,29)" fg:x="103831" fg:w="18228"/><text x="79.3286%" y="863.50">torrust_tracker::serv..</text></g><g><title>torrust_tracker::servers::udp::server::Udp::run_udp_server::{{closure}} (18,226 samples, 13.88%)</title><rect x="79.0801%" y="837" width="13.8811%" height="15" fill="rgb(214,77,8)" fg:x="103833" fg:w="18226"/><text x="79.3301%" y="847.50">torrust_tracker::serv..</text></g><g><title>torrust_tracker::servers::udp::server::Udp::spawn_request_processor (7,679 samples, 5.85%)</title><rect x="87.1128%" y="821" width="5.8484%" height="15" fill="rgb(217,168,37)" fg:x="114380" fg:w="7679"/><text x="87.3628%" y="831.50">torrust..</text></g><g><title>__memcpy_avx512_unaligned_erms (38 samples, 0.03%)</title><rect x="92.9627%" y="853" width="0.0289%" height="15" fill="rgb(221,217,23)" fg:x="122061" fg:w="38"/><text x="93.2127%" y="863.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (407 samples, 0.31%)</title><rect x="92.9970%" y="821" width="0.3100%" height="15" fill="rgb(243,229,36)" fg:x="122106" fg:w="407"/><text x="93.2470%" y="831.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (411 samples, 0.31%)</title><rect x="92.9947%" y="853" width="0.3130%" height="15" fill="rgb(251,163,40)" fg:x="122103" fg:w="411"/><text x="93.2447%" y="863.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage::{{closure}} (411 samples, 0.31%)</title><rect x="92.9947%" y="837" width="0.3130%" height="15" fill="rgb(237,222,12)" fg:x="122103" fg:w="411"/><text x="93.2447%" y="847.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (63,150 samples, 48.10%)</title><rect x="45.2152%" y="901" width="48.0956%" height="15" fill="rgb(248,132,6)" fg:x="59368" fg:w="63150"/><text x="45.4652%" y="911.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::drop_future_or_output (459 samples, 0.35%)</title><rect x="92.9612%" y="885" width="0.3496%" height="15" fill="rgb(227,167,50)" fg:x="122059" fg:w="459"/><text x="93.2112%" y="895.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (459 samples, 0.35%)</title><rect x="92.9612%" y="869" width="0.3496%" height="15" fill="rgb(242,84,37)" fg:x="122059" fg:w="459"/><text x="93.2112%" y="879.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (16 samples, 0.01%)</title><rect x="93.3108%" y="885" width="0.0122%" height="15" fill="rgb(212,4,50)" fg:x="122518" fg:w="16"/><text x="93.5608%" y="895.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (398 samples, 0.30%)</title><rect x="93.3283%" y="869" width="0.3031%" height="15" fill="rgb(230,228,32)" fg:x="122541" fg:w="398"/><text x="93.5783%" y="879.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (325 samples, 0.25%)</title><rect x="93.6330%" y="837" width="0.2475%" height="15" fill="rgb(248,217,23)" fg:x="122941" fg:w="325"/><text x="93.8830%" y="847.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (330 samples, 0.25%)</title><rect x="93.6314%" y="869" width="0.2513%" height="15" fill="rgb(238,197,32)" fg:x="122939" fg:w="330"/><text x="93.8814%" y="879.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage::{{closure}} (330 samples, 0.25%)</title><rect x="93.6314%" y="853" width="0.2513%" height="15" fill="rgb(236,106,1)" fg:x="122939" fg:w="330"/><text x="93.8814%" y="863.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (731 samples, 0.56%)</title><rect x="93.3283%" y="885" width="0.5567%" height="15" fill="rgb(219,228,13)" fg:x="122541" fg:w="731"/><text x="93.5783%" y="895.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (63,908 samples, 48.67%)</title><rect x="45.2152%" y="997" width="48.6729%" height="15" fill="rgb(238,30,35)" fg:x="59368" fg:w="63908"/><text x="45.4652%" y="1007.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (63,908 samples, 48.67%)</title><rect x="45.2152%" y="981" width="48.6729%" height="15" fill="rgb(236,70,23)" fg:x="59368" fg:w="63908"/><text x="45.4652%" y="991.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (63,908 samples, 48.67%)</title><rect x="45.2152%" y="965" width="48.6729%" height="15" fill="rgb(249,104,48)" fg:x="59368" fg:w="63908"/><text x="45.4652%" y="975.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (63,908 samples, 48.67%)</title><rect x="45.2152%" y="949" width="48.6729%" height="15" fill="rgb(254,117,50)" fg:x="59368" fg:w="63908"/><text x="45.4652%" y="959.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (63,908 samples, 48.67%)</title><rect x="45.2152%" y="933" width="48.6729%" height="15" fill="rgb(223,152,4)" fg:x="59368" fg:w="63908"/><text x="45.4652%" y="943.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (63,908 samples, 48.67%)</title><rect x="45.2152%" y="917" width="48.6729%" height="15" fill="rgb(245,6,2)" fg:x="59368" fg:w="63908"/><text x="45.4652%" y="927.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::store_output (758 samples, 0.58%)</title><rect x="93.3108%" y="901" width="0.5773%" height="15" fill="rgb(249,150,24)" fg:x="122518" fg:w="758"/><text x="93.5608%" y="911.50"></text></g><g><title>tokio::runtime::coop::budget (65,027 samples, 49.53%)</title><rect x="44.3690%" y="1125" width="49.5251%" height="15" fill="rgb(228,185,42)" fg:x="58257" fg:w="65027"/><text x="44.6190%" y="1135.50">tokio::runtime::coop::budget</text></g><g><title>tokio::runtime::coop::with_budget (65,027 samples, 49.53%)</title><rect x="44.3690%" y="1109" width="49.5251%" height="15" fill="rgb(226,39,33)" fg:x="58257" fg:w="65027"/><text x="44.6190%" y="1119.50">tokio::runtime::coop::with_budget</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (65,009 samples, 49.51%)</title><rect x="44.3828%" y="1093" width="49.5114%" height="15" fill="rgb(221,166,19)" fg:x="58275" fg:w="65009"/><text x="44.6328%" y="1103.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}}</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (65,003 samples, 49.51%)</title><rect x="44.3873%" y="1077" width="49.5069%" height="15" fill="rgb(209,109,2)" fg:x="58281" fg:w="65003"/><text x="44.6373%" y="1087.50">tokio::runtime::task::LocalNotified&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (65,003 samples, 49.51%)</title><rect x="44.3873%" y="1061" width="49.5069%" height="15" fill="rgb(252,216,26)" fg:x="58281" fg:w="65003"/><text x="44.6373%" y="1071.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::raw::poll (64,538 samples, 49.15%)</title><rect x="44.7415%" y="1045" width="49.1527%" height="15" fill="rgb(227,173,36)" fg:x="58746" fg:w="64538"/><text x="44.9915%" y="1055.50">tokio::runtime::task::raw::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (64,493 samples, 49.12%)</title><rect x="44.7757%" y="1029" width="49.1184%" height="15" fill="rgb(209,90,7)" fg:x="58791" fg:w="64493"/><text x="45.0257%" y="1039.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (63,919 samples, 48.68%)</title><rect x="45.2129%" y="1013" width="48.6813%" height="15" fill="rgb(250,194,11)" fg:x="59365" fg:w="63919"/><text x="45.4629%" y="1023.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::start_poll (93 samples, 0.07%)</title><rect x="93.8942%" y="1125" width="0.0708%" height="15" fill="rgb(220,72,50)" fg:x="123284" fg:w="93"/><text x="94.1442%" y="1135.50"></text></g><g><title>syscall (2,486 samples, 1.89%)</title><rect x="93.9673%" y="1077" width="1.8934%" height="15" fill="rgb(222,106,48)" fg:x="123380" fg:w="2486"/><text x="94.2173%" y="1087.50">s..</text></g><g><title>[unknown] (2,424 samples, 1.85%)</title><rect x="94.0145%" y="1061" width="1.8461%" height="15" fill="rgb(216,220,45)" fg:x="123442" fg:w="2424"/><text x="94.2645%" y="1071.50">[..</text></g><g><title>[unknown] (2,416 samples, 1.84%)</title><rect x="94.0206%" y="1045" width="1.8400%" height="15" fill="rgb(234,112,18)" fg:x="123450" fg:w="2416"/><text x="94.2706%" y="1055.50">[..</text></g><g><title>[unknown] (2,130 samples, 1.62%)</title><rect x="94.2384%" y="1029" width="1.6222%" height="15" fill="rgb(206,179,9)" fg:x="123736" fg:w="2130"/><text x="94.4884%" y="1039.50"></text></g><g><title>[unknown] (2,013 samples, 1.53%)</title><rect x="94.3275%" y="1013" width="1.5331%" height="15" fill="rgb(215,115,40)" fg:x="123853" fg:w="2013"/><text x="94.5775%" y="1023.50"></text></g><g><title>[unknown] (1,951 samples, 1.49%)</title><rect x="94.3748%" y="997" width="1.4859%" height="15" fill="rgb(222,69,34)" fg:x="123915" fg:w="1951"/><text x="94.6248%" y="1007.50"></text></g><g><title>[unknown] (1,589 samples, 1.21%)</title><rect x="94.6505%" y="981" width="1.2102%" height="15" fill="rgb(209,161,10)" fg:x="124277" fg:w="1589"/><text x="94.9005%" y="991.50"></text></g><g><title>[unknown] (1,415 samples, 1.08%)</title><rect x="94.7830%" y="965" width="1.0777%" height="15" fill="rgb(217,6,38)" fg:x="124451" fg:w="1415"/><text x="95.0330%" y="975.50"></text></g><g><title>[unknown] (1,217 samples, 0.93%)</title><rect x="94.9338%" y="949" width="0.9269%" height="15" fill="rgb(229,229,48)" fg:x="124649" fg:w="1217"/><text x="95.1838%" y="959.50"></text></g><g><title>[unknown] (820 samples, 0.62%)</title><rect x="95.2361%" y="933" width="0.6245%" height="15" fill="rgb(225,21,28)" fg:x="125046" fg:w="820"/><text x="95.4861%" y="943.50"></text></g><g><title>[unknown] (564 samples, 0.43%)</title><rect x="95.4311%" y="917" width="0.4295%" height="15" fill="rgb(206,33,13)" fg:x="125302" fg:w="564"/><text x="95.6811%" y="927.50"></text></g><g><title>[unknown] (360 samples, 0.27%)</title><rect x="95.5865%" y="901" width="0.2742%" height="15" fill="rgb(242,178,17)" fg:x="125506" fg:w="360"/><text x="95.8365%" y="911.50"></text></g><g><title>[unknown] (244 samples, 0.19%)</title><rect x="95.6748%" y="885" width="0.1858%" height="15" fill="rgb(220,162,5)" fg:x="125622" fg:w="244"/><text x="95.9248%" y="895.50"></text></g><g><title>[unknown] (194 samples, 0.15%)</title><rect x="95.7129%" y="869" width="0.1478%" height="15" fill="rgb(210,33,43)" fg:x="125672" fg:w="194"/><text x="95.9629%" y="879.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (339 samples, 0.26%)</title><rect x="95.8774%" y="1061" width="0.2582%" height="15" fill="rgb(216,116,54)" fg:x="125888" fg:w="339"/><text x="96.1274%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (337 samples, 0.26%)</title><rect x="95.8789%" y="1045" width="0.2567%" height="15" fill="rgb(249,92,24)" fg:x="125890" fg:w="337"/><text x="96.1289%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_add (337 samples, 0.26%)</title><rect x="95.8789%" y="1029" width="0.2567%" height="15" fill="rgb(231,189,14)" fg:x="125890" fg:w="337"/><text x="96.1289%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (364 samples, 0.28%)</title><rect x="95.8607%" y="1077" width="0.2772%" height="15" fill="rgb(230,8,41)" fg:x="125866" fg:w="364"/><text x="96.1107%" y="1087.50"></text></g><g><title>[unknown] (154 samples, 0.12%)</title><rect x="96.1432%" y="869" width="0.1173%" height="15" fill="rgb(249,7,27)" fg:x="126237" fg:w="154"/><text x="96.3932%" y="879.50"></text></g><g><title>[unknown] (152 samples, 0.12%)</title><rect x="96.1447%" y="853" width="0.1158%" height="15" fill="rgb(232,86,5)" fg:x="126239" fg:w="152"/><text x="96.3947%" y="863.50"></text></g><g><title>[unknown] (143 samples, 0.11%)</title><rect x="96.1516%" y="837" width="0.1089%" height="15" fill="rgb(224,175,18)" fg:x="126248" fg:w="143"/><text x="96.4016%" y="847.50"></text></g><g><title>[unknown] (139 samples, 0.11%)</title><rect x="96.1546%" y="821" width="0.1059%" height="15" fill="rgb(220,129,12)" fg:x="126252" fg:w="139"/><text x="96.4046%" y="831.50"></text></g><g><title>[unknown] (131 samples, 0.10%)</title><rect x="96.1607%" y="805" width="0.0998%" height="15" fill="rgb(210,19,36)" fg:x="126260" fg:w="131"/><text x="96.4107%" y="815.50"></text></g><g><title>[unknown] (123 samples, 0.09%)</title><rect x="96.1668%" y="789" width="0.0937%" height="15" fill="rgb(219,96,14)" fg:x="126268" fg:w="123"/><text x="96.4168%" y="799.50"></text></g><g><title>[unknown] (110 samples, 0.08%)</title><rect x="96.1767%" y="773" width="0.0838%" height="15" fill="rgb(249,106,1)" fg:x="126281" fg:w="110"/><text x="96.4267%" y="783.50"></text></g><g><title>[unknown] (80 samples, 0.06%)</title><rect x="96.1996%" y="757" width="0.0609%" height="15" fill="rgb(249,155,20)" fg:x="126311" fg:w="80"/><text x="96.4496%" y="767.50"></text></g><g><title>[unknown] (74 samples, 0.06%)</title><rect x="96.2041%" y="741" width="0.0564%" height="15" fill="rgb(244,168,9)" fg:x="126317" fg:w="74"/><text x="96.4541%" y="751.50"></text></g><g><title>[unknown] (65 samples, 0.05%)</title><rect x="96.2110%" y="725" width="0.0495%" height="15" fill="rgb(216,23,50)" fg:x="126326" fg:w="65"/><text x="96.4610%" y="735.50"></text></g><g><title>[unknown] (64 samples, 0.05%)</title><rect x="96.2118%" y="709" width="0.0487%" height="15" fill="rgb(224,219,20)" fg:x="126327" fg:w="64"/><text x="96.4618%" y="719.50"></text></g><g><title>[unknown] (47 samples, 0.04%)</title><rect x="96.2247%" y="693" width="0.0358%" height="15" fill="rgb(222,156,15)" fg:x="126344" fg:w="47"/><text x="96.4747%" y="703.50"></text></g><g><title>[unknown] (44 samples, 0.03%)</title><rect x="96.2270%" y="677" width="0.0335%" height="15" fill="rgb(231,97,17)" fg:x="126347" fg:w="44"/><text x="96.4770%" y="687.50"></text></g><g><title>[unknown] (43 samples, 0.03%)</title><rect x="96.2278%" y="661" width="0.0327%" height="15" fill="rgb(218,70,48)" fg:x="126348" fg:w="43"/><text x="96.4778%" y="671.50"></text></g><g><title>[unknown] (40 samples, 0.03%)</title><rect x="96.2300%" y="645" width="0.0305%" height="15" fill="rgb(212,196,52)" fg:x="126351" fg:w="40"/><text x="96.4800%" y="655.50"></text></g><g><title>[unknown] (26 samples, 0.02%)</title><rect x="96.2407%" y="629" width="0.0198%" height="15" fill="rgb(243,203,18)" fg:x="126365" fg:w="26"/><text x="96.4907%" y="639.50"></text></g><g><title>[unknown] (20 samples, 0.02%)</title><rect x="96.2453%" y="613" width="0.0152%" height="15" fill="rgb(252,125,41)" fg:x="126371" fg:w="20"/><text x="96.4953%" y="623.50"></text></g><g><title>__GI___libc_write (158 samples, 0.12%)</title><rect x="96.1417%" y="901" width="0.1203%" height="15" fill="rgb(223,180,33)" fg:x="126235" fg:w="158"/><text x="96.3917%" y="911.50"></text></g><g><title>__GI___libc_write (158 samples, 0.12%)</title><rect x="96.1417%" y="885" width="0.1203%" height="15" fill="rgb(254,159,46)" fg:x="126235" fg:w="158"/><text x="96.3917%" y="895.50"></text></g><g><title>mio::sys::unix::waker::eventfd::WakerInternal::wake (159 samples, 0.12%)</title><rect x="96.1417%" y="965" width="0.1211%" height="15" fill="rgb(254,38,10)" fg:x="126235" fg:w="159"/><text x="96.3917%" y="975.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (159 samples, 0.12%)</title><rect x="96.1417%" y="949" width="0.1211%" height="15" fill="rgb(208,217,32)" fg:x="126235" fg:w="159"/><text x="96.3917%" y="959.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (159 samples, 0.12%)</title><rect x="96.1417%" y="933" width="0.1211%" height="15" fill="rgb(221,120,13)" fg:x="126235" fg:w="159"/><text x="96.3917%" y="943.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (159 samples, 0.12%)</title><rect x="96.1417%" y="917" width="0.1211%" height="15" fill="rgb(246,54,52)" fg:x="126235" fg:w="159"/><text x="96.3917%" y="927.50"></text></g><g><title>tokio::runtime::driver::Handle::unpark (168 samples, 0.13%)</title><rect x="96.1394%" y="1045" width="0.1280%" height="15" fill="rgb(242,34,25)" fg:x="126232" fg:w="168"/><text x="96.3894%" y="1055.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (168 samples, 0.13%)</title><rect x="96.1394%" y="1029" width="0.1280%" height="15" fill="rgb(247,209,9)" fg:x="126232" fg:w="168"/><text x="96.3894%" y="1039.50"></text></g><g><title>tokio::runtime::io::driver::Handle::unpark (168 samples, 0.13%)</title><rect x="96.1394%" y="1013" width="0.1280%" height="15" fill="rgb(228,71,26)" fg:x="126232" fg:w="168"/><text x="96.3894%" y="1023.50"></text></g><g><title>mio::waker::Waker::wake (165 samples, 0.13%)</title><rect x="96.1417%" y="997" width="0.1257%" height="15" fill="rgb(222,145,49)" fg:x="126235" fg:w="165"/><text x="96.3917%" y="1007.50"></text></g><g><title>mio::sys::unix::waker::fdbased::Waker::wake (165 samples, 0.13%)</title><rect x="96.1417%" y="981" width="0.1257%" height="15" fill="rgb(218,121,17)" fg:x="126235" fg:w="165"/><text x="96.3917%" y="991.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (68,159 samples, 51.91%)</title><rect x="44.3576%" y="1141" width="51.9105%" height="15" fill="rgb(244,50,7)" fg:x="58242" fg:w="68159"/><text x="44.6076%" y="1151.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_searching (3,024 samples, 2.30%)</title><rect x="93.9650%" y="1125" width="2.3031%" height="15" fill="rgb(246,229,37)" fg:x="123377" fg:w="3024"/><text x="94.2150%" y="1135.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::transition_worker_from_searching (3,023 samples, 2.30%)</title><rect x="93.9658%" y="1109" width="2.3023%" height="15" fill="rgb(225,18,5)" fg:x="123378" fg:w="3023"/><text x="94.2158%" y="1119.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (3,022 samples, 2.30%)</title><rect x="93.9665%" y="1093" width="2.3016%" height="15" fill="rgb(213,204,8)" fg:x="123379" fg:w="3022"/><text x="94.2165%" y="1103.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (171 samples, 0.13%)</title><rect x="96.1379%" y="1077" width="0.1302%" height="15" fill="rgb(238,103,6)" fg:x="126230" fg:w="171"/><text x="96.3879%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (171 samples, 0.13%)</title><rect x="96.1379%" y="1061" width="0.1302%" height="15" fill="rgb(222,25,35)" fg:x="126230" fg:w="171"/><text x="96.3879%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (15 samples, 0.01%)</title><rect x="96.2902%" y="1109" width="0.0114%" height="15" fill="rgb(213,203,35)" fg:x="126430" fg:w="15"/><text x="96.5402%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task::{{closure}} (14 samples, 0.01%)</title><rect x="96.2910%" y="1093" width="0.0107%" height="15" fill="rgb(221,79,53)" fg:x="126431" fg:w="14"/><text x="96.5410%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::pop (14 samples, 0.01%)</title><rect x="96.2910%" y="1077" width="0.0107%" height="15" fill="rgb(243,200,35)" fg:x="126431" fg:w="14"/><text x="96.5410%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task (18 samples, 0.01%)</title><rect x="96.2902%" y="1125" width="0.0137%" height="15" fill="rgb(248,60,25)" fg:x="126430" fg:w="18"/><text x="96.5402%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::tune_global_queue_interval (53 samples, 0.04%)</title><rect x="96.3039%" y="1125" width="0.0404%" height="15" fill="rgb(227,53,46)" fg:x="126448" fg:w="53"/><text x="96.5539%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::tuned_global_queue_interval (53 samples, 0.04%)</title><rect x="96.3039%" y="1109" width="0.0404%" height="15" fill="rgb(216,120,32)" fg:x="126448" fg:w="53"/><text x="96.5539%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task (107 samples, 0.08%)</title><rect x="96.2681%" y="1141" width="0.0815%" height="15" fill="rgb(220,134,1)" fg:x="126401" fg:w="107"/><text x="96.5181%" y="1151.50"></text></g><g><title>__GI___libc_free (17 samples, 0.01%)</title><rect x="96.3542%" y="325" width="0.0129%" height="15" fill="rgb(237,168,5)" fg:x="126514" fg:w="17"/><text x="96.6042%" y="335.50"></text></g><g><title>_int_free (17 samples, 0.01%)</title><rect x="96.3542%" y="309" width="0.0129%" height="15" fill="rgb(231,100,33)" fg:x="126514" fg:w="17"/><text x="96.6042%" y="319.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (18 samples, 0.01%)</title><rect x="96.3542%" y="437" width="0.0137%" height="15" fill="rgb(236,177,47)" fg:x="126514" fg:w="18"/><text x="96.6042%" y="447.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (18 samples, 0.01%)</title><rect x="96.3542%" y="421" width="0.0137%" height="15" fill="rgb(235,7,49)" fg:x="126514" fg:w="18"/><text x="96.6042%" y="431.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (18 samples, 0.01%)</title><rect x="96.3542%" y="405" width="0.0137%" height="15" fill="rgb(232,119,22)" fg:x="126514" fg:w="18"/><text x="96.6042%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (18 samples, 0.01%)</title><rect x="96.3542%" y="389" width="0.0137%" height="15" fill="rgb(254,73,53)" fg:x="126514" fg:w="18"/><text x="96.6042%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (18 samples, 0.01%)</title><rect x="96.3542%" y="373" width="0.0137%" height="15" fill="rgb(251,35,20)" fg:x="126514" fg:w="18"/><text x="96.6042%" y="383.50"></text></g><g><title>__rdl_dealloc (18 samples, 0.01%)</title><rect x="96.3542%" y="357" width="0.0137%" height="15" fill="rgb(241,119,20)" fg:x="126514" fg:w="18"/><text x="96.6042%" y="367.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (18 samples, 0.01%)</title><rect x="96.3542%" y="341" width="0.0137%" height="15" fill="rgb(207,102,14)" fg:x="126514" fg:w="18"/><text x="96.6042%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (19 samples, 0.01%)</title><rect x="96.3542%" y="453" width="0.0145%" height="15" fill="rgb(248,201,50)" fg:x="126514" fg:w="19"/><text x="96.6042%" y="463.50"></text></g><g><title>tokio::runtime::task::Task&lt;S&gt;::shutdown (26 samples, 0.02%)</title><rect x="96.3496%" y="1109" width="0.0198%" height="15" fill="rgb(222,185,44)" fg:x="126508" fg:w="26"/><text x="96.5996%" y="1119.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::shutdown (26 samples, 0.02%)</title><rect x="96.3496%" y="1093" width="0.0198%" height="15" fill="rgb(218,107,18)" fg:x="126508" fg:w="26"/><text x="96.5996%" y="1103.50"></text></g><g><title>tokio::runtime::task::raw::shutdown (26 samples, 0.02%)</title><rect x="96.3496%" y="1077" width="0.0198%" height="15" fill="rgb(237,177,39)" fg:x="126508" fg:w="26"/><text x="96.5996%" y="1087.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::shutdown (26 samples, 0.02%)</title><rect x="96.3496%" y="1061" width="0.0198%" height="15" fill="rgb(246,69,6)" fg:x="126508" fg:w="26"/><text x="96.5996%" y="1071.50"></text></g><g><title>tokio::runtime::task::harness::cancel_task (26 samples, 0.02%)</title><rect x="96.3496%" y="1045" width="0.0198%" height="15" fill="rgb(234,208,37)" fg:x="126508" fg:w="26"/><text x="96.5996%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (26 samples, 0.02%)</title><rect x="96.3496%" y="1029" width="0.0198%" height="15" fill="rgb(225,4,6)" fg:x="126508" fg:w="26"/><text x="96.5996%" y="1039.50"></text></g><g><title>std::panicking::try (26 samples, 0.02%)</title><rect x="96.3496%" y="1013" width="0.0198%" height="15" fill="rgb(233,45,0)" fg:x="126508" fg:w="26"/><text x="96.5996%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (26 samples, 0.02%)</title><rect x="96.3496%" y="997" width="0.0198%" height="15" fill="rgb(226,136,5)" fg:x="126508" fg:w="26"/><text x="96.5996%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (26 samples, 0.02%)</title><rect x="96.3496%" y="981" width="0.0198%" height="15" fill="rgb(211,91,47)" fg:x="126508" fg:w="26"/><text x="96.5996%" y="991.50"></text></g><g><title>core::ops::function::FnOnce::call_once (26 samples, 0.02%)</title><rect x="96.3496%" y="965" width="0.0198%" height="15" fill="rgb(242,88,51)" fg:x="126508" fg:w="26"/><text x="96.5996%" y="975.50"></text></g><g><title>tokio::runtime::task::harness::cancel_task::{{closure}} (26 samples, 0.02%)</title><rect x="96.3496%" y="949" width="0.0198%" height="15" fill="rgb(230,91,28)" fg:x="126508" fg:w="26"/><text x="96.5996%" y="959.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::drop_future_or_output (26 samples, 0.02%)</title><rect x="96.3496%" y="933" width="0.0198%" height="15" fill="rgb(254,186,29)" fg:x="126508" fg:w="26"/><text x="96.5996%" y="943.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (26 samples, 0.02%)</title><rect x="96.3496%" y="917" width="0.0198%" height="15" fill="rgb(238,6,4)" fg:x="126508" fg:w="26"/><text x="96.5996%" y="927.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (26 samples, 0.02%)</title><rect x="96.3496%" y="901" width="0.0198%" height="15" fill="rgb(221,151,16)" fg:x="126508" fg:w="26"/><text x="96.5996%" y="911.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage::{{closure}} (26 samples, 0.02%)</title><rect x="96.3496%" y="885" width="0.0198%" height="15" fill="rgb(251,143,52)" fg:x="126508" fg:w="26"/><text x="96.5996%" y="895.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (26 samples, 0.02%)</title><rect x="96.3496%" y="869" width="0.0198%" height="15" fill="rgb(206,90,15)" fg:x="126508" fg:w="26"/><text x="96.5996%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;torrust_tracker::core::Tracker&gt; (26 samples, 0.02%)</title><rect x="96.3496%" y="853" width="0.0198%" height="15" fill="rgb(218,35,8)" fg:x="126508" fg:w="26"/><text x="96.5996%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;torrust_tracker_torrent_repository::repository::RwLockStd&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;&gt;&gt; (26 samples, 0.02%)</title><rect x="96.3496%" y="837" width="0.0198%" height="15" fill="rgb(239,215,6)" fg:x="126508" fg:w="26"/><text x="96.5996%" y="847.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.02%)</title><rect x="96.3496%" y="821" width="0.0198%" height="15" fill="rgb(245,116,39)" fg:x="126508" fg:w="26"/><text x="96.5996%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (26 samples, 0.02%)</title><rect x="96.3496%" y="805" width="0.0198%" height="15" fill="rgb(242,65,28)" fg:x="126508" fg:w="26"/><text x="96.5996%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;torrust_tracker_torrent_repository::repository::RwLockStd&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;&gt; (26 samples, 0.02%)</title><rect x="96.3496%" y="789" width="0.0198%" height="15" fill="rgb(252,132,53)" fg:x="126508" fg:w="26"/><text x="96.5996%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLock&lt;alloc::collections::btree::map::BTreeMap&lt;torrust_tracker_primitives::info_hash::InfoHash,alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;&gt;&gt; (26 samples, 0.02%)</title><rect x="96.3496%" y="773" width="0.0198%" height="15" fill="rgb(224,159,50)" fg:x="126508" fg:w="26"/><text x="96.5996%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::collections::btree::map::BTreeMap&lt;torrust_tracker_primitives::info_hash::InfoHash,alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;&gt;&gt; (26 samples, 0.02%)</title><rect x="96.3496%" y="757" width="0.0198%" height="15" fill="rgb(224,93,4)" fg:x="126508" fg:w="26"/><text x="96.5996%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;torrust_tracker_primitives::info_hash::InfoHash,alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;&gt; (26 samples, 0.02%)</title><rect x="96.3496%" y="741" width="0.0198%" height="15" fill="rgb(208,81,34)" fg:x="126508" fg:w="26"/><text x="96.5996%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.02%)</title><rect x="96.3496%" y="725" width="0.0198%" height="15" fill="rgb(233,92,54)" fg:x="126508" fg:w="26"/><text x="96.5996%" y="735.50"></text></g><g><title>core::mem::drop (26 samples, 0.02%)</title><rect x="96.3496%" y="709" width="0.0198%" height="15" fill="rgb(237,21,14)" fg:x="126508" fg:w="26"/><text x="96.5996%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;torrust_tracker_primitives::info_hash::InfoHash,alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;&gt; (26 samples, 0.02%)</title><rect x="96.3496%" y="693" width="0.0198%" height="15" fill="rgb(249,128,51)" fg:x="126508" fg:w="26"/><text x="96.5996%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.02%)</title><rect x="96.3496%" y="677" width="0.0198%" height="15" fill="rgb(223,129,24)" fg:x="126508" fg:w="26"/><text x="96.5996%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (24 samples, 0.02%)</title><rect x="96.3511%" y="661" width="0.0183%" height="15" fill="rgb(231,168,25)" fg:x="126510" fg:w="24"/><text x="96.6011%" y="671.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (24 samples, 0.02%)</title><rect x="96.3511%" y="645" width="0.0183%" height="15" fill="rgb(224,39,20)" fg:x="126510" fg:w="24"/><text x="96.6011%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt; (24 samples, 0.02%)</title><rect x="96.3511%" y="629" width="0.0183%" height="15" fill="rgb(225,152,53)" fg:x="126510" fg:w="24"/><text x="96.6011%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="96.3511%" y="613" width="0.0183%" height="15" fill="rgb(252,17,24)" fg:x="126510" fg:w="24"/><text x="96.6011%" y="623.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (21 samples, 0.02%)</title><rect x="96.3534%" y="597" width="0.0160%" height="15" fill="rgb(250,114,30)" fg:x="126513" fg:w="21"/><text x="96.6034%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt; (20 samples, 0.02%)</title><rect x="96.3542%" y="581" width="0.0152%" height="15" fill="rgb(229,5,4)" fg:x="126514" fg:w="20"/><text x="96.6042%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt; (20 samples, 0.02%)</title><rect x="96.3542%" y="565" width="0.0152%" height="15" fill="rgb(225,176,49)" fg:x="126514" fg:w="20"/><text x="96.6042%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;torrust_tracker_torrent_repository::entry::Torrent&gt; (20 samples, 0.02%)</title><rect x="96.3542%" y="549" width="0.0152%" height="15" fill="rgb(224,221,49)" fg:x="126514" fg:w="20"/><text x="96.6042%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;torrust_tracker_primitives::PeerId,alloc::sync::Arc&lt;torrust_tracker_primitives::peer::Peer&gt;&gt;&gt; (20 samples, 0.02%)</title><rect x="96.3542%" y="533" width="0.0152%" height="15" fill="rgb(253,169,27)" fg:x="126514" fg:w="20"/><text x="96.6042%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="96.3542%" y="517" width="0.0152%" height="15" fill="rgb(211,206,16)" fg:x="126514" fg:w="20"/><text x="96.6042%" y="527.50"></text></g><g><title>core::mem::drop (20 samples, 0.02%)</title><rect x="96.3542%" y="501" width="0.0152%" height="15" fill="rgb(244,87,35)" fg:x="126514" fg:w="20"/><text x="96.6042%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;torrust_tracker_primitives::PeerId,alloc::sync::Arc&lt;torrust_tracker_primitives::peer::Peer&gt;&gt;&gt; (20 samples, 0.02%)</title><rect x="96.3542%" y="485" width="0.0152%" height="15" fill="rgb(246,28,10)" fg:x="126514" fg:w="20"/><text x="96.6042%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="96.3542%" y="469" width="0.0152%" height="15" fill="rgb(229,12,44)" fg:x="126514" fg:w="20"/><text x="96.6042%" y="479.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::pre_shutdown (33 samples, 0.03%)</title><rect x="96.3496%" y="1141" width="0.0251%" height="15" fill="rgb(210,145,37)" fg:x="126508" fg:w="33"/><text x="96.5996%" y="1151.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::close_and_shutdown_all (33 samples, 0.03%)</title><rect x="96.3496%" y="1125" width="0.0251%" height="15" fill="rgb(227,112,52)" fg:x="126508" fg:w="33"/><text x="96.5996%" y="1135.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (114 samples, 0.09%)</title><rect x="97.1988%" y="1125" width="0.0868%" height="15" fill="rgb(238,155,34)" fg:x="127623" fg:w="114"/><text x="97.4488%" y="1135.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (114 samples, 0.09%)</title><rect x="97.1988%" y="1109" width="0.0868%" height="15" fill="rgb(239,226,36)" fg:x="127623" fg:w="114"/><text x="97.4488%" y="1119.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (114 samples, 0.09%)</title><rect x="97.1988%" y="1093" width="0.0868%" height="15" fill="rgb(230,16,23)" fg:x="127623" fg:w="114"/><text x="97.4488%" y="1103.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (108 samples, 0.08%)</title><rect x="97.2856%" y="1125" width="0.0823%" height="15" fill="rgb(236,171,36)" fg:x="127737" fg:w="108"/><text x="97.5356%" y="1135.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (108 samples, 0.08%)</title><rect x="97.2856%" y="1109" width="0.0823%" height="15" fill="rgb(221,22,14)" fg:x="127737" fg:w="108"/><text x="97.5356%" y="1119.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (106 samples, 0.08%)</title><rect x="97.2871%" y="1093" width="0.0807%" height="15" fill="rgb(242,43,11)" fg:x="127739" fg:w="106"/><text x="97.5371%" y="1103.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (49 samples, 0.04%)</title><rect x="97.4098%" y="1109" width="0.0373%" height="15" fill="rgb(232,69,23)" fg:x="127900" fg:w="49"/><text x="97.6598%" y="1119.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (49 samples, 0.04%)</title><rect x="97.4098%" y="1093" width="0.0373%" height="15" fill="rgb(216,180,54)" fg:x="127900" fg:w="49"/><text x="97.6598%" y="1103.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (49 samples, 0.04%)</title><rect x="97.4098%" y="1077" width="0.0373%" height="15" fill="rgb(216,5,24)" fg:x="127900" fg:w="49"/><text x="97.6598%" y="1087.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (132 samples, 0.10%)</title><rect x="97.4471%" y="1109" width="0.1005%" height="15" fill="rgb(225,89,9)" fg:x="127949" fg:w="132"/><text x="97.6971%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (40 samples, 0.03%)</title><rect x="97.5476%" y="1109" width="0.0305%" height="15" fill="rgb(243,75,33)" fg:x="128081" fg:w="40"/><text x="97.7976%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_load (40 samples, 0.03%)</title><rect x="97.5476%" y="1093" width="0.0305%" height="15" fill="rgb(247,141,45)" fg:x="128081" fg:w="40"/><text x="97.7976%" y="1103.50"></text></g><g><title>tokio::loom::std::atomic_u32::AtomicU32::unsync_load (48 samples, 0.04%)</title><rect x="97.5781%" y="1109" width="0.0366%" height="15" fill="rgb(232,177,36)" fg:x="128121" fg:w="48"/><text x="97.8281%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (48 samples, 0.04%)</title><rect x="97.5781%" y="1093" width="0.0366%" height="15" fill="rgb(219,125,36)" fg:x="128121" fg:w="48"/><text x="97.8281%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_load (48 samples, 0.04%)</title><rect x="97.5781%" y="1077" width="0.0366%" height="15" fill="rgb(227,94,9)" fg:x="128121" fg:w="48"/><text x="97.8281%" y="1087.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (65 samples, 0.05%)</title><rect x="97.7860%" y="1093" width="0.0495%" height="15" fill="rgb(240,34,52)" fg:x="128394" fg:w="65"/><text x="98.0360%" y="1103.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (65 samples, 0.05%)</title><rect x="97.7860%" y="1077" width="0.0495%" height="15" fill="rgb(216,45,12)" fg:x="128394" fg:w="65"/><text x="98.0360%" y="1087.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (65 samples, 0.05%)</title><rect x="97.7860%" y="1061" width="0.0495%" height="15" fill="rgb(246,21,19)" fg:x="128394" fg:w="65"/><text x="98.0360%" y="1071.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (50 samples, 0.04%)</title><rect x="97.8454%" y="1093" width="0.0381%" height="15" fill="rgb(213,98,42)" fg:x="128472" fg:w="50"/><text x="98.0954%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (55 samples, 0.04%)</title><rect x="97.8835%" y="1093" width="0.0419%" height="15" fill="rgb(250,136,47)" fg:x="128522" fg:w="55"/><text x="98.1335%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_load (55 samples, 0.04%)</title><rect x="97.8835%" y="1077" width="0.0419%" height="15" fill="rgb(251,124,27)" fg:x="128522" fg:w="55"/><text x="98.1335%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (80 samples, 0.06%)</title><rect x="97.9292%" y="1093" width="0.0609%" height="15" fill="rgb(229,180,14)" fg:x="128582" fg:w="80"/><text x="98.1792%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_load (80 samples, 0.06%)</title><rect x="97.9292%" y="1077" width="0.0609%" height="15" fill="rgb(245,216,25)" fg:x="128582" fg:w="80"/><text x="98.1792%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::pack (26 samples, 0.02%)</title><rect x="97.9901%" y="1093" width="0.0198%" height="15" fill="rgb(251,43,5)" fg:x="128662" fg:w="26"/><text x="98.2401%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (666 samples, 0.51%)</title><rect x="97.6146%" y="1109" width="0.5072%" height="15" fill="rgb(250,128,24)" fg:x="128169" fg:w="666"/><text x="97.8646%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::unpack (147 samples, 0.11%)</title><rect x="98.0099%" y="1093" width="0.1120%" height="15" fill="rgb(217,117,27)" fg:x="128688" fg:w="147"/><text x="98.2599%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (1,036 samples, 0.79%)</title><rect x="97.3679%" y="1125" width="0.7890%" height="15" fill="rgb(245,147,4)" fg:x="127845" fg:w="1036"/><text x="97.6179%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::unpack (46 samples, 0.04%)</title><rect x="98.1219%" y="1109" width="0.0350%" height="15" fill="rgb(242,201,35)" fg:x="128835" fg:w="46"/><text x="98.3719%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_searching (49 samples, 0.04%)</title><rect x="98.1577%" y="1125" width="0.0373%" height="15" fill="rgb(218,181,1)" fg:x="128882" fg:w="49"/><text x="98.4077%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_searching (21 samples, 0.02%)</title><rect x="98.1790%" y="1109" width="0.0160%" height="15" fill="rgb(222,6,29)" fg:x="128910" fg:w="21"/><text x="98.4290%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (2,414 samples, 1.84%)</title><rect x="96.3747%" y="1141" width="1.8385%" height="15" fill="rgb(208,186,3)" fg:x="126541" fg:w="2414"/><text x="96.6247%" y="1151.50">t..</text></g><g><title>tokio::util::rand::FastRand::fastrand_n (24 samples, 0.02%)</title><rect x="98.1950%" y="1125" width="0.0183%" height="15" fill="rgb(216,36,26)" fg:x="128931" fg:w="24"/><text x="98.4450%" y="1135.50"></text></g><g><title>tokio::util::rand::FastRand::fastrand (24 samples, 0.02%)</title><rect x="98.1950%" y="1109" width="0.0183%" height="15" fill="rgb(248,201,23)" fg:x="128931" fg:w="24"/><text x="98.4450%" y="1119.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (98,136 samples, 74.74%)</title><rect x="23.4751%" y="1621" width="74.7412%" height="15" fill="rgb(251,170,31)" fg:x="30823" fg:w="98136"/><text x="23.7251%" y="1631.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (98,136 samples, 74.74%)</title><rect x="23.4751%" y="1605" width="74.7412%" height="15" fill="rgb(207,110,25)" fg:x="30823" fg:w="98136"/><text x="23.7251%" y="1615.50">tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (98,136 samples, 74.74%)</title><rect x="23.4751%" y="1589" width="74.7412%" height="15" fill="rgb(250,54,15)" fg:x="30823" fg:w="98136"/><text x="23.7251%" y="1599.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::blocking::pool::Task::run (98,042 samples, 74.67%)</title><rect x="23.5467%" y="1573" width="74.6697%" height="15" fill="rgb(227,68,33)" fg:x="30917" fg:w="98042"/><text x="23.7967%" y="1583.50">tokio::runtime::blocking::pool::Task::run</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (98,042 samples, 74.67%)</title><rect x="23.5467%" y="1557" width="74.6697%" height="15" fill="rgb(238,34,41)" fg:x="30917" fg:w="98042"/><text x="23.7967%" y="1567.50">tokio::runtime::task::UnownedTask&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (98,042 samples, 74.67%)</title><rect x="23.5467%" y="1541" width="74.6697%" height="15" fill="rgb(220,11,15)" fg:x="30917" fg:w="98042"/><text x="23.7967%" y="1551.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::raw::poll (98,042 samples, 74.67%)</title><rect x="23.5467%" y="1525" width="74.6697%" height="15" fill="rgb(246,111,35)" fg:x="30917" fg:w="98042"/><text x="23.7967%" y="1535.50">tokio::runtime::task::raw::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (98,042 samples, 74.67%)</title><rect x="23.5467%" y="1509" width="74.6697%" height="15" fill="rgb(209,88,53)" fg:x="30917" fg:w="98042"/><text x="23.7967%" y="1519.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (98,042 samples, 74.67%)</title><rect x="23.5467%" y="1493" width="74.6697%" height="15" fill="rgb(231,185,47)" fg:x="30917" fg:w="98042"/><text x="23.7967%" y="1503.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (98,042 samples, 74.67%)</title><rect x="23.5467%" y="1477" width="74.6697%" height="15" fill="rgb(233,154,1)" fg:x="30917" fg:w="98042"/><text x="23.7967%" y="1487.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (98,042 samples, 74.67%)</title><rect x="23.5467%" y="1461" width="74.6697%" height="15" fill="rgb(225,15,46)" fg:x="30917" fg:w="98042"/><text x="23.7967%" y="1471.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (98,042 samples, 74.67%)</title><rect x="23.5467%" y="1445" width="74.6697%" height="15" fill="rgb(211,135,41)" fg:x="30917" fg:w="98042"/><text x="23.7967%" y="1455.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (98,042 samples, 74.67%)</title><rect x="23.5467%" y="1429" width="74.6697%" height="15" fill="rgb(208,54,0)" fg:x="30917" fg:w="98042"/><text x="23.7967%" y="1439.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (98,042 samples, 74.67%)</title><rect x="23.5467%" y="1413" width="74.6697%" height="15" fill="rgb(244,136,14)" fg:x="30917" fg:w="98042"/><text x="23.7967%" y="1423.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (98,042 samples, 74.67%)</title><rect x="23.5467%" y="1397" width="74.6697%" height="15" fill="rgb(241,56,14)" fg:x="30917" fg:w="98042"/><text x="23.7967%" y="1407.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (98,042 samples, 74.67%)</title><rect x="23.5467%" y="1381" width="74.6697%" height="15" fill="rgb(205,80,24)" fg:x="30917" fg:w="98042"/><text x="23.7967%" y="1391.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (98,042 samples, 74.67%)</title><rect x="23.5467%" y="1365" width="74.6697%" height="15" fill="rgb(220,57,4)" fg:x="30917" fg:w="98042"/><text x="23.7967%" y="1375.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (98,042 samples, 74.67%)</title><rect x="23.5467%" y="1349" width="74.6697%" height="15" fill="rgb(226,193,50)" fg:x="30917" fg:w="98042"/><text x="23.7967%" y="1359.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}}</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (98,042 samples, 74.67%)</title><rect x="23.5467%" y="1333" width="74.6697%" height="15" fill="rgb(231,168,22)" fg:x="30917" fg:w="98042"/><text x="23.7967%" y="1343.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}} (98,042 samples, 74.67%)</title><rect x="23.5467%" y="1317" width="74.6697%" height="15" fill="rgb(254,215,14)" fg:x="30917" fg:w="98042"/><text x="23.7967%" y="1327.50">tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (98,042 samples, 74.67%)</title><rect x="23.5467%" y="1301" width="74.6697%" height="15" fill="rgb(211,115,16)" fg:x="30917" fg:w="98042"/><text x="23.7967%" y="1311.50">tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (98,042 samples, 74.67%)</title><rect x="23.5467%" y="1285" width="74.6697%" height="15" fill="rgb(236,210,16)" fg:x="30917" fg:w="98042"/><text x="23.7967%" y="1295.50">tokio::runtime::context::runtime::enter_runtime</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (98,042 samples, 74.67%)</title><rect x="23.5467%" y="1269" width="74.6697%" height="15" fill="rgb(221,94,12)" fg:x="30917" fg:w="98042"/><text x="23.7967%" y="1279.50">tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}</text></g><g><title>tokio::runtime::context::set_scheduler (98,042 samples, 74.67%)</title><rect x="23.5467%" y="1253" width="74.6697%" height="15" fill="rgb(235,218,49)" fg:x="30917" fg:w="98042"/><text x="23.7967%" y="1263.50">tokio::runtime::context::set_scheduler</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (98,042 samples, 74.67%)</title><rect x="23.5467%" y="1237" width="74.6697%" height="15" fill="rgb(217,114,14)" fg:x="30917" fg:w="98042"/><text x="23.7967%" y="1247.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (98,042 samples, 74.67%)</title><rect x="23.5467%" y="1221" width="74.6697%" height="15" fill="rgb(216,145,22)" fg:x="30917" fg:w="98042"/><text x="23.7967%" y="1231.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>tokio::runtime::context::set_scheduler::{{closure}} (98,042 samples, 74.67%)</title><rect x="23.5467%" y="1205" width="74.6697%" height="15" fill="rgb(217,112,39)" fg:x="30917" fg:w="98042"/><text x="23.7967%" y="1215.50">tokio::runtime::context::set_scheduler::{{closure}}</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (98,042 samples, 74.67%)</title><rect x="23.5467%" y="1189" width="74.6697%" height="15" fill="rgb(225,85,32)" fg:x="30917" fg:w="98042"/><text x="23.7967%" y="1199.50">tokio::runtime::context::scoped::Scoped&lt;T&gt;::set</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}::{{closure}} (98,042 samples, 74.67%)</title><rect x="23.5467%" y="1173" width="74.6697%" height="15" fill="rgb(245,209,47)" fg:x="30917" fg:w="98042"/><text x="23.7967%" y="1183.50">tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}::{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (98,042 samples, 74.67%)</title><rect x="23.5467%" y="1157" width="74.6697%" height="15" fill="rgb(218,220,15)" fg:x="30917" fg:w="98042"/><text x="23.7967%" y="1167.50">tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>std::panic::catch_unwind (98,137 samples, 74.74%)</title><rect x="23.4751%" y="1701" width="74.7420%" height="15" fill="rgb(222,202,31)" fg:x="30823" fg:w="98137"/><text x="23.7251%" y="1711.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (98,137 samples, 74.74%)</title><rect x="23.4751%" y="1685" width="74.7420%" height="15" fill="rgb(243,203,4)" fg:x="30823" fg:w="98137"/><text x="23.7251%" y="1695.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (98,137 samples, 74.74%)</title><rect x="23.4751%" y="1669" width="74.7420%" height="15" fill="rgb(237,92,17)" fg:x="30823" fg:w="98137"/><text x="23.7251%" y="1679.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (98,137 samples, 74.74%)</title><rect x="23.4751%" y="1653" width="74.7420%" height="15" fill="rgb(231,119,7)" fg:x="30823" fg:w="98137"/><text x="23.7251%" y="1663.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (98,137 samples, 74.74%)</title><rect x="23.4751%" y="1637" width="74.7420%" height="15" fill="rgb(237,82,41)" fg:x="30823" fg:w="98137"/><text x="23.7251%" y="1647.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (98,139 samples, 74.74%)</title><rect x="23.4751%" y="1765" width="74.7435%" height="15" fill="rgb(226,81,48)" fg:x="30823" fg:w="98139"/><text x="23.7251%" y="1775.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (98,139 samples, 74.74%)</title><rect x="23.4751%" y="1749" width="74.7435%" height="15" fill="rgb(234,70,51)" fg:x="30823" fg:w="98139"/><text x="23.7251%" y="1759.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (98,139 samples, 74.74%)</title><rect x="23.4751%" y="1733" width="74.7435%" height="15" fill="rgb(251,86,4)" fg:x="30823" fg:w="98139"/><text x="23.7251%" y="1743.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (98,139 samples, 74.74%)</title><rect x="23.4751%" y="1717" width="74.7435%" height="15" fill="rgb(244,144,28)" fg:x="30823" fg:w="98139"/><text x="23.7251%" y="1727.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>clone3 (98,205 samples, 74.79%)</title><rect x="23.4393%" y="1813" width="74.7938%" height="15" fill="rgb(232,161,39)" fg:x="30776" fg:w="98205"/><text x="23.6893%" y="1823.50">clone3</text></g><g><title>start_thread (98,205 samples, 74.79%)</title><rect x="23.4393%" y="1797" width="74.7938%" height="15" fill="rgb(247,34,51)" fg:x="30776" fg:w="98205"/><text x="23.6893%" y="1807.50">start_thread</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (98,158 samples, 74.76%)</title><rect x="23.4751%" y="1781" width="74.7580%" height="15" fill="rgb(225,132,2)" fg:x="30823" fg:w="98158"/><text x="23.7251%" y="1791.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>core::ptr::drop_in_place&lt;std::sys::pal::unix::stack_overflow::Handler&gt; (19 samples, 0.01%)</title><rect x="98.2186%" y="1765" width="0.0145%" height="15" fill="rgb(209,159,44)" fg:x="128962" fg:w="19"/><text x="98.4686%" y="1775.50"></text></g><g><title>&lt;std::sys::pal::unix::stack_overflow::Handler as core::ops::drop::Drop&gt;::drop (19 samples, 0.01%)</title><rect x="98.2186%" y="1749" width="0.0145%" height="15" fill="rgb(251,214,1)" fg:x="128962" fg:w="19"/><text x="98.4686%" y="1759.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::drop_handler (19 samples, 0.01%)</title><rect x="98.2186%" y="1733" width="0.0145%" height="15" fill="rgb(247,84,47)" fg:x="128962" fg:w="19"/><text x="98.4686%" y="1743.50"></text></g><g><title>__GI_munmap (19 samples, 0.01%)</title><rect x="98.2186%" y="1717" width="0.0145%" height="15" fill="rgb(240,111,43)" fg:x="128962" fg:w="19"/><text x="98.4686%" y="1727.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="98.2194%" y="1701" width="0.0137%" height="15" fill="rgb(215,214,35)" fg:x="128963" fg:w="18"/><text x="98.4694%" y="1711.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="98.2194%" y="1685" width="0.0137%" height="15" fill="rgb(248,207,23)" fg:x="128963" fg:w="18"/><text x="98.4694%" y="1695.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="98.2194%" y="1669" width="0.0137%" height="15" fill="rgb(214,186,4)" fg:x="128963" fg:w="18"/><text x="98.4694%" y="1679.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="98.2194%" y="1653" width="0.0137%" height="15" fill="rgb(220,133,22)" fg:x="128963" fg:w="18"/><text x="98.4694%" y="1663.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="98.2194%" y="1637" width="0.0137%" height="15" fill="rgb(239,134,19)" fg:x="128963" fg:w="18"/><text x="98.4694%" y="1647.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="98.2194%" y="1621" width="0.0137%" height="15" fill="rgb(250,140,9)" fg:x="128963" fg:w="18"/><text x="98.4694%" y="1631.50"></text></g><g><title>[unknown] (17 samples, 0.01%)</title><rect x="98.2201%" y="1605" width="0.0129%" height="15" fill="rgb(225,59,14)" fg:x="128964" fg:w="17"/><text x="98.4701%" y="1615.50"></text></g><g><title>[unknown] (16 samples, 0.01%)</title><rect x="98.2209%" y="1589" width="0.0122%" height="15" fill="rgb(214,152,51)" fg:x="128965" fg:w="16"/><text x="98.4709%" y="1599.50"></text></g><g><title>core::fmt::Formatter::pad_integral (112 samples, 0.09%)</title><rect x="98.2376%" y="1813" width="0.0853%" height="15" fill="rgb(251,227,43)" fg:x="128987" fg:w="112"/><text x="98.4876%" y="1823.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (59 samples, 0.04%)</title><rect x="98.3229%" y="1813" width="0.0449%" height="15" fill="rgb(241,96,17)" fg:x="129099" fg:w="59"/><text x="98.5729%" y="1823.50"></text></g><g><title>core::fmt::Formatter::pad_integral (16 samples, 0.01%)</title><rect x="98.3679%" y="1813" width="0.0122%" height="15" fill="rgb(234,198,43)" fg:x="129158" fg:w="16"/><text x="98.6179%" y="1823.50"></text></g><g><title>core::fmt::write (20 samples, 0.02%)</title><rect x="98.3801%" y="1813" width="0.0152%" height="15" fill="rgb(220,108,29)" fg:x="129174" fg:w="20"/><text x="98.6301%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;aquatic_udp_protocol::response::Response&gt; (19 samples, 0.01%)</title><rect x="98.3961%" y="1813" width="0.0145%" height="15" fill="rgb(226,163,33)" fg:x="129195" fg:w="19"/><text x="98.6461%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;torrust_tracker::servers::udp::server::Udp::process_request::{{closure}}&gt;&gt; (51 samples, 0.04%)</title><rect x="98.4105%" y="1813" width="0.0388%" height="15" fill="rgb(205,194,45)" fg:x="129214" fg:w="51"/><text x="98.6605%" y="1823.50"></text></g><g><title>rand_chacha::guts::round (18 samples, 0.01%)</title><rect x="98.4745%" y="1765" width="0.0137%" height="15" fill="rgb(206,143,44)" fg:x="129298" fg:w="18"/><text x="98.7245%" y="1775.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (26 samples, 0.02%)</title><rect x="98.4699%" y="1813" width="0.0198%" height="15" fill="rgb(236,136,36)" fg:x="129292" fg:w="26"/><text x="98.7199%" y="1823.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (26 samples, 0.02%)</title><rect x="98.4699%" y="1797" width="0.0198%" height="15" fill="rgb(249,172,42)" fg:x="129292" fg:w="26"/><text x="98.7199%" y="1807.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (26 samples, 0.02%)</title><rect x="98.4699%" y="1781" width="0.0198%" height="15" fill="rgb(216,139,23)" fg:x="129292" fg:w="26"/><text x="98.7199%" y="1791.50"></text></g><g><title>rand_chacha::guts::refill_wide (14 samples, 0.01%)</title><rect x="98.4897%" y="1813" width="0.0107%" height="15" fill="rgb(207,166,20)" fg:x="129318" fg:w="14"/><text x="98.7397%" y="1823.50"></text></g><g><title>std_detect::detect::arch::x86::__is_feature_detected::avx2 (14 samples, 0.01%)</title><rect x="98.4897%" y="1797" width="0.0107%" height="15" fill="rgb(210,209,22)" fg:x="129318" fg:w="14"/><text x="98.7397%" y="1807.50"></text></g><g><title>std_detect::detect::check_for (14 samples, 0.01%)</title><rect x="98.4897%" y="1781" width="0.0107%" height="15" fill="rgb(232,118,20)" fg:x="129318" fg:w="14"/><text x="98.7397%" y="1791.50"></text></g><g><title>std_detect::detect::cache::test (14 samples, 0.01%)</title><rect x="98.4897%" y="1765" width="0.0107%" height="15" fill="rgb(238,113,42)" fg:x="129318" fg:w="14"/><text x="98.7397%" y="1775.50"></text></g><g><title>std_detect::detect::cache::Cache::test (14 samples, 0.01%)</title><rect x="98.4897%" y="1749" width="0.0107%" height="15" fill="rgb(231,42,5)" fg:x="129318" fg:w="14"/><text x="98.7397%" y="1759.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (14 samples, 0.01%)</title><rect x="98.4897%" y="1733" width="0.0107%" height="15" fill="rgb(243,166,24)" fg:x="129318" fg:w="14"/><text x="98.7397%" y="1743.50"></text></g><g><title>core::sync::atomic::atomic_load (14 samples, 0.01%)</title><rect x="98.4897%" y="1717" width="0.0107%" height="15" fill="rgb(237,226,12)" fg:x="129318" fg:w="14"/><text x="98.7397%" y="1727.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (81 samples, 0.06%)</title><rect x="98.5537%" y="1733" width="0.0617%" height="15" fill="rgb(229,133,24)" fg:x="129402" fg:w="81"/><text x="98.8037%" y="1743.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (81 samples, 0.06%)</title><rect x="98.5537%" y="1717" width="0.0617%" height="15" fill="rgb(238,33,43)" fg:x="129402" fg:w="81"/><text x="98.8037%" y="1727.50"></text></g><g><title>core::cell::BorrowRefMut::new (81 samples, 0.06%)</title><rect x="98.5537%" y="1701" width="0.0617%" height="15" fill="rgb(227,59,38)" fg:x="129402" fg:w="81"/><text x="98.8037%" y="1711.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (164 samples, 0.12%)</title><rect x="98.5012%" y="1813" width="0.1249%" height="15" fill="rgb(230,97,0)" fg:x="129333" fg:w="164"/><text x="98.7512%" y="1823.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (106 samples, 0.08%)</title><rect x="98.5453%" y="1797" width="0.0807%" height="15" fill="rgb(250,173,50)" fg:x="129391" fg:w="106"/><text x="98.7953%" y="1807.50"></text></g><g><title>tokio::runtime::coop::budget (105 samples, 0.08%)</title><rect x="98.5461%" y="1781" width="0.0800%" height="15" fill="rgb(240,15,50)" fg:x="129392" fg:w="105"/><text x="98.7961%" y="1791.50"></text></g><g><title>tokio::runtime::coop::with_budget (105 samples, 0.08%)</title><rect x="98.5461%" y="1765" width="0.0800%" height="15" fill="rgb(221,93,22)" fg:x="129392" fg:w="105"/><text x="98.7961%" y="1775.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (96 samples, 0.07%)</title><rect x="98.5529%" y="1749" width="0.0731%" height="15" fill="rgb(245,180,53)" fg:x="129401" fg:w="96"/><text x="98.8029%" y="1759.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (35 samples, 0.03%)</title><rect x="98.6261%" y="1813" width="0.0267%" height="15" fill="rgb(231,88,51)" fg:x="129497" fg:w="35"/><text x="98.8761%" y="1823.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (15 samples, 0.01%)</title><rect x="98.6527%" y="1813" width="0.0114%" height="15" fill="rgb(240,58,21)" fg:x="129532" fg:w="15"/><text x="98.9027%" y="1823.50"></text></g><g><title>syscall (90 samples, 0.07%)</title><rect x="98.6740%" y="1813" width="0.0685%" height="15" fill="rgb(237,21,10)" fg:x="129560" fg:w="90"/><text x="98.9240%" y="1823.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (15 samples, 0.01%)</title><rect x="98.7456%" y="1813" width="0.0114%" height="15" fill="rgb(218,43,11)" fg:x="129654" fg:w="15"/><text x="98.9956%" y="1823.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (22 samples, 0.02%)</title><rect x="98.8424%" y="1429" width="0.0168%" height="15" fill="rgb(218,221,29)" fg:x="129781" fg:w="22"/><text x="99.0924%" y="1439.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_parked (21 samples, 0.02%)</title><rect x="98.8431%" y="1413" width="0.0160%" height="15" fill="rgb(214,118,42)" fg:x="129782" fg:w="21"/><text x="99.0931%" y="1423.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (61 samples, 0.05%)</title><rect x="98.8317%" y="1621" width="0.0465%" height="15" fill="rgb(251,200,26)" fg:x="129767" fg:w="61"/><text x="99.0817%" y="1631.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}} (61 samples, 0.05%)</title><rect x="98.8317%" y="1605" width="0.0465%" height="15" fill="rgb(237,101,39)" fg:x="129767" fg:w="61"/><text x="99.0817%" y="1615.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (61 samples, 0.05%)</title><rect x="98.8317%" y="1589" width="0.0465%" height="15" fill="rgb(251,117,11)" fg:x="129767" fg:w="61"/><text x="99.0817%" y="1599.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (61 samples, 0.05%)</title><rect x="98.8317%" y="1573" width="0.0465%" height="15" fill="rgb(216,223,23)" fg:x="129767" fg:w="61"/><text x="99.0817%" y="1583.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (61 samples, 0.05%)</title><rect x="98.8317%" y="1557" width="0.0465%" height="15" fill="rgb(251,54,12)" fg:x="129767" fg:w="61"/><text x="99.0817%" y="1567.50"></text></g><g><title>tokio::runtime::context::set_scheduler (61 samples, 0.05%)</title><rect x="98.8317%" y="1541" width="0.0465%" height="15" fill="rgb(254,176,54)" fg:x="129767" fg:w="61"/><text x="99.0817%" y="1551.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (61 samples, 0.05%)</title><rect x="98.8317%" y="1525" width="0.0465%" height="15" fill="rgb(210,32,8)" fg:x="129767" fg:w="61"/><text x="99.0817%" y="1535.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (61 samples, 0.05%)</title><rect x="98.8317%" y="1509" width="0.0465%" height="15" fill="rgb(235,52,38)" fg:x="129767" fg:w="61"/><text x="99.0817%" y="1519.50"></text></g><g><title>tokio::runtime::context::set_scheduler::{{closure}} (61 samples, 0.05%)</title><rect x="98.8317%" y="1493" width="0.0465%" height="15" fill="rgb(231,4,44)" fg:x="129767" fg:w="61"/><text x="99.0817%" y="1503.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (61 samples, 0.05%)</title><rect x="98.8317%" y="1477" width="0.0465%" height="15" fill="rgb(249,2,32)" fg:x="129767" fg:w="61"/><text x="99.0817%" y="1487.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}::{{closure}} (61 samples, 0.05%)</title><rect x="98.8317%" y="1461" width="0.0465%" height="15" fill="rgb(224,65,26)" fg:x="129767" fg:w="61"/><text x="99.0817%" y="1471.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (61 samples, 0.05%)</title><rect x="98.8317%" y="1445" width="0.0465%" height="15" fill="rgb(250,73,40)" fg:x="129767" fg:w="61"/><text x="99.0817%" y="1455.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (19 samples, 0.01%)</title><rect x="98.8637%" y="1429" width="0.0145%" height="15" fill="rgb(253,177,16)" fg:x="129809" fg:w="19"/><text x="99.1137%" y="1439.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (17 samples, 0.01%)</title><rect x="98.8652%" y="1413" width="0.0129%" height="15" fill="rgb(217,32,34)" fg:x="129811" fg:w="17"/><text x="99.1152%" y="1423.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (17 samples, 0.01%)</title><rect x="98.8652%" y="1397" width="0.0129%" height="15" fill="rgb(212,7,10)" fg:x="129811" fg:w="17"/><text x="99.1152%" y="1407.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (14 samples, 0.01%)</title><rect x="98.8782%" y="1557" width="0.0107%" height="15" fill="rgb(245,89,8)" fg:x="129828" fg:w="14"/><text x="99.1282%" y="1567.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (14 samples, 0.01%)</title><rect x="98.8782%" y="1541" width="0.0107%" height="15" fill="rgb(237,16,53)" fg:x="129828" fg:w="14"/><text x="99.1282%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (22 samples, 0.02%)</title><rect x="98.8782%" y="1621" width="0.0168%" height="15" fill="rgb(250,204,30)" fg:x="129828" fg:w="22"/><text x="99.1282%" y="1631.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="98.8782%" y="1605" width="0.0168%" height="15" fill="rgb(208,77,27)" fg:x="129828" fg:w="22"/><text x="99.1282%" y="1615.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (22 samples, 0.02%)</title><rect x="98.8782%" y="1589" width="0.0168%" height="15" fill="rgb(250,204,28)" fg:x="129828" fg:w="22"/><text x="99.1282%" y="1599.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (22 samples, 0.02%)</title><rect x="98.8782%" y="1573" width="0.0168%" height="15" fill="rgb(244,63,21)" fg:x="129828" fg:w="22"/><text x="99.1282%" y="1583.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (112 samples, 0.09%)</title><rect x="98.8104%" y="1653" width="0.0853%" height="15" fill="rgb(236,85,44)" fg:x="129739" fg:w="112"/><text x="99.0604%" y="1663.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (111 samples, 0.08%)</title><rect x="98.8111%" y="1637" width="0.0845%" height="15" fill="rgb(215,98,4)" fg:x="129740" fg:w="111"/><text x="99.0611%" y="1647.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (125 samples, 0.10%)</title><rect x="98.8104%" y="1765" width="0.0952%" height="15" fill="rgb(235,38,11)" fg:x="129739" fg:w="125"/><text x="99.0604%" y="1775.50"></text></g><g><title>std::panic::catch_unwind (125 samples, 0.10%)</title><rect x="98.8104%" y="1749" width="0.0952%" height="15" fill="rgb(254,186,25)" fg:x="129739" fg:w="125"/><text x="99.0604%" y="1759.50"></text></g><g><title>std::panicking::try (125 samples, 0.10%)</title><rect x="98.8104%" y="1733" width="0.0952%" height="15" fill="rgb(225,55,31)" fg:x="129739" fg:w="125"/><text x="99.0604%" y="1743.50"></text></g><g><title>std::panicking::try::do_call (125 samples, 0.10%)</title><rect x="98.8104%" y="1717" width="0.0952%" height="15" fill="rgb(211,15,21)" fg:x="129739" fg:w="125"/><text x="99.0604%" y="1727.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (125 samples, 0.10%)</title><rect x="98.8104%" y="1701" width="0.0952%" height="15" fill="rgb(215,187,41)" fg:x="129739" fg:w="125"/><text x="99.0604%" y="1711.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (125 samples, 0.10%)</title><rect x="98.8104%" y="1685" width="0.0952%" height="15" fill="rgb(248,69,32)" fg:x="129739" fg:w="125"/><text x="99.0604%" y="1695.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (125 samples, 0.10%)</title><rect x="98.8104%" y="1669" width="0.0952%" height="15" fill="rgb(252,102,52)" fg:x="129739" fg:w="125"/><text x="99.0604%" y="1679.50"></text></g><g><title>tokio::runtime::task::raw::poll (157 samples, 0.12%)</title><rect x="98.7890%" y="1813" width="0.1196%" height="15" fill="rgb(253,140,32)" fg:x="129711" fg:w="157"/><text x="99.0390%" y="1823.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (135 samples, 0.10%)</title><rect x="98.8058%" y="1797" width="0.1028%" height="15" fill="rgb(216,56,42)" fg:x="129733" fg:w="135"/><text x="99.0558%" y="1807.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (135 samples, 0.10%)</title><rect x="98.8058%" y="1781" width="0.1028%" height="15" fill="rgb(216,184,14)" fg:x="129733" fg:w="135"/><text x="99.0558%" y="1791.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (15 samples, 0.01%)</title><rect x="98.9117%" y="1813" width="0.0114%" height="15" fill="rgb(237,187,27)" fg:x="129872" fg:w="15"/><text x="99.1617%" y="1823.50"></text></g><g><title>torrust_tracker::bootstrap::logging::INIT (17 samples, 0.01%)</title><rect x="98.9231%" y="1813" width="0.0129%" height="15" fill="rgb(219,65,3)" fg:x="129887" fg:w="17"/><text x="99.1731%" y="1823.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (397 samples, 0.30%)</title><rect x="98.9467%" y="1797" width="0.3024%" height="15" fill="rgb(245,83,25)" fg:x="129918" fg:w="397"/><text x="99.1967%" y="1807.50"></text></g><g><title>_int_free (24 samples, 0.02%)</title><rect x="99.2491%" y="1797" width="0.0183%" height="15" fill="rgb(214,205,45)" fg:x="130315" fg:w="24"/><text x="99.4991%" y="1807.50"></text></g><g><title>_int_malloc (132 samples, 0.10%)</title><rect x="99.2673%" y="1797" width="0.1005%" height="15" fill="rgb(241,20,18)" fg:x="130339" fg:w="132"/><text x="99.5173%" y="1807.50"></text></g><g><title>torrust_tracker::servers::udp::logging::log_request::__CALLSITE::META (570 samples, 0.43%)</title><rect x="98.9383%" y="1813" width="0.4341%" height="15" fill="rgb(232,163,23)" fg:x="129907" fg:w="570"/><text x="99.1883%" y="1823.50"></text></g><g><title>__GI___lll_lock_wait_private (22 samples, 0.02%)</title><rect x="99.3770%" y="1797" width="0.0168%" height="15" fill="rgb(214,5,46)" fg:x="130483" fg:w="22"/><text x="99.6270%" y="1807.50"></text></g><g><title>futex_wait (14 samples, 0.01%)</title><rect x="99.3831%" y="1781" width="0.0107%" height="15" fill="rgb(229,78,17)" fg:x="130491" fg:w="14"/><text x="99.6331%" y="1791.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (299 samples, 0.23%)</title><rect x="99.3953%" y="1797" width="0.2277%" height="15" fill="rgb(248,89,10)" fg:x="130507" fg:w="299"/><text x="99.6453%" y="1807.50"></text></g><g><title>_int_free (16 samples, 0.01%)</title><rect x="99.6230%" y="1797" width="0.0122%" height="15" fill="rgb(248,54,15)" fg:x="130806" fg:w="16"/><text x="99.8730%" y="1807.50"></text></g><g><title>torrust_tracker::servers::udp::logging::log_request::__CALLSITE (361 samples, 0.27%)</title><rect x="99.3724%" y="1813" width="0.2749%" height="15" fill="rgb(223,116,6)" fg:x="130477" fg:w="361"/><text x="99.6224%" y="1823.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::process_request::{{closure}} (41 samples, 0.03%)</title><rect x="99.6474%" y="1813" width="0.0312%" height="15" fill="rgb(205,125,38)" fg:x="130838" fg:w="41"/><text x="99.8974%" y="1823.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_packet::{{closure}} (23 samples, 0.02%)</title><rect x="99.6908%" y="1797" width="0.0175%" height="15" fill="rgb(251,78,38)" fg:x="130895" fg:w="23"/><text x="99.9408%" y="1807.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::process_valid_request::{{closure}} (53 samples, 0.04%)</title><rect x="99.6786%" y="1813" width="0.0404%" height="15" fill="rgb(253,78,28)" fg:x="130879" fg:w="53"/><text x="99.9286%" y="1823.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::send_response::{{closure}} (14 samples, 0.01%)</title><rect x="99.7083%" y="1797" width="0.0107%" height="15" fill="rgb(209,120,3)" fg:x="130918" fg:w="14"/><text x="99.9583%" y="1807.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::future::future::Future&gt;::poll (63 samples, 0.05%)</title><rect x="99.7601%" y="1621" width="0.0480%" height="15" fill="rgb(238,229,9)" fg:x="130986" fg:w="63"/><text x="100.0101%" y="1631.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="99.8165%" y="1573" width="0.0160%" height="15" fill="rgb(253,159,18)" fg:x="131060" fg:w="21"/><text x="100.0665%" y="1583.50"></text></g><g><title>__GI___libc_malloc (18 samples, 0.01%)</title><rect x="99.8324%" y="1557" width="0.0137%" height="15" fill="rgb(244,42,34)" fg:x="131081" fg:w="18"/><text x="100.0824%" y="1567.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (116 samples, 0.09%)</title><rect x="99.7601%" y="1765" width="0.0883%" height="15" fill="rgb(224,8,7)" fg:x="130986" fg:w="116"/><text x="100.0101%" y="1775.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (116 samples, 0.09%)</title><rect x="99.7601%" y="1749" width="0.0883%" height="15" fill="rgb(210,201,45)" fg:x="130986" fg:w="116"/><text x="100.0101%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (116 samples, 0.09%)</title><rect x="99.7601%" y="1733" width="0.0883%" height="15" fill="rgb(252,185,21)" fg:x="130986" fg:w="116"/><text x="100.0101%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (116 samples, 0.09%)</title><rect x="99.7601%" y="1717" width="0.0883%" height="15" fill="rgb(223,131,1)" fg:x="130986" fg:w="116"/><text x="100.0101%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (116 samples, 0.09%)</title><rect x="99.7601%" y="1701" width="0.0883%" height="15" fill="rgb(245,141,16)" fg:x="130986" fg:w="116"/><text x="100.0101%" y="1711.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (116 samples, 0.09%)</title><rect x="99.7601%" y="1685" width="0.0883%" height="15" fill="rgb(229,55,45)" fg:x="130986" fg:w="116"/><text x="100.0101%" y="1695.50"></text></g><g><title>alloc::alloc::alloc (116 samples, 0.09%)</title><rect x="99.7601%" y="1669" width="0.0883%" height="15" fill="rgb(208,92,15)" fg:x="130986" fg:w="116"/><text x="100.0101%" y="1679.50"></text></g><g><title>__rdl_alloc (116 samples, 0.09%)</title><rect x="99.7601%" y="1653" width="0.0883%" height="15" fill="rgb(234,185,47)" fg:x="130986" fg:w="116"/><text x="100.0101%" y="1663.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (116 samples, 0.09%)</title><rect x="99.7601%" y="1637" width="0.0883%" height="15" fill="rgb(253,104,50)" fg:x="130986" fg:w="116"/><text x="100.0101%" y="1647.50"></text></g><g><title>tokio::runtime::io::registration::Registration::readiness::{{closure}} (53 samples, 0.04%)</title><rect x="99.8081%" y="1621" width="0.0404%" height="15" fill="rgb(205,70,7)" fg:x="131049" fg:w="53"/><text x="100.0581%" y="1631.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::readiness::{{closure}} (53 samples, 0.04%)</title><rect x="99.8081%" y="1605" width="0.0404%" height="15" fill="rgb(240,178,43)" fg:x="131049" fg:w="53"/><text x="100.0581%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::io::scheduled_io::Readiness&gt; (53 samples, 0.04%)</title><rect x="99.8081%" y="1589" width="0.0404%" height="15" fill="rgb(214,112,2)" fg:x="131049" fg:w="53"/><text x="100.0581%" y="1599.50"></text></g><g><title>_int_malloc (21 samples, 0.02%)</title><rect x="99.8324%" y="1573" width="0.0160%" height="15" fill="rgb(206,46,17)" fg:x="131081" fg:w="21"/><text x="100.0824%" y="1583.50"></text></g><g><title>[unknown] (36 samples, 0.03%)</title><rect x="99.8682%" y="1733" width="0.0274%" height="15" fill="rgb(225,220,16)" fg:x="131128" fg:w="36"/><text x="100.1182%" y="1743.50"></text></g><g><title>[unknown] (16 samples, 0.01%)</title><rect x="99.9139%" y="1589" width="0.0122%" height="15" fill="rgb(238,65,40)" fg:x="131188" fg:w="16"/><text x="100.1639%" y="1599.50"></text></g><g><title>core::mem::zeroed (27 samples, 0.02%)</title><rect x="99.9261%" y="1589" width="0.0206%" height="15" fill="rgb(230,151,21)" fg:x="131204" fg:w="27"/><text x="100.1761%" y="1599.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::zeroed (27 samples, 0.02%)</title><rect x="99.9261%" y="1573" width="0.0206%" height="15" fill="rgb(218,58,49)" fg:x="131204" fg:w="27"/><text x="100.1761%" y="1583.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (27 samples, 0.02%)</title><rect x="99.9261%" y="1557" width="0.0206%" height="15" fill="rgb(219,179,14)" fg:x="131204" fg:w="27"/><text x="100.1761%" y="1567.50"></text></g><g><title>core::intrinsics::write_bytes (27 samples, 0.02%)</title><rect x="99.9261%" y="1541" width="0.0206%" height="15" fill="rgb(223,72,1)" fg:x="131204" fg:w="27"/><text x="100.1761%" y="1551.50"></text></g><g><title>[unknown] (27 samples, 0.02%)</title><rect x="99.9261%" y="1525" width="0.0206%" height="15" fill="rgb(238,126,10)" fg:x="131204" fg:w="27"/><text x="100.1761%" y="1535.50"></text></g><g><title>tokio::net::udp::UdpSocket::recv_buf_from::{{closure}}::{{closure}} (64 samples, 0.05%)</title><rect x="99.9025%" y="1733" width="0.0487%" height="15" fill="rgb(224,206,38)" fg:x="131173" fg:w="64"/><text x="100.1525%" y="1743.50"></text></g><g><title>mio::net::udp::UdpSocket::recv_from (49 samples, 0.04%)</title><rect x="99.9139%" y="1717" width="0.0373%" height="15" fill="rgb(212,201,54)" fg:x="131188" fg:w="49"/><text x="100.1639%" y="1727.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (49 samples, 0.04%)</title><rect x="99.9139%" y="1701" width="0.0373%" height="15" fill="rgb(218,154,48)" fg:x="131188" fg:w="49"/><text x="100.1639%" y="1711.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (49 samples, 0.04%)</title><rect x="99.9139%" y="1685" width="0.0373%" height="15" fill="rgb(232,93,24)" fg:x="131188" fg:w="49"/><text x="100.1639%" y="1695.50"></text></g><g><title>mio::net::udp::UdpSocket::recv_from::{{closure}} (49 samples, 0.04%)</title><rect x="99.9139%" y="1669" width="0.0373%" height="15" fill="rgb(245,30,21)" fg:x="131188" fg:w="49"/><text x="100.1639%" y="1679.50"></text></g><g><title>std::net::udp::UdpSocket::recv_from (49 samples, 0.04%)</title><rect x="99.9139%" y="1653" width="0.0373%" height="15" fill="rgb(242,148,29)" fg:x="131188" fg:w="49"/><text x="100.1639%" y="1663.50"></text></g><g><title>std::sys_common::net::UdpSocket::recv_from (49 samples, 0.04%)</title><rect x="99.9139%" y="1637" width="0.0373%" height="15" fill="rgb(244,153,54)" fg:x="131188" fg:w="49"/><text x="100.1639%" y="1647.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_from (49 samples, 0.04%)</title><rect x="99.9139%" y="1621" width="0.0373%" height="15" fill="rgb(252,87,22)" fg:x="131188" fg:w="49"/><text x="100.1639%" y="1631.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_from_with_flags (49 samples, 0.04%)</title><rect x="99.9139%" y="1605" width="0.0373%" height="15" fill="rgb(210,51,29)" fg:x="131188" fg:w="49"/><text x="100.1639%" y="1615.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::receive_request::{{closure}} (271 samples, 0.21%)</title><rect x="99.7563%" y="1781" width="0.2064%" height="15" fill="rgb(242,136,47)" fg:x="130981" fg:w="271"/><text x="100.0063%" y="1791.50"></text></g><g><title>tokio::net::udp::UdpSocket::recv_buf_from::{{closure}} (143 samples, 0.11%)</title><rect x="99.8538%" y="1765" width="0.1089%" height="15" fill="rgb(238,68,4)" fg:x="131109" fg:w="143"/><text x="100.1038%" y="1775.50"></text></g><g><title>tokio::runtime::io::registration::Registration::async_io::{{closure}} (141 samples, 0.11%)</title><rect x="99.8553%" y="1749" width="0.1074%" height="15" fill="rgb(242,161,30)" fg:x="131111" fg:w="141"/><text x="100.1053%" y="1759.50"></text></g><g><title>tokio::runtime::io::registration::Registration::clear_readiness (15 samples, 0.01%)</title><rect x="99.9513%" y="1733" width="0.0114%" height="15" fill="rgb(218,58,44)" fg:x="131237" fg:w="15"/><text x="100.2013%" y="1743.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::clear_readiness (15 samples, 0.01%)</title><rect x="99.9513%" y="1717" width="0.0114%" height="15" fill="rgb(252,125,32)" fg:x="131237" fg:w="15"/><text x="100.2013%" y="1727.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness (15 samples, 0.01%)</title><rect x="99.9513%" y="1701" width="0.0114%" height="15" fill="rgb(219,178,0)" fg:x="131237" fg:w="15"/><text x="100.2013%" y="1711.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::run_with_graceful_shutdown::{{closure}}::{{closure}} (359 samples, 0.27%)</title><rect x="99.7190%" y="1813" width="0.2734%" height="15" fill="rgb(213,152,7)" fg:x="130932" fg:w="359"/><text x="99.9690%" y="1823.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::run_udp_server::{{closure}} (346 samples, 0.26%)</title><rect x="99.7289%" y="1797" width="0.2635%" height="15" fill="rgb(249,109,34)" fg:x="130945" fg:w="346"/><text x="99.9789%" y="1807.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::spawn_request_processor (39 samples, 0.03%)</title><rect x="99.9627%" y="1781" width="0.0297%" height="15" fill="rgb(232,96,21)" fg:x="131252" fg:w="39"/><text x="100.2127%" y="1791.50"></text></g><g><title>tokio::task::spawn::spawn (39 samples, 0.03%)</title><rect x="99.9627%" y="1765" width="0.0297%" height="15" fill="rgb(228,27,39)" fg:x="131252" fg:w="39"/><text x="100.2127%" y="1775.50"></text></g><g><title>tokio::task::spawn::spawn_inner (39 samples, 0.03%)</title><rect x="99.9627%" y="1749" width="0.0297%" height="15" fill="rgb(211,182,52)" fg:x="131252" fg:w="39"/><text x="100.2127%" y="1759.50"></text></g><g><title>tokio::runtime::context::current::with_current (39 samples, 0.03%)</title><rect x="99.9627%" y="1733" width="0.0297%" height="15" fill="rgb(234,178,38)" fg:x="131252" fg:w="39"/><text x="100.2127%" y="1743.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (39 samples, 0.03%)</title><rect x="99.9627%" y="1717" width="0.0297%" height="15" fill="rgb(221,111,3)" fg:x="131252" fg:w="39"/><text x="100.2127%" y="1727.50"></text></g><g><title>tokio::runtime::context::current::with_current::{{closure}} (39 samples, 0.03%)</title><rect x="99.9627%" y="1701" width="0.0297%" height="15" fill="rgb(228,175,21)" fg:x="131252" fg:w="39"/><text x="100.2127%" y="1711.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (39 samples, 0.03%)</title><rect x="99.9627%" y="1685" width="0.0297%" height="15" fill="rgb(228,174,43)" fg:x="131252" fg:w="39"/><text x="100.2127%" y="1695.50"></text></g><g><title>tokio::task::spawn::spawn_inner::{{closure}} (39 samples, 0.03%)</title><rect x="99.9627%" y="1669" width="0.0297%" height="15" fill="rgb(211,191,0)" fg:x="131252" fg:w="39"/><text x="100.2127%" y="1679.50"></text></g><g><title>tokio::runtime::scheduler::Handle::spawn (39 samples, 0.03%)</title><rect x="99.9627%" y="1653" width="0.0297%" height="15" fill="rgb(253,117,3)" fg:x="131252" fg:w="39"/><text x="100.2127%" y="1663.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::spawn (39 samples, 0.03%)</title><rect x="99.9627%" y="1637" width="0.0297%" height="15" fill="rgb(241,127,19)" fg:x="131252" fg:w="39"/><text x="100.2127%" y="1647.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (39 samples, 0.03%)</title><rect x="99.9627%" y="1621" width="0.0297%" height="15" fill="rgb(218,103,12)" fg:x="131252" fg:w="39"/><text x="100.2127%" y="1631.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (34 samples, 0.03%)</title><rect x="99.9665%" y="1605" width="0.0259%" height="15" fill="rgb(236,214,43)" fg:x="131257" fg:w="34"/><text x="100.2165%" y="1615.50"></text></g><g><title>all (131,301 samples, 100%)</title><rect x="0.0000%" y="1845" width="100.0000%" height="15" fill="rgb(244,144,19)" fg:x="0" fg:w="131301"/><text x="0.2500%" y="1855.50"></text></g><g><title>tokio-runtime-w (131,061 samples, 99.82%)</title><rect x="0.1828%" y="1829" width="99.8172%" height="15" fill="rgb(246,188,10)" fg:x="240" fg:w="131061"/><text x="0.4328%" y="1839.50">tokio-runtime-w</text></g></svg></svg>