<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1894" onload="init(evt)" viewBox="0 0 1200 1894" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1894" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1877.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1877.00"> </text><svg id="frames" x="10" width="1180" total_samples="378369"><g><title>merge_sched_in (93 samples, 0.02%)</title><rect x="0.0153%" y="1717" width="0.0246%" height="15" fill="rgb(227,0,7)" fg:x="58" fg:w="93"/><text x="0.2653%" y="1727.50"></text></g><g><title>event_sched_in (68 samples, 0.02%)</title><rect x="0.0219%" y="1701" width="0.0180%" height="15" fill="rgb(217,0,24)" fg:x="83" fg:w="68"/><text x="0.2719%" y="1711.50"></text></g><g><title>perf_ibs_add (50 samples, 0.01%)</title><rect x="0.0267%" y="1685" width="0.0132%" height="15" fill="rgb(221,193,54)" fg:x="101" fg:w="50"/><text x="0.2767%" y="1695.50"></text></g><g><title>perf_ibs_start (41 samples, 0.01%)</title><rect x="0.0291%" y="1669" width="0.0108%" height="15" fill="rgb(248,212,6)" fg:x="110" fg:w="41"/><text x="0.2791%" y="1679.50"></text></g><g><title>ctx_sched_in (117 samples, 0.03%)</title><rect x="0.0140%" y="1749" width="0.0309%" height="15" fill="rgb(208,68,35)" fg:x="53" fg:w="117"/><text x="0.2640%" y="1759.50"></text></g><g><title>visit_groups_merge.constprop.0.isra.0 (114 samples, 0.03%)</title><rect x="0.0148%" y="1733" width="0.0301%" height="15" fill="rgb(232,128,0)" fg:x="56" fg:w="114"/><text x="0.2648%" y="1743.50"></text></g><g><title>finish_task_switch.isra.0 (122 samples, 0.03%)</title><rect x="0.0130%" y="1781" width="0.0322%" height="15" fill="rgb(207,160,47)" fg:x="49" fg:w="122"/><text x="0.2630%" y="1791.50"></text></g><g><title>__perf_event_task_sched_in (119 samples, 0.03%)</title><rect x="0.0137%" y="1765" width="0.0315%" height="15" fill="rgb(228,23,34)" fg:x="52" fg:w="119"/><text x="0.2637%" y="1775.50"></text></g><g><title>profiling (170 samples, 0.04%)</title><rect x="0.0011%" y="1829" width="0.0449%" height="15" fill="rgb(218,30,26)" fg:x="4" fg:w="170"/><text x="0.2511%" y="1839.50"></text></g><g><title>ret_from_fork (126 samples, 0.03%)</title><rect x="0.0127%" y="1813" width="0.0333%" height="15" fill="rgb(220,122,19)" fg:x="48" fg:w="126"/><text x="0.2627%" y="1823.50"></text></g><g><title>schedule_tail (126 samples, 0.03%)</title><rect x="0.0127%" y="1797" width="0.0333%" height="15" fill="rgb(250,228,42)" fg:x="48" fg:w="126"/><text x="0.2627%" y="1807.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (81 samples, 0.02%)</title><rect x="0.0634%" y="1797" width="0.0214%" height="15" fill="rgb(240,193,28)" fg:x="240" fg:w="81"/><text x="0.3134%" y="1807.50"></text></g><g><title>[[vdso]] (750 samples, 0.20%)</title><rect x="0.0888%" y="1797" width="0.1982%" height="15" fill="rgb(216,20,37)" fg:x="336" fg:w="750"/><text x="0.3388%" y="1807.50"></text></g><g><title>&lt;torrust_tracker::shared::crypto::ephemeral_instance_keys::RANDOM_SEED as core::ops::deref::Deref&gt;::deref::__stability::LAZY (889 samples, 0.23%)</title><rect x="0.0634%" y="1813" width="0.2350%" height="15" fill="rgb(206,188,39)" fg:x="240" fg:w="889"/><text x="0.3134%" y="1823.50"></text></g><g><title>&lt;alloc::collections::btree::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (99 samples, 0.03%)</title><rect x="0.2984%" y="1797" width="0.0262%" height="15" fill="rgb(217,207,13)" fg:x="1129" fg:w="99"/><text x="0.5484%" y="1807.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (94 samples, 0.02%)</title><rect x="0.2997%" y="1781" width="0.0248%" height="15" fill="rgb(231,73,38)" fg:x="1134" fg:w="94"/><text x="0.5497%" y="1791.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (84 samples, 0.02%)</title><rect x="0.3024%" y="1765" width="0.0222%" height="15" fill="rgb(225,20,46)" fg:x="1144" fg:w="84"/><text x="0.5524%" y="1775.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::init_front (62 samples, 0.02%)</title><rect x="0.3082%" y="1749" width="0.0164%" height="15" fill="rgb(210,31,41)" fg:x="1166" fg:w="62"/><text x="0.5582%" y="1759.50"></text></g><g><title>[[vdso]] (968 samples, 0.26%)</title><rect x="0.3256%" y="1797" width="0.2558%" height="15" fill="rgb(221,200,47)" fg:x="1232" fg:w="968"/><text x="0.5756%" y="1807.50"></text></g><g><title>__GI___clock_gettime (58 samples, 0.02%)</title><rect x="0.5814%" y="1797" width="0.0153%" height="15" fill="rgb(226,26,5)" fg:x="2200" fg:w="58"/><text x="0.8314%" y="1807.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (143 samples, 0.04%)</title><rect x="0.6192%" y="1797" width="0.0378%" height="15" fill="rgb(249,33,26)" fg:x="2343" fg:w="143"/><text x="0.8692%" y="1807.50"></text></g><g><title>_int_free (38 samples, 0.01%)</title><rect x="0.6652%" y="1797" width="0.0100%" height="15" fill="rgb(235,183,28)" fg:x="2517" fg:w="38"/><text x="0.9152%" y="1807.50"></text></g><g><title>_int_malloc (178 samples, 0.05%)</title><rect x="0.6753%" y="1797" width="0.0470%" height="15" fill="rgb(221,5,38)" fg:x="2555" fg:w="178"/><text x="0.9253%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt;: 32]&gt; (39 samples, 0.01%)</title><rect x="0.7316%" y="1797" width="0.0103%" height="15" fill="rgb(247,18,42)" fg:x="2768" fg:w="39"/><text x="0.9816%" y="1807.50"></text></g><g><title>epoll_wait (676 samples, 0.18%)</title><rect x="0.7445%" y="1797" width="0.1787%" height="15" fill="rgb(241,131,45)" fg:x="2817" fg:w="676"/><text x="0.9945%" y="1807.50"></text></g><g><title>tokio::runtime::context::with_scheduler (85 samples, 0.02%)</title><rect x="0.9330%" y="1797" width="0.0225%" height="15" fill="rgb(249,31,29)" fg:x="3530" fg:w="85"/><text x="1.1830%" y="1807.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (65 samples, 0.02%)</title><rect x="0.9655%" y="1749" width="0.0172%" height="15" fill="rgb(225,111,53)" fg:x="3653" fg:w="65"/><text x="1.2155%" y="1759.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select::{{closure}} (60 samples, 0.02%)</title><rect x="0.9668%" y="1733" width="0.0159%" height="15" fill="rgb(238,160,17)" fg:x="3658" fg:w="60"/><text x="1.2168%" y="1743.50"></text></g><g><title>mio::poll::Poll::poll (84 samples, 0.02%)</title><rect x="0.9607%" y="1781" width="0.0222%" height="15" fill="rgb(214,148,48)" fg:x="3635" fg:w="84"/><text x="1.2107%" y="1791.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (84 samples, 0.02%)</title><rect x="0.9607%" y="1765" width="0.0222%" height="15" fill="rgb(232,36,49)" fg:x="3635" fg:w="84"/><text x="1.2107%" y="1775.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (164 samples, 0.04%)</title><rect x="0.9554%" y="1797" width="0.0433%" height="15" fill="rgb(209,103,24)" fg:x="3615" fg:w="164"/><text x="1.2054%" y="1807.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness (48 samples, 0.01%)</title><rect x="0.9861%" y="1781" width="0.0127%" height="15" fill="rgb(229,88,8)" fg:x="3731" fg:w="48"/><text x="1.2361%" y="1791.50"></text></g><g><title>tokio::runtime::io::registration::Registration::readiness::{{closure}} (76 samples, 0.02%)</title><rect x="0.9988%" y="1797" width="0.0201%" height="15" fill="rgb(213,181,19)" fg:x="3779" fg:w="76"/><text x="1.2488%" y="1807.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::readiness::{{closure}} (50 samples, 0.01%)</title><rect x="1.0056%" y="1781" width="0.0132%" height="15" fill="rgb(254,191,54)" fg:x="3805" fg:w="50"/><text x="1.2556%" y="1791.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (113 samples, 0.03%)</title><rect x="1.0188%" y="1797" width="0.0299%" height="15" fill="rgb(241,83,37)" fg:x="3855" fg:w="113"/><text x="1.2688%" y="1807.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (415 samples, 0.11%)</title><rect x="1.0643%" y="1781" width="0.1097%" height="15" fill="rgb(233,36,39)" fg:x="4027" fg:w="415"/><text x="1.3143%" y="1791.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (410 samples, 0.11%)</title><rect x="1.0656%" y="1765" width="0.1084%" height="15" fill="rgb(226,3,54)" fg:x="4032" fg:w="410"/><text x="1.3156%" y="1775.50"></text></g><g><title>core::sync::atomic::atomic_add (410 samples, 0.11%)</title><rect x="1.0656%" y="1749" width="0.1084%" height="15" fill="rgb(245,192,40)" fg:x="4032" fg:w="410"/><text x="1.3156%" y="1759.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (475 samples, 0.13%)</title><rect x="1.0487%" y="1797" width="0.1255%" height="15" fill="rgb(238,167,29)" fg:x="3968" fg:w="475"/><text x="1.2987%" y="1807.50"></text></g><g><title>tokio::runtime::driver::Handle::unpark (40 samples, 0.01%)</title><rect x="1.1785%" y="1765" width="0.0106%" height="15" fill="rgb(232,182,51)" fg:x="4459" fg:w="40"/><text x="1.4285%" y="1775.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (40 samples, 0.01%)</title><rect x="1.1785%" y="1749" width="0.0106%" height="15" fill="rgb(231,60,39)" fg:x="4459" fg:w="40"/><text x="1.4285%" y="1759.50"></text></g><g><title>__entry_text_start (99 samples, 0.03%)</title><rect x="1.1906%" y="1733" width="0.0262%" height="15" fill="rgb(208,69,12)" fg:x="4505" fg:w="99"/><text x="1.4406%" y="1743.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (180 samples, 0.05%)</title><rect x="1.1743%" y="1797" width="0.0476%" height="15" fill="rgb(235,93,37)" fg:x="4443" fg:w="180"/><text x="1.4243%" y="1807.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (169 samples, 0.04%)</title><rect x="1.1772%" y="1781" width="0.0447%" height="15" fill="rgb(213,116,39)" fg:x="4454" fg:w="169"/><text x="1.4272%" y="1791.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark_condvar (124 samples, 0.03%)</title><rect x="1.1891%" y="1765" width="0.0328%" height="15" fill="rgb(222,207,29)" fg:x="4499" fg:w="124"/><text x="1.4391%" y="1775.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (123 samples, 0.03%)</title><rect x="1.1893%" y="1749" width="0.0325%" height="15" fill="rgb(206,96,30)" fg:x="4500" fg:w="123"/><text x="1.4393%" y="1759.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::release (60 samples, 0.02%)</title><rect x="1.2218%" y="1797" width="0.0159%" height="15" fill="rgb(218,138,4)" fg:x="4623" fg:w="60"/><text x="1.4718%" y="1807.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::remove (53 samples, 0.01%)</title><rect x="1.2237%" y="1781" width="0.0140%" height="15" fill="rgb(250,191,14)" fg:x="4630" fg:w="53"/><text x="1.4737%" y="1791.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (53 samples, 0.01%)</title><rect x="1.2237%" y="1765" width="0.0140%" height="15" fill="rgb(239,60,40)" fg:x="4630" fg:w="53"/><text x="1.4737%" y="1775.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_condvar (122 samples, 0.03%)</title><rect x="1.2707%" y="1749" width="0.0322%" height="15" fill="rgb(206,27,48)" fg:x="4808" fg:w="122"/><text x="1.5207%" y="1759.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (75 samples, 0.02%)</title><rect x="1.2831%" y="1733" width="0.0198%" height="15" fill="rgb(225,35,8)" fg:x="4855" fg:w="75"/><text x="1.5331%" y="1743.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (287 samples, 0.08%)</title><rect x="1.2377%" y="1797" width="0.0759%" height="15" fill="rgb(250,213,24)" fg:x="4683" fg:w="287"/><text x="1.4877%" y="1807.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (232 samples, 0.06%)</title><rect x="1.2522%" y="1781" width="0.0613%" height="15" fill="rgb(247,123,22)" fg:x="4738" fg:w="232"/><text x="1.5022%" y="1791.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (232 samples, 0.06%)</title><rect x="1.2522%" y="1765" width="0.0613%" height="15" fill="rgb(231,138,38)" fg:x="4738" fg:w="232"/><text x="1.5022%" y="1775.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (67 samples, 0.02%)</title><rect x="1.3236%" y="1733" width="0.0177%" height="15" fill="rgb(231,145,46)" fg:x="5008" fg:w="67"/><text x="1.5736%" y="1743.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (67 samples, 0.02%)</title><rect x="1.3236%" y="1717" width="0.0177%" height="15" fill="rgb(251,118,11)" fg:x="5008" fg:w="67"/><text x="1.5736%" y="1727.50"></text></g><g><title>core::cell::BorrowRefMut::new (67 samples, 0.02%)</title><rect x="1.3236%" y="1701" width="0.0177%" height="15" fill="rgb(217,147,25)" fg:x="5008" fg:w="67"/><text x="1.5736%" y="1711.50"></text></g><g><title>tokio::runtime::coop::budget (86 samples, 0.02%)</title><rect x="1.3209%" y="1781" width="0.0227%" height="15" fill="rgb(247,81,37)" fg:x="4998" fg:w="86"/><text x="1.5709%" y="1791.50"></text></g><g><title>tokio::runtime::coop::with_budget (86 samples, 0.02%)</title><rect x="1.3209%" y="1765" width="0.0227%" height="15" fill="rgb(209,12,38)" fg:x="4998" fg:w="86"/><text x="1.5709%" y="1775.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (80 samples, 0.02%)</title><rect x="1.3225%" y="1749" width="0.0211%" height="15" fill="rgb(227,1,9)" fg:x="5004" fg:w="80"/><text x="1.5725%" y="1759.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (372 samples, 0.10%)</title><rect x="1.3135%" y="1797" width="0.0983%" height="15" fill="rgb(248,47,43)" fg:x="4970" fg:w="372"/><text x="1.5635%" y="1807.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_searching (240 samples, 0.06%)</title><rect x="1.3484%" y="1781" width="0.0634%" height="15" fill="rgb(221,10,30)" fg:x="5102" fg:w="240"/><text x="1.5984%" y="1791.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::transition_worker_from_searching (133 samples, 0.04%)</title><rect x="1.3767%" y="1765" width="0.0352%" height="15" fill="rgb(210,229,1)" fg:x="5209" fg:w="133"/><text x="1.6267%" y="1775.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (103 samples, 0.03%)</title><rect x="1.3846%" y="1749" width="0.0272%" height="15" fill="rgb(222,148,37)" fg:x="5239" fg:w="103"/><text x="1.6346%" y="1759.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (46 samples, 0.01%)</title><rect x="1.4177%" y="1797" width="0.0122%" height="15" fill="rgb(234,67,33)" fg:x="5364" fg:w="46"/><text x="1.6677%" y="1807.50"></text></g><g><title>core::mem::drop (41 samples, 0.01%)</title><rect x="1.4190%" y="1781" width="0.0108%" height="15" fill="rgb(247,98,35)" fg:x="5369" fg:w="41"/><text x="1.6690%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;torrust_tracker::servers::udp::server::Udp::process_request::{{closure}},alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt;&gt; (41 samples, 0.01%)</title><rect x="1.4190%" y="1765" width="0.0108%" height="15" fill="rgb(247,138,52)" fg:x="5369" fg:w="41"/><text x="1.6690%" y="1775.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (77 samples, 0.02%)</title><rect x="1.5995%" y="1413" width="0.0204%" height="15" fill="rgb(213,79,30)" fg:x="6052" fg:w="77"/><text x="1.8495%" y="1423.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::{{closure}} (210 samples, 0.06%)</title><rect x="1.6970%" y="1317" width="0.0555%" height="15" fill="rgb(246,177,23)" fg:x="6421" fg:w="210"/><text x="1.9470%" y="1327.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (210 samples, 0.06%)</title><rect x="1.6970%" y="1301" width="0.0555%" height="15" fill="rgb(230,62,27)" fg:x="6421" fg:w="210"/><text x="1.9470%" y="1311.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (521 samples, 0.14%)</title><rect x="1.6479%" y="1365" width="0.1377%" height="15" fill="rgb(216,154,8)" fg:x="6235" fg:w="521"/><text x="1.8979%" y="1375.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (521 samples, 0.14%)</title><rect x="1.6479%" y="1349" width="0.1377%" height="15" fill="rgb(244,35,45)" fg:x="6235" fg:w="521"/><text x="1.8979%" y="1359.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (521 samples, 0.14%)</title><rect x="1.6479%" y="1333" width="0.1377%" height="15" fill="rgb(251,115,12)" fg:x="6235" fg:w="521"/><text x="1.8979%" y="1343.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (125 samples, 0.03%)</title><rect x="1.7525%" y="1317" width="0.0330%" height="15" fill="rgb(240,54,50)" fg:x="6631" fg:w="125"/><text x="2.0025%" y="1327.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (125 samples, 0.03%)</title><rect x="1.7525%" y="1301" width="0.0330%" height="15" fill="rgb(233,84,52)" fg:x="6631" fg:w="125"/><text x="2.0025%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::is_parked (586 samples, 0.15%)</title><rect x="1.6402%" y="1381" width="0.1549%" height="15" fill="rgb(207,117,47)" fg:x="6206" fg:w="586"/><text x="1.8902%" y="1391.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_parked (617 samples, 0.16%)</title><rect x="1.6357%" y="1397" width="0.1631%" height="15" fill="rgb(249,43,39)" fg:x="6189" fg:w="617"/><text x="1.8857%" y="1407.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (767 samples, 0.20%)</title><rect x="1.6265%" y="1413" width="0.2027%" height="15" fill="rgb(209,38,44)" fg:x="6154" fg:w="767"/><text x="1.8765%" y="1423.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_parked (115 samples, 0.03%)</title><rect x="1.7988%" y="1397" width="0.0304%" height="15" fill="rgb(236,212,23)" fg:x="6806" fg:w="115"/><text x="2.0488%" y="1407.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_if_work_pending (78 samples, 0.02%)</title><rect x="1.8086%" y="1381" width="0.0206%" height="15" fill="rgb(242,79,21)" fg:x="6843" fg:w="78"/><text x="2.0586%" y="1391.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::is_empty (56 samples, 0.01%)</title><rect x="1.8144%" y="1365" width="0.0148%" height="15" fill="rgb(211,96,35)" fg:x="6865" fg:w="56"/><text x="2.0644%" y="1375.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::is_empty (52 samples, 0.01%)</title><rect x="1.8154%" y="1349" width="0.0137%" height="15" fill="rgb(253,215,40)" fg:x="6869" fg:w="52"/><text x="2.0654%" y="1359.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::len (45 samples, 0.01%)</title><rect x="1.8173%" y="1333" width="0.0119%" height="15" fill="rgb(211,81,21)" fg:x="6876" fg:w="45"/><text x="2.0673%" y="1343.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task (38 samples, 0.01%)</title><rect x="1.8411%" y="1397" width="0.0100%" height="15" fill="rgb(208,190,38)" fg:x="6966" fg:w="38"/><text x="2.0911%" y="1407.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task (105 samples, 0.03%)</title><rect x="1.8292%" y="1413" width="0.0278%" height="15" fill="rgb(235,213,38)" fg:x="6921" fg:w="105"/><text x="2.0792%" y="1423.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (129 samples, 0.03%)</title><rect x="1.9132%" y="1365" width="0.0341%" height="15" fill="rgb(237,122,38)" fg:x="7239" fg:w="129"/><text x="2.1632%" y="1375.50"></text></g><g><title>core::sync::atomic::AtomicU64::compare_exchange (138 samples, 0.04%)</title><rect x="1.9494%" y="1365" width="0.0365%" height="15" fill="rgb(244,218,35)" fg:x="7376" fg:w="138"/><text x="2.1994%" y="1375.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (138 samples, 0.04%)</title><rect x="1.9494%" y="1349" width="0.0365%" height="15" fill="rgb(240,68,47)" fg:x="7376" fg:w="138"/><text x="2.1994%" y="1359.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::pack (311 samples, 0.08%)</title><rect x="1.9885%" y="1365" width="0.0822%" height="15" fill="rgb(210,16,53)" fg:x="7524" fg:w="311"/><text x="2.2385%" y="1375.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (745 samples, 0.20%)</title><rect x="1.8762%" y="1381" width="0.1969%" height="15" fill="rgb(235,124,12)" fg:x="7099" fg:w="745"/><text x="2.1262%" y="1391.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (778 samples, 0.21%)</title><rect x="1.8680%" y="1397" width="0.2056%" height="15" fill="rgb(224,169,11)" fg:x="7068" fg:w="778"/><text x="2.1180%" y="1407.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (821 samples, 0.22%)</title><rect x="1.8569%" y="1413" width="0.2170%" height="15" fill="rgb(250,166,2)" fg:x="7026" fg:w="821"/><text x="2.1069%" y="1423.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (2,036 samples, 0.54%)</title><rect x="1.5387%" y="1605" width="0.5381%" height="15" fill="rgb(242,216,29)" fg:x="5822" fg:w="2036"/><text x="1.7887%" y="1615.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}} (2,036 samples, 0.54%)</title><rect x="1.5387%" y="1589" width="0.5381%" height="15" fill="rgb(230,116,27)" fg:x="5822" fg:w="2036"/><text x="1.7887%" y="1599.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (2,036 samples, 0.54%)</title><rect x="1.5387%" y="1573" width="0.5381%" height="15" fill="rgb(228,99,48)" fg:x="5822" fg:w="2036"/><text x="1.7887%" y="1583.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (2,036 samples, 0.54%)</title><rect x="1.5387%" y="1557" width="0.5381%" height="15" fill="rgb(253,11,6)" fg:x="5822" fg:w="2036"/><text x="1.7887%" y="1567.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (2,036 samples, 0.54%)</title><rect x="1.5387%" y="1541" width="0.5381%" height="15" fill="rgb(247,143,39)" fg:x="5822" fg:w="2036"/><text x="1.7887%" y="1551.50"></text></g><g><title>tokio::runtime::context::set_scheduler (2,036 samples, 0.54%)</title><rect x="1.5387%" y="1525" width="0.5381%" height="15" fill="rgb(236,97,10)" fg:x="5822" fg:w="2036"/><text x="1.7887%" y="1535.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,036 samples, 0.54%)</title><rect x="1.5387%" y="1509" width="0.5381%" height="15" fill="rgb(233,208,19)" fg:x="5822" fg:w="2036"/><text x="1.7887%" y="1519.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,036 samples, 0.54%)</title><rect x="1.5387%" y="1493" width="0.5381%" height="15" fill="rgb(216,164,2)" fg:x="5822" fg:w="2036"/><text x="1.7887%" y="1503.50"></text></g><g><title>tokio::runtime::context::set_scheduler::{{closure}} (2,036 samples, 0.54%)</title><rect x="1.5387%" y="1477" width="0.5381%" height="15" fill="rgb(220,129,5)" fg:x="5822" fg:w="2036"/><text x="1.7887%" y="1487.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (2,036 samples, 0.54%)</title><rect x="1.5387%" y="1461" width="0.5381%" height="15" fill="rgb(242,17,10)" fg:x="5822" fg:w="2036"/><text x="1.7887%" y="1471.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}::{{closure}} (2,036 samples, 0.54%)</title><rect x="1.5387%" y="1445" width="0.5381%" height="15" fill="rgb(242,107,0)" fg:x="5822" fg:w="2036"/><text x="1.7887%" y="1455.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (2,036 samples, 0.54%)</title><rect x="1.5387%" y="1429" width="0.5381%" height="15" fill="rgb(251,28,31)" fg:x="5822" fg:w="2036"/><text x="1.7887%" y="1439.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2,422 samples, 0.64%)</title><rect x="1.4452%" y="1637" width="0.6401%" height="15" fill="rgb(233,223,10)" fg:x="5468" fg:w="2422"/><text x="1.6952%" y="1647.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (2,422 samples, 0.64%)</title><rect x="1.4452%" y="1621" width="0.6401%" height="15" fill="rgb(215,21,27)" fg:x="5468" fg:w="2422"/><text x="1.6952%" y="1631.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (58 samples, 0.02%)</title><rect x="2.1032%" y="1605" width="0.0153%" height="15" fill="rgb(232,23,21)" fg:x="7958" fg:w="58"/><text x="2.3532%" y="1615.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage::{{closure}} (58 samples, 0.02%)</title><rect x="2.1032%" y="1589" width="0.0153%" height="15" fill="rgb(244,5,23)" fg:x="7958" fg:w="58"/><text x="2.3532%" y="1599.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (2,584 samples, 0.68%)</title><rect x="1.4446%" y="1653" width="0.6829%" height="15" fill="rgb(226,81,46)" fg:x="5466" fg:w="2584"/><text x="1.6946%" y="1663.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::drop_future_or_output (160 samples, 0.04%)</title><rect x="2.0853%" y="1637" width="0.0423%" height="15" fill="rgb(247,70,30)" fg:x="7890" fg:w="160"/><text x="2.3353%" y="1647.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (138 samples, 0.04%)</title><rect x="2.0911%" y="1621" width="0.0365%" height="15" fill="rgb(212,68,19)" fg:x="7912" fg:w="138"/><text x="2.3411%" y="1631.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,724 samples, 0.72%)</title><rect x="1.4446%" y="1685" width="0.7199%" height="15" fill="rgb(240,187,13)" fg:x="5466" fg:w="2724"/><text x="1.6946%" y="1695.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (2,724 samples, 0.72%)</title><rect x="1.4446%" y="1669" width="0.7199%" height="15" fill="rgb(223,113,26)" fg:x="5466" fg:w="2724"/><text x="1.6946%" y="1679.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::store_output (140 samples, 0.04%)</title><rect x="2.1276%" y="1653" width="0.0370%" height="15" fill="rgb(206,192,2)" fg:x="8050" fg:w="140"/><text x="2.3776%" y="1663.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (2,796 samples, 0.74%)</title><rect x="1.4415%" y="1749" width="0.7390%" height="15" fill="rgb(241,108,4)" fg:x="5454" fg:w="2796"/><text x="1.6915%" y="1759.50"></text></g><g><title>std::panic::catch_unwind (2,788 samples, 0.74%)</title><rect x="1.4436%" y="1733" width="0.7368%" height="15" fill="rgb(247,173,49)" fg:x="5462" fg:w="2788"/><text x="1.6936%" y="1743.50"></text></g><g><title>std::panicking::try (2,788 samples, 0.74%)</title><rect x="1.4436%" y="1717" width="0.7368%" height="15" fill="rgb(224,114,35)" fg:x="5462" fg:w="2788"/><text x="1.6936%" y="1727.50"></text></g><g><title>std::panicking::try::do_call (2,784 samples, 0.74%)</title><rect x="1.4446%" y="1701" width="0.7358%" height="15" fill="rgb(245,159,27)" fg:x="5466" fg:w="2784"/><text x="1.6946%" y="1711.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::take (60 samples, 0.02%)</title><rect x="2.1646%" y="1685" width="0.0159%" height="15" fill="rgb(245,172,44)" fg:x="8190" fg:w="60"/><text x="2.4146%" y="1695.50"></text></g><g><title>core::ptr::read (60 samples, 0.02%)</title><rect x="2.1646%" y="1669" width="0.0159%" height="15" fill="rgb(236,23,11)" fg:x="8190" fg:w="60"/><text x="2.4146%" y="1679.50"></text></g><g><title>tokio::runtime::task::raw::poll (2,887 samples, 0.76%)</title><rect x="1.4370%" y="1797" width="0.7630%" height="15" fill="rgb(205,117,38)" fg:x="5437" fg:w="2887"/><text x="1.6870%" y="1807.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (2,876 samples, 0.76%)</title><rect x="1.4399%" y="1781" width="0.7601%" height="15" fill="rgb(237,72,25)" fg:x="5448" fg:w="2876"/><text x="1.6899%" y="1791.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (2,876 samples, 0.76%)</title><rect x="1.4399%" y="1765" width="0.7601%" height="15" fill="rgb(244,70,9)" fg:x="5448" fg:w="2876"/><text x="1.6899%" y="1775.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (74 samples, 0.02%)</title><rect x="2.1804%" y="1749" width="0.0196%" height="15" fill="rgb(217,125,39)" fg:x="8250" fg:w="74"/><text x="2.4304%" y="1759.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (74 samples, 0.02%)</title><rect x="2.1804%" y="1733" width="0.0196%" height="15" fill="rgb(235,36,10)" fg:x="8250" fg:w="74"/><text x="2.4304%" y="1743.50"></text></g><g><title>core::array::&lt;impl core::default::Default for [T: 32]&gt;::default (83 samples, 0.02%)</title><rect x="2.2230%" y="1781" width="0.0219%" height="15" fill="rgb(251,123,47)" fg:x="8411" fg:w="83"/><text x="2.4730%" y="1791.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (58 samples, 0.02%)</title><rect x="2.2642%" y="1781" width="0.0153%" height="15" fill="rgb(221,13,13)" fg:x="8567" fg:w="58"/><text x="2.5142%" y="1791.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (325 samples, 0.09%)</title><rect x="2.2010%" y="1797" width="0.0859%" height="15" fill="rgb(238,131,9)" fg:x="8328" fg:w="325"/><text x="2.4510%" y="1807.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (147 samples, 0.04%)</title><rect x="2.2869%" y="1797" width="0.0389%" height="15" fill="rgb(211,50,8)" fg:x="8653" fg:w="147"/><text x="2.5369%" y="1807.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (53 samples, 0.01%)</title><rect x="2.3258%" y="1797" width="0.0140%" height="15" fill="rgb(245,182,24)" fg:x="8800" fg:w="53"/><text x="2.5758%" y="1807.50"></text></g><g><title>torrust_tracker::servers::udp::logging::log_request (43 samples, 0.01%)</title><rect x="2.3924%" y="1765" width="0.0114%" height="15" fill="rgb(242,14,37)" fg:x="9052" fg:w="43"/><text x="2.6424%" y="1775.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_packet::{{closure}} (112 samples, 0.03%)</title><rect x="2.3776%" y="1781" width="0.0296%" height="15" fill="rgb(246,228,12)" fg:x="8996" fg:w="112"/><text x="2.6276%" y="1791.50"></text></g><g><title>alloc::vec::from_elem (42 samples, 0.01%)</title><rect x="2.4082%" y="1765" width="0.0111%" height="15" fill="rgb(213,55,15)" fg:x="9112" fg:w="42"/><text x="2.6582%" y="1775.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (42 samples, 0.01%)</title><rect x="2.4082%" y="1749" width="0.0111%" height="15" fill="rgb(209,9,3)" fg:x="9112" fg:w="42"/><text x="2.6582%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (42 samples, 0.01%)</title><rect x="2.4082%" y="1733" width="0.0111%" height="15" fill="rgb(230,59,30)" fg:x="9112" fg:w="42"/><text x="2.6582%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (42 samples, 0.01%)</title><rect x="2.4082%" y="1717" width="0.0111%" height="15" fill="rgb(209,121,21)" fg:x="9112" fg:w="42"/><text x="2.6582%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (42 samples, 0.01%)</title><rect x="2.4082%" y="1701" width="0.0111%" height="15" fill="rgb(220,109,13)" fg:x="9112" fg:w="42"/><text x="2.6582%" y="1711.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (42 samples, 0.01%)</title><rect x="2.4082%" y="1685" width="0.0111%" height="15" fill="rgb(232,18,1)" fg:x="9112" fg:w="42"/><text x="2.6582%" y="1695.50"></text></g><g><title>alloc::alloc::alloc_zeroed (42 samples, 0.01%)</title><rect x="2.4082%" y="1669" width="0.0111%" height="15" fill="rgb(215,41,42)" fg:x="9112" fg:w="42"/><text x="2.6582%" y="1679.50"></text></g><g><title>__rdl_alloc_zeroed (42 samples, 0.01%)</title><rect x="2.4082%" y="1653" width="0.0111%" height="15" fill="rgb(224,123,36)" fg:x="9112" fg:w="42"/><text x="2.6582%" y="1663.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (42 samples, 0.01%)</title><rect x="2.4082%" y="1637" width="0.0111%" height="15" fill="rgb(240,125,3)" fg:x="9112" fg:w="42"/><text x="2.6582%" y="1647.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::process_valid_request::{{closure}} (318 samples, 0.08%)</title><rect x="2.3424%" y="1797" width="0.0840%" height="15" fill="rgb(205,98,50)" fg:x="8863" fg:w="318"/><text x="2.5924%" y="1807.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::send_response::{{closure}} (73 samples, 0.02%)</title><rect x="2.4072%" y="1781" width="0.0193%" height="15" fill="rgb(205,185,37)" fg:x="9108" fg:w="73"/><text x="2.6572%" y="1791.50"></text></g><g><title>torrust_tracker_torrent_repository::repository::rw_lock_std_mutex_std::&lt;impl torrust_tracker_torrent_repository::repository::Repository&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt; for torrust_tracker_torrent_repository::repository::RwLockStd&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;&gt;::update_torrent_with_peer_and_get_stats (61 samples, 0.02%)</title><rect x="2.4368%" y="1797" width="0.0161%" height="15" fill="rgb(238,207,15)" fg:x="9220" fg:w="61"/><text x="2.6868%" y="1807.50"></text></g><g><title>torrust_tracker_torrent_repository::repository::rw_lock_std_mutex_std::&lt;impl torrust_tracker_torrent_repository::repository::RwLockStd&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;&gt;::get_torrents (85 samples, 0.02%)</title><rect x="2.4529%" y="1797" width="0.0225%" height="15" fill="rgb(213,199,42)" fg:x="9281" fg:w="85"/><text x="2.7029%" y="1807.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (80 samples, 0.02%)</title><rect x="2.4542%" y="1781" width="0.0211%" height="15" fill="rgb(235,201,11)" fg:x="9286" fg:w="80"/><text x="2.7042%" y="1791.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::read (63 samples, 0.02%)</title><rect x="2.4587%" y="1765" width="0.0167%" height="15" fill="rgb(207,46,11)" fg:x="9303" fg:w="63"/><text x="2.7087%" y="1775.50"></text></g><g><title>[[heap]] (8,241 samples, 2.18%)</title><rect x="0.2984%" y="1813" width="2.1780%" height="15" fill="rgb(241,35,35)" fg:x="1129" fg:w="8241"/><text x="0.5484%" y="1823.50">[..</text></g><g><title>[[vdso]] (1,241 samples, 0.33%)</title><rect x="2.4767%" y="1813" width="0.3280%" height="15" fill="rgb(243,32,47)" fg:x="9371" fg:w="1241"/><text x="2.7267%" y="1823.50"></text></g><g><title>&lt;alloc::collections::btree::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (96 samples, 0.03%)</title><rect x="2.8110%" y="1797" width="0.0254%" height="15" fill="rgb(247,202,23)" fg:x="10636" fg:w="96"/><text x="3.0610%" y="1807.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (69 samples, 0.02%)</title><rect x="2.8181%" y="1781" width="0.0182%" height="15" fill="rgb(219,102,11)" fg:x="10663" fg:w="69"/><text x="3.0681%" y="1791.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (43 samples, 0.01%)</title><rect x="2.8250%" y="1765" width="0.0114%" height="15" fill="rgb(243,110,44)" fg:x="10689" fg:w="43"/><text x="3.0750%" y="1775.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (41 samples, 0.01%)</title><rect x="2.8364%" y="1797" width="0.0108%" height="15" fill="rgb(222,74,54)" fg:x="10732" fg:w="41"/><text x="3.0864%" y="1807.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (379 samples, 0.10%)</title><rect x="2.8472%" y="1797" width="0.1002%" height="15" fill="rgb(216,99,12)" fg:x="10773" fg:w="379"/><text x="3.0972%" y="1807.50"></text></g><g><title>alloc::string::String::push_str (45 samples, 0.01%)</title><rect x="2.9355%" y="1781" width="0.0119%" height="15" fill="rgb(226,22,26)" fg:x="11107" fg:w="45"/><text x="3.1855%" y="1791.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (45 samples, 0.01%)</title><rect x="2.9355%" y="1765" width="0.0119%" height="15" fill="rgb(217,163,10)" fg:x="11107" fg:w="45"/><text x="3.1855%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (45 samples, 0.01%)</title><rect x="2.9355%" y="1749" width="0.0119%" height="15" fill="rgb(213,25,53)" fg:x="11107" fg:w="45"/><text x="3.1855%" y="1759.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (45 samples, 0.01%)</title><rect x="2.9355%" y="1733" width="0.0119%" height="15" fill="rgb(252,105,26)" fg:x="11107" fg:w="45"/><text x="3.1855%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (66 samples, 0.02%)</title><rect x="2.9490%" y="1797" width="0.0174%" height="15" fill="rgb(220,39,43)" fg:x="11158" fg:w="66"/><text x="3.1990%" y="1807.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (48 samples, 0.01%)</title><rect x="3.0372%" y="1765" width="0.0127%" height="15" fill="rgb(229,68,48)" fg:x="11492" fg:w="48"/><text x="3.2872%" y="1775.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (148 samples, 0.04%)</title><rect x="3.0219%" y="1781" width="0.0391%" height="15" fill="rgb(252,8,32)" fg:x="11434" fg:w="148"/><text x="3.2719%" y="1791.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (42 samples, 0.01%)</title><rect x="3.0499%" y="1765" width="0.0111%" height="15" fill="rgb(223,20,43)" fg:x="11540" fg:w="42"/><text x="3.2999%" y="1775.50"></text></g><g><title>core::hash::sip::u8to64_le (134 samples, 0.04%)</title><rect x="3.0642%" y="1781" width="0.0354%" height="15" fill="rgb(229,81,49)" fg:x="11594" fg:w="134"/><text x="3.3142%" y="1791.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (506 samples, 0.13%)</title><rect x="2.9664%" y="1797" width="0.1337%" height="15" fill="rgb(236,28,36)" fg:x="11224" fg:w="506"/><text x="3.2164%" y="1807.50"></text></g><g><title>&lt;core::net::socket_addr::SocketAddr as core::hash::Hash&gt;::hash (54 samples, 0.01%)</title><rect x="3.1001%" y="1797" width="0.0143%" height="15" fill="rgb(249,185,26)" fg:x="11730" fg:w="54"/><text x="3.3501%" y="1807.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (49 samples, 0.01%)</title><rect x="3.1144%" y="1797" width="0.0130%" height="15" fill="rgb(249,174,33)" fg:x="11784" fg:w="49"/><text x="3.3644%" y="1807.50"></text></g><g><title>core::ops::function::FnMut::call_mut (41 samples, 0.01%)</title><rect x="3.1165%" y="1781" width="0.0108%" height="15" fill="rgb(233,201,37)" fg:x="11792" fg:w="41"/><text x="3.3665%" y="1791.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (41 samples, 0.01%)</title><rect x="3.1165%" y="1765" width="0.0108%" height="15" fill="rgb(221,78,26)" fg:x="11792" fg:w="41"/><text x="3.3665%" y="1775.50"></text></g><g><title>tokio::runtime::context::budget (41 samples, 0.01%)</title><rect x="3.1165%" y="1749" width="0.0108%" height="15" fill="rgb(250,127,30)" fg:x="11792" fg:w="41"/><text x="3.3665%" y="1759.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (41 samples, 0.01%)</title><rect x="3.1165%" y="1733" width="0.0108%" height="15" fill="rgb(230,49,44)" fg:x="11792" fg:w="41"/><text x="3.3665%" y="1743.50"></text></g><g><title>tokio::io::ready::Ready::intersection (48 samples, 0.01%)</title><rect x="3.1921%" y="1781" width="0.0127%" height="15" fill="rgb(229,67,23)" fg:x="12078" fg:w="48"/><text x="3.4421%" y="1791.50"></text></g><g><title>tokio::io::ready::Ready::from_interest (46 samples, 0.01%)</title><rect x="3.1927%" y="1765" width="0.0122%" height="15" fill="rgb(249,83,47)" fg:x="12080" fg:w="46"/><text x="3.4427%" y="1775.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::future::future::Future&gt;::poll (297 samples, 0.08%)</title><rect x="3.1274%" y="1797" width="0.0785%" height="15" fill="rgb(215,43,3)" fg:x="11833" fg:w="297"/><text x="3.3774%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (83 samples, 0.02%)</title><rect x="3.4173%" y="1781" width="0.0219%" height="15" fill="rgb(238,154,13)" fg:x="12930" fg:w="83"/><text x="3.6673%" y="1791.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (83 samples, 0.02%)</title><rect x="3.4173%" y="1765" width="0.0219%" height="15" fill="rgb(219,56,2)" fg:x="12930" fg:w="83"/><text x="3.6673%" y="1775.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (67 samples, 0.02%)</title><rect x="3.4215%" y="1749" width="0.0177%" height="15" fill="rgb(233,0,4)" fg:x="12946" fg:w="67"/><text x="3.6715%" y="1759.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (375 samples, 0.10%)</title><rect x="3.4569%" y="1733" width="0.0991%" height="15" fill="rgb(235,30,7)" fg:x="13080" fg:w="375"/><text x="3.7069%" y="1743.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (375 samples, 0.10%)</title><rect x="3.4569%" y="1717" width="0.0991%" height="15" fill="rgb(250,79,13)" fg:x="13080" fg:w="375"/><text x="3.7069%" y="1727.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (493 samples, 0.13%)</title><rect x="3.4392%" y="1781" width="0.1303%" height="15" fill="rgb(211,146,34)" fg:x="13013" fg:w="493"/><text x="3.6892%" y="1791.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (463 samples, 0.12%)</title><rect x="3.4472%" y="1765" width="0.1224%" height="15" fill="rgb(228,22,38)" fg:x="13043" fg:w="463"/><text x="3.6972%" y="1775.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (443 samples, 0.12%)</title><rect x="3.4524%" y="1749" width="0.1171%" height="15" fill="rgb(235,168,5)" fg:x="13063" fg:w="443"/><text x="3.7024%" y="1759.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (51 samples, 0.01%)</title><rect x="3.5561%" y="1733" width="0.0135%" height="15" fill="rgb(221,155,16)" fg:x="13455" fg:w="51"/><text x="3.8061%" y="1743.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (51 samples, 0.01%)</title><rect x="3.5561%" y="1717" width="0.0135%" height="15" fill="rgb(215,215,53)" fg:x="13455" fg:w="51"/><text x="3.8061%" y="1727.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::ops::drop::Drop&gt;::drop (1,400 samples, 0.37%)</title><rect x="3.2059%" y="1797" width="0.3700%" height="15" fill="rgb(223,4,10)" fg:x="12130" fg:w="1400"/><text x="3.4559%" y="1807.50"></text></g><g><title>&lt;torrust_tracker_primitives::info_hash::InfoHash as core::fmt::Display&gt;::fmt (50 samples, 0.01%)</title><rect x="3.5759%" y="1797" width="0.0132%" height="15" fill="rgb(234,103,6)" fg:x="13530" fg:w="50"/><text x="3.8259%" y="1807.50"></text></g><g><title>[[vdso]] (3,493 samples, 0.92%)</title><rect x="3.5891%" y="1797" width="0.9232%" height="15" fill="rgb(227,97,0)" fg:x="13580" fg:w="3493"/><text x="3.8391%" y="1807.50"></text></g><g><title>[profiling] (68 samples, 0.02%)</title><rect x="4.5131%" y="1797" width="0.0180%" height="15" fill="rgb(234,150,53)" fg:x="17076" fg:w="68"/><text x="4.7631%" y="1807.50"></text></g><g><title>core::fmt::write (51 samples, 0.01%)</title><rect x="4.5175%" y="1781" width="0.0135%" height="15" fill="rgb(228,201,54)" fg:x="17093" fg:w="51"/><text x="4.7675%" y="1791.50"></text></g><g><title>__GI___clock_gettime (73 samples, 0.02%)</title><rect x="4.5310%" y="1797" width="0.0193%" height="15" fill="rgb(222,22,37)" fg:x="17144" fg:w="73"/><text x="4.7810%" y="1807.50"></text></g><g><title>__GI___libc_free (449 samples, 0.12%)</title><rect x="4.5503%" y="1797" width="0.1187%" height="15" fill="rgb(237,53,32)" fg:x="17217" fg:w="449"/><text x="4.8003%" y="1807.50"></text></g><g><title>arena_for_chunk (85 samples, 0.02%)</title><rect x="4.6465%" y="1781" width="0.0225%" height="15" fill="rgb(233,25,53)" fg:x="17581" fg:w="85"/><text x="4.8965%" y="1791.50"></text></g><g><title>arena_for_chunk (71 samples, 0.02%)</title><rect x="4.6502%" y="1765" width="0.0188%" height="15" fill="rgb(210,40,34)" fg:x="17595" fg:w="71"/><text x="4.9002%" y="1775.50"></text></g><g><title>heap_for_ptr (67 samples, 0.02%)</title><rect x="4.6513%" y="1749" width="0.0177%" height="15" fill="rgb(241,220,44)" fg:x="17599" fg:w="67"/><text x="4.9013%" y="1759.50"></text></g><g><title>heap_max_size (49 samples, 0.01%)</title><rect x="4.6560%" y="1733" width="0.0130%" height="15" fill="rgb(235,28,35)" fg:x="17617" fg:w="49"/><text x="4.9060%" y="1743.50"></text></g><g><title>__GI___libc_malloc (293 samples, 0.08%)</title><rect x="4.6690%" y="1797" width="0.0774%" height="15" fill="rgb(210,56,17)" fg:x="17666" fg:w="293"/><text x="4.9190%" y="1807.50"></text></g><g><title>__GI___lll_lock_wait_private (144 samples, 0.04%)</title><rect x="4.7586%" y="1797" width="0.0381%" height="15" fill="rgb(224,130,29)" fg:x="18005" fg:w="144"/><text x="5.0086%" y="1807.50"></text></g><g><title>futex_wait (95 samples, 0.03%)</title><rect x="4.7715%" y="1781" width="0.0251%" height="15" fill="rgb(235,212,8)" fg:x="18054" fg:w="95"/><text x="5.0215%" y="1791.50"></text></g><g><title>__GI___lll_lock_wake_private (479 samples, 0.13%)</title><rect x="4.7966%" y="1797" width="0.1266%" height="15" fill="rgb(223,33,50)" fg:x="18149" fg:w="479"/><text x="5.0466%" y="1807.50"></text></g><g><title>__GI___pthread_disable_asynccancel (90 samples, 0.02%)</title><rect x="4.9232%" y="1797" width="0.0238%" height="15" fill="rgb(219,149,13)" fg:x="18628" fg:w="90"/><text x="5.1732%" y="1807.50"></text></g><g><title>__GI_getsockname (1,281 samples, 0.34%)</title><rect x="4.9470%" y="1797" width="0.3386%" height="15" fill="rgb(250,156,29)" fg:x="18718" fg:w="1281"/><text x="5.1970%" y="1807.50"></text></g><g><title>__libc_calloc (42 samples, 0.01%)</title><rect x="5.2906%" y="1797" width="0.0111%" height="15" fill="rgb(216,193,19)" fg:x="20018" fg:w="42"/><text x="5.5406%" y="1807.50"></text></g><g><title>__libc_recvfrom (121 samples, 0.03%)</title><rect x="5.3017%" y="1797" width="0.0320%" height="15" fill="rgb(216,135,14)" fg:x="20060" fg:w="121"/><text x="5.5517%" y="1807.50"></text></g><g><title>__libc_sendto (602 samples, 0.16%)</title><rect x="5.3337%" y="1797" width="0.1591%" height="15" fill="rgb(241,47,5)" fg:x="20181" fg:w="602"/><text x="5.5837%" y="1807.50"></text></g><g><title>__memchr_evex (56 samples, 0.01%)</title><rect x="5.4928%" y="1797" width="0.0148%" height="15" fill="rgb(233,42,35)" fg:x="20783" fg:w="56"/><text x="5.7428%" y="1807.50"></text></g><g><title>__memcmp_evex_movbe (1,539 samples, 0.41%)</title><rect x="5.5076%" y="1797" width="0.4067%" height="15" fill="rgb(231,13,6)" fg:x="20839" fg:w="1539"/><text x="5.7576%" y="1807.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (1,154 samples, 0.30%)</title><rect x="5.9143%" y="1797" width="0.3050%" height="15" fill="rgb(207,181,40)" fg:x="22378" fg:w="1154"/><text x="6.1643%" y="1807.50"></text></g><g><title>__memset_avx512_unaligned_erms (1,515 samples, 0.40%)</title><rect x="6.2193%" y="1797" width="0.4004%" height="15" fill="rgb(254,173,49)" fg:x="23532" fg:w="1515"/><text x="6.4693%" y="1807.50"></text></g><g><title>__posix_memalign (131 samples, 0.03%)</title><rect x="6.6197%" y="1797" width="0.0346%" height="15" fill="rgb(221,1,38)" fg:x="25047" fg:w="131"/><text x="6.8697%" y="1807.50"></text></g><g><title>__posix_memalign (85 samples, 0.02%)</title><rect x="6.6319%" y="1781" width="0.0225%" height="15" fill="rgb(206,124,46)" fg:x="25093" fg:w="85"/><text x="6.8819%" y="1791.50"></text></g><g><title>_mid_memalign (85 samples, 0.02%)</title><rect x="6.6319%" y="1765" width="0.0225%" height="15" fill="rgb(249,21,11)" fg:x="25093" fg:w="85"/><text x="6.8819%" y="1775.50"></text></g><g><title>_int_free (1,524 samples, 0.40%)</title><rect x="6.6607%" y="1797" width="0.4028%" height="15" fill="rgb(222,201,40)" fg:x="25202" fg:w="1524"/><text x="6.9107%" y="1807.50"></text></g><g><title>_int_malloc (1,484 samples, 0.39%)</title><rect x="7.0635%" y="1797" width="0.3922%" height="15" fill="rgb(235,61,29)" fg:x="26726" fg:w="1484"/><text x="7.3135%" y="1807.50"></text></g><g><title>_int_memalign (156 samples, 0.04%)</title><rect x="7.4557%" y="1797" width="0.0412%" height="15" fill="rgb(219,207,3)" fg:x="28210" fg:w="156"/><text x="7.7057%" y="1807.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (82 samples, 0.02%)</title><rect x="7.5133%" y="1781" width="0.0217%" height="15" fill="rgb(222,56,46)" fg:x="28428" fg:w="82"/><text x="7.7633%" y="1791.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (64 samples, 0.02%)</title><rect x="7.5181%" y="1765" width="0.0169%" height="15" fill="rgb(239,76,54)" fg:x="28446" fg:w="64"/><text x="7.7681%" y="1775.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (64 samples, 0.02%)</title><rect x="7.5181%" y="1749" width="0.0169%" height="15" fill="rgb(231,124,27)" fg:x="28446" fg:w="64"/><text x="7.7681%" y="1759.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (64 samples, 0.02%)</title><rect x="7.5181%" y="1733" width="0.0169%" height="15" fill="rgb(249,195,6)" fg:x="28446" fg:w="64"/><text x="7.7681%" y="1743.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (161 samples, 0.04%)</title><rect x="7.4988%" y="1797" width="0.0426%" height="15" fill="rgb(237,174,47)" fg:x="28373" fg:w="161"/><text x="7.7488%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (44 samples, 0.01%)</title><rect x="7.5413%" y="1797" width="0.0116%" height="15" fill="rgb(206,201,31)" fg:x="28534" fg:w="44"/><text x="7.7913%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (146 samples, 0.04%)</title><rect x="7.5529%" y="1797" width="0.0386%" height="15" fill="rgb(231,57,52)" fg:x="28578" fg:w="146"/><text x="7.8029%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (101 samples, 0.03%)</title><rect x="7.5648%" y="1781" width="0.0267%" height="15" fill="rgb(248,177,22)" fg:x="28623" fg:w="101"/><text x="7.8148%" y="1791.50"></text></g><g><title>alloc::raw_vec::finish_grow (199 samples, 0.05%)</title><rect x="7.5915%" y="1797" width="0.0526%" height="15" fill="rgb(215,211,37)" fg:x="28724" fg:w="199"/><text x="7.8415%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;aquatic_udp_protocol::response::Response&gt; (166 samples, 0.04%)</title><rect x="7.6758%" y="1797" width="0.0439%" height="15" fill="rgb(241,128,51)" fg:x="29043" fg:w="166"/><text x="7.9258%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::net::udp::UdpSocket::send_to&lt;&amp;core::net::socket_addr::SocketAddr&gt;::{{closure}}&gt; (57 samples, 0.02%)</title><rect x="7.7197%" y="1797" width="0.0151%" height="15" fill="rgb(227,165,31)" fg:x="29209" fg:w="57"/><text x="7.9697%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;torrust_tracker::servers::udp::server::Udp::process_request::{{closure}}&gt;&gt; (373 samples, 0.10%)</title><rect x="7.7348%" y="1797" width="0.0986%" height="15" fill="rgb(228,167,24)" fg:x="29266" fg:w="373"/><text x="7.9848%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;torrust_tracker::servers::udp::server::Udp::send_response::{{closure}}&gt; (61 samples, 0.02%)</title><rect x="7.8717%" y="1797" width="0.0161%" height="15" fill="rgb(228,143,12)" fg:x="29784" fg:w="61"/><text x="8.1217%" y="1807.50"></text></g><g><title>malloc_consolidate (373 samples, 0.10%)</title><rect x="7.8976%" y="1797" width="0.0986%" height="15" fill="rgb(249,149,8)" fg:x="29882" fg:w="373"/><text x="8.1476%" y="1807.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (62 samples, 0.02%)</title><rect x="8.0215%" y="1733" width="0.0164%" height="15" fill="rgb(243,35,44)" fg:x="30351" fg:w="62"/><text x="8.2715%" y="1743.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (62 samples, 0.02%)</title><rect x="8.0215%" y="1717" width="0.0164%" height="15" fill="rgb(246,89,9)" fg:x="30351" fg:w="62"/><text x="8.2715%" y="1727.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (62 samples, 0.02%)</title><rect x="8.0215%" y="1701" width="0.0164%" height="15" fill="rgb(233,213,13)" fg:x="30351" fg:w="62"/><text x="8.2715%" y="1711.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (62 samples, 0.02%)</title><rect x="8.0215%" y="1685" width="0.0164%" height="15" fill="rgb(233,141,41)" fg:x="30351" fg:w="62"/><text x="8.2715%" y="1695.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (46 samples, 0.01%)</title><rect x="8.0424%" y="1733" width="0.0122%" height="15" fill="rgb(239,167,4)" fg:x="30430" fg:w="46"/><text x="8.2924%" y="1743.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (46 samples, 0.01%)</title><rect x="8.0424%" y="1717" width="0.0122%" height="15" fill="rgb(209,217,16)" fg:x="30430" fg:w="46"/><text x="8.2924%" y="1727.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (46 samples, 0.01%)</title><rect x="8.0424%" y="1701" width="0.0122%" height="15" fill="rgb(219,88,35)" fg:x="30430" fg:w="46"/><text x="8.2924%" y="1711.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (40 samples, 0.01%)</title><rect x="8.0546%" y="1733" width="0.0106%" height="15" fill="rgb(220,193,23)" fg:x="30476" fg:w="40"/><text x="8.3046%" y="1743.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (40 samples, 0.01%)</title><rect x="8.0546%" y="1717" width="0.0106%" height="15" fill="rgb(230,90,52)" fg:x="30476" fg:w="40"/><text x="8.3046%" y="1727.50"></text></g><g><title>rand_chacha::guts::round (244 samples, 0.06%)</title><rect x="8.0215%" y="1749" width="0.0645%" height="15" fill="rgb(252,106,19)" fg:x="30351" fg:w="244"/><text x="8.2715%" y="1759.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (45 samples, 0.01%)</title><rect x="8.0741%" y="1733" width="0.0119%" height="15" fill="rgb(206,74,20)" fg:x="30550" fg:w="45"/><text x="8.3241%" y="1743.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (45 samples, 0.01%)</title><rect x="8.0741%" y="1717" width="0.0119%" height="15" fill="rgb(230,138,44)" fg:x="30550" fg:w="45"/><text x="8.3241%" y="1727.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (45 samples, 0.01%)</title><rect x="8.0741%" y="1701" width="0.0119%" height="15" fill="rgb(235,182,43)" fg:x="30550" fg:w="45"/><text x="8.3241%" y="1711.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (346 samples, 0.09%)</title><rect x="7.9999%" y="1797" width="0.0914%" height="15" fill="rgb(242,16,51)" fg:x="30269" fg:w="346"/><text x="8.2499%" y="1807.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (345 samples, 0.09%)</title><rect x="8.0001%" y="1781" width="0.0912%" height="15" fill="rgb(248,9,4)" fg:x="30270" fg:w="345"/><text x="8.2501%" y="1791.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (345 samples, 0.09%)</title><rect x="8.0001%" y="1765" width="0.0912%" height="15" fill="rgb(210,31,22)" fg:x="30270" fg:w="345"/><text x="8.2501%" y="1775.50"></text></g><g><title>tokio::runtime::context::with_scheduler (45 samples, 0.01%)</title><rect x="8.1146%" y="1797" width="0.0119%" height="15" fill="rgb(239,54,39)" fg:x="30703" fg:w="45"/><text x="8.3646%" y="1807.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (50 samples, 0.01%)</title><rect x="8.1265%" y="1797" width="0.0132%" height="15" fill="rgb(230,99,41)" fg:x="30748" fg:w="50"/><text x="8.3765%" y="1807.50"></text></g><g><title>__entry_text_start (235 samples, 0.06%)</title><rect x="8.3641%" y="1781" width="0.0621%" height="15" fill="rgb(253,106,12)" fg:x="31647" fg:w="235"/><text x="8.6141%" y="1791.50"></text></g><g><title>tokio::runtime::io::registration::Registration::readiness::{{closure}} (2,041 samples, 0.54%)</title><rect x="8.1397%" y="1797" width="0.5394%" height="15" fill="rgb(213,46,41)" fg:x="30798" fg:w="2041"/><text x="8.3897%" y="1807.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::readiness::{{closure}} (957 samples, 0.25%)</title><rect x="8.4262%" y="1781" width="0.2529%" height="15" fill="rgb(215,133,35)" fg:x="31882" fg:w="957"/><text x="8.6762%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::io::scheduled_io::Readiness&gt; (255 samples, 0.07%)</title><rect x="8.6117%" y="1765" width="0.0674%" height="15" fill="rgb(213,28,5)" fg:x="32584" fg:w="255"/><text x="8.8617%" y="1775.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (100 samples, 0.03%)</title><rect x="8.6960%" y="1765" width="0.0264%" height="15" fill="rgb(215,77,49)" fg:x="32903" fg:w="100"/><text x="8.9460%" y="1775.50"></text></g><g><title>core::sync::atomic::atomic_add (100 samples, 0.03%)</title><rect x="8.6960%" y="1749" width="0.0264%" height="15" fill="rgb(248,100,22)" fg:x="32903" fg:w="100"/><text x="8.9460%" y="1759.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (155 samples, 0.04%)</title><rect x="8.6820%" y="1797" width="0.0410%" height="15" fill="rgb(208,67,9)" fg:x="32850" fg:w="155"/><text x="8.9320%" y="1807.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (108 samples, 0.03%)</title><rect x="8.6944%" y="1781" width="0.0285%" height="15" fill="rgb(219,133,21)" fg:x="32897" fg:w="108"/><text x="8.9444%" y="1791.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (84 samples, 0.02%)</title><rect x="8.7230%" y="1797" width="0.0222%" height="15" fill="rgb(246,46,29)" fg:x="33005" fg:w="84"/><text x="8.9730%" y="1807.50"></text></g><g><title>tokio::runtime::task::core::Header::get_owner_id (38 samples, 0.01%)</title><rect x="8.7465%" y="1765" width="0.0100%" height="15" fill="rgb(246,185,52)" fg:x="33094" fg:w="38"/><text x="8.9965%" y="1775.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (38 samples, 0.01%)</title><rect x="8.7465%" y="1749" width="0.0100%" height="15" fill="rgb(252,136,11)" fg:x="33094" fg:w="38"/><text x="8.9965%" y="1759.50"></text></g><g><title>tokio::runtime::task::core::Header::get_owner_id::{{closure}} (38 samples, 0.01%)</title><rect x="8.7465%" y="1733" width="0.0100%" height="15" fill="rgb(219,138,53)" fg:x="33094" fg:w="38"/><text x="8.9965%" y="1743.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::release (43 samples, 0.01%)</title><rect x="8.7454%" y="1797" width="0.0114%" height="15" fill="rgb(211,51,23)" fg:x="33090" fg:w="43"/><text x="8.9954%" y="1807.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::remove (39 samples, 0.01%)</title><rect x="8.7465%" y="1781" width="0.0103%" height="15" fill="rgb(247,221,28)" fg:x="33094" fg:w="39"/><text x="8.9965%" y="1791.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::RequestId::make (173 samples, 0.05%)</title><rect x="8.8282%" y="1717" width="0.0457%" height="15" fill="rgb(251,222,45)" fg:x="33403" fg:w="173"/><text x="9.0782%" y="1727.50"></text></g><g><title>__entry_text_start (171 samples, 0.05%)</title><rect x="8.8287%" y="1701" width="0.0452%" height="15" fill="rgb(217,162,53)" fg:x="33405" fg:w="171"/><text x="9.0787%" y="1711.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (293 samples, 0.08%)</title><rect x="8.7988%" y="1781" width="0.0774%" height="15" fill="rgb(229,93,14)" fg:x="33292" fg:w="293"/><text x="9.0488%" y="1791.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage::{{closure}} (287 samples, 0.08%)</title><rect x="8.8004%" y="1765" width="0.0759%" height="15" fill="rgb(209,67,49)" fg:x="33298" fg:w="287"/><text x="9.0504%" y="1775.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::process_valid_request::{{closure}} (230 samples, 0.06%)</title><rect x="8.8155%" y="1749" width="0.0608%" height="15" fill="rgb(213,87,29)" fg:x="33355" fg:w="230"/><text x="9.0655%" y="1759.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_packet::{{closure}} (230 samples, 0.06%)</title><rect x="8.8155%" y="1733" width="0.0608%" height="15" fill="rgb(205,151,52)" fg:x="33355" fg:w="230"/><text x="9.0655%" y="1743.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (456 samples, 0.12%)</title><rect x="8.7637%" y="1797" width="0.1205%" height="15" fill="rgb(253,215,39)" fg:x="33159" fg:w="456"/><text x="9.0137%" y="1807.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_xor (54 samples, 0.01%)</title><rect x="8.8884%" y="1765" width="0.0143%" height="15" fill="rgb(221,220,41)" fg:x="33631" fg:w="54"/><text x="9.1384%" y="1775.50"></text></g><g><title>core::sync::atomic::atomic_xor (54 samples, 0.01%)</title><rect x="8.8884%" y="1749" width="0.0143%" height="15" fill="rgb(218,133,21)" fg:x="33631" fg:w="54"/><text x="9.1384%" y="1759.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (73 samples, 0.02%)</title><rect x="8.8842%" y="1797" width="0.0193%" height="15" fill="rgb(221,193,43)" fg:x="33615" fg:w="73"/><text x="9.1342%" y="1807.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_complete (57 samples, 0.02%)</title><rect x="8.8884%" y="1781" width="0.0151%" height="15" fill="rgb(240,128,52)" fg:x="33631" fg:w="57"/><text x="9.1384%" y="1791.50"></text></g><g><title>std::sync::poison::Flag::done (103 samples, 0.03%)</title><rect x="8.9405%" y="1717" width="0.0272%" height="15" fill="rgb(253,114,12)" fg:x="33828" fg:w="103"/><text x="9.1905%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::util::sharded_list::ShardGuard&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;,tokio::runtime::task::core::Header&gt;&gt; (136 samples, 0.04%)</title><rect x="8.9392%" y="1765" width="0.0359%" height="15" fill="rgb(215,223,47)" fg:x="33823" fg:w="136"/><text x="9.1892%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::util::linked_list::LinkedList&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;,tokio::runtime::task::core::Header&gt;&gt;&gt; (136 samples, 0.04%)</title><rect x="8.9392%" y="1749" width="0.0359%" height="15" fill="rgb(248,225,23)" fg:x="33823" fg:w="136"/><text x="9.1892%" y="1759.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (136 samples, 0.04%)</title><rect x="8.9392%" y="1733" width="0.0359%" height="15" fill="rgb(250,108,0)" fg:x="33823" fg:w="136"/><text x="9.1892%" y="1743.50"></text></g><g><title>tokio::util::sharded_list::ShardGuard&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push (242 samples, 0.06%)</title><rect x="8.9320%" y="1781" width="0.0640%" height="15" fill="rgb(228,208,7)" fg:x="33796" fg:w="242"/><text x="9.1820%" y="1791.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push_front (60 samples, 0.02%)</title><rect x="8.9801%" y="1765" width="0.0159%" height="15" fill="rgb(244,45,10)" fg:x="33978" fg:w="60"/><text x="9.2301%" y="1775.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (101 samples, 0.03%)</title><rect x="8.9970%" y="1701" width="0.0267%" height="15" fill="rgb(207,125,25)" fg:x="34042" fg:w="101"/><text x="9.2470%" y="1711.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (101 samples, 0.03%)</title><rect x="8.9970%" y="1685" width="0.0267%" height="15" fill="rgb(210,195,18)" fg:x="34042" fg:w="101"/><text x="9.2470%" y="1695.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind_inner (599 samples, 0.16%)</title><rect x="8.9051%" y="1797" width="0.1583%" height="15" fill="rgb(249,80,12)" fg:x="33694" fg:w="599"/><text x="9.1551%" y="1807.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::lock_shard (255 samples, 0.07%)</title><rect x="8.9960%" y="1781" width="0.0674%" height="15" fill="rgb(221,65,9)" fg:x="34038" fg:w="255"/><text x="9.2460%" y="1791.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::shard_inner (255 samples, 0.07%)</title><rect x="8.9960%" y="1765" width="0.0674%" height="15" fill="rgb(235,49,36)" fg:x="34038" fg:w="255"/><text x="9.2460%" y="1775.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (252 samples, 0.07%)</title><rect x="8.9968%" y="1749" width="0.0666%" height="15" fill="rgb(225,32,20)" fg:x="34041" fg:w="252"/><text x="9.2468%" y="1759.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (252 samples, 0.07%)</title><rect x="8.9968%" y="1733" width="0.0666%" height="15" fill="rgb(215,141,46)" fg:x="34041" fg:w="252"/><text x="9.2468%" y="1743.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (251 samples, 0.07%)</title><rect x="8.9970%" y="1717" width="0.0663%" height="15" fill="rgb(250,160,47)" fg:x="34042" fg:w="251"/><text x="9.2470%" y="1727.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (150 samples, 0.04%)</title><rect x="9.0237%" y="1701" width="0.0396%" height="15" fill="rgb(216,222,40)" fg:x="34143" fg:w="150"/><text x="9.2737%" y="1711.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (150 samples, 0.04%)</title><rect x="9.0237%" y="1685" width="0.0396%" height="15" fill="rgb(234,217,39)" fg:x="34143" fg:w="150"/><text x="9.2737%" y="1695.50"></text></g><g><title>std::sync::poison::Flag::done (100 samples, 0.03%)</title><rect x="9.1228%" y="1333" width="0.0264%" height="15" fill="rgb(207,178,40)" fg:x="34518" fg:w="100"/><text x="9.3728%" y="1343.50"></text></g><g><title>std::thread::panicking (55 samples, 0.01%)</title><rect x="9.1347%" y="1317" width="0.0145%" height="15" fill="rgb(221,136,13)" fg:x="34563" fg:w="55"/><text x="9.3847%" y="1327.50"></text></g><g><title>std::panicking::panicking (55 samples, 0.01%)</title><rect x="9.1347%" y="1301" width="0.0145%" height="15" fill="rgb(249,199,10)" fg:x="34563" fg:w="55"/><text x="9.3847%" y="1311.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (55 samples, 0.01%)</title><rect x="9.1347%" y="1285" width="0.0145%" height="15" fill="rgb(249,222,13)" fg:x="34563" fg:w="55"/><text x="9.3847%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (173 samples, 0.05%)</title><rect x="9.1228%" y="1365" width="0.0457%" height="15" fill="rgb(244,185,38)" fg:x="34518" fg:w="173"/><text x="9.3728%" y="1375.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (173 samples, 0.05%)</title><rect x="9.1228%" y="1349" width="0.0457%" height="15" fill="rgb(236,202,9)" fg:x="34518" fg:w="173"/><text x="9.3728%" y="1359.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (73 samples, 0.02%)</title><rect x="9.1493%" y="1333" width="0.0193%" height="15" fill="rgb(250,229,37)" fg:x="34618" fg:w="73"/><text x="9.3993%" y="1343.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::{{closure}} (293 samples, 0.08%)</title><rect x="9.2225%" y="1317" width="0.0774%" height="15" fill="rgb(206,174,23)" fg:x="34895" fg:w="293"/><text x="9.4725%" y="1327.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (293 samples, 0.08%)</title><rect x="9.2225%" y="1301" width="0.0774%" height="15" fill="rgb(211,33,43)" fg:x="34895" fg:w="293"/><text x="9.4725%" y="1311.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (631 samples, 0.17%)</title><rect x="9.1686%" y="1365" width="0.1668%" height="15" fill="rgb(245,58,50)" fg:x="34691" fg:w="631"/><text x="9.4186%" y="1375.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (631 samples, 0.17%)</title><rect x="9.1686%" y="1349" width="0.1668%" height="15" fill="rgb(244,68,36)" fg:x="34691" fg:w="631"/><text x="9.4186%" y="1359.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (631 samples, 0.17%)</title><rect x="9.1686%" y="1333" width="0.1668%" height="15" fill="rgb(232,229,15)" fg:x="34691" fg:w="631"/><text x="9.4186%" y="1343.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (134 samples, 0.04%)</title><rect x="9.2999%" y="1317" width="0.0354%" height="15" fill="rgb(254,30,23)" fg:x="35188" fg:w="134"/><text x="9.5499%" y="1327.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (134 samples, 0.04%)</title><rect x="9.2999%" y="1301" width="0.0354%" height="15" fill="rgb(235,160,14)" fg:x="35188" fg:w="134"/><text x="9.5499%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::is_parked (844 samples, 0.22%)</title><rect x="9.1223%" y="1381" width="0.2231%" height="15" fill="rgb(212,155,44)" fg:x="34516" fg:w="844"/><text x="9.3723%" y="1391.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (38 samples, 0.01%)</title><rect x="9.3353%" y="1365" width="0.0100%" height="15" fill="rgb(226,2,50)" fg:x="35322" fg:w="38"/><text x="9.5853%" y="1375.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_parked (858 samples, 0.23%)</title><rect x="9.1207%" y="1397" width="0.2268%" height="15" fill="rgb(234,177,6)" fg:x="34510" fg:w="858"/><text x="9.3707%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (189 samples, 0.05%)</title><rect x="9.3633%" y="1365" width="0.0500%" height="15" fill="rgb(217,24,9)" fg:x="35428" fg:w="189"/><text x="9.6133%" y="1375.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (189 samples, 0.05%)</title><rect x="9.3633%" y="1349" width="0.0500%" height="15" fill="rgb(220,13,46)" fg:x="35428" fg:w="189"/><text x="9.6133%" y="1359.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (181 samples, 0.05%)</title><rect x="9.3655%" y="1333" width="0.0478%" height="15" fill="rgb(239,221,27)" fg:x="35436" fg:w="181"/><text x="9.6155%" y="1343.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (65 samples, 0.02%)</title><rect x="9.3961%" y="1317" width="0.0172%" height="15" fill="rgb(222,198,25)" fg:x="35552" fg:w="65"/><text x="9.6461%" y="1327.50"></text></g><g><title>core::sync::atomic::atomic_swap (65 samples, 0.02%)</title><rect x="9.3961%" y="1301" width="0.0172%" height="15" fill="rgb(211,99,13)" fg:x="35552" fg:w="65"/><text x="9.6461%" y="1311.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (44 samples, 0.01%)</title><rect x="9.4133%" y="1365" width="0.0116%" height="15" fill="rgb(232,111,31)" fg:x="35617" fg:w="44"/><text x="9.6633%" y="1375.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (43 samples, 0.01%)</title><rect x="9.4136%" y="1349" width="0.0114%" height="15" fill="rgb(245,82,37)" fg:x="35618" fg:w="43"/><text x="9.6636%" y="1359.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (38 samples, 0.01%)</title><rect x="9.4149%" y="1333" width="0.0100%" height="15" fill="rgb(227,149,46)" fg:x="35623" fg:w="38"/><text x="9.6649%" y="1343.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (253 samples, 0.07%)</title><rect x="9.3620%" y="1381" width="0.0669%" height="15" fill="rgb(218,36,50)" fg:x="35423" fg:w="253"/><text x="9.6120%" y="1391.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (42 samples, 0.01%)</title><rect x="9.4503%" y="1365" width="0.0111%" height="15" fill="rgb(226,80,48)" fg:x="35757" fg:w="42"/><text x="9.7003%" y="1375.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (42 samples, 0.01%)</title><rect x="9.4503%" y="1349" width="0.0111%" height="15" fill="rgb(238,224,15)" fg:x="35757" fg:w="42"/><text x="9.7003%" y="1359.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (48 samples, 0.01%)</title><rect x="9.4659%" y="1349" width="0.0127%" height="15" fill="rgb(241,136,10)" fg:x="35816" fg:w="48"/><text x="9.7159%" y="1359.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (48 samples, 0.01%)</title><rect x="9.4659%" y="1333" width="0.0127%" height="15" fill="rgb(208,32,45)" fg:x="35816" fg:w="48"/><text x="9.7159%" y="1343.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (48 samples, 0.01%)</title><rect x="9.4659%" y="1317" width="0.0127%" height="15" fill="rgb(207,135,9)" fg:x="35816" fg:w="48"/><text x="9.7159%" y="1327.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (44 samples, 0.01%)</title><rect x="9.4971%" y="1317" width="0.0116%" height="15" fill="rgb(206,86,44)" fg:x="35934" fg:w="44"/><text x="9.7471%" y="1327.50"></text></g><g><title>core::sync::atomic::atomic_load (44 samples, 0.01%)</title><rect x="9.4971%" y="1301" width="0.0116%" height="15" fill="rgb(245,177,15)" fg:x="35934" fg:w="44"/><text x="9.7471%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_if_work_pending (356 samples, 0.09%)</title><rect x="9.4289%" y="1381" width="0.0941%" height="15" fill="rgb(206,64,50)" fg:x="35676" fg:w="356"/><text x="9.6789%" y="1391.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::is_empty (216 samples, 0.06%)</title><rect x="9.4659%" y="1365" width="0.0571%" height="15" fill="rgb(234,36,40)" fg:x="35816" fg:w="216"/><text x="9.7159%" y="1375.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::is_empty (168 samples, 0.04%)</title><rect x="9.4786%" y="1349" width="0.0444%" height="15" fill="rgb(213,64,8)" fg:x="35864" fg:w="168"/><text x="9.7286%" y="1359.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::len (98 samples, 0.03%)</title><rect x="9.4971%" y="1333" width="0.0259%" height="15" fill="rgb(210,75,36)" fg:x="35934" fg:w="98"/><text x="9.7471%" y="1343.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (54 samples, 0.01%)</title><rect x="9.5087%" y="1317" width="0.0143%" height="15" fill="rgb(229,88,21)" fg:x="35978" fg:w="54"/><text x="9.7587%" y="1327.50"></text></g><g><title>core::sync::atomic::atomic_load (54 samples, 0.01%)</title><rect x="9.5087%" y="1301" width="0.0143%" height="15" fill="rgb(252,204,47)" fg:x="35978" fg:w="54"/><text x="9.7587%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (1,635 samples, 0.43%)</title><rect x="9.0917%" y="1413" width="0.4321%" height="15" fill="rgb(208,77,27)" fg:x="34400" fg:w="1635"/><text x="9.3417%" y="1423.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_parked (667 samples, 0.18%)</title><rect x="9.3475%" y="1397" width="0.1763%" height="15" fill="rgb(221,76,26)" fg:x="35368" fg:w="667"/><text x="9.5975%" y="1407.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (66 samples, 0.02%)</title><rect x="9.5336%" y="1397" width="0.0174%" height="15" fill="rgb(225,139,18)" fg:x="36072" fg:w="66"/><text x="9.7836%" y="1407.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (61 samples, 0.02%)</title><rect x="9.5349%" y="1381" width="0.0161%" height="15" fill="rgb(230,137,11)" fg:x="36077" fg:w="61"/><text x="9.7849%" y="1391.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (96 samples, 0.03%)</title><rect x="9.5259%" y="1413" width="0.0254%" height="15" fill="rgb(212,28,1)" fg:x="36043" fg:w="96"/><text x="9.7759%" y="1423.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (1,751 samples, 0.46%)</title><rect x="9.0887%" y="1605" width="0.4628%" height="15" fill="rgb(248,164,17)" fg:x="34389" fg:w="1751"/><text x="9.3387%" y="1615.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}} (1,751 samples, 0.46%)</title><rect x="9.0887%" y="1589" width="0.4628%" height="15" fill="rgb(222,171,42)" fg:x="34389" fg:w="1751"/><text x="9.3387%" y="1599.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (1,751 samples, 0.46%)</title><rect x="9.0887%" y="1573" width="0.4628%" height="15" fill="rgb(243,84,45)" fg:x="34389" fg:w="1751"/><text x="9.3387%" y="1583.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (1,751 samples, 0.46%)</title><rect x="9.0887%" y="1557" width="0.4628%" height="15" fill="rgb(252,49,23)" fg:x="34389" fg:w="1751"/><text x="9.3387%" y="1567.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (1,751 samples, 0.46%)</title><rect x="9.0887%" y="1541" width="0.4628%" height="15" fill="rgb(215,19,7)" fg:x="34389" fg:w="1751"/><text x="9.3387%" y="1551.50"></text></g><g><title>tokio::runtime::context::set_scheduler (1,751 samples, 0.46%)</title><rect x="9.0887%" y="1525" width="0.4628%" height="15" fill="rgb(238,81,41)" fg:x="34389" fg:w="1751"/><text x="9.3387%" y="1535.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,751 samples, 0.46%)</title><rect x="9.0887%" y="1509" width="0.4628%" height="15" fill="rgb(210,199,37)" fg:x="34389" fg:w="1751"/><text x="9.3387%" y="1519.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,751 samples, 0.46%)</title><rect x="9.0887%" y="1493" width="0.4628%" height="15" fill="rgb(244,192,49)" fg:x="34389" fg:w="1751"/><text x="9.3387%" y="1503.50"></text></g><g><title>tokio::runtime::context::set_scheduler::{{closure}} (1,751 samples, 0.46%)</title><rect x="9.0887%" y="1477" width="0.4628%" height="15" fill="rgb(226,211,11)" fg:x="34389" fg:w="1751"/><text x="9.3387%" y="1487.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (1,751 samples, 0.46%)</title><rect x="9.0887%" y="1461" width="0.4628%" height="15" fill="rgb(236,162,54)" fg:x="34389" fg:w="1751"/><text x="9.3387%" y="1471.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}::{{closure}} (1,751 samples, 0.46%)</title><rect x="9.0887%" y="1445" width="0.4628%" height="15" fill="rgb(220,229,9)" fg:x="34389" fg:w="1751"/><text x="9.3387%" y="1455.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (1,751 samples, 0.46%)</title><rect x="9.0887%" y="1429" width="0.4628%" height="15" fill="rgb(250,87,22)" fg:x="34389" fg:w="1751"/><text x="9.3387%" y="1439.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1,772 samples, 0.47%)</title><rect x="9.0843%" y="1637" width="0.4683%" height="15" fill="rgb(239,43,17)" fg:x="34372" fg:w="1772"/><text x="9.3343%" y="1647.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (1,772 samples, 0.47%)</title><rect x="9.0843%" y="1621" width="0.4683%" height="15" fill="rgb(231,177,25)" fg:x="34372" fg:w="1772"/><text x="9.3343%" y="1631.50"></text></g><g><title>tokio::runtime::task::raw::poll (1,805 samples, 0.48%)</title><rect x="9.0792%" y="1797" width="0.4770%" height="15" fill="rgb(219,179,1)" fg:x="34353" fg:w="1805"/><text x="9.3292%" y="1807.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1,787 samples, 0.47%)</title><rect x="9.0840%" y="1781" width="0.4723%" height="15" fill="rgb(238,219,53)" fg:x="34371" fg:w="1787"/><text x="9.3340%" y="1791.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (1,787 samples, 0.47%)</title><rect x="9.0840%" y="1765" width="0.4723%" height="15" fill="rgb(232,167,36)" fg:x="34371" fg:w="1787"/><text x="9.3340%" y="1775.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (1,787 samples, 0.47%)</title><rect x="9.0840%" y="1749" width="0.4723%" height="15" fill="rgb(244,19,51)" fg:x="34371" fg:w="1787"/><text x="9.3340%" y="1759.50"></text></g><g><title>std::panic::catch_unwind (1,787 samples, 0.47%)</title><rect x="9.0840%" y="1733" width="0.4723%" height="15" fill="rgb(224,6,22)" fg:x="34371" fg:w="1787"/><text x="9.3340%" y="1743.50"></text></g><g><title>std::panicking::try (1,787 samples, 0.47%)</title><rect x="9.0840%" y="1717" width="0.4723%" height="15" fill="rgb(224,145,5)" fg:x="34371" fg:w="1787"/><text x="9.3340%" y="1727.50"></text></g><g><title>std::panicking::try::do_call (1,787 samples, 0.47%)</title><rect x="9.0840%" y="1701" width="0.4723%" height="15" fill="rgb(234,130,49)" fg:x="34371" fg:w="1787"/><text x="9.3340%" y="1711.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,787 samples, 0.47%)</title><rect x="9.0840%" y="1685" width="0.4723%" height="15" fill="rgb(254,6,2)" fg:x="34371" fg:w="1787"/><text x="9.3340%" y="1695.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (1,787 samples, 0.47%)</title><rect x="9.0840%" y="1669" width="0.4723%" height="15" fill="rgb(208,96,46)" fg:x="34371" fg:w="1787"/><text x="9.3340%" y="1679.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (1,787 samples, 0.47%)</title><rect x="9.0840%" y="1653" width="0.4723%" height="15" fill="rgb(239,3,39)" fg:x="34371" fg:w="1787"/><text x="9.3340%" y="1663.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (54 samples, 0.01%)</title><rect x="9.5716%" y="1781" width="0.0143%" height="15" fill="rgb(233,210,1)" fg:x="36216" fg:w="54"/><text x="9.8216%" y="1791.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (72 samples, 0.02%)</title><rect x="9.5692%" y="1797" width="0.0190%" height="15" fill="rgb(244,137,37)" fg:x="36207" fg:w="72"/><text x="9.8192%" y="1807.50"></text></g><g><title>torrust_tracker::core::Tracker::send_stats_event::{{closure}} (50 samples, 0.01%)</title><rect x="9.6017%" y="1797" width="0.0132%" height="15" fill="rgb(240,136,2)" fg:x="36330" fg:w="50"/><text x="9.8517%" y="1807.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (38 samples, 0.01%)</title><rect x="9.6287%" y="1733" width="0.0100%" height="15" fill="rgb(239,18,37)" fg:x="36432" fg:w="38"/><text x="9.8787%" y="1743.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (157 samples, 0.04%)</title><rect x="9.6208%" y="1781" width="0.0415%" height="15" fill="rgb(218,185,22)" fg:x="36402" fg:w="157"/><text x="9.8708%" y="1791.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (157 samples, 0.04%)</title><rect x="9.6208%" y="1765" width="0.0415%" height="15" fill="rgb(225,218,4)" fg:x="36402" fg:w="157"/><text x="9.8708%" y="1775.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (157 samples, 0.04%)</title><rect x="9.6208%" y="1749" width="0.0415%" height="15" fill="rgb(230,182,32)" fg:x="36402" fg:w="157"/><text x="9.8708%" y="1759.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (89 samples, 0.02%)</title><rect x="9.6387%" y="1733" width="0.0235%" height="15" fill="rgb(242,56,43)" fg:x="36470" fg:w="89"/><text x="9.8887%" y="1743.50"></text></g><g><title>&lt;torrust_tracker_clock::time_extent::TimeExtent as core::hash::Hash&gt;::hash (47 samples, 0.01%)</title><rect x="9.6628%" y="1781" width="0.0124%" height="15" fill="rgb(233,99,24)" fg:x="36561" fg:w="47"/><text x="9.9128%" y="1791.50"></text></g><g><title>torrust_tracker::servers::udp::connection_cookie::cookie_builder::build (265 samples, 0.07%)</title><rect x="9.6150%" y="1797" width="0.0700%" height="15" fill="rgb(234,209,42)" fg:x="36380" fg:w="265"/><text x="9.8650%" y="1807.50"></text></g><g><title>torrust_tracker::servers::udp::peer_builder::from_request (70 samples, 0.02%)</title><rect x="9.6874%" y="1797" width="0.0185%" height="15" fill="rgb(227,7,12)" fg:x="36654" fg:w="70"/><text x="9.9374%" y="1807.50"></text></g><g><title>torrust_tracker::servers::udp::request::AnnounceWrapper::new (101 samples, 0.03%)</title><rect x="9.7059%" y="1797" width="0.0267%" height="15" fill="rgb(245,203,43)" fg:x="36724" fg:w="101"/><text x="9.9559%" y="1807.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (74 samples, 0.02%)</title><rect x="9.7680%" y="1781" width="0.0196%" height="15" fill="rgb(238,205,33)" fg:x="36959" fg:w="74"/><text x="10.0180%" y="1791.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (48 samples, 0.01%)</title><rect x="9.7748%" y="1765" width="0.0127%" height="15" fill="rgb(231,56,7)" fg:x="36985" fg:w="48"/><text x="10.0248%" y="1775.50"></text></g><g><title>core::sync::atomic::atomic_add (48 samples, 0.01%)</title><rect x="9.7748%" y="1749" width="0.0127%" height="15" fill="rgb(244,186,29)" fg:x="36985" fg:w="48"/><text x="10.0248%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::net::udp::UdpSocket&gt;&gt; (88 samples, 0.02%)</title><rect x="9.8367%" y="1765" width="0.0233%" height="15" fill="rgb(234,111,31)" fg:x="37219" fg:w="88"/><text x="10.0867%" y="1775.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (88 samples, 0.02%)</title><rect x="9.8367%" y="1749" width="0.0233%" height="15" fill="rgb(241,149,10)" fg:x="37219" fg:w="88"/><text x="10.0867%" y="1759.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (52 samples, 0.01%)</title><rect x="9.8610%" y="1765" width="0.0137%" height="15" fill="rgb(249,206,44)" fg:x="37311" fg:w="52"/><text x="10.1110%" y="1775.50"></text></g><g><title>torrust_tracker::core::Tracker::update_torrent_with_peer_and_get_stats::{{closure}} (269 samples, 0.07%)</title><rect x="9.9133%" y="1717" width="0.0711%" height="15" fill="rgb(251,153,30)" fg:x="37509" fg:w="269"/><text x="10.1633%" y="1727.50"></text></g><g><title>torrust_tracker::core::Tracker::announce::{{closure}} (308 samples, 0.08%)</title><rect x="9.9070%" y="1733" width="0.0814%" height="15" fill="rgb(239,152,38)" fg:x="37485" fg:w="308"/><text x="10.1570%" y="1743.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_announce::{{closure}} (372 samples, 0.10%)</title><rect x="9.8938%" y="1749" width="0.0983%" height="15" fill="rgb(249,139,47)" fg:x="37435" fg:w="372"/><text x="10.1438%" y="1759.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_request::{{closure}} (448 samples, 0.12%)</title><rect x="9.8811%" y="1765" width="0.1184%" height="15" fill="rgb(244,64,35)" fg:x="37387" fg:w="448"/><text x="10.1311%" y="1775.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (73 samples, 0.02%)</title><rect x="10.0296%" y="1733" width="0.0193%" height="15" fill="rgb(216,46,15)" fg:x="37949" fg:w="73"/><text x="10.2796%" y="1743.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (69 samples, 0.02%)</title><rect x="10.0307%" y="1717" width="0.0182%" height="15" fill="rgb(250,74,19)" fg:x="37953" fg:w="69"/><text x="10.2807%" y="1727.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (41 samples, 0.01%)</title><rect x="10.0489%" y="1733" width="0.0108%" height="15" fill="rgb(249,42,33)" fg:x="38022" fg:w="41"/><text x="10.2989%" y="1743.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (182 samples, 0.05%)</title><rect x="10.0146%" y="1749" width="0.0481%" height="15" fill="rgb(242,149,17)" fg:x="37892" fg:w="182"/><text x="10.2646%" y="1759.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (91 samples, 0.02%)</title><rect x="10.0653%" y="1749" width="0.0241%" height="15" fill="rgb(244,29,21)" fg:x="38084" fg:w="91"/><text x="10.3153%" y="1759.50"></text></g><g><title>torrust_tracker_primitives::info_hash::InfoHash::to_hex_string (41 samples, 0.01%)</title><rect x="10.1010%" y="1749" width="0.0108%" height="15" fill="rgb(220,130,37)" fg:x="38219" fg:w="41"/><text x="10.3510%" y="1759.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (41 samples, 0.01%)</title><rect x="10.1010%" y="1733" width="0.0108%" height="15" fill="rgb(211,67,2)" fg:x="38219" fg:w="41"/><text x="10.3510%" y="1743.50"></text></g><g><title>torrust_tracker::servers::udp::logging::log_request (450 samples, 0.12%)</title><rect x="9.9995%" y="1765" width="0.1189%" height="15" fill="rgb(235,68,52)" fg:x="37835" fg:w="450"/><text x="10.2495%" y="1775.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_packet::{{closure}} (1,319 samples, 0.35%)</title><rect x="9.7918%" y="1781" width="0.3486%" height="15" fill="rgb(246,142,3)" fg:x="37049" fg:w="1319"/><text x="10.0418%" y="1791.50"></text></g><g><title>torrust_tracker::servers::udp::logging::log_response (83 samples, 0.02%)</title><rect x="10.1184%" y="1765" width="0.0219%" height="15" fill="rgb(241,25,7)" fg:x="38285" fg:w="83"/><text x="10.3684%" y="1775.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::process_valid_request::{{closure}} (1,808 samples, 0.48%)</title><rect x="9.7400%" y="1797" width="0.4778%" height="15" fill="rgb(242,119,39)" fg:x="36853" fg:w="1808"/><text x="9.9900%" y="1807.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::send_response::{{closure}} (293 samples, 0.08%)</title><rect x="10.1404%" y="1781" width="0.0774%" height="15" fill="rgb(241,98,45)" fg:x="38368" fg:w="293"/><text x="10.3904%" y="1791.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::send_packet::{{closure}} (283 samples, 0.07%)</title><rect x="10.1430%" y="1765" width="0.0748%" height="15" fill="rgb(254,28,30)" fg:x="38378" fg:w="283"/><text x="10.3930%" y="1775.50"></text></g><g><title>tokio::net::udp::UdpSocket::send_to::{{closure}} (265 samples, 0.07%)</title><rect x="10.1478%" y="1749" width="0.0700%" height="15" fill="rgb(241,142,54)" fg:x="38396" fg:w="265"/><text x="10.3978%" y="1759.50"></text></g><g><title>tokio::net::udp::UdpSocket::send_to_addr::{{closure}} (227 samples, 0.06%)</title><rect x="10.1578%" y="1733" width="0.0600%" height="15" fill="rgb(222,85,15)" fg:x="38434" fg:w="227"/><text x="10.4078%" y="1743.50"></text></g><g><title>tokio::runtime::io::registration::Registration::async_io::{{closure}} (124 samples, 0.03%)</title><rect x="10.1850%" y="1717" width="0.0328%" height="15" fill="rgb(210,85,47)" fg:x="38537" fg:w="124"/><text x="10.4350%" y="1727.50"></text></g><g><title>tokio::net::udp::UdpSocket::send_to_addr::{{closure}}::{{closure}} (61 samples, 0.02%)</title><rect x="10.2017%" y="1701" width="0.0161%" height="15" fill="rgb(224,206,25)" fg:x="38600" fg:w="61"/><text x="10.4517%" y="1711.50"></text></g><g><title>mio::net::udp::UdpSocket::send_to (61 samples, 0.02%)</title><rect x="10.2017%" y="1685" width="0.0161%" height="15" fill="rgb(243,201,19)" fg:x="38600" fg:w="61"/><text x="10.4517%" y="1695.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (61 samples, 0.02%)</title><rect x="10.2017%" y="1669" width="0.0161%" height="15" fill="rgb(236,59,4)" fg:x="38600" fg:w="61"/><text x="10.4517%" y="1679.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (61 samples, 0.02%)</title><rect x="10.2017%" y="1653" width="0.0161%" height="15" fill="rgb(254,179,45)" fg:x="38600" fg:w="61"/><text x="10.4517%" y="1663.50"></text></g><g><title>mio::net::udp::UdpSocket::send_to::{{closure}} (61 samples, 0.02%)</title><rect x="10.2017%" y="1637" width="0.0161%" height="15" fill="rgb(226,14,10)" fg:x="38600" fg:w="61"/><text x="10.4517%" y="1647.50"></text></g><g><title>std::net::udp::UdpSocket::send_to (61 samples, 0.02%)</title><rect x="10.2017%" y="1621" width="0.0161%" height="15" fill="rgb(244,27,41)" fg:x="38600" fg:w="61"/><text x="10.4517%" y="1631.50"></text></g><g><title>std::sys_common::net::UdpSocket::send_to (61 samples, 0.02%)</title><rect x="10.2017%" y="1605" width="0.0161%" height="15" fill="rgb(235,35,32)" fg:x="38600" fg:w="61"/><text x="10.4517%" y="1615.50"></text></g><g><title>std::sys::pal::unix::cvt (61 samples, 0.02%)</title><rect x="10.2017%" y="1589" width="0.0161%" height="15" fill="rgb(218,68,31)" fg:x="38600" fg:w="61"/><text x="10.4517%" y="1599.50"></text></g><g><title>&lt;isize as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (61 samples, 0.02%)</title><rect x="10.2017%" y="1573" width="0.0161%" height="15" fill="rgb(207,120,37)" fg:x="38600" fg:w="61"/><text x="10.4517%" y="1583.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (84 samples, 0.02%)</title><rect x="10.2664%" y="1653" width="0.0222%" height="15" fill="rgb(227,98,0)" fg:x="38845" fg:w="84"/><text x="10.5164%" y="1663.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::single::&lt;impl torrust_tracker_torrent_repository::entry::Entry for torrust_tracker_torrent_repository::entry::Torrent&gt;::get_stats::{{closure}} (84 samples, 0.02%)</title><rect x="10.2664%" y="1637" width="0.0222%" height="15" fill="rgb(207,7,3)" fg:x="38845" fg:w="84"/><text x="10.5164%" y="1647.50"></text></g><g><title>torrust_tracker_primitives::peer::Peer::is_seeder (84 samples, 0.02%)</title><rect x="10.2664%" y="1621" width="0.0222%" height="15" fill="rgb(206,98,19)" fg:x="38845" fg:w="84"/><text x="10.5164%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (173 samples, 0.05%)</title><rect x="10.2432%" y="1749" width="0.0457%" height="15" fill="rgb(217,5,26)" fg:x="38757" fg:w="173"/><text x="10.4932%" y="1759.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (173 samples, 0.05%)</title><rect x="10.2432%" y="1733" width="0.0457%" height="15" fill="rgb(235,190,38)" fg:x="38757" fg:w="173"/><text x="10.4932%" y="1743.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (173 samples, 0.05%)</title><rect x="10.2432%" y="1717" width="0.0457%" height="15" fill="rgb(247,86,24)" fg:x="38757" fg:w="173"/><text x="10.4932%" y="1727.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (173 samples, 0.05%)</title><rect x="10.2432%" y="1701" width="0.0457%" height="15" fill="rgb(205,101,16)" fg:x="38757" fg:w="173"/><text x="10.4932%" y="1711.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (173 samples, 0.05%)</title><rect x="10.2432%" y="1685" width="0.0457%" height="15" fill="rgb(246,168,33)" fg:x="38757" fg:w="173"/><text x="10.4932%" y="1695.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (85 samples, 0.02%)</title><rect x="10.2664%" y="1669" width="0.0225%" height="15" fill="rgb(231,114,1)" fg:x="38845" fg:w="85"/><text x="10.5164%" y="1679.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::single::&lt;impl torrust_tracker_torrent_repository::entry::Entry for torrust_tracker_torrent_repository::entry::Torrent&gt;::get_stats (337 samples, 0.09%)</title><rect x="10.2411%" y="1765" width="0.0891%" height="15" fill="rgb(207,184,53)" fg:x="38749" fg:w="337"/><text x="10.4911%" y="1775.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::values (156 samples, 0.04%)</title><rect x="10.2889%" y="1749" width="0.0412%" height="15" fill="rgb(224,95,51)" fg:x="38930" fg:w="156"/><text x="10.5389%" y="1759.50"></text></g><g><title>core::mem::drop (39 samples, 0.01%)</title><rect x="10.3840%" y="1749" width="0.0103%" height="15" fill="rgb(212,188,45)" fg:x="39290" fg:w="39"/><text x="10.6340%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;torrust_tracker_primitives::peer::Peer&gt;&gt;&gt; (39 samples, 0.01%)</title><rect x="10.3840%" y="1733" width="0.0103%" height="15" fill="rgb(223,154,38)" fg:x="39290" fg:w="39"/><text x="10.6340%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;torrust_tracker_primitives::peer::Peer&gt;&gt; (39 samples, 0.01%)</title><rect x="10.3840%" y="1717" width="0.0103%" height="15" fill="rgb(251,22,52)" fg:x="39290" fg:w="39"/><text x="10.6340%" y="1727.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.01%)</title><rect x="10.3840%" y="1701" width="0.0103%" height="15" fill="rgb(229,209,22)" fg:x="39290" fg:w="39"/><text x="10.6340%" y="1711.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::mutex_std::&lt;impl torrust_tracker_torrent_repository::entry::EntrySync for alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;::insert_or_update_peer_and_get_stats (750 samples, 0.20%)</title><rect x="10.2241%" y="1797" width="0.1982%" height="15" fill="rgb(234,138,34)" fg:x="38685" fg:w="750"/><text x="10.4741%" y="1807.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::single::&lt;impl torrust_tracker_torrent_repository::entry::Entry for torrust_tracker_torrent_repository::entry::Torrent&gt;::insert_or_update_peer_and_get_stats (691 samples, 0.18%)</title><rect x="10.2397%" y="1781" width="0.1826%" height="15" fill="rgb(212,95,11)" fg:x="38744" fg:w="691"/><text x="10.4897%" y="1791.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::single::&lt;impl torrust_tracker_torrent_repository::entry::Entry for torrust_tracker_torrent_repository::entry::Torrent&gt;::insert_or_update_peer (349 samples, 0.09%)</title><rect x="10.3301%" y="1765" width="0.0922%" height="15" fill="rgb(240,179,47)" fg:x="39086" fg:w="349"/><text x="10.5801%" y="1775.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some_and (106 samples, 0.03%)</title><rect x="10.3944%" y="1749" width="0.0280%" height="15" fill="rgb(240,163,11)" fg:x="39329" fg:w="106"/><text x="10.6444%" y="1759.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::single::&lt;impl torrust_tracker_torrent_repository::entry::Entry for torrust_tracker_torrent_repository::entry::Torrent&gt;::insert_or_update_peer::{{closure}} (105 samples, 0.03%)</title><rect x="10.3946%" y="1733" width="0.0278%" height="15" fill="rgb(236,37,12)" fg:x="39330" fg:w="105"/><text x="10.6446%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;torrust_tracker_primitives::peer::Peer&gt;&gt; (101 samples, 0.03%)</title><rect x="10.3957%" y="1717" width="0.0267%" height="15" fill="rgb(232,164,16)" fg:x="39334" fg:w="101"/><text x="10.6457%" y="1727.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (101 samples, 0.03%)</title><rect x="10.3957%" y="1701" width="0.0267%" height="15" fill="rgb(244,205,15)" fg:x="39334" fg:w="101"/><text x="10.6457%" y="1711.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (61 samples, 0.02%)</title><rect x="10.5323%" y="1685" width="0.0161%" height="15" fill="rgb(223,117,47)" fg:x="39851" fg:w="61"/><text x="10.7823%" y="1695.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (84 samples, 0.02%)</title><rect x="10.5323%" y="1717" width="0.0222%" height="15" fill="rgb(244,107,35)" fg:x="39851" fg:w="84"/><text x="10.7823%" y="1727.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (84 samples, 0.02%)</title><rect x="10.5323%" y="1701" width="0.0222%" height="15" fill="rgb(205,140,8)" fg:x="39851" fg:w="84"/><text x="10.7823%" y="1711.50"></text></g><g><title>&lt;torrust_tracker_primitives::info_hash::InfoHash as core::cmp::Ord&gt;::cmp (181 samples, 0.05%)</title><rect x="10.5545%" y="1717" width="0.0478%" height="15" fill="rgb(228,84,46)" fg:x="39935" fg:w="181"/><text x="10.8045%" y="1727.50"></text></g><g><title>core::array::&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (181 samples, 0.05%)</title><rect x="10.5545%" y="1701" width="0.0478%" height="15" fill="rgb(254,188,9)" fg:x="39935" fg:w="181"/><text x="10.8045%" y="1711.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (181 samples, 0.05%)</title><rect x="10.5545%" y="1685" width="0.0478%" height="15" fill="rgb(206,112,54)" fg:x="39935" fg:w="181"/><text x="10.8045%" y="1695.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (181 samples, 0.05%)</title><rect x="10.5545%" y="1669" width="0.0478%" height="15" fill="rgb(216,84,49)" fg:x="39935" fg:w="181"/><text x="10.8045%" y="1679.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (181 samples, 0.05%)</title><rect x="10.5545%" y="1653" width="0.0478%" height="15" fill="rgb(214,194,35)" fg:x="39935" fg:w="181"/><text x="10.8045%" y="1663.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (76 samples, 0.02%)</title><rect x="10.5823%" y="1637" width="0.0201%" height="15" fill="rgb(249,28,3)" fg:x="40040" fg:w="76"/><text x="10.8323%" y="1647.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (551 samples, 0.15%)</title><rect x="10.4623%" y="1765" width="0.1456%" height="15" fill="rgb(222,56,52)" fg:x="39586" fg:w="551"/><text x="10.7123%" y="1775.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (506 samples, 0.13%)</title><rect x="10.4742%" y="1749" width="0.1337%" height="15" fill="rgb(245,217,50)" fg:x="39631" fg:w="506"/><text x="10.7242%" y="1759.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (506 samples, 0.13%)</title><rect x="10.4742%" y="1733" width="0.1337%" height="15" fill="rgb(213,201,24)" fg:x="39631" fg:w="506"/><text x="10.7242%" y="1743.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (572 samples, 0.15%)</title><rect x="10.4586%" y="1781" width="0.1512%" height="15" fill="rgb(248,116,28)" fg:x="39572" fg:w="572"/><text x="10.7086%" y="1791.50"></text></g><g><title>torrust_tracker_torrent_repository::repository::rw_lock_std_mutex_std::&lt;impl torrust_tracker_torrent_repository::repository::Repository&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt; for torrust_tracker_torrent_repository::repository::RwLockStd&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;&gt;::get (751 samples, 0.20%)</title><rect x="10.4224%" y="1797" width="0.1985%" height="15" fill="rgb(219,72,43)" fg:x="39435" fg:w="751"/><text x="10.6724%" y="1807.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (64 samples, 0.02%)</title><rect x="10.6980%" y="1685" width="0.0169%" height="15" fill="rgb(209,138,14)" fg:x="40478" fg:w="64"/><text x="10.9480%" y="1695.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (83 samples, 0.02%)</title><rect x="10.6980%" y="1717" width="0.0219%" height="15" fill="rgb(222,18,33)" fg:x="40478" fg:w="83"/><text x="10.9480%" y="1727.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (83 samples, 0.02%)</title><rect x="10.6980%" y="1701" width="0.0219%" height="15" fill="rgb(213,199,7)" fg:x="40478" fg:w="83"/><text x="10.9480%" y="1711.50"></text></g><g><title>&lt;torrust_tracker_primitives::info_hash::InfoHash as core::cmp::Ord&gt;::cmp (216 samples, 0.06%)</title><rect x="10.7200%" y="1717" width="0.0571%" height="15" fill="rgb(250,110,10)" fg:x="40561" fg:w="216"/><text x="10.9700%" y="1727.50"></text></g><g><title>core::array::&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (216 samples, 0.06%)</title><rect x="10.7200%" y="1701" width="0.0571%" height="15" fill="rgb(248,123,6)" fg:x="40561" fg:w="216"/><text x="10.9700%" y="1711.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (216 samples, 0.06%)</title><rect x="10.7200%" y="1685" width="0.0571%" height="15" fill="rgb(206,91,31)" fg:x="40561" fg:w="216"/><text x="10.9700%" y="1695.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (216 samples, 0.06%)</title><rect x="10.7200%" y="1669" width="0.0571%" height="15" fill="rgb(211,154,13)" fg:x="40561" fg:w="216"/><text x="10.9700%" y="1679.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (216 samples, 0.06%)</title><rect x="10.7200%" y="1653" width="0.0571%" height="15" fill="rgb(225,148,7)" fg:x="40561" fg:w="216"/><text x="10.9700%" y="1663.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (87 samples, 0.02%)</title><rect x="10.7541%" y="1637" width="0.0230%" height="15" fill="rgb(220,160,43)" fg:x="40690" fg:w="87"/><text x="11.0041%" y="1647.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (539 samples, 0.14%)</title><rect x="10.6391%" y="1781" width="0.1425%" height="15" fill="rgb(213,52,39)" fg:x="40255" fg:w="539"/><text x="10.8891%" y="1791.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (527 samples, 0.14%)</title><rect x="10.6423%" y="1765" width="0.1393%" height="15" fill="rgb(243,137,7)" fg:x="40267" fg:w="527"/><text x="10.8923%" y="1775.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (501 samples, 0.13%)</title><rect x="10.6491%" y="1749" width="0.1324%" height="15" fill="rgb(230,79,13)" fg:x="40293" fg:w="501"/><text x="10.8991%" y="1759.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (501 samples, 0.13%)</title><rect x="10.6491%" y="1733" width="0.1324%" height="15" fill="rgb(247,105,23)" fg:x="40293" fg:w="501"/><text x="10.8991%" y="1743.50"></text></g><g><title>torrust_tracker_torrent_repository::repository::rw_lock_std_mutex_std::&lt;impl torrust_tracker_torrent_repository::repository::Repository&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt; for torrust_tracker_torrent_repository::repository::RwLockStd&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;&gt;::update_torrent_with_peer_and_get_stats (640 samples, 0.17%)</title><rect x="10.6208%" y="1797" width="0.1691%" height="15" fill="rgb(223,179,41)" fg:x="40186" fg:w="640"/><text x="10.8708%" y="1807.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (117 samples, 0.03%)</title><rect x="10.8011%" y="1749" width="0.0309%" height="15" fill="rgb(218,9,34)" fg:x="40868" fg:w="117"/><text x="11.0511%" y="1759.50"></text></g><g><title>core::sync::atomic::atomic_load (117 samples, 0.03%)</title><rect x="10.8011%" y="1733" width="0.0309%" height="15" fill="rgb(222,106,8)" fg:x="40868" fg:w="117"/><text x="11.0511%" y="1743.50"></text></g><g><title>torrust_tracker_torrent_repository::repository::rw_lock_std_mutex_std::&lt;impl torrust_tracker_torrent_repository::repository::RwLockStd&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;&gt;::get_torrents (167 samples, 0.04%)</title><rect x="10.7900%" y="1797" width="0.0441%" height="15" fill="rgb(211,220,0)" fg:x="40826" fg:w="167"/><text x="11.0400%" y="1807.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (162 samples, 0.04%)</title><rect x="10.7913%" y="1781" width="0.0428%" height="15" fill="rgb(229,52,16)" fg:x="40831" fg:w="162"/><text x="11.0413%" y="1791.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::read (158 samples, 0.04%)</title><rect x="10.7924%" y="1765" width="0.0418%" height="15" fill="rgb(212,155,18)" fg:x="40835" fg:w="158"/><text x="11.0424%" y="1775.50"></text></g><g><title>tracing::span::Span::log (82 samples, 0.02%)</title><rect x="10.8341%" y="1797" width="0.0217%" height="15" fill="rgb(242,21,14)" fg:x="40993" fg:w="82"/><text x="11.0841%" y="1807.50"></text></g><g><title>tracing::span::Span::record_all (143 samples, 0.04%)</title><rect x="10.8558%" y="1797" width="0.0378%" height="15" fill="rgb(222,19,48)" fg:x="41075" fg:w="143"/><text x="11.1058%" y="1807.50"></text></g><g><title>unlink_chunk (679 samples, 0.18%)</title><rect x="10.8936%" y="1797" width="0.1795%" height="15" fill="rgb(232,45,27)" fg:x="41218" fg:w="679"/><text x="11.1436%" y="1807.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u32 (71 samples, 0.02%)</title><rect x="11.0738%" y="1669" width="0.0188%" height="15" fill="rgb(249,103,42)" fg:x="41900" fg:w="71"/><text x="11.3238%" y="1679.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (71 samples, 0.02%)</title><rect x="11.0738%" y="1653" width="0.0188%" height="15" fill="rgb(246,81,33)" fg:x="41900" fg:w="71"/><text x="11.3238%" y="1663.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (59 samples, 0.02%)</title><rect x="11.0770%" y="1637" width="0.0156%" height="15" fill="rgb(252,33,42)" fg:x="41912" fg:w="59"/><text x="11.3270%" y="1647.50"></text></g><g><title>rand::rng::Rng::gen (72 samples, 0.02%)</title><rect x="11.0738%" y="1749" width="0.0190%" height="15" fill="rgb(209,212,41)" fg:x="41900" fg:w="72"/><text x="11.3238%" y="1759.50"></text></g><g><title>rand::distributions::other::&lt;impl rand::distributions::distribution::Distribution&lt;[T: _]&gt; for rand::distributions::Standard&gt;::sample (72 samples, 0.02%)</title><rect x="11.0738%" y="1733" width="0.0190%" height="15" fill="rgb(207,154,6)" fg:x="41900" fg:w="72"/><text x="11.3238%" y="1743.50"></text></g><g><title>rand::rng::Rng::gen (72 samples, 0.02%)</title><rect x="11.0738%" y="1717" width="0.0190%" height="15" fill="rgb(223,64,47)" fg:x="41900" fg:w="72"/><text x="11.3238%" y="1727.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u8&gt; for rand::distributions::Standard&gt;::sample (72 samples, 0.02%)</title><rect x="11.0738%" y="1701" width="0.0190%" height="15" fill="rgb(211,161,38)" fg:x="41900" fg:w="72"/><text x="11.3238%" y="1711.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u32 (72 samples, 0.02%)</title><rect x="11.0738%" y="1685" width="0.0190%" height="15" fill="rgb(219,138,40)" fg:x="41900" fg:w="72"/><text x="11.3238%" y="1695.50"></text></g><g><title>[anon] (31,375 samples, 8.29%)</title><rect x="2.8047%" y="1813" width="8.2922%" height="15" fill="rgb(241,228,46)" fg:x="10612" fg:w="31375"/><text x="3.0547%" y="1823.50">[anon]</text></g><g><title>uuid::v4::&lt;impl uuid::Uuid&gt;::new_v4 (90 samples, 0.02%)</title><rect x="11.0731%" y="1797" width="0.0238%" height="15" fill="rgb(223,209,38)" fg:x="41897" fg:w="90"/><text x="11.3231%" y="1807.50"></text></g><g><title>uuid::rng::bytes (87 samples, 0.02%)</title><rect x="11.0738%" y="1781" width="0.0230%" height="15" fill="rgb(236,164,45)" fg:x="41900" fg:w="87"/><text x="11.3238%" y="1791.50"></text></g><g><title>rand::random (87 samples, 0.02%)</title><rect x="11.0738%" y="1765" width="0.0230%" height="15" fill="rgb(231,15,5)" fg:x="41900" fg:w="87"/><text x="11.3238%" y="1775.50"></text></g><g><title>_int_free (938 samples, 0.25%)</title><rect x="11.1365%" y="1797" width="0.2479%" height="15" fill="rgb(252,35,15)" fg:x="42137" fg:w="938"/><text x="11.3865%" y="1807.50"></text></g><g><title>tcache_put (62 samples, 0.02%)</title><rect x="11.3680%" y="1781" width="0.0164%" height="15" fill="rgb(248,181,18)" fg:x="43013" fg:w="62"/><text x="11.6180%" y="1791.50"></text></g><g><title>hashbrown::raw::h2 (40 samples, 0.01%)</title><rect x="11.4082%" y="1749" width="0.0106%" height="15" fill="rgb(233,39,42)" fg:x="43165" fg:w="40"/><text x="11.6582%" y="1759.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (63 samples, 0.02%)</title><rect x="11.4026%" y="1781" width="0.0167%" height="15" fill="rgb(238,110,33)" fg:x="43144" fg:w="63"/><text x="11.6526%" y="1791.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (53 samples, 0.01%)</title><rect x="11.4053%" y="1765" width="0.0140%" height="15" fill="rgb(233,195,10)" fg:x="43154" fg:w="53"/><text x="11.6553%" y="1775.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (65 samples, 0.02%)</title><rect x="11.4026%" y="1797" width="0.0172%" height="15" fill="rgb(254,105,3)" fg:x="43144" fg:w="65"/><text x="11.6526%" y="1807.50"></text></g><g><title>tokio::runtime::io::registration::Registration::readiness::{{closure}} (128 samples, 0.03%)</title><rect x="11.4201%" y="1797" width="0.0338%" height="15" fill="rgb(221,225,9)" fg:x="43210" fg:w="128"/><text x="11.6701%" y="1807.50"></text></g><g><title>[profiling] (1,452 samples, 0.38%)</title><rect x="11.0968%" y="1813" width="0.3838%" height="15" fill="rgb(224,227,45)" fg:x="41987" fg:w="1452"/><text x="11.3468%" y="1823.50"></text></g><g><title>&lt;alloc::collections::btree::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (104 samples, 0.03%)</title><rect x="11.4827%" y="1797" width="0.0275%" height="15" fill="rgb(229,198,43)" fg:x="43447" fg:w="104"/><text x="11.7327%" y="1807.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (89 samples, 0.02%)</title><rect x="11.4867%" y="1781" width="0.0235%" height="15" fill="rgb(206,209,35)" fg:x="43462" fg:w="89"/><text x="11.7367%" y="1791.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (70 samples, 0.02%)</title><rect x="11.4917%" y="1765" width="0.0185%" height="15" fill="rgb(245,195,53)" fg:x="43481" fg:w="70"/><text x="11.7417%" y="1775.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::init_front (42 samples, 0.01%)</title><rect x="11.4991%" y="1749" width="0.0111%" height="15" fill="rgb(240,92,26)" fg:x="43509" fg:w="42"/><text x="11.7491%" y="1759.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (41 samples, 0.01%)</title><rect x="11.5102%" y="1797" width="0.0108%" height="15" fill="rgb(207,40,23)" fg:x="43551" fg:w="41"/><text x="11.7602%" y="1807.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (49 samples, 0.01%)</title><rect x="11.5403%" y="1717" width="0.0130%" height="15" fill="rgb(223,111,35)" fg:x="43665" fg:w="49"/><text x="11.7903%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (45 samples, 0.01%)</title><rect x="11.5414%" y="1701" width="0.0119%" height="15" fill="rgb(229,147,28)" fg:x="43669" fg:w="45"/><text x="11.7914%" y="1711.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (157 samples, 0.04%)</title><rect x="11.5210%" y="1797" width="0.0415%" height="15" fill="rgb(211,29,28)" fg:x="43592" fg:w="157"/><text x="11.7710%" y="1807.50"></text></g><g><title>alloc::string::String::push_str (107 samples, 0.03%)</title><rect x="11.5342%" y="1781" width="0.0283%" height="15" fill="rgb(228,72,33)" fg:x="43642" fg:w="107"/><text x="11.7842%" y="1791.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (107 samples, 0.03%)</title><rect x="11.5342%" y="1765" width="0.0283%" height="15" fill="rgb(205,214,31)" fg:x="43642" fg:w="107"/><text x="11.7842%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (107 samples, 0.03%)</title><rect x="11.5342%" y="1749" width="0.0283%" height="15" fill="rgb(224,111,15)" fg:x="43642" fg:w="107"/><text x="11.7842%" y="1759.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (107 samples, 0.03%)</title><rect x="11.5342%" y="1733" width="0.0283%" height="15" fill="rgb(253,21,26)" fg:x="43642" fg:w="107"/><text x="11.7842%" y="1743.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (45 samples, 0.01%)</title><rect x="11.6246%" y="1765" width="0.0119%" height="15" fill="rgb(245,139,43)" fg:x="43984" fg:w="45"/><text x="11.8746%" y="1775.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (114 samples, 0.03%)</title><rect x="11.6135%" y="1781" width="0.0301%" height="15" fill="rgb(252,170,7)" fg:x="43942" fg:w="114"/><text x="11.8635%" y="1791.50"></text></g><g><title>core::hash::sip::u8to64_le (102 samples, 0.03%)</title><rect x="11.6466%" y="1781" width="0.0270%" height="15" fill="rgb(231,118,14)" fg:x="44067" fg:w="102"/><text x="11.8966%" y="1791.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (388 samples, 0.10%)</title><rect x="11.5712%" y="1797" width="0.1025%" height="15" fill="rgb(238,83,0)" fg:x="43782" fg:w="388"/><text x="11.8212%" y="1807.50"></text></g><g><title>&lt;core::net::ip_addr::Ipv4Addr as core::hash::Hash&gt;::hash (110 samples, 0.03%)</title><rect x="11.6896%" y="1765" width="0.0291%" height="15" fill="rgb(221,39,39)" fg:x="44230" fg:w="110"/><text x="11.9396%" y="1775.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (109 samples, 0.03%)</title><rect x="11.6899%" y="1749" width="0.0288%" height="15" fill="rgb(222,119,46)" fg:x="44231" fg:w="109"/><text x="11.9399%" y="1759.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (109 samples, 0.03%)</title><rect x="11.6899%" y="1733" width="0.0288%" height="15" fill="rgb(222,165,49)" fg:x="44231" fg:w="109"/><text x="11.9399%" y="1743.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (93 samples, 0.02%)</title><rect x="11.6941%" y="1717" width="0.0246%" height="15" fill="rgb(219,113,52)" fg:x="44247" fg:w="93"/><text x="11.9441%" y="1727.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (93 samples, 0.02%)</title><rect x="11.6941%" y="1701" width="0.0246%" height="15" fill="rgb(214,7,15)" fg:x="44247" fg:w="93"/><text x="11.9441%" y="1711.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (93 samples, 0.02%)</title><rect x="11.6941%" y="1685" width="0.0246%" height="15" fill="rgb(235,32,4)" fg:x="44247" fg:w="93"/><text x="11.9441%" y="1695.50"></text></g><g><title>&lt;core::net::socket_addr::SocketAddrV4 as core::hash::Hash&gt;::hash (135 samples, 0.04%)</title><rect x="11.6896%" y="1781" width="0.0357%" height="15" fill="rgb(238,90,54)" fg:x="44230" fg:w="135"/><text x="11.9396%" y="1791.50"></text></g><g><title>&lt;core::net::socket_addr::SocketAddr as core::hash::Hash&gt;::hash (202 samples, 0.05%)</title><rect x="11.6738%" y="1797" width="0.0534%" height="15" fill="rgb(213,208,19)" fg:x="44170" fg:w="202"/><text x="11.9238%" y="1807.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (59 samples, 0.02%)</title><rect x="11.7356%" y="1717" width="0.0156%" height="15" fill="rgb(233,156,4)" fg:x="44404" fg:w="59"/><text x="11.9856%" y="1727.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (59 samples, 0.02%)</title><rect x="11.7356%" y="1701" width="0.0156%" height="15" fill="rgb(207,194,5)" fg:x="44404" fg:w="59"/><text x="11.9856%" y="1711.50"></text></g><g><title>__entry_text_start (42 samples, 0.01%)</title><rect x="11.7401%" y="1685" width="0.0111%" height="15" fill="rgb(206,111,30)" fg:x="44421" fg:w="42"/><text x="11.9901%" y="1695.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (164 samples, 0.04%)</title><rect x="11.7272%" y="1797" width="0.0433%" height="15" fill="rgb(243,70,54)" fg:x="44372" fg:w="164"/><text x="11.9772%" y="1807.50"></text></g><g><title>core::ops::function::FnMut::call_mut (149 samples, 0.04%)</title><rect x="11.7311%" y="1781" width="0.0394%" height="15" fill="rgb(242,28,8)" fg:x="44387" fg:w="149"/><text x="11.9811%" y="1791.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (149 samples, 0.04%)</title><rect x="11.7311%" y="1765" width="0.0394%" height="15" fill="rgb(219,106,18)" fg:x="44387" fg:w="149"/><text x="11.9811%" y="1775.50"></text></g><g><title>tokio::runtime::context::budget (149 samples, 0.04%)</title><rect x="11.7311%" y="1749" width="0.0394%" height="15" fill="rgb(244,222,10)" fg:x="44387" fg:w="149"/><text x="11.9811%" y="1759.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (149 samples, 0.04%)</title><rect x="11.7311%" y="1733" width="0.0394%" height="15" fill="rgb(236,179,52)" fg:x="44387" fg:w="149"/><text x="11.9811%" y="1743.50"></text></g><g><title>tokio::runtime::context::budget::{{closure}} (73 samples, 0.02%)</title><rect x="11.7512%" y="1717" width="0.0193%" height="15" fill="rgb(213,23,39)" fg:x="44463" fg:w="73"/><text x="12.0012%" y="1727.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::{{closure}} (73 samples, 0.02%)</title><rect x="11.7512%" y="1701" width="0.0193%" height="15" fill="rgb(238,48,10)" fg:x="44463" fg:w="73"/><text x="12.0012%" y="1711.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::future::future::Future&gt;::poll (218 samples, 0.06%)</title><rect x="11.7705%" y="1797" width="0.0576%" height="15" fill="rgb(251,196,23)" fg:x="44536" fg:w="218"/><text x="12.0205%" y="1807.50"></text></g><g><title>__entry_text_start (55 samples, 0.01%)</title><rect x="11.8836%" y="1781" width="0.0145%" height="15" fill="rgb(250,152,24)" fg:x="44964" fg:w="55"/><text x="12.1336%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (89 samples, 0.02%)</title><rect x="11.8987%" y="1781" width="0.0235%" height="15" fill="rgb(209,150,17)" fg:x="45021" fg:w="89"/><text x="12.1487%" y="1791.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (89 samples, 0.02%)</title><rect x="11.8987%" y="1765" width="0.0235%" height="15" fill="rgb(234,202,34)" fg:x="45021" fg:w="89"/><text x="12.1487%" y="1775.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (65 samples, 0.02%)</title><rect x="11.9050%" y="1749" width="0.0172%" height="15" fill="rgb(253,148,53)" fg:x="45045" fg:w="65"/><text x="12.1550%" y="1759.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (41 samples, 0.01%)</title><rect x="11.9114%" y="1733" width="0.0108%" height="15" fill="rgb(218,129,16)" fg:x="45069" fg:w="41"/><text x="12.1614%" y="1743.50"></text></g><g><title>core::sync::atomic::atomic_swap (41 samples, 0.01%)</title><rect x="11.9114%" y="1717" width="0.0108%" height="15" fill="rgb(216,85,19)" fg:x="45069" fg:w="41"/><text x="12.1614%" y="1727.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (41 samples, 0.01%)</title><rect x="11.9294%" y="1749" width="0.0108%" height="15" fill="rgb(235,228,7)" fg:x="45137" fg:w="41"/><text x="12.1794%" y="1759.50"></text></g><g><title>std::sync::poison::Flag::guard (41 samples, 0.01%)</title><rect x="11.9294%" y="1733" width="0.0108%" height="15" fill="rgb(245,175,0)" fg:x="45137" fg:w="41"/><text x="12.1794%" y="1743.50"></text></g><g><title>std::thread::panicking (39 samples, 0.01%)</title><rect x="11.9299%" y="1717" width="0.0103%" height="15" fill="rgb(208,168,36)" fg:x="45139" fg:w="39"/><text x="12.1799%" y="1727.50"></text></g><g><title>std::panicking::panicking (39 samples, 0.01%)</title><rect x="11.9299%" y="1701" width="0.0103%" height="15" fill="rgb(246,171,24)" fg:x="45139" fg:w="39"/><text x="12.1799%" y="1711.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (39 samples, 0.01%)</title><rect x="11.9299%" y="1685" width="0.0103%" height="15" fill="rgb(215,142,24)" fg:x="45139" fg:w="39"/><text x="12.1799%" y="1695.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (337 samples, 0.09%)</title><rect x="11.9439%" y="1733" width="0.0891%" height="15" fill="rgb(250,187,7)" fg:x="45192" fg:w="337"/><text x="12.1939%" y="1743.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (337 samples, 0.09%)</title><rect x="11.9439%" y="1717" width="0.0891%" height="15" fill="rgb(228,66,33)" fg:x="45192" fg:w="337"/><text x="12.1939%" y="1727.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (60 samples, 0.02%)</title><rect x="12.0330%" y="1733" width="0.0159%" height="15" fill="rgb(234,215,21)" fg:x="45529" fg:w="60"/><text x="12.2830%" y="1743.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (60 samples, 0.02%)</title><rect x="12.0330%" y="1717" width="0.0159%" height="15" fill="rgb(222,191,20)" fg:x="45529" fg:w="60"/><text x="12.2830%" y="1727.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (483 samples, 0.13%)</title><rect x="11.9222%" y="1781" width="0.1277%" height="15" fill="rgb(245,79,54)" fg:x="45110" fg:w="483"/><text x="12.1722%" y="1791.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (456 samples, 0.12%)</title><rect x="11.9294%" y="1765" width="0.1205%" height="15" fill="rgb(240,10,37)" fg:x="45137" fg:w="456"/><text x="12.1794%" y="1775.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (415 samples, 0.11%)</title><rect x="11.9402%" y="1749" width="0.1097%" height="15" fill="rgb(214,192,32)" fg:x="45178" fg:w="415"/><text x="12.1902%" y="1759.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::ops::drop::Drop&gt;::drop (864 samples, 0.23%)</title><rect x="11.8281%" y="1797" width="0.2283%" height="15" fill="rgb(209,36,54)" fg:x="44754" fg:w="864"/><text x="12.0781%" y="1807.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (223 samples, 0.06%)</title><rect x="12.0647%" y="1765" width="0.0589%" height="15" fill="rgb(220,10,11)" fg:x="45649" fg:w="223"/><text x="12.3147%" y="1775.50"></text></g><g><title>[profiling] (233 samples, 0.06%)</title><rect x="12.0639%" y="1781" width="0.0616%" height="15" fill="rgb(221,106,17)" fg:x="45646" fg:w="233"/><text x="12.3139%" y="1791.50"></text></g><g><title>binascii::bin2hex (128 samples, 0.03%)</title><rect x="12.1255%" y="1781" width="0.0338%" height="15" fill="rgb(251,142,44)" fg:x="45879" fg:w="128"/><text x="12.3755%" y="1791.50"></text></g><g><title>&lt;torrust_tracker_primitives::info_hash::InfoHash as core::fmt::Display&gt;::fmt (404 samples, 0.11%)</title><rect x="12.0565%" y="1797" width="0.1068%" height="15" fill="rgb(238,13,15)" fg:x="45618" fg:w="404"/><text x="12.3065%" y="1807.50"></text></g><g><title>__entry_text_start (811 samples, 0.21%)</title><rect x="15.3430%" y="1781" width="0.2143%" height="15" fill="rgb(208,107,27)" fg:x="58053" fg:w="811"/><text x="15.5930%" y="1791.50"></text></g><g><title>[[vdso]] (12,846 samples, 3.40%)</title><rect x="12.1633%" y="1797" width="3.3951%" height="15" fill="rgb(205,136,37)" fg:x="46022" fg:w="12846"/><text x="12.4133%" y="1807.50">[[v..</text></g><g><title>__GI___clock_gettime (141 samples, 0.04%)</title><rect x="15.5631%" y="1797" width="0.0373%" height="15" fill="rgb(250,205,27)" fg:x="58886" fg:w="141"/><text x="15.8131%" y="1807.50"></text></g><g><title>arena_for_chunk (178 samples, 0.05%)</title><rect x="15.7706%" y="1781" width="0.0470%" height="15" fill="rgb(210,80,43)" fg:x="59671" fg:w="178"/><text x="16.0206%" y="1791.50"></text></g><g><title>arena_for_chunk (151 samples, 0.04%)</title><rect x="15.7777%" y="1765" width="0.0399%" height="15" fill="rgb(247,160,36)" fg:x="59698" fg:w="151"/><text x="16.0277%" y="1775.50"></text></g><g><title>heap_for_ptr (116 samples, 0.03%)</title><rect x="15.7870%" y="1749" width="0.0307%" height="15" fill="rgb(234,13,49)" fg:x="59733" fg:w="116"/><text x="16.0370%" y="1759.50"></text></g><g><title>heap_max_size (50 samples, 0.01%)</title><rect x="15.8044%" y="1733" width="0.0132%" height="15" fill="rgb(234,122,0)" fg:x="59799" fg:w="50"/><text x="16.0544%" y="1743.50"></text></g><g><title>__GI___libc_free (827 samples, 0.22%)</title><rect x="15.6014%" y="1797" width="0.2186%" height="15" fill="rgb(207,146,38)" fg:x="59031" fg:w="827"/><text x="15.8514%" y="1807.50"></text></g><g><title>arena_for_chunk (86 samples, 0.02%)</title><rect x="15.9284%" y="1781" width="0.0227%" height="15" fill="rgb(207,177,25)" fg:x="60268" fg:w="86"/><text x="16.1784%" y="1791.50"></text></g><g><title>arena_for_chunk (67 samples, 0.02%)</title><rect x="15.9334%" y="1765" width="0.0177%" height="15" fill="rgb(211,178,42)" fg:x="60287" fg:w="67"/><text x="16.1834%" y="1775.50"></text></g><g><title>heap_for_ptr (39 samples, 0.01%)</title><rect x="15.9408%" y="1749" width="0.0103%" height="15" fill="rgb(230,69,54)" fg:x="60315" fg:w="39"/><text x="16.1908%" y="1759.50"></text></g><g><title>__GI___libc_malloc (618 samples, 0.16%)</title><rect x="15.8200%" y="1797" width="0.1633%" height="15" fill="rgb(214,135,41)" fg:x="59858" fg:w="618"/><text x="16.0700%" y="1807.50"></text></g><g><title>tcache_get (96 samples, 0.03%)</title><rect x="15.9580%" y="1781" width="0.0254%" height="15" fill="rgb(237,67,25)" fg:x="60380" fg:w="96"/><text x="16.2080%" y="1791.50"></text></g><g><title>__GI___libc_write (225 samples, 0.06%)</title><rect x="15.9876%" y="1781" width="0.0595%" height="15" fill="rgb(222,189,50)" fg:x="60492" fg:w="225"/><text x="16.2376%" y="1791.50"></text></g><g><title>__GI___libc_write (234 samples, 0.06%)</title><rect x="15.9868%" y="1797" width="0.0618%" height="15" fill="rgb(245,148,34)" fg:x="60489" fg:w="234"/><text x="16.2368%" y="1807.50"></text></g><g><title>__GI___lll_lock_wait_private (110 samples, 0.03%)</title><rect x="16.0486%" y="1797" width="0.0291%" height="15" fill="rgb(222,29,6)" fg:x="60723" fg:w="110"/><text x="16.2986%" y="1807.50"></text></g><g><title>futex_wait (66 samples, 0.02%)</title><rect x="16.0602%" y="1781" width="0.0174%" height="15" fill="rgb(221,189,43)" fg:x="60767" fg:w="66"/><text x="16.3102%" y="1791.50"></text></g><g><title>__GI___lll_lock_wake_private (138 samples, 0.04%)</title><rect x="16.0777%" y="1797" width="0.0365%" height="15" fill="rgb(207,36,27)" fg:x="60833" fg:w="138"/><text x="16.3277%" y="1807.50"></text></g><g><title>__GI___pthread_disable_asynccancel (209 samples, 0.06%)</title><rect x="16.1142%" y="1797" width="0.0552%" height="15" fill="rgb(217,90,24)" fg:x="60971" fg:w="209"/><text x="16.3642%" y="1807.50"></text></g><g><title>__GI___pthread_enable_asynccancel (46 samples, 0.01%)</title><rect x="16.1694%" y="1797" width="0.0122%" height="15" fill="rgb(224,66,35)" fg:x="61180" fg:w="46"/><text x="16.4194%" y="1807.50"></text></g><g><title>__entry_text_start (46 samples, 0.01%)</title><rect x="16.1694%" y="1781" width="0.0122%" height="15" fill="rgb(221,13,50)" fg:x="61180" fg:w="46"/><text x="16.4194%" y="1791.50"></text></g><g><title>compiler_builtins::float::conv::int_to_float::u128_to_f64_bits (138 samples, 0.04%)</title><rect x="16.1871%" y="1765" width="0.0365%" height="15" fill="rgb(236,68,49)" fg:x="61247" fg:w="138"/><text x="16.4371%" y="1775.50"></text></g><g><title>__floattidf (183 samples, 0.05%)</title><rect x="16.1821%" y="1797" width="0.0484%" height="15" fill="rgb(229,146,28)" fg:x="61228" fg:w="183"/><text x="16.4321%" y="1807.50"></text></g><g><title>compiler_builtins::float::conv::__floattidf (172 samples, 0.05%)</title><rect x="16.1850%" y="1781" width="0.0455%" height="15" fill="rgb(225,31,38)" fg:x="61239" fg:w="172"/><text x="16.4350%" y="1791.50"></text></g><g><title>exp_inline (152 samples, 0.04%)</title><rect x="16.2379%" y="1781" width="0.0402%" height="15" fill="rgb(250,208,3)" fg:x="61439" fg:w="152"/><text x="16.4879%" y="1791.50"></text></g><g><title>log_inline (148 samples, 0.04%)</title><rect x="16.2780%" y="1781" width="0.0391%" height="15" fill="rgb(246,54,23)" fg:x="61591" fg:w="148"/><text x="16.5280%" y="1791.50"></text></g><g><title>__ieee754_pow_fma (333 samples, 0.09%)</title><rect x="16.2305%" y="1797" width="0.0880%" height="15" fill="rgb(243,76,11)" fg:x="61411" fg:w="333"/><text x="16.4805%" y="1807.50"></text></g><g><title>__libc_calloc (299 samples, 0.08%)</title><rect x="16.3185%" y="1797" width="0.0790%" height="15" fill="rgb(245,21,50)" fg:x="61744" fg:w="299"/><text x="16.5685%" y="1807.50"></text></g><g><title>__libc_recvfrom (1,422 samples, 0.38%)</title><rect x="16.3975%" y="1797" width="0.3758%" height="15" fill="rgb(228,9,43)" fg:x="62043" fg:w="1422"/><text x="16.6475%" y="1807.50"></text></g><g><title>__libc_sendto (881 samples, 0.23%)</title><rect x="16.7733%" y="1797" width="0.2328%" height="15" fill="rgb(208,100,47)" fg:x="63465" fg:w="881"/><text x="17.0233%" y="1807.50"></text></g><g><title>__memcmp_evex_movbe (277 samples, 0.07%)</title><rect x="17.0062%" y="1797" width="0.0732%" height="15" fill="rgb(232,26,8)" fg:x="64346" fg:w="277"/><text x="17.2562%" y="1807.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (4,073 samples, 1.08%)</title><rect x="17.0794%" y="1797" width="1.0765%" height="15" fill="rgb(216,166,38)" fg:x="64623" fg:w="4073"/><text x="17.3294%" y="1807.50"></text></g><g><title>__posix_memalign (367 samples, 0.10%)</title><rect x="18.1558%" y="1797" width="0.0970%" height="15" fill="rgb(251,202,51)" fg:x="68696" fg:w="367"/><text x="18.4058%" y="1807.50"></text></g><g><title>__posix_memalign (216 samples, 0.06%)</title><rect x="18.1957%" y="1781" width="0.0571%" height="15" fill="rgb(254,216,34)" fg:x="68847" fg:w="216"/><text x="18.4457%" y="1791.50"></text></g><g><title>_mid_memalign (206 samples, 0.05%)</title><rect x="18.1984%" y="1765" width="0.0544%" height="15" fill="rgb(251,32,27)" fg:x="68857" fg:w="206"/><text x="18.4484%" y="1775.50"></text></g><g><title>arena_for_chunk (38 samples, 0.01%)</title><rect x="18.2428%" y="1749" width="0.0100%" height="15" fill="rgb(208,127,28)" fg:x="69025" fg:w="38"/><text x="18.4928%" y="1759.50"></text></g><g><title>__pow (75 samples, 0.02%)</title><rect x="18.2528%" y="1797" width="0.0198%" height="15" fill="rgb(224,137,22)" fg:x="69063" fg:w="75"/><text x="18.5028%" y="1807.50"></text></g><g><title>__entry_text_start (468 samples, 0.12%)</title><rect x="18.7177%" y="1781" width="0.1237%" height="15" fill="rgb(254,70,32)" fg:x="70822" fg:w="468"/><text x="18.9677%" y="1791.50"></text></g><g><title>_int_free (2,282 samples, 0.60%)</title><rect x="18.2800%" y="1797" width="0.6031%" height="15" fill="rgb(229,75,37)" fg:x="69166" fg:w="2282"/><text x="18.5300%" y="1807.50"></text></g><g><title>tcache_put (139 samples, 0.04%)</title><rect x="18.8464%" y="1781" width="0.0367%" height="15" fill="rgb(252,64,23)" fg:x="71309" fg:w="139"/><text x="19.0964%" y="1791.50"></text></g><g><title>_int_malloc (2,521 samples, 0.67%)</title><rect x="18.8832%" y="1797" width="0.6663%" height="15" fill="rgb(232,162,48)" fg:x="71448" fg:w="2521"/><text x="19.1332%" y="1807.50"></text></g><g><title>_int_memalign (241 samples, 0.06%)</title><rect x="19.5494%" y="1797" width="0.0637%" height="15" fill="rgb(246,160,12)" fg:x="73969" fg:w="241"/><text x="19.7994%" y="1807.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (125 samples, 0.03%)</title><rect x="19.6139%" y="1797" width="0.0330%" height="15" fill="rgb(247,166,0)" fg:x="74213" fg:w="125"/><text x="19.8639%" y="1807.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (165 samples, 0.04%)</title><rect x="19.6768%" y="1765" width="0.0436%" height="15" fill="rgb(249,219,21)" fg:x="74451" fg:w="165"/><text x="19.9268%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (69 samples, 0.02%)</title><rect x="19.7265%" y="1765" width="0.0182%" height="15" fill="rgb(205,209,3)" fg:x="74639" fg:w="69"/><text x="19.9765%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (362 samples, 0.10%)</title><rect x="19.6557%" y="1797" width="0.0957%" height="15" fill="rgb(243,44,1)" fg:x="74371" fg:w="362"/><text x="19.9057%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (318 samples, 0.08%)</title><rect x="19.6673%" y="1781" width="0.0840%" height="15" fill="rgb(206,159,16)" fg:x="74415" fg:w="318"/><text x="19.9173%" y="1791.50"></text></g><g><title>alloc::raw_vec::finish_grow (233 samples, 0.06%)</title><rect x="19.7514%" y="1797" width="0.0616%" height="15" fill="rgb(244,77,30)" fg:x="74733" fg:w="233"/><text x="20.0014%" y="1807.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (88 samples, 0.02%)</title><rect x="19.7897%" y="1781" width="0.0233%" height="15" fill="rgb(218,69,12)" fg:x="74878" fg:w="88"/><text x="20.0397%" y="1791.50"></text></g><g><title>core::mem::drop (70 samples, 0.02%)</title><rect x="19.8375%" y="1765" width="0.0185%" height="15" fill="rgb(212,87,7)" fg:x="75059" fg:w="70"/><text x="20.0875%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (70 samples, 0.02%)</title><rect x="19.8375%" y="1749" width="0.0185%" height="15" fill="rgb(245,114,25)" fg:x="75059" fg:w="70"/><text x="20.0875%" y="1759.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (70 samples, 0.02%)</title><rect x="19.8375%" y="1733" width="0.0185%" height="15" fill="rgb(210,61,42)" fg:x="75059" fg:w="70"/><text x="20.0875%" y="1743.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (61 samples, 0.02%)</title><rect x="19.8399%" y="1717" width="0.0161%" height="15" fill="rgb(211,52,33)" fg:x="75068" fg:w="61"/><text x="20.0899%" y="1727.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (59 samples, 0.02%)</title><rect x="19.8404%" y="1701" width="0.0156%" height="15" fill="rgb(234,58,33)" fg:x="75070" fg:w="59"/><text x="20.0904%" y="1711.50"></text></g><g><title>core::sync::atomic::atomic_swap (59 samples, 0.02%)</title><rect x="19.8404%" y="1685" width="0.0156%" height="15" fill="rgb(220,115,36)" fg:x="75070" fg:w="59"/><text x="20.0904%" y="1695.50"></text></g><g><title>alloc_new_heap (197 samples, 0.05%)</title><rect x="19.8190%" y="1797" width="0.0521%" height="15" fill="rgb(243,153,54)" fg:x="74989" fg:w="197"/><text x="20.0690%" y="1807.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (197 samples, 0.05%)</title><rect x="19.8190%" y="1781" width="0.0521%" height="15" fill="rgb(251,47,18)" fg:x="74989" fg:w="197"/><text x="20.0690%" y="1791.50"></text></g><g><title>core::fmt::Formatter::pad (45 samples, 0.01%)</title><rect x="19.8711%" y="1797" width="0.0119%" height="15" fill="rgb(242,102,42)" fg:x="75186" fg:w="45"/><text x="20.1211%" y="1807.50"></text></g><g><title>core::fmt::Formatter::pad_integral (93 samples, 0.02%)</title><rect x="19.8830%" y="1797" width="0.0246%" height="15" fill="rgb(234,31,38)" fg:x="75231" fg:w="93"/><text x="20.1330%" y="1807.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (47 samples, 0.01%)</title><rect x="19.9076%" y="1797" width="0.0124%" height="15" fill="rgb(221,117,51)" fg:x="75324" fg:w="47"/><text x="20.1576%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt;: 32]&gt; (662 samples, 0.17%)</title><rect x="19.9356%" y="1797" width="0.1750%" height="15" fill="rgb(212,20,18)" fg:x="75430" fg:w="662"/><text x="20.1856%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (346 samples, 0.09%)</title><rect x="20.0191%" y="1781" width="0.0914%" height="15" fill="rgb(245,133,36)" fg:x="75746" fg:w="346"/><text x="20.2691%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;torrust_tracker::servers::udp::server::Udp::process_request::{{closure}}&gt;&gt; (578 samples, 0.15%)</title><rect x="20.1198%" y="1797" width="0.1528%" height="15" fill="rgb(212,6,19)" fg:x="76127" fg:w="578"/><text x="20.3698%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;torrust_tracker::servers::udp::server::Udp::receive_request::{{closure}}&gt; (54 samples, 0.01%)</title><rect x="20.2916%" y="1797" width="0.0143%" height="15" fill="rgb(218,1,36)" fg:x="76777" fg:w="54"/><text x="20.5416%" y="1807.50"></text></g><g><title>core::str::converts::from_utf8 (81 samples, 0.02%)</title><rect x="20.3061%" y="1797" width="0.0214%" height="15" fill="rgb(246,84,54)" fg:x="76832" fg:w="81"/><text x="20.5561%" y="1807.50"></text></g><g><title>core::str::validations::run_utf8_validation (70 samples, 0.02%)</title><rect x="20.3090%" y="1781" width="0.0185%" height="15" fill="rgb(242,110,6)" fg:x="76843" fg:w="70"/><text x="20.5590%" y="1791.50"></text></g><g><title>epoll_wait (87 samples, 0.02%)</title><rect x="20.3275%" y="1797" width="0.0230%" height="15" fill="rgb(214,47,5)" fg:x="76913" fg:w="87"/><text x="20.5775%" y="1807.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (52 samples, 0.01%)</title><rect x="20.3508%" y="1797" width="0.0137%" height="15" fill="rgb(218,159,25)" fg:x="77001" fg:w="52"/><text x="20.6008%" y="1807.50"></text></g><g><title>malloc_consolidate (109 samples, 0.03%)</title><rect x="20.3711%" y="1797" width="0.0288%" height="15" fill="rgb(215,211,28)" fg:x="77078" fg:w="109"/><text x="20.6211%" y="1807.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::new (76 samples, 0.02%)</title><rect x="20.4893%" y="1781" width="0.0201%" height="15" fill="rgb(238,59,32)" fg:x="77525" fg:w="76"/><text x="20.7393%" y="1791.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (357 samples, 0.09%)</title><rect x="20.4153%" y="1797" width="0.0944%" height="15" fill="rgb(226,82,3)" fg:x="77245" fg:w="357"/><text x="20.6653%" y="1807.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (42 samples, 0.01%)</title><rect x="20.5495%" y="1781" width="0.0111%" height="15" fill="rgb(240,164,32)" fg:x="77753" fg:w="42"/><text x="20.7995%" y="1791.50"></text></g><g><title>core::cmp::PartialOrd::ge (42 samples, 0.01%)</title><rect x="20.5495%" y="1765" width="0.0111%" height="15" fill="rgb(232,46,7)" fg:x="77753" fg:w="42"/><text x="20.7995%" y="1775.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (202 samples, 0.05%)</title><rect x="20.5096%" y="1797" width="0.0534%" height="15" fill="rgb(229,129,53)" fg:x="77602" fg:w="202"/><text x="20.7596%" y="1807.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (233 samples, 0.06%)</title><rect x="20.5630%" y="1797" width="0.0616%" height="15" fill="rgb(234,188,29)" fg:x="77804" fg:w="233"/><text x="20.8130%" y="1807.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (67 samples, 0.02%)</title><rect x="20.6069%" y="1781" width="0.0177%" height="15" fill="rgb(246,141,4)" fg:x="77970" fg:w="67"/><text x="20.8569%" y="1791.50"></text></g><g><title>std::sys_common::net::TcpListener::socket_addr (85 samples, 0.02%)</title><rect x="20.6291%" y="1797" width="0.0225%" height="15" fill="rgb(229,23,39)" fg:x="78054" fg:w="85"/><text x="20.8791%" y="1807.50"></text></g><g><title>std::sys_common::net::sockname (80 samples, 0.02%)</title><rect x="20.6304%" y="1781" width="0.0211%" height="15" fill="rgb(206,12,3)" fg:x="78059" fg:w="80"/><text x="20.8804%" y="1791.50"></text></g><g><title>syscall (511 samples, 0.14%)</title><rect x="20.6515%" y="1797" width="0.1351%" height="15" fill="rgb(252,226,20)" fg:x="78139" fg:w="511"/><text x="20.9015%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;core::option::Option&lt;alloc::boxed::Box&lt;tokio::runtime::scheduler::multi_thread::worker::Core&gt;&gt;&gt;&gt; (95 samples, 0.03%)</title><rect x="20.8175%" y="1701" width="0.0251%" height="15" fill="rgb(216,123,35)" fg:x="78767" fg:w="95"/><text x="21.0675%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (95 samples, 0.03%)</title><rect x="20.8175%" y="1685" width="0.0251%" height="15" fill="rgb(212,68,40)" fg:x="78767" fg:w="95"/><text x="21.0675%" y="1695.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (95 samples, 0.03%)</title><rect x="20.8175%" y="1669" width="0.0251%" height="15" fill="rgb(254,125,32)" fg:x="78767" fg:w="95"/><text x="21.0675%" y="1679.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (95 samples, 0.03%)</title><rect x="20.8175%" y="1653" width="0.0251%" height="15" fill="rgb(253,97,22)" fg:x="78767" fg:w="95"/><text x="21.0675%" y="1663.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (95 samples, 0.03%)</title><rect x="20.8175%" y="1637" width="0.0251%" height="15" fill="rgb(241,101,14)" fg:x="78767" fg:w="95"/><text x="21.0675%" y="1647.50"></text></g><g><title>core::mem::replace (95 samples, 0.03%)</title><rect x="20.8175%" y="1621" width="0.0251%" height="15" fill="rgb(238,103,29)" fg:x="78767" fg:w="95"/><text x="21.0675%" y="1631.50"></text></g><g><title>core::ptr::write (95 samples, 0.03%)</title><rect x="20.8175%" y="1605" width="0.0251%" height="15" fill="rgb(233,195,47)" fg:x="78767" fg:w="95"/><text x="21.0675%" y="1615.50"></text></g><g><title>tokio::runtime::context::with_scheduler (369 samples, 0.10%)</title><rect x="20.7866%" y="1797" width="0.0975%" height="15" fill="rgb(246,218,30)" fg:x="78650" fg:w="369"/><text x="21.0366%" y="1807.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (256 samples, 0.07%)</title><rect x="20.8165%" y="1781" width="0.0677%" height="15" fill="rgb(219,145,47)" fg:x="78763" fg:w="256"/><text x="21.0665%" y="1791.50"></text></g><g><title>tokio::runtime::context::with_scheduler::{{closure}} (255 samples, 0.07%)</title><rect x="20.8167%" y="1765" width="0.0674%" height="15" fill="rgb(243,12,26)" fg:x="78764" fg:w="255"/><text x="21.0667%" y="1775.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (255 samples, 0.07%)</title><rect x="20.8167%" y="1749" width="0.0674%" height="15" fill="rgb(214,87,16)" fg:x="78764" fg:w="255"/><text x="21.0667%" y="1759.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::{{closure}} (255 samples, 0.07%)</title><rect x="20.8167%" y="1733" width="0.0674%" height="15" fill="rgb(208,99,42)" fg:x="78764" fg:w="255"/><text x="21.0667%" y="1743.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::{{closure}} (255 samples, 0.07%)</title><rect x="20.8167%" y="1717" width="0.0674%" height="15" fill="rgb(253,99,2)" fg:x="78764" fg:w="255"/><text x="21.0667%" y="1727.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (156 samples, 0.04%)</title><rect x="20.8429%" y="1701" width="0.0412%" height="15" fill="rgb(220,168,23)" fg:x="78863" fg:w="156"/><text x="21.0929%" y="1711.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (52 samples, 0.01%)</title><rect x="20.8704%" y="1685" width="0.0137%" height="15" fill="rgb(242,38,24)" fg:x="78967" fg:w="52"/><text x="21.1204%" y="1695.50"></text></g><g><title>tokio::io::ready::Ready::from_mio (40 samples, 0.01%)</title><rect x="20.9179%" y="1781" width="0.0106%" height="15" fill="rgb(225,182,9)" fg:x="79147" fg:w="40"/><text x="21.1679%" y="1791.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (39 samples, 0.01%)</title><rect x="21.0200%" y="1765" width="0.0103%" height="15" fill="rgb(243,178,37)" fg:x="79533" fg:w="39"/><text x="21.2700%" y="1775.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (39 samples, 0.01%)</title><rect x="21.0200%" y="1749" width="0.0103%" height="15" fill="rgb(232,139,19)" fg:x="79533" fg:w="39"/><text x="21.2700%" y="1759.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (609 samples, 0.16%)</title><rect x="20.8841%" y="1797" width="0.1610%" height="15" fill="rgb(225,201,24)" fg:x="79019" fg:w="609"/><text x="21.1341%" y="1807.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness (439 samples, 0.12%)</title><rect x="20.9290%" y="1781" width="0.1160%" height="15" fill="rgb(221,47,46)" fg:x="79189" fg:w="439"/><text x="21.1790%" y="1791.50"></text></g><g><title>__entry_text_start (200 samples, 0.05%)</title><rect x="21.1751%" y="1781" width="0.0529%" height="15" fill="rgb(249,23,13)" fg:x="80120" fg:w="200"/><text x="21.4251%" y="1791.50"></text></g><g><title>__entry_text_start (331 samples, 0.09%)</title><rect x="21.2856%" y="1765" width="0.0875%" height="15" fill="rgb(219,9,5)" fg:x="80538" fg:w="331"/><text x="21.5356%" y="1775.50"></text></g><g><title>__entry_text_start (74 samples, 0.02%)</title><rect x="21.4264%" y="1749" width="0.0196%" height="15" fill="rgb(254,171,16)" fg:x="81071" fg:w="74"/><text x="21.6764%" y="1759.50"></text></g><g><title>tokio::runtime::io::registration::Registration::readiness::{{closure}} (1,520 samples, 0.40%)</title><rect x="21.0451%" y="1797" width="0.4017%" height="15" fill="rgb(230,171,20)" fg:x="79628" fg:w="1520"/><text x="21.2951%" y="1807.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::readiness::{{closure}} (828 samples, 0.22%)</title><rect x="21.2280%" y="1781" width="0.2188%" height="15" fill="rgb(210,71,41)" fg:x="80320" fg:w="828"/><text x="21.4780%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::io::scheduled_io::Readiness&gt; (279 samples, 0.07%)</title><rect x="21.3731%" y="1765" width="0.0737%" height="15" fill="rgb(206,173,20)" fg:x="80869" fg:w="279"/><text x="21.6231%" y="1775.50"></text></g><g><title>core::mem::drop (88 samples, 0.02%)</title><rect x="21.5464%" y="1781" width="0.0233%" height="15" fill="rgb(233,88,34)" fg:x="81525" fg:w="88"/><text x="21.7964%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (88 samples, 0.02%)</title><rect x="21.5464%" y="1765" width="0.0233%" height="15" fill="rgb(223,209,46)" fg:x="81525" fg:w="88"/><text x="21.7964%" y="1775.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (88 samples, 0.02%)</title><rect x="21.5464%" y="1749" width="0.0233%" height="15" fill="rgb(250,43,18)" fg:x="81525" fg:w="88"/><text x="21.7964%" y="1759.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (72 samples, 0.02%)</title><rect x="21.5507%" y="1733" width="0.0190%" height="15" fill="rgb(208,13,10)" fg:x="81541" fg:w="72"/><text x="21.8007%" y="1743.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (65 samples, 0.02%)</title><rect x="21.5525%" y="1717" width="0.0172%" height="15" fill="rgb(212,200,36)" fg:x="81548" fg:w="65"/><text x="21.8025%" y="1727.50"></text></g><g><title>core::sync::atomic::atomic_swap (65 samples, 0.02%)</title><rect x="21.5525%" y="1701" width="0.0172%" height="15" fill="rgb(225,90,30)" fg:x="81548" fg:w="65"/><text x="21.8025%" y="1711.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (69 samples, 0.02%)</title><rect x="21.5729%" y="1781" width="0.0182%" height="15" fill="rgb(236,182,39)" fg:x="81625" fg:w="69"/><text x="21.8229%" y="1791.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (66 samples, 0.02%)</title><rect x="21.5736%" y="1765" width="0.0174%" height="15" fill="rgb(212,144,35)" fg:x="81628" fg:w="66"/><text x="21.8236%" y="1775.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (48 samples, 0.01%)</title><rect x="21.5784%" y="1749" width="0.0127%" height="15" fill="rgb(228,63,44)" fg:x="81646" fg:w="48"/><text x="21.8284%" y="1759.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (566 samples, 0.15%)</title><rect x="21.4468%" y="1797" width="0.1496%" height="15" fill="rgb(228,109,6)" fg:x="81148" fg:w="566"/><text x="21.6968%" y="1807.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (77 samples, 0.02%)</title><rect x="21.6495%" y="1781" width="0.0204%" height="15" fill="rgb(238,117,24)" fg:x="81915" fg:w="77"/><text x="21.8995%" y="1791.50"></text></g><g><title>core::ptr::read (48 samples, 0.01%)</title><rect x="21.6572%" y="1765" width="0.0127%" height="15" fill="rgb(242,26,26)" fg:x="81944" fg:w="48"/><text x="21.9072%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (50 samples, 0.01%)</title><rect x="21.6699%" y="1781" width="0.0132%" height="15" fill="rgb(221,92,48)" fg:x="81992" fg:w="50"/><text x="21.9199%" y="1791.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 0.01%)</title><rect x="21.6699%" y="1765" width="0.0132%" height="15" fill="rgb(209,209,32)" fg:x="81992" fg:w="50"/><text x="21.9199%" y="1775.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (46 samples, 0.01%)</title><rect x="21.6831%" y="1781" width="0.0122%" height="15" fill="rgb(221,70,22)" fg:x="82042" fg:w="46"/><text x="21.9331%" y="1791.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (46 samples, 0.01%)</title><rect x="21.6831%" y="1765" width="0.0122%" height="15" fill="rgb(248,145,5)" fg:x="82042" fg:w="46"/><text x="21.9331%" y="1775.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (4,232 samples, 1.12%)</title><rect x="21.7119%" y="1765" width="1.1185%" height="15" fill="rgb(226,116,26)" fg:x="82151" fg:w="4232"/><text x="21.9619%" y="1775.50"></text></g><g><title>core::sync::atomic::atomic_add (4,232 samples, 1.12%)</title><rect x="21.7119%" y="1749" width="1.1185%" height="15" fill="rgb(244,5,17)" fg:x="82151" fg:w="4232"/><text x="21.9619%" y="1759.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (4,298 samples, 1.14%)</title><rect x="21.6952%" y="1781" width="1.1359%" height="15" fill="rgb(252,159,33)" fg:x="82088" fg:w="4298"/><text x="21.9452%" y="1791.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (4,674 samples, 1.24%)</title><rect x="21.5964%" y="1797" width="1.2353%" height="15" fill="rgb(206,71,0)" fg:x="81714" fg:w="4674"/><text x="21.8464%" y="1807.50"></text></g><g><title>__entry_text_start (67 samples, 0.02%)</title><rect x="22.8666%" y="1733" width="0.0177%" height="15" fill="rgb(233,118,54)" fg:x="86520" fg:w="67"/><text x="23.1166%" y="1743.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (210 samples, 0.06%)</title><rect x="22.8317%" y="1797" width="0.0555%" height="15" fill="rgb(234,83,48)" fg:x="86388" fg:w="210"/><text x="23.0817%" y="1807.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (107 samples, 0.03%)</title><rect x="22.8589%" y="1781" width="0.0283%" height="15" fill="rgb(228,3,54)" fg:x="86491" fg:w="107"/><text x="23.1089%" y="1791.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark_condvar (84 samples, 0.02%)</title><rect x="22.8650%" y="1765" width="0.0222%" height="15" fill="rgb(226,155,13)" fg:x="86514" fg:w="84"/><text x="23.1150%" y="1775.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (82 samples, 0.02%)</title><rect x="22.8655%" y="1749" width="0.0217%" height="15" fill="rgb(241,28,37)" fg:x="86516" fg:w="82"/><text x="23.1155%" y="1759.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::next_remote_task (120 samples, 0.03%)</title><rect x="22.8872%" y="1797" width="0.0317%" height="15" fill="rgb(233,93,10)" fg:x="86598" fg:w="120"/><text x="23.1372%" y="1807.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::is_empty (48 samples, 0.01%)</title><rect x="22.9062%" y="1781" width="0.0127%" height="15" fill="rgb(225,113,19)" fg:x="86670" fg:w="48"/><text x="23.1562%" y="1791.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::len (48 samples, 0.01%)</title><rect x="22.9062%" y="1765" width="0.0127%" height="15" fill="rgb(241,2,18)" fg:x="86670" fg:w="48"/><text x="23.1562%" y="1775.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (48 samples, 0.01%)</title><rect x="22.9062%" y="1749" width="0.0127%" height="15" fill="rgb(228,207,21)" fg:x="86670" fg:w="48"/><text x="23.1562%" y="1759.50"></text></g><g><title>core::sync::atomic::atomic_load (48 samples, 0.01%)</title><rect x="22.9062%" y="1733" width="0.0127%" height="15" fill="rgb(213,211,35)" fg:x="86670" fg:w="48"/><text x="23.1562%" y="1743.50"></text></g><g><title>tokio::runtime::task::core::Header::get_owner_id (61 samples, 0.02%)</title><rect x="22.9260%" y="1765" width="0.0161%" height="15" fill="rgb(209,83,10)" fg:x="86745" fg:w="61"/><text x="23.1760%" y="1775.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (61 samples, 0.02%)</title><rect x="22.9260%" y="1749" width="0.0161%" height="15" fill="rgb(209,164,1)" fg:x="86745" fg:w="61"/><text x="23.1760%" y="1759.50"></text></g><g><title>tokio::runtime::task::core::Header::get_owner_id::{{closure}} (61 samples, 0.02%)</title><rect x="22.9260%" y="1733" width="0.0161%" height="15" fill="rgb(213,184,43)" fg:x="86745" fg:w="61"/><text x="23.1760%" y="1743.50"></text></g><g><title>std::sync::poison::Flag::done (462 samples, 0.12%)</title><rect x="22.9432%" y="1717" width="0.1221%" height="15" fill="rgb(231,61,34)" fg:x="86810" fg:w="462"/><text x="23.1932%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::util::linked_list::LinkedList&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;,tokio::runtime::task::core::Header&gt;&gt;&gt; (540 samples, 0.14%)</title><rect x="22.9427%" y="1749" width="0.1427%" height="15" fill="rgb(235,75,3)" fg:x="86808" fg:w="540"/><text x="23.1927%" y="1759.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (540 samples, 0.14%)</title><rect x="22.9427%" y="1733" width="0.1427%" height="15" fill="rgb(220,106,47)" fg:x="86808" fg:w="540"/><text x="23.1927%" y="1743.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (76 samples, 0.02%)</title><rect x="23.0653%" y="1717" width="0.0201%" height="15" fill="rgb(210,196,33)" fg:x="87272" fg:w="76"/><text x="23.3153%" y="1727.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (91 samples, 0.02%)</title><rect x="23.0854%" y="1749" width="0.0241%" height="15" fill="rgb(229,154,42)" fg:x="87348" fg:w="91"/><text x="23.3354%" y="1759.50"></text></g><g><title>core::sync::atomic::atomic_sub (91 samples, 0.02%)</title><rect x="23.0854%" y="1733" width="0.0241%" height="15" fill="rgb(228,114,26)" fg:x="87348" fg:w="91"/><text x="23.3354%" y="1743.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (61 samples, 0.02%)</title><rect x="23.1095%" y="1749" width="0.0161%" height="15" fill="rgb(208,144,1)" fg:x="87439" fg:w="61"/><text x="23.3595%" y="1759.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (88 samples, 0.02%)</title><rect x="23.1272%" y="1685" width="0.0233%" height="15" fill="rgb(239,112,37)" fg:x="87506" fg:w="88"/><text x="23.3772%" y="1695.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (88 samples, 0.02%)</title><rect x="23.1272%" y="1669" width="0.0233%" height="15" fill="rgb(210,96,50)" fg:x="87506" fg:w="88"/><text x="23.3772%" y="1679.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::release (884 samples, 0.23%)</title><rect x="22.9189%" y="1797" width="0.2336%" height="15" fill="rgb(222,178,2)" fg:x="86718" fg:w="884"/><text x="23.1689%" y="1807.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::remove (873 samples, 0.23%)</title><rect x="22.9218%" y="1781" width="0.2307%" height="15" fill="rgb(226,74,18)" fg:x="86729" fg:w="873"/><text x="23.1718%" y="1791.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (796 samples, 0.21%)</title><rect x="22.9422%" y="1765" width="0.2104%" height="15" fill="rgb(225,67,54)" fg:x="86806" fg:w="796"/><text x="23.1922%" y="1775.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::shard_inner (102 samples, 0.03%)</title><rect x="23.1256%" y="1749" width="0.0270%" height="15" fill="rgb(251,92,32)" fg:x="87500" fg:w="102"/><text x="23.3756%" y="1759.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (102 samples, 0.03%)</title><rect x="23.1256%" y="1733" width="0.0270%" height="15" fill="rgb(228,149,22)" fg:x="87500" fg:w="102"/><text x="23.3756%" y="1743.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (102 samples, 0.03%)</title><rect x="23.1256%" y="1717" width="0.0270%" height="15" fill="rgb(243,54,13)" fg:x="87500" fg:w="102"/><text x="23.3756%" y="1727.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (96 samples, 0.03%)</title><rect x="23.1272%" y="1701" width="0.0254%" height="15" fill="rgb(243,180,28)" fg:x="87506" fg:w="96"/><text x="23.3772%" y="1711.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (38 samples, 0.01%)</title><rect x="23.2469%" y="1765" width="0.0100%" height="15" fill="rgb(208,167,24)" fg:x="87959" fg:w="38"/><text x="23.4969%" y="1775.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (38 samples, 0.01%)</title><rect x="23.2469%" y="1749" width="0.0100%" height="15" fill="rgb(245,73,45)" fg:x="87959" fg:w="38"/><text x="23.4969%" y="1759.50"></text></g><g><title>core::cell::BorrowRefMut::new (38 samples, 0.01%)</title><rect x="23.2469%" y="1733" width="0.0100%" height="15" fill="rgb(237,203,48)" fg:x="87959" fg:w="38"/><text x="23.4969%" y="1743.50"></text></g><g><title>tokio::runtime::scheduler::defer::Defer::wake (86 samples, 0.02%)</title><rect x="23.2424%" y="1781" width="0.0227%" height="15" fill="rgb(211,197,16)" fg:x="87942" fg:w="86"/><text x="23.4924%" y="1791.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (101 samples, 0.03%)</title><rect x="23.3193%" y="1685" width="0.0267%" height="15" fill="rgb(243,99,51)" fg:x="88233" fg:w="101"/><text x="23.5693%" y="1695.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_condvar (186 samples, 0.05%)</title><rect x="23.3045%" y="1749" width="0.0492%" height="15" fill="rgb(215,123,29)" fg:x="88177" fg:w="186"/><text x="23.5545%" y="1759.50"></text></g><g><title>std::sync::condvar::Condvar::wait (132 samples, 0.03%)</title><rect x="23.3188%" y="1733" width="0.0349%" height="15" fill="rgb(239,186,37)" fg:x="88231" fg:w="132"/><text x="23.5688%" y="1743.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (130 samples, 0.03%)</title><rect x="23.3193%" y="1717" width="0.0344%" height="15" fill="rgb(252,136,39)" fg:x="88233" fg:w="130"/><text x="23.5693%" y="1727.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_optional_timeout (130 samples, 0.03%)</title><rect x="23.3193%" y="1701" width="0.0344%" height="15" fill="rgb(223,213,32)" fg:x="88233" fg:w="130"/><text x="23.5693%" y="1711.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (69 samples, 0.02%)</title><rect x="23.3838%" y="1733" width="0.0182%" height="15" fill="rgb(233,115,5)" fg:x="88477" fg:w="69"/><text x="23.6338%" y="1743.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (69 samples, 0.02%)</title><rect x="23.3838%" y="1717" width="0.0182%" height="15" fill="rgb(207,226,44)" fg:x="88477" fg:w="69"/><text x="23.6338%" y="1727.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_driver (281 samples, 0.07%)</title><rect x="23.3537%" y="1749" width="0.0743%" height="15" fill="rgb(208,126,0)" fg:x="88363" fg:w="281"/><text x="23.6037%" y="1759.50"></text></g><g><title>tokio::runtime::driver::Driver::park (96 samples, 0.03%)</title><rect x="23.4026%" y="1733" width="0.0254%" height="15" fill="rgb(244,66,21)" fg:x="88548" fg:w="96"/><text x="23.6526%" y="1743.50"></text></g><g><title>tokio::runtime::driver::TimeDriver::park (96 samples, 0.03%)</title><rect x="23.4026%" y="1717" width="0.0254%" height="15" fill="rgb(222,97,12)" fg:x="88548" fg:w="96"/><text x="23.6526%" y="1727.50"></text></g><g><title>tokio::runtime::time::Driver::park (91 samples, 0.02%)</title><rect x="23.4039%" y="1701" width="0.0241%" height="15" fill="rgb(219,213,19)" fg:x="88553" fg:w="91"/><text x="23.6539%" y="1711.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (627 samples, 0.17%)</title><rect x="23.2651%" y="1781" width="0.1657%" height="15" fill="rgb(252,169,30)" fg:x="88028" fg:w="627"/><text x="23.5151%" y="1791.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (627 samples, 0.17%)</title><rect x="23.2651%" y="1765" width="0.1657%" height="15" fill="rgb(206,32,51)" fg:x="88028" fg:w="627"/><text x="23.5151%" y="1775.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (1,130 samples, 0.30%)</title><rect x="23.1525%" y="1797" width="0.2987%" height="15" fill="rgb(250,172,42)" fg:x="87602" fg:w="1130"/><text x="23.4025%" y="1807.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::should_notify_others (62 samples, 0.02%)</title><rect x="23.4348%" y="1781" width="0.0164%" height="15" fill="rgb(209,34,43)" fg:x="88670" fg:w="62"/><text x="23.6848%" y="1791.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (84 samples, 0.02%)</title><rect x="23.4612%" y="1781" width="0.0222%" height="15" fill="rgb(223,11,35)" fg:x="88770" fg:w="84"/><text x="23.7112%" y="1791.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (84 samples, 0.02%)</title><rect x="23.4612%" y="1765" width="0.0222%" height="15" fill="rgb(251,219,26)" fg:x="88770" fg:w="84"/><text x="23.7112%" y="1775.50"></text></g><g><title>core::cell::BorrowRefMut::new (84 samples, 0.02%)</title><rect x="23.4612%" y="1749" width="0.0222%" height="15" fill="rgb(231,119,3)" fg:x="88770" fg:w="84"/><text x="23.7112%" y="1759.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (250 samples, 0.07%)</title><rect x="23.5009%" y="1733" width="0.0661%" height="15" fill="rgb(216,97,11)" fg:x="88920" fg:w="250"/><text x="23.7509%" y="1743.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (250 samples, 0.07%)</title><rect x="23.5009%" y="1717" width="0.0661%" height="15" fill="rgb(223,59,9)" fg:x="88920" fg:w="250"/><text x="23.7509%" y="1727.50"></text></g><g><title>core::cell::BorrowRefMut::new (250 samples, 0.07%)</title><rect x="23.5009%" y="1701" width="0.0661%" height="15" fill="rgb(233,93,31)" fg:x="88920" fg:w="250"/><text x="23.7509%" y="1711.50"></text></g><g><title>tokio::runtime::coop::budget (368 samples, 0.10%)</title><rect x="23.4834%" y="1781" width="0.0973%" height="15" fill="rgb(239,81,33)" fg:x="88854" fg:w="368"/><text x="23.7334%" y="1791.50"></text></g><g><title>tokio::runtime::coop::with_budget (368 samples, 0.10%)</title><rect x="23.4834%" y="1765" width="0.0973%" height="15" fill="rgb(213,120,34)" fg:x="88854" fg:w="368"/><text x="23.7334%" y="1775.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (318 samples, 0.08%)</title><rect x="23.4966%" y="1749" width="0.0840%" height="15" fill="rgb(243,49,53)" fg:x="88904" fg:w="318"/><text x="23.7466%" y="1759.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::start_poll (82 samples, 0.02%)</title><rect x="23.5807%" y="1781" width="0.0217%" height="15" fill="rgb(247,216,33)" fg:x="89222" fg:w="82"/><text x="23.8307%" y="1791.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (600 samples, 0.16%)</title><rect x="23.4512%" y="1797" width="0.1586%" height="15" fill="rgb(226,26,14)" fg:x="88732" fg:w="600"/><text x="23.7012%" y="1807.50"></text></g><g><title>tokio::runtime::signal::Driver::process (79 samples, 0.02%)</title><rect x="23.6098%" y="1797" width="0.0209%" height="15" fill="rgb(215,49,53)" fg:x="89332" fg:w="79"/><text x="23.8598%" y="1807.50"></text></g><g><title>tokio::runtime::io::driver::signal::&lt;impl tokio::runtime::io::driver::Driver&gt;::consume_signal_ready (49 samples, 0.01%)</title><rect x="23.6177%" y="1781" width="0.0130%" height="15" fill="rgb(245,162,40)" fg:x="89362" fg:w="49"/><text x="23.8677%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::net::udp::UdpSocket&gt;&gt; (62 samples, 0.02%)</title><rect x="23.6687%" y="1733" width="0.0164%" height="15" fill="rgb(229,68,17)" fg:x="89555" fg:w="62"/><text x="23.9187%" y="1743.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (62 samples, 0.02%)</title><rect x="23.6687%" y="1717" width="0.0164%" height="15" fill="rgb(213,182,10)" fg:x="89555" fg:w="62"/><text x="23.9187%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;torrust_tracker::core::Tracker&gt;&gt; (140 samples, 0.04%)</title><rect x="23.6851%" y="1733" width="0.0370%" height="15" fill="rgb(245,125,30)" fg:x="89617" fg:w="140"/><text x="23.9351%" y="1743.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (140 samples, 0.04%)</title><rect x="23.6851%" y="1717" width="0.0370%" height="15" fill="rgb(232,202,2)" fg:x="89617" fg:w="140"/><text x="23.9351%" y="1727.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (91 samples, 0.02%)</title><rect x="23.6980%" y="1701" width="0.0241%" height="15" fill="rgb(237,140,51)" fg:x="89666" fg:w="91"/><text x="23.9480%" y="1711.50"></text></g><g><title>core::sync::atomic::atomic_sub (91 samples, 0.02%)</title><rect x="23.6980%" y="1685" width="0.0241%" height="15" fill="rgb(236,157,25)" fg:x="89666" fg:w="91"/><text x="23.9480%" y="1695.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (261 samples, 0.07%)</title><rect x="23.6542%" y="1781" width="0.0690%" height="15" fill="rgb(219,209,0)" fg:x="89500" fg:w="261"/><text x="23.9042%" y="1791.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage::{{closure}} (260 samples, 0.07%)</title><rect x="23.6544%" y="1765" width="0.0687%" height="15" fill="rgb(240,116,54)" fg:x="89501" fg:w="260"/><text x="23.9044%" y="1775.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::process_valid_request::{{closure}} (233 samples, 0.06%)</title><rect x="23.6616%" y="1749" width="0.0616%" height="15" fill="rgb(216,10,36)" fg:x="89528" fg:w="233"/><text x="23.9116%" y="1759.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (353 samples, 0.09%)</title><rect x="23.6306%" y="1797" width="0.0933%" height="15" fill="rgb(222,72,44)" fg:x="89411" fg:w="353"/><text x="23.8806%" y="1807.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_xor (127 samples, 0.03%)</title><rect x="23.7356%" y="1765" width="0.0336%" height="15" fill="rgb(232,159,9)" fg:x="89808" fg:w="127"/><text x="23.9856%" y="1775.50"></text></g><g><title>core::sync::atomic::atomic_xor (127 samples, 0.03%)</title><rect x="23.7356%" y="1749" width="0.0336%" height="15" fill="rgb(210,39,32)" fg:x="89808" fg:w="127"/><text x="23.9856%" y="1759.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_complete (135 samples, 0.04%)</title><rect x="23.7345%" y="1781" width="0.0357%" height="15" fill="rgb(216,194,45)" fg:x="89804" fg:w="135"/><text x="23.9845%" y="1791.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (44 samples, 0.01%)</title><rect x="23.7728%" y="1765" width="0.0116%" height="15" fill="rgb(218,18,35)" fg:x="89949" fg:w="44"/><text x="24.0228%" y="1775.50"></text></g><g><title>core::sync::atomic::atomic_sub (44 samples, 0.01%)</title><rect x="23.7728%" y="1749" width="0.0116%" height="15" fill="rgb(207,83,51)" fg:x="89949" fg:w="44"/><text x="24.0228%" y="1759.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (242 samples, 0.06%)</title><rect x="23.7239%" y="1797" width="0.0640%" height="15" fill="rgb(225,63,43)" fg:x="89764" fg:w="242"/><text x="23.9739%" y="1807.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_terminal (67 samples, 0.02%)</title><rect x="23.7702%" y="1781" width="0.0177%" height="15" fill="rgb(207,57,36)" fg:x="89939" fg:w="67"/><text x="24.0202%" y="1791.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (53 samples, 0.01%)</title><rect x="23.7879%" y="1797" width="0.0140%" height="15" fill="rgb(216,99,33)" fg:x="90006" fg:w="53"/><text x="24.0379%" y="1807.50"></text></g><g><title>std::sync::poison::Flag::done (203 samples, 0.05%)</title><rect x="23.8645%" y="1717" width="0.0537%" height="15" fill="rgb(225,42,16)" fg:x="90296" fg:w="203"/><text x="24.1145%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::util::sharded_list::ShardGuard&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;,tokio::runtime::task::core::Header&gt;&gt; (272 samples, 0.07%)</title><rect x="23.8635%" y="1765" width="0.0719%" height="15" fill="rgb(220,201,45)" fg:x="90292" fg:w="272"/><text x="24.1135%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::util::linked_list::LinkedList&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;,tokio::runtime::task::core::Header&gt;&gt;&gt; (272 samples, 0.07%)</title><rect x="23.8635%" y="1749" width="0.0719%" height="15" fill="rgb(225,33,4)" fg:x="90292" fg:w="272"/><text x="24.1135%" y="1759.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (272 samples, 0.07%)</title><rect x="23.8635%" y="1733" width="0.0719%" height="15" fill="rgb(224,33,50)" fg:x="90292" fg:w="272"/><text x="24.1135%" y="1743.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (65 samples, 0.02%)</title><rect x="23.9182%" y="1717" width="0.0172%" height="15" fill="rgb(246,198,51)" fg:x="90499" fg:w="65"/><text x="24.1682%" y="1727.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (48 samples, 0.01%)</title><rect x="23.9227%" y="1701" width="0.0127%" height="15" fill="rgb(205,22,4)" fg:x="90516" fg:w="48"/><text x="24.1727%" y="1711.50"></text></g><g><title>core::sync::atomic::atomic_swap (48 samples, 0.01%)</title><rect x="23.9227%" y="1685" width="0.0127%" height="15" fill="rgb(206,3,8)" fg:x="90516" fg:w="48"/><text x="24.1727%" y="1695.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (78 samples, 0.02%)</title><rect x="23.9354%" y="1765" width="0.0206%" height="15" fill="rgb(251,23,15)" fg:x="90564" fg:w="78"/><text x="24.1854%" y="1775.50"></text></g><g><title>core::sync::atomic::atomic_add (78 samples, 0.02%)</title><rect x="23.9354%" y="1749" width="0.0206%" height="15" fill="rgb(252,88,28)" fg:x="90564" fg:w="78"/><text x="24.1854%" y="1759.50"></text></g><g><title>&lt;tokio::runtime::task::Task&lt;S&gt; as tokio::util::linked_list::Link&gt;::pointers (39 samples, 0.01%)</title><rect x="23.9658%" y="1749" width="0.0103%" height="15" fill="rgb(212,127,14)" fg:x="90679" fg:w="39"/><text x="24.2158%" y="1759.50"></text></g><g><title>tokio::runtime::task::core::Header::get_trailer (39 samples, 0.01%)</title><rect x="23.9658%" y="1733" width="0.0103%" height="15" fill="rgb(247,145,37)" fg:x="90679" fg:w="39"/><text x="24.2158%" y="1743.50"></text></g><g><title>tokio::util::sharded_list::ShardGuard&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push (531 samples, 0.14%)</title><rect x="23.8537%" y="1781" width="0.1403%" height="15" fill="rgb(209,117,53)" fg:x="90255" fg:w="531"/><text x="24.1037%" y="1791.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push_front (144 samples, 0.04%)</title><rect x="23.9560%" y="1765" width="0.0381%" height="15" fill="rgb(212,90,42)" fg:x="90642" fg:w="144"/><text x="24.2060%" y="1775.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (40 samples, 0.01%)</title><rect x="23.9956%" y="1701" width="0.0106%" height="15" fill="rgb(218,164,37)" fg:x="90792" fg:w="40"/><text x="24.2456%" y="1711.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (40 samples, 0.01%)</title><rect x="23.9956%" y="1685" width="0.0106%" height="15" fill="rgb(246,65,34)" fg:x="90792" fg:w="40"/><text x="24.2456%" y="1695.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind_inner (1,157 samples, 0.31%)</title><rect x="23.8022%" y="1797" width="0.3058%" height="15" fill="rgb(231,100,33)" fg:x="90060" fg:w="1157"/><text x="24.0522%" y="1807.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::lock_shard (431 samples, 0.11%)</title><rect x="23.9940%" y="1781" width="0.1139%" height="15" fill="rgb(228,126,14)" fg:x="90786" fg:w="431"/><text x="24.2440%" y="1791.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::shard_inner (430 samples, 0.11%)</title><rect x="23.9943%" y="1765" width="0.1136%" height="15" fill="rgb(215,173,21)" fg:x="90787" fg:w="430"/><text x="24.2443%" y="1775.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (429 samples, 0.11%)</title><rect x="23.9946%" y="1749" width="0.1134%" height="15" fill="rgb(210,6,40)" fg:x="90788" fg:w="429"/><text x="24.2446%" y="1759.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (429 samples, 0.11%)</title><rect x="23.9946%" y="1733" width="0.1134%" height="15" fill="rgb(212,48,18)" fg:x="90788" fg:w="429"/><text x="24.2446%" y="1743.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (425 samples, 0.11%)</title><rect x="23.9956%" y="1717" width="0.1123%" height="15" fill="rgb(230,214,11)" fg:x="90792" fg:w="425"/><text x="24.2456%" y="1727.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (385 samples, 0.10%)</title><rect x="24.0062%" y="1701" width="0.1018%" height="15" fill="rgb(254,105,39)" fg:x="90832" fg:w="385"/><text x="24.2562%" y="1711.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (385 samples, 0.10%)</title><rect x="24.0062%" y="1685" width="0.1018%" height="15" fill="rgb(245,158,5)" fg:x="90832" fg:w="385"/><text x="24.2562%" y="1695.50"></text></g><g><title>tokio::runtime::task::raw::drop_abort_handle (184 samples, 0.05%)</title><rect x="24.1079%" y="1797" width="0.0486%" height="15" fill="rgb(249,208,11)" fg:x="91217" fg:w="184"/><text x="24.3579%" y="1807.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (167 samples, 0.04%)</title><rect x="24.1124%" y="1781" width="0.0441%" height="15" fill="rgb(210,39,28)" fg:x="91234" fg:w="167"/><text x="24.3624%" y="1791.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (167 samples, 0.04%)</title><rect x="24.1124%" y="1765" width="0.0441%" height="15" fill="rgb(211,56,53)" fg:x="91234" fg:w="167"/><text x="24.3624%" y="1775.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (44 samples, 0.01%)</title><rect x="24.1719%" y="1733" width="0.0116%" height="15" fill="rgb(226,201,30)" fg:x="91459" fg:w="44"/><text x="24.4219%" y="1743.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (44 samples, 0.01%)</title><rect x="24.1719%" y="1717" width="0.0116%" height="15" fill="rgb(239,101,34)" fg:x="91459" fg:w="44"/><text x="24.4219%" y="1727.50"></text></g><g><title>tokio::runtime::task::raw::drop_join_handle_slow (126 samples, 0.03%)</title><rect x="24.1566%" y="1797" width="0.0333%" height="15" fill="rgb(226,209,5)" fg:x="91401" fg:w="126"/><text x="24.4066%" y="1807.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow (117 samples, 0.03%)</title><rect x="24.1590%" y="1781" width="0.0309%" height="15" fill="rgb(250,105,47)" fg:x="91410" fg:w="117"/><text x="24.4090%" y="1791.50"></text></g><g><title>tokio::runtime::task::state::State::unset_join_interested (76 samples, 0.02%)</title><rect x="24.1698%" y="1765" width="0.0201%" height="15" fill="rgb(230,72,3)" fg:x="91451" fg:w="76"/><text x="24.4198%" y="1775.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update (76 samples, 0.02%)</title><rect x="24.1698%" y="1749" width="0.0201%" height="15" fill="rgb(232,218,39)" fg:x="91451" fg:w="76"/><text x="24.4198%" y="1759.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (53 samples, 0.01%)</title><rect x="24.2636%" y="1333" width="0.0140%" height="15" fill="rgb(248,166,6)" fg:x="91806" fg:w="53"/><text x="24.5136%" y="1343.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (53 samples, 0.01%)</title><rect x="24.2636%" y="1317" width="0.0140%" height="15" fill="rgb(247,89,20)" fg:x="91806" fg:w="53"/><text x="24.5136%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::maintenance (87 samples, 0.02%)</title><rect x="24.2567%" y="1397" width="0.0230%" height="15" fill="rgb(248,130,54)" fg:x="91780" fg:w="87"/><text x="24.5067%" y="1407.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (82 samples, 0.02%)</title><rect x="24.2581%" y="1381" width="0.0217%" height="15" fill="rgb(234,196,4)" fg:x="91785" fg:w="82"/><text x="24.5081%" y="1391.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (82 samples, 0.02%)</title><rect x="24.2581%" y="1365" width="0.0217%" height="15" fill="rgb(250,143,31)" fg:x="91785" fg:w="82"/><text x="24.5081%" y="1375.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (82 samples, 0.02%)</title><rect x="24.2581%" y="1349" width="0.0217%" height="15" fill="rgb(211,110,34)" fg:x="91785" fg:w="82"/><text x="24.5081%" y="1359.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::is_parked (56 samples, 0.01%)</title><rect x="24.2805%" y="1381" width="0.0148%" height="15" fill="rgb(215,124,48)" fg:x="91870" fg:w="56"/><text x="24.5305%" y="1391.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_parked (60 samples, 0.02%)</title><rect x="24.2797%" y="1397" width="0.0159%" height="15" fill="rgb(216,46,13)" fg:x="91867" fg:w="60"/><text x="24.5297%" y="1407.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (78 samples, 0.02%)</title><rect x="24.2969%" y="1381" width="0.0206%" height="15" fill="rgb(205,184,25)" fg:x="91932" fg:w="78"/><text x="24.5469%" y="1391.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (74 samples, 0.02%)</title><rect x="24.2980%" y="1365" width="0.0196%" height="15" fill="rgb(228,1,10)" fg:x="91936" fg:w="74"/><text x="24.5480%" y="1375.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (74 samples, 0.02%)</title><rect x="24.2980%" y="1349" width="0.0196%" height="15" fill="rgb(213,116,27)" fg:x="91936" fg:w="74"/><text x="24.5480%" y="1359.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (74 samples, 0.02%)</title><rect x="24.2980%" y="1333" width="0.0196%" height="15" fill="rgb(241,95,50)" fg:x="91936" fg:w="74"/><text x="24.5480%" y="1343.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (60 samples, 0.02%)</title><rect x="24.3017%" y="1317" width="0.0159%" height="15" fill="rgb(238,48,32)" fg:x="91950" fg:w="60"/><text x="24.5517%" y="1327.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (60 samples, 0.02%)</title><rect x="24.3017%" y="1301" width="0.0159%" height="15" fill="rgb(235,113,49)" fg:x="91950" fg:w="60"/><text x="24.5517%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (266 samples, 0.07%)</title><rect x="24.2493%" y="1413" width="0.0703%" height="15" fill="rgb(205,127,43)" fg:x="91752" fg:w="266"/><text x="24.4993%" y="1423.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_parked (91 samples, 0.02%)</title><rect x="24.2956%" y="1397" width="0.0241%" height="15" fill="rgb(250,162,2)" fg:x="91927" fg:w="91"/><text x="24.5456%" y="1407.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task (44 samples, 0.01%)</title><rect x="24.3196%" y="1413" width="0.0116%" height="15" fill="rgb(220,13,41)" fg:x="92018" fg:w="44"/><text x="24.5696%" y="1423.50"></text></g><g><title>core::sync::atomic::AtomicU64::compare_exchange (98 samples, 0.03%)</title><rect x="24.4304%" y="1365" width="0.0259%" height="15" fill="rgb(249,221,25)" fg:x="92437" fg:w="98"/><text x="24.6804%" y="1375.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (98 samples, 0.03%)</title><rect x="24.4304%" y="1349" width="0.0259%" height="15" fill="rgb(215,208,19)" fg:x="92437" fg:w="98"/><text x="24.6804%" y="1359.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (272 samples, 0.07%)</title><rect x="24.4026%" y="1381" width="0.0719%" height="15" fill="rgb(236,175,2)" fg:x="92332" fg:w="272"/><text x="24.6526%" y="1391.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (339 samples, 0.09%)</title><rect x="24.3865%" y="1397" width="0.0896%" height="15" fill="rgb(241,52,2)" fg:x="92271" fg:w="339"/><text x="24.6365%" y="1407.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (549 samples, 0.15%)</title><rect x="24.3313%" y="1413" width="0.1451%" height="15" fill="rgb(248,140,14)" fg:x="92062" fg:w="549"/><text x="24.5813%" y="1423.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (980 samples, 0.26%)</title><rect x="24.2187%" y="1605" width="0.2590%" height="15" fill="rgb(253,22,42)" fg:x="91636" fg:w="980"/><text x="24.4687%" y="1615.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}} (980 samples, 0.26%)</title><rect x="24.2187%" y="1589" width="0.2590%" height="15" fill="rgb(234,61,47)" fg:x="91636" fg:w="980"/><text x="24.4687%" y="1599.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (980 samples, 0.26%)</title><rect x="24.2187%" y="1573" width="0.2590%" height="15" fill="rgb(208,226,15)" fg:x="91636" fg:w="980"/><text x="24.4687%" y="1583.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (980 samples, 0.26%)</title><rect x="24.2187%" y="1557" width="0.2590%" height="15" fill="rgb(217,221,4)" fg:x="91636" fg:w="980"/><text x="24.4687%" y="1567.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (980 samples, 0.26%)</title><rect x="24.2187%" y="1541" width="0.2590%" height="15" fill="rgb(212,174,34)" fg:x="91636" fg:w="980"/><text x="24.4687%" y="1551.50"></text></g><g><title>tokio::runtime::context::set_scheduler (980 samples, 0.26%)</title><rect x="24.2187%" y="1525" width="0.2590%" height="15" fill="rgb(253,83,4)" fg:x="91636" fg:w="980"/><text x="24.4687%" y="1535.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (980 samples, 0.26%)</title><rect x="24.2187%" y="1509" width="0.2590%" height="15" fill="rgb(250,195,49)" fg:x="91636" fg:w="980"/><text x="24.4687%" y="1519.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (980 samples, 0.26%)</title><rect x="24.2187%" y="1493" width="0.2590%" height="15" fill="rgb(241,192,25)" fg:x="91636" fg:w="980"/><text x="24.4687%" y="1503.50"></text></g><g><title>tokio::runtime::context::set_scheduler::{{closure}} (980 samples, 0.26%)</title><rect x="24.2187%" y="1477" width="0.2590%" height="15" fill="rgb(208,124,10)" fg:x="91636" fg:w="980"/><text x="24.4687%" y="1487.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (980 samples, 0.26%)</title><rect x="24.2187%" y="1461" width="0.2590%" height="15" fill="rgb(222,33,0)" fg:x="91636" fg:w="980"/><text x="24.4687%" y="1471.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}::{{closure}} (980 samples, 0.26%)</title><rect x="24.2187%" y="1445" width="0.2590%" height="15" fill="rgb(234,209,28)" fg:x="91636" fg:w="980"/><text x="24.4687%" y="1455.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (980 samples, 0.26%)</title><rect x="24.2187%" y="1429" width="0.2590%" height="15" fill="rgb(224,11,23)" fg:x="91636" fg:w="980"/><text x="24.4687%" y="1439.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1,050 samples, 0.28%)</title><rect x="24.2073%" y="1637" width="0.2775%" height="15" fill="rgb(232,99,1)" fg:x="91593" fg:w="1050"/><text x="24.4573%" y="1647.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (1,047 samples, 0.28%)</title><rect x="24.2081%" y="1621" width="0.2767%" height="15" fill="rgb(237,95,45)" fg:x="91596" fg:w="1047"/><text x="24.4581%" y="1631.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (1,075 samples, 0.28%)</title><rect x="24.2071%" y="1653" width="0.2841%" height="15" fill="rgb(208,109,11)" fg:x="91592" fg:w="1075"/><text x="24.4571%" y="1663.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,099 samples, 0.29%)</title><rect x="24.2071%" y="1685" width="0.2905%" height="15" fill="rgb(216,190,48)" fg:x="91592" fg:w="1099"/><text x="24.4571%" y="1695.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (1,099 samples, 0.29%)</title><rect x="24.2071%" y="1669" width="0.2905%" height="15" fill="rgb(251,171,36)" fg:x="91592" fg:w="1099"/><text x="24.4571%" y="1679.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (1,117 samples, 0.30%)</title><rect x="24.2063%" y="1749" width="0.2952%" height="15" fill="rgb(230,62,22)" fg:x="91589" fg:w="1117"/><text x="24.4563%" y="1759.50"></text></g><g><title>std::panic::catch_unwind (1,115 samples, 0.29%)</title><rect x="24.2068%" y="1733" width="0.2947%" height="15" fill="rgb(225,114,35)" fg:x="91591" fg:w="1115"/><text x="24.4568%" y="1743.50"></text></g><g><title>std::panicking::try (1,115 samples, 0.29%)</title><rect x="24.2068%" y="1717" width="0.2947%" height="15" fill="rgb(215,118,42)" fg:x="91591" fg:w="1115"/><text x="24.4568%" y="1727.50"></text></g><g><title>std::panicking::try::do_call (1,114 samples, 0.29%)</title><rect x="24.2071%" y="1701" width="0.2944%" height="15" fill="rgb(243,119,21)" fg:x="91592" fg:w="1114"/><text x="24.4571%" y="1711.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (377 samples, 0.10%)</title><rect x="24.5015%" y="1749" width="0.0996%" height="15" fill="rgb(252,177,53)" fg:x="92706" fg:w="377"/><text x="24.7515%" y="1759.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (377 samples, 0.10%)</title><rect x="24.5015%" y="1733" width="0.0996%" height="15" fill="rgb(237,209,29)" fg:x="92706" fg:w="377"/><text x="24.7515%" y="1743.50"></text></g><g><title>tokio::runtime::task::raw::poll (1,566 samples, 0.41%)</title><rect x="24.1899%" y="1797" width="0.4139%" height="15" fill="rgb(212,65,23)" fg:x="91527" fg:w="1566"/><text x="24.4399%" y="1807.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1,533 samples, 0.41%)</title><rect x="24.1986%" y="1781" width="0.4052%" height="15" fill="rgb(230,222,46)" fg:x="91560" fg:w="1533"/><text x="24.4486%" y="1791.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (1,525 samples, 0.40%)</title><rect x="24.2007%" y="1765" width="0.4030%" height="15" fill="rgb(215,135,32)" fg:x="91568" fg:w="1525"/><text x="24.4507%" y="1775.50"></text></g><g><title>core::array::&lt;impl core::default::Default for [T: 32]&gt;::default (42 samples, 0.01%)</title><rect x="24.6209%" y="1781" width="0.0111%" height="15" fill="rgb(246,101,22)" fg:x="93158" fg:w="42"/><text x="24.8709%" y="1791.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (190 samples, 0.05%)</title><rect x="24.6059%" y="1797" width="0.0502%" height="15" fill="rgb(206,107,13)" fg:x="93101" fg:w="190"/><text x="24.8559%" y="1807.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (47 samples, 0.01%)</title><rect x="24.6984%" y="1781" width="0.0124%" height="15" fill="rgb(250,100,44)" fg:x="93451" fg:w="47"/><text x="24.9484%" y="1791.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (47 samples, 0.01%)</title><rect x="24.6984%" y="1765" width="0.0124%" height="15" fill="rgb(231,147,38)" fg:x="93451" fg:w="47"/><text x="24.9484%" y="1775.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::instant_to_tick (43 samples, 0.01%)</title><rect x="24.7219%" y="1749" width="0.0114%" height="15" fill="rgb(229,8,40)" fg:x="93540" fg:w="43"/><text x="24.9719%" y="1759.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (73 samples, 0.02%)</title><rect x="24.7153%" y="1781" width="0.0193%" height="15" fill="rgb(221,135,30)" fg:x="93515" fg:w="73"/><text x="24.9653%" y="1791.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::now (50 samples, 0.01%)</title><rect x="24.7214%" y="1765" width="0.0132%" height="15" fill="rgb(249,193,18)" fg:x="93538" fg:w="50"/><text x="24.9714%" y="1775.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (346 samples, 0.09%)</title><rect x="24.6561%" y="1797" width="0.0914%" height="15" fill="rgb(209,133,39)" fg:x="93291" fg:w="346"/><text x="24.9061%" y="1807.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_right (51 samples, 0.01%)</title><rect x="24.9053%" y="1749" width="0.0135%" height="15" fill="rgb(232,100,14)" fg:x="94234" fg:w="51"/><text x="25.1553%" y="1759.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (441 samples, 0.12%)</title><rect x="24.8340%" y="1765" width="0.1166%" height="15" fill="rgb(224,185,1)" fg:x="93964" fg:w="441"/><text x="25.0840%" y="1775.50"></text></g><g><title>tokio::runtime::time::wheel::level::slot_range (99 samples, 0.03%)</title><rect x="24.9243%" y="1749" width="0.0262%" height="15" fill="rgb(223,139,8)" fg:x="94306" fg:w="99"/><text x="25.1743%" y="1759.50"></text></g><g><title>core::num::&lt;impl usize&gt;::pow (99 samples, 0.03%)</title><rect x="24.9243%" y="1733" width="0.0262%" height="15" fill="rgb(232,213,38)" fg:x="94306" fg:w="99"/><text x="25.1743%" y="1743.50"></text></g><g><title>tokio::runtime::time::wheel::level::level_range (154 samples, 0.04%)</title><rect x="24.9505%" y="1765" width="0.0407%" height="15" fill="rgb(207,94,22)" fg:x="94405" fg:w="154"/><text x="25.2005%" y="1775.50"></text></g><g><title>tokio::runtime::time::wheel::level::slot_range (146 samples, 0.04%)</title><rect x="24.9526%" y="1749" width="0.0386%" height="15" fill="rgb(219,183,54)" fg:x="94413" fg:w="146"/><text x="25.2026%" y="1759.50"></text></g><g><title>core::num::&lt;impl usize&gt;::pow (146 samples, 0.04%)</title><rect x="24.9526%" y="1733" width="0.0386%" height="15" fill="rgb(216,185,54)" fg:x="94413" fg:w="146"/><text x="25.2026%" y="1743.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (833 samples, 0.22%)</title><rect x="24.8136%" y="1781" width="0.2202%" height="15" fill="rgb(254,217,39)" fg:x="93887" fg:w="833"/><text x="25.0636%" y="1791.50"></text></g><g><title>tokio::runtime::time::wheel::level::slot_range (161 samples, 0.04%)</title><rect x="24.9912%" y="1765" width="0.0426%" height="15" fill="rgb(240,178,23)" fg:x="94559" fg:w="161"/><text x="25.2412%" y="1775.50"></text></g><g><title>core::num::&lt;impl usize&gt;::pow (161 samples, 0.04%)</title><rect x="24.9912%" y="1749" width="0.0426%" height="15" fill="rgb(218,11,47)" fg:x="94559" fg:w="161"/><text x="25.2412%" y="1759.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (1,138 samples, 0.30%)</title><rect x="24.7475%" y="1797" width="0.3008%" height="15" fill="rgb(218,51,51)" fg:x="93637" fg:w="1138"/><text x="24.9975%" y="1807.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (55 samples, 0.01%)</title><rect x="25.0338%" y="1781" width="0.0145%" height="15" fill="rgb(238,126,27)" fg:x="94720" fg:w="55"/><text x="25.2838%" y="1791.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (55 samples, 0.01%)</title><rect x="25.0338%" y="1765" width="0.0145%" height="15" fill="rgb(249,202,22)" fg:x="94720" fg:w="55"/><text x="25.2838%" y="1775.50"></text></g><g><title>torrust_tracker::core::Tracker::get_torrent_peers_for_peer (112 samples, 0.03%)</title><rect x="25.0575%" y="1797" width="0.0296%" height="15" fill="rgb(254,195,49)" fg:x="94810" fg:w="112"/><text x="25.3075%" y="1807.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::mutex_std::&lt;impl torrust_tracker_torrent_repository::entry::EntrySync for alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;::get_peers_for_client (79 samples, 0.02%)</title><rect x="25.0663%" y="1781" width="0.0209%" height="15" fill="rgb(208,123,14)" fg:x="94843" fg:w="79"/><text x="25.3163%" y="1791.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::single::&lt;impl torrust_tracker_torrent_repository::entry::Entry for torrust_tracker_torrent_repository::entry::Torrent&gt;::get_peers_for_client (48 samples, 0.01%)</title><rect x="25.0745%" y="1765" width="0.0127%" height="15" fill="rgb(224,200,8)" fg:x="94874" fg:w="48"/><text x="25.3245%" y="1775.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (41 samples, 0.01%)</title><rect x="25.0763%" y="1749" width="0.0108%" height="15" fill="rgb(217,61,36)" fg:x="94881" fg:w="41"/><text x="25.3263%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (41 samples, 0.01%)</title><rect x="25.0763%" y="1733" width="0.0108%" height="15" fill="rgb(206,35,45)" fg:x="94881" fg:w="41"/><text x="25.3263%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (41 samples, 0.01%)</title><rect x="25.0763%" y="1717" width="0.0108%" height="15" fill="rgb(217,65,33)" fg:x="94881" fg:w="41"/><text x="25.3263%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (41 samples, 0.01%)</title><rect x="25.0763%" y="1701" width="0.0108%" height="15" fill="rgb(222,158,48)" fg:x="94881" fg:w="41"/><text x="25.3263%" y="1711.50"></text></g><g><title>torrust_tracker::servers::udp::connection_cookie::cookie_builder::build (234 samples, 0.06%)</title><rect x="25.0927%" y="1797" width="0.0618%" height="15" fill="rgb(254,2,54)" fg:x="94943" fg:w="234"/><text x="25.3427%" y="1807.50"></text></g><g><title>std::hash::random::DefaultHasher::new (108 samples, 0.03%)</title><rect x="25.1260%" y="1781" width="0.0285%" height="15" fill="rgb(250,143,38)" fg:x="95069" fg:w="108"/><text x="25.3760%" y="1791.50"></text></g><g><title>torrust_tracker::servers::udp::connection_cookie::cookie_builder::get_last_time_extent (98 samples, 0.03%)</title><rect x="25.1545%" y="1797" width="0.0259%" height="15" fill="rgb(248,25,0)" fg:x="95177" fg:w="98"/><text x="25.4045%" y="1807.50"></text></g><g><title>torrust_tracker_clock::time_extent::Make::now (75 samples, 0.02%)</title><rect x="25.1606%" y="1781" width="0.0198%" height="15" fill="rgb(206,152,27)" fg:x="95200" fg:w="75"/><text x="25.4106%" y="1791.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (415 samples, 0.11%)</title><rect x="25.4194%" y="1781" width="0.1097%" height="15" fill="rgb(240,77,30)" fg:x="96179" fg:w="415"/><text x="25.6694%" y="1791.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (129 samples, 0.03%)</title><rect x="25.4950%" y="1765" width="0.0341%" height="15" fill="rgb(231,5,3)" fg:x="96465" fg:w="129"/><text x="25.7450%" y="1775.50"></text></g><g><title>core::sync::atomic::atomic_add (129 samples, 0.03%)</title><rect x="25.4950%" y="1749" width="0.0341%" height="15" fill="rgb(207,226,32)" fg:x="96465" fg:w="129"/><text x="25.7450%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::net::udp::UdpSocket&gt;&gt; (112 samples, 0.03%)</title><rect x="25.5290%" y="1781" width="0.0296%" height="15" fill="rgb(222,207,47)" fg:x="96594" fg:w="112"/><text x="25.7790%" y="1791.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (112 samples, 0.03%)</title><rect x="25.5290%" y="1765" width="0.0296%" height="15" fill="rgb(229,115,45)" fg:x="96594" fg:w="112"/><text x="25.7790%" y="1775.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (49 samples, 0.01%)</title><rect x="25.5457%" y="1749" width="0.0130%" height="15" fill="rgb(224,191,6)" fg:x="96657" fg:w="49"/><text x="25.7957%" y="1759.50"></text></g><g><title>core::sync::atomic::atomic_sub (49 samples, 0.01%)</title><rect x="25.5457%" y="1733" width="0.0130%" height="15" fill="rgb(230,227,24)" fg:x="96657" fg:w="49"/><text x="25.7957%" y="1743.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::process_request::{{closure}} (1,399 samples, 0.37%)</title><rect x="25.1950%" y="1797" width="0.3697%" height="15" fill="rgb(228,80,19)" fg:x="95330" fg:w="1399"/><text x="25.4450%" y="1807.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (40 samples, 0.01%)</title><rect x="25.7902%" y="1781" width="0.0106%" height="15" fill="rgb(247,229,0)" fg:x="97582" fg:w="40"/><text x="26.0402%" y="1791.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (330 samples, 0.09%)</title><rect x="25.8007%" y="1781" width="0.0872%" height="15" fill="rgb(237,194,15)" fg:x="97622" fg:w="330"/><text x="26.0507%" y="1791.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (210 samples, 0.06%)</title><rect x="25.8325%" y="1765" width="0.0555%" height="15" fill="rgb(219,203,20)" fg:x="97742" fg:w="210"/><text x="26.0825%" y="1775.50"></text></g><g><title>core::sync::atomic::atomic_add (210 samples, 0.06%)</title><rect x="25.8325%" y="1749" width="0.0555%" height="15" fill="rgb(234,128,8)" fg:x="97742" fg:w="210"/><text x="26.0825%" y="1759.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_packet (80 samples, 0.02%)</title><rect x="25.8980%" y="1781" width="0.0211%" height="15" fill="rgb(248,202,8)" fg:x="97990" fg:w="80"/><text x="26.1480%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::net::udp::UdpSocket&gt;&gt; (212 samples, 0.06%)</title><rect x="26.0212%" y="1765" width="0.0560%" height="15" fill="rgb(206,104,37)" fg:x="98456" fg:w="212"/><text x="26.2712%" y="1775.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (212 samples, 0.06%)</title><rect x="26.0212%" y="1749" width="0.0560%" height="15" fill="rgb(223,8,27)" fg:x="98456" fg:w="212"/><text x="26.2712%" y="1759.50"></text></g><g><title>torrust_tracker::core::Tracker::update_torrent_with_peer_and_get_stats::{{closure}} (321 samples, 0.08%)</title><rect x="26.2329%" y="1717" width="0.0848%" height="15" fill="rgb(216,217,28)" fg:x="99257" fg:w="321"/><text x="26.4829%" y="1727.50"></text></g><g><title>torrust_tracker::core::Tracker::announce::{{closure}} (434 samples, 0.11%)</title><rect x="26.2188%" y="1733" width="0.1147%" height="15" fill="rgb(249,199,1)" fg:x="99204" fg:w="434"/><text x="26.4688%" y="1743.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_announce::{{closure}} (635 samples, 0.17%)</title><rect x="26.1697%" y="1749" width="0.1678%" height="15" fill="rgb(240,85,17)" fg:x="99018" fg:w="635"/><text x="26.4197%" y="1759.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_connect::{{closure}} (56 samples, 0.01%)</title><rect x="26.3375%" y="1749" width="0.0148%" height="15" fill="rgb(206,108,45)" fg:x="99653" fg:w="56"/><text x="26.5875%" y="1759.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_request::{{closure}} (986 samples, 0.26%)</title><rect x="26.0978%" y="1765" width="0.2606%" height="15" fill="rgb(245,210,41)" fg:x="98746" fg:w="986"/><text x="26.3478%" y="1775.50"></text></g><g><title>core::fmt::Formatter::new (50 samples, 0.01%)</title><rect x="26.3864%" y="1733" width="0.0132%" height="15" fill="rgb(206,13,37)" fg:x="99838" fg:w="50"/><text x="26.6364%" y="1743.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (39 samples, 0.01%)</title><rect x="26.4427%" y="1701" width="0.0103%" height="15" fill="rgb(250,61,18)" fg:x="100051" fg:w="39"/><text x="26.6927%" y="1711.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (208 samples, 0.05%)</title><rect x="26.3996%" y="1733" width="0.0550%" height="15" fill="rgb(235,172,48)" fg:x="99888" fg:w="208"/><text x="26.6496%" y="1743.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (188 samples, 0.05%)</title><rect x="26.4049%" y="1717" width="0.0497%" height="15" fill="rgb(249,201,17)" fg:x="99908" fg:w="188"/><text x="26.6549%" y="1727.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (131 samples, 0.03%)</title><rect x="26.4546%" y="1733" width="0.0346%" height="15" fill="rgb(219,208,6)" fg:x="100096" fg:w="131"/><text x="26.7046%" y="1743.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (119 samples, 0.03%)</title><rect x="26.4578%" y="1717" width="0.0315%" height="15" fill="rgb(248,31,23)" fg:x="100108" fg:w="119"/><text x="26.7078%" y="1727.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (426 samples, 0.11%)</title><rect x="26.3769%" y="1749" width="0.1126%" height="15" fill="rgb(245,15,42)" fg:x="99802" fg:w="426"/><text x="26.6269%" y="1759.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (74 samples, 0.02%)</title><rect x="26.4921%" y="1749" width="0.0196%" height="15" fill="rgb(222,217,39)" fg:x="100238" fg:w="74"/><text x="26.7421%" y="1759.50"></text></g><g><title>torrust_tracker::servers::udp::logging::map_action_name (51 samples, 0.01%)</title><rect x="26.5175%" y="1749" width="0.0135%" height="15" fill="rgb(210,219,27)" fg:x="100334" fg:w="51"/><text x="26.7675%" y="1759.50"></text></g><g><title>torrust_tracker::servers::udp::logging::log_request (679 samples, 0.18%)</title><rect x="26.3584%" y="1765" width="0.1795%" height="15" fill="rgb(252,166,36)" fg:x="99732" fg:w="679"/><text x="26.6084%" y="1775.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (106 samples, 0.03%)</title><rect x="26.5471%" y="1749" width="0.0280%" height="15" fill="rgb(245,132,34)" fg:x="100446" fg:w="106"/><text x="26.7971%" y="1759.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (72 samples, 0.02%)</title><rect x="26.5561%" y="1733" width="0.0190%" height="15" fill="rgb(236,54,3)" fg:x="100480" fg:w="72"/><text x="26.8061%" y="1743.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (58 samples, 0.02%)</title><rect x="26.5598%" y="1717" width="0.0153%" height="15" fill="rgb(241,173,43)" fg:x="100494" fg:w="58"/><text x="26.8098%" y="1727.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (38 samples, 0.01%)</title><rect x="26.5762%" y="1749" width="0.0100%" height="15" fill="rgb(215,190,9)" fg:x="100556" fg:w="38"/><text x="26.8262%" y="1759.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_packet::{{closure}} (2,539 samples, 0.67%)</title><rect x="25.9191%" y="1781" width="0.6710%" height="15" fill="rgb(242,101,16)" fg:x="98070" fg:w="2539"/><text x="26.1691%" y="1791.50"></text></g><g><title>torrust_tracker::servers::udp::logging::log_response (198 samples, 0.05%)</title><rect x="26.5379%" y="1765" width="0.0523%" height="15" fill="rgb(223,190,21)" fg:x="100411" fg:w="198"/><text x="26.7879%" y="1775.50"></text></g><g><title>alloc::vec::from_elem (583 samples, 0.15%)</title><rect x="26.7149%" y="1765" width="0.1541%" height="15" fill="rgb(215,228,25)" fg:x="101081" fg:w="583"/><text x="26.9649%" y="1775.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (583 samples, 0.15%)</title><rect x="26.7149%" y="1749" width="0.1541%" height="15" fill="rgb(225,36,22)" fg:x="101081" fg:w="583"/><text x="26.9649%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (583 samples, 0.15%)</title><rect x="26.7149%" y="1733" width="0.1541%" height="15" fill="rgb(251,106,46)" fg:x="101081" fg:w="583"/><text x="26.9649%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (583 samples, 0.15%)</title><rect x="26.7149%" y="1717" width="0.1541%" height="15" fill="rgb(208,90,1)" fg:x="101081" fg:w="583"/><text x="26.9649%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (583 samples, 0.15%)</title><rect x="26.7149%" y="1701" width="0.1541%" height="15" fill="rgb(243,10,4)" fg:x="101081" fg:w="583"/><text x="26.9649%" y="1711.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (583 samples, 0.15%)</title><rect x="26.7149%" y="1685" width="0.1541%" height="15" fill="rgb(212,137,27)" fg:x="101081" fg:w="583"/><text x="26.9649%" y="1695.50"></text></g><g><title>alloc::alloc::alloc_zeroed (583 samples, 0.15%)</title><rect x="26.7149%" y="1669" width="0.1541%" height="15" fill="rgb(231,220,49)" fg:x="101081" fg:w="583"/><text x="26.9649%" y="1679.50"></text></g><g><title>__rdl_alloc_zeroed (583 samples, 0.15%)</title><rect x="26.7149%" y="1653" width="0.1541%" height="15" fill="rgb(237,96,20)" fg:x="101081" fg:w="583"/><text x="26.9649%" y="1663.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (583 samples, 0.15%)</title><rect x="26.7149%" y="1637" width="0.1541%" height="15" fill="rgb(239,229,30)" fg:x="101081" fg:w="583"/><text x="26.9649%" y="1647.50"></text></g><g><title>__entry_text_start (110 samples, 0.03%)</title><rect x="26.9660%" y="1701" width="0.0291%" height="15" fill="rgb(219,65,33)" fg:x="102031" fg:w="110"/><text x="27.2160%" y="1711.50"></text></g><g><title>__entry_text_start (278 samples, 0.07%)</title><rect x="27.0162%" y="1589" width="0.0735%" height="15" fill="rgb(243,134,7)" fg:x="102221" fg:w="278"/><text x="27.2662%" y="1599.50"></text></g><g><title>std::sys::pal::unix::cvt (338 samples, 0.09%)</title><rect x="27.0897%" y="1589" width="0.0893%" height="15" fill="rgb(216,177,54)" fg:x="102499" fg:w="338"/><text x="27.3397%" y="1599.50"></text></g><g><title>&lt;isize as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (338 samples, 0.09%)</title><rect x="27.0897%" y="1573" width="0.0893%" height="15" fill="rgb(211,160,20)" fg:x="102499" fg:w="338"/><text x="27.3397%" y="1583.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::process_valid_request::{{closure}} (6,133 samples, 1.62%)</title><rect x="25.5647%" y="1797" width="1.6209%" height="15" fill="rgb(239,85,39)" fg:x="96729" fg:w="6133"/><text x="25.8147%" y="1807.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::send_response::{{closure}} (2,253 samples, 0.60%)</title><rect x="26.5902%" y="1781" width="0.5955%" height="15" fill="rgb(232,125,22)" fg:x="100609" fg:w="2253"/><text x="26.8402%" y="1791.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::send_packet::{{closure}} (1,179 samples, 0.31%)</title><rect x="26.8740%" y="1765" width="0.3116%" height="15" fill="rgb(244,57,34)" fg:x="101683" fg:w="1179"/><text x="27.1240%" y="1775.50"></text></g><g><title>tokio::net::udp::UdpSocket::send_to::{{closure}} (1,082 samples, 0.29%)</title><rect x="26.8997%" y="1749" width="0.2860%" height="15" fill="rgb(214,203,32)" fg:x="101780" fg:w="1082"/><text x="27.1497%" y="1759.50"></text></g><g><title>tokio::net::udp::UdpSocket::send_to_addr::{{closure}} (1,028 samples, 0.27%)</title><rect x="26.9139%" y="1733" width="0.2717%" height="15" fill="rgb(207,58,43)" fg:x="101834" fg:w="1028"/><text x="27.1639%" y="1743.50"></text></g><g><title>tokio::runtime::io::registration::Registration::async_io::{{closure}} (922 samples, 0.24%)</title><rect x="26.9420%" y="1717" width="0.2437%" height="15" fill="rgb(215,193,15)" fg:x="101940" fg:w="922"/><text x="27.1920%" y="1727.50"></text></g><g><title>tokio::net::udp::UdpSocket::send_to_addr::{{closure}}::{{closure}} (716 samples, 0.19%)</title><rect x="26.9964%" y="1701" width="0.1892%" height="15" fill="rgb(232,15,44)" fg:x="102146" fg:w="716"/><text x="27.2464%" y="1711.50"></text></g><g><title>mio::net::udp::UdpSocket::send_to (681 samples, 0.18%)</title><rect x="27.0056%" y="1685" width="0.1800%" height="15" fill="rgb(212,3,48)" fg:x="102181" fg:w="681"/><text x="27.2556%" y="1695.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (681 samples, 0.18%)</title><rect x="27.0056%" y="1669" width="0.1800%" height="15" fill="rgb(218,128,7)" fg:x="102181" fg:w="681"/><text x="27.2556%" y="1679.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (681 samples, 0.18%)</title><rect x="27.0056%" y="1653" width="0.1800%" height="15" fill="rgb(226,216,39)" fg:x="102181" fg:w="681"/><text x="27.2556%" y="1663.50"></text></g><g><title>mio::net::udp::UdpSocket::send_to::{{closure}} (681 samples, 0.18%)</title><rect x="27.0056%" y="1637" width="0.1800%" height="15" fill="rgb(243,47,51)" fg:x="102181" fg:w="681"/><text x="27.2556%" y="1647.50"></text></g><g><title>std::net::udp::UdpSocket::send_to (681 samples, 0.18%)</title><rect x="27.0056%" y="1621" width="0.1800%" height="15" fill="rgb(241,183,40)" fg:x="102181" fg:w="681"/><text x="27.2556%" y="1631.50"></text></g><g><title>std::sys_common::net::UdpSocket::send_to (661 samples, 0.17%)</title><rect x="27.0109%" y="1605" width="0.1747%" height="15" fill="rgb(231,217,32)" fg:x="102201" fg:w="661"/><text x="27.2609%" y="1615.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (38 samples, 0.01%)</title><rect x="27.1944%" y="1765" width="0.0100%" height="15" fill="rgb(229,61,38)" fg:x="102895" fg:w="38"/><text x="27.4444%" y="1775.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (38 samples, 0.01%)</title><rect x="27.1944%" y="1749" width="0.0100%" height="15" fill="rgb(225,210,5)" fg:x="102895" fg:w="38"/><text x="27.4444%" y="1759.50"></text></g><g><title>core::sync::atomic::atomic_add (38 samples, 0.01%)</title><rect x="27.1944%" y="1733" width="0.0100%" height="15" fill="rgb(231,79,45)" fg:x="102895" fg:w="38"/><text x="27.4444%" y="1743.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (46 samples, 0.01%)</title><rect x="27.2316%" y="1749" width="0.0122%" height="15" fill="rgb(224,100,7)" fg:x="103036" fg:w="46"/><text x="27.4816%" y="1759.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (46 samples, 0.01%)</title><rect x="27.2316%" y="1733" width="0.0122%" height="15" fill="rgb(241,198,18)" fg:x="103036" fg:w="46"/><text x="27.4816%" y="1743.50"></text></g><g><title>tokio::net::udp::UdpSocket::readable::{{closure}} (474 samples, 0.13%)</title><rect x="27.2438%" y="1749" width="0.1253%" height="15" fill="rgb(252,97,53)" fg:x="103082" fg:w="474"/><text x="27.4938%" y="1759.50"></text></g><g><title>tokio::net::udp::UdpSocket::ready::{{closure}} (454 samples, 0.12%)</title><rect x="27.2491%" y="1733" width="0.1200%" height="15" fill="rgb(220,88,7)" fg:x="103102" fg:w="454"/><text x="27.4991%" y="1743.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::receive_request::{{closure}} (655 samples, 0.17%)</title><rect x="27.2168%" y="1765" width="0.1731%" height="15" fill="rgb(213,176,14)" fg:x="102980" fg:w="655"/><text x="27.4668%" y="1775.50"></text></g><g><title>tokio::net::udp::UdpSocket::recv_buf_from::{{closure}} (79 samples, 0.02%)</title><rect x="27.3690%" y="1749" width="0.0209%" height="15" fill="rgb(246,73,7)" fg:x="103556" fg:w="79"/><text x="27.6190%" y="1759.50"></text></g><g><title>tokio::runtime::io::registration::Registration::async_io::{{closure}} (58 samples, 0.02%)</title><rect x="27.3746%" y="1733" width="0.0153%" height="15" fill="rgb(245,64,36)" fg:x="103577" fg:w="58"/><text x="27.6246%" y="1743.50"></text></g><g><title>__rdl_alloc (49 samples, 0.01%)</title><rect x="27.4542%" y="1445" width="0.0130%" height="15" fill="rgb(245,80,10)" fg:x="103878" fg:w="49"/><text x="27.7042%" y="1455.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (49 samples, 0.01%)</title><rect x="27.4542%" y="1429" width="0.0130%" height="15" fill="rgb(232,107,50)" fg:x="103878" fg:w="49"/><text x="27.7042%" y="1439.50"></text></g><g><title>std::sys::pal::unix::alloc::aligned_malloc (49 samples, 0.01%)</title><rect x="27.4542%" y="1413" width="0.0130%" height="15" fill="rgb(253,3,0)" fg:x="103878" fg:w="49"/><text x="27.7042%" y="1423.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (299 samples, 0.08%)</title><rect x="27.3899%" y="1669" width="0.0790%" height="15" fill="rgb(212,99,53)" fg:x="103635" fg:w="299"/><text x="27.6399%" y="1679.50"></text></g><g><title>tokio::task::spawn::spawn_inner::{{closure}} (299 samples, 0.08%)</title><rect x="27.3899%" y="1653" width="0.0790%" height="15" fill="rgb(249,111,54)" fg:x="103635" fg:w="299"/><text x="27.6399%" y="1663.50"></text></g><g><title>tokio::runtime::scheduler::Handle::spawn (299 samples, 0.08%)</title><rect x="27.3899%" y="1637" width="0.0790%" height="15" fill="rgb(249,55,30)" fg:x="103635" fg:w="299"/><text x="27.6399%" y="1647.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::spawn (299 samples, 0.08%)</title><rect x="27.3899%" y="1621" width="0.0790%" height="15" fill="rgb(237,47,42)" fg:x="103635" fg:w="299"/><text x="27.6399%" y="1631.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (299 samples, 0.08%)</title><rect x="27.3899%" y="1605" width="0.0790%" height="15" fill="rgb(211,20,18)" fg:x="103635" fg:w="299"/><text x="27.6399%" y="1615.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (287 samples, 0.08%)</title><rect x="27.3931%" y="1589" width="0.0759%" height="15" fill="rgb(231,203,46)" fg:x="103647" fg:w="287"/><text x="27.6431%" y="1599.50"></text></g><g><title>tokio::runtime::task::new_task (278 samples, 0.07%)</title><rect x="27.3955%" y="1573" width="0.0735%" height="15" fill="rgb(237,142,3)" fg:x="103656" fg:w="278"/><text x="27.6455%" y="1583.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (278 samples, 0.07%)</title><rect x="27.3955%" y="1557" width="0.0735%" height="15" fill="rgb(241,107,1)" fg:x="103656" fg:w="278"/><text x="27.6455%" y="1567.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (278 samples, 0.07%)</title><rect x="27.3955%" y="1541" width="0.0735%" height="15" fill="rgb(229,83,13)" fg:x="103656" fg:w="278"/><text x="27.6455%" y="1551.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (56 samples, 0.01%)</title><rect x="27.4542%" y="1525" width="0.0148%" height="15" fill="rgb(241,91,40)" fg:x="103878" fg:w="56"/><text x="27.7042%" y="1535.50"></text></g><g><title>alloc::alloc::exchange_malloc (56 samples, 0.01%)</title><rect x="27.4542%" y="1509" width="0.0148%" height="15" fill="rgb(225,3,45)" fg:x="103878" fg:w="56"/><text x="27.7042%" y="1519.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (56 samples, 0.01%)</title><rect x="27.4542%" y="1493" width="0.0148%" height="15" fill="rgb(244,223,14)" fg:x="103878" fg:w="56"/><text x="27.7042%" y="1503.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (56 samples, 0.01%)</title><rect x="27.4542%" y="1477" width="0.0148%" height="15" fill="rgb(224,124,37)" fg:x="103878" fg:w="56"/><text x="27.7042%" y="1487.50"></text></g><g><title>alloc::alloc::alloc (56 samples, 0.01%)</title><rect x="27.4542%" y="1461" width="0.0148%" height="15" fill="rgb(251,171,30)" fg:x="103878" fg:w="56"/><text x="27.7042%" y="1471.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::run_with_graceful_shutdown::{{closure}}::{{closure}} (1,073 samples, 0.28%)</title><rect x="27.1856%" y="1797" width="0.2836%" height="15" fill="rgb(236,46,54)" fg:x="102862" fg:w="1073"/><text x="27.4356%" y="1807.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::run_udp_server::{{closure}} (1,073 samples, 0.28%)</title><rect x="27.1856%" y="1781" width="0.2836%" height="15" fill="rgb(245,213,5)" fg:x="102862" fg:w="1073"/><text x="27.4356%" y="1791.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::spawn_request_processor (300 samples, 0.08%)</title><rect x="27.3899%" y="1765" width="0.0793%" height="15" fill="rgb(230,144,27)" fg:x="103635" fg:w="300"/><text x="27.6399%" y="1775.50"></text></g><g><title>tokio::task::spawn::spawn (300 samples, 0.08%)</title><rect x="27.3899%" y="1749" width="0.0793%" height="15" fill="rgb(220,86,6)" fg:x="103635" fg:w="300"/><text x="27.6399%" y="1759.50"></text></g><g><title>tokio::task::spawn::spawn_inner (300 samples, 0.08%)</title><rect x="27.3899%" y="1733" width="0.0793%" height="15" fill="rgb(240,20,13)" fg:x="103635" fg:w="300"/><text x="27.6399%" y="1743.50"></text></g><g><title>tokio::runtime::context::current::with_current (300 samples, 0.08%)</title><rect x="27.3899%" y="1717" width="0.0793%" height="15" fill="rgb(217,89,34)" fg:x="103635" fg:w="300"/><text x="27.6399%" y="1727.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (300 samples, 0.08%)</title><rect x="27.3899%" y="1701" width="0.0793%" height="15" fill="rgb(229,13,5)" fg:x="103635" fg:w="300"/><text x="27.6399%" y="1711.50"></text></g><g><title>tokio::runtime::context::current::with_current::{{closure}} (300 samples, 0.08%)</title><rect x="27.3899%" y="1685" width="0.0793%" height="15" fill="rgb(244,67,35)" fg:x="103635" fg:w="300"/><text x="27.6399%" y="1695.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::single::&lt;impl torrust_tracker_torrent_repository::entry::Entry for torrust_tracker_torrent_repository::entry::Torrent&gt;::get_stats (81 samples, 0.02%)</title><rect x="27.4949%" y="1765" width="0.0214%" height="15" fill="rgb(221,40,2)" fg:x="104032" fg:w="81"/><text x="27.7449%" y="1775.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::values (62 samples, 0.02%)</title><rect x="27.4999%" y="1749" width="0.0164%" height="15" fill="rgb(237,157,21)" fg:x="104051" fg:w="62"/><text x="27.7499%" y="1759.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::mutex_std::&lt;impl torrust_tracker_torrent_repository::entry::EntrySync for alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;::insert_or_update_peer_and_get_stats (353 samples, 0.09%)</title><rect x="27.4734%" y="1797" width="0.0933%" height="15" fill="rgb(222,94,11)" fg:x="103951" fg:w="353"/><text x="27.7234%" y="1807.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::single::&lt;impl torrust_tracker_torrent_repository::entry::Entry for torrust_tracker_torrent_repository::entry::Torrent&gt;::insert_or_update_peer_and_get_stats (273 samples, 0.07%)</title><rect x="27.4946%" y="1781" width="0.0722%" height="15" fill="rgb(249,113,6)" fg:x="104031" fg:w="273"/><text x="27.7446%" y="1791.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::single::&lt;impl torrust_tracker_torrent_repository::entry::Entry for torrust_tracker_torrent_repository::entry::Torrent&gt;::insert_or_update_peer (191 samples, 0.05%)</title><rect x="27.5163%" y="1765" width="0.0505%" height="15" fill="rgb(238,137,36)" fg:x="104113" fg:w="191"/><text x="27.7663%" y="1775.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some_and (46 samples, 0.01%)</title><rect x="27.5546%" y="1749" width="0.0122%" height="15" fill="rgb(210,102,26)" fg:x="104258" fg:w="46"/><text x="27.8046%" y="1759.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::single::&lt;impl torrust_tracker_torrent_repository::entry::Entry for torrust_tracker_torrent_repository::entry::Torrent&gt;::insert_or_update_peer::{{closure}} (45 samples, 0.01%)</title><rect x="27.5548%" y="1733" width="0.0119%" height="15" fill="rgb(218,30,30)" fg:x="104259" fg:w="45"/><text x="27.8048%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;torrust_tracker_primitives::peer::Peer&gt;&gt; (44 samples, 0.01%)</title><rect x="27.5551%" y="1717" width="0.0116%" height="15" fill="rgb(214,67,26)" fg:x="104260" fg:w="44"/><text x="27.8051%" y="1727.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 0.01%)</title><rect x="27.5551%" y="1701" width="0.0116%" height="15" fill="rgb(251,9,53)" fg:x="104260" fg:w="44"/><text x="27.8051%" y="1711.50"></text></g><g><title>torrust_tracker_torrent_repository::repository::rw_lock_std_mutex_std::&lt;impl torrust_tracker_torrent_repository::repository::Repository&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt; for torrust_tracker_torrent_repository::repository::RwLockStd&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;&gt;::get (61 samples, 0.02%)</title><rect x="27.5667%" y="1797" width="0.0161%" height="15" fill="rgb(228,204,25)" fg:x="104304" fg:w="61"/><text x="27.8167%" y="1807.50"></text></g><g><title>torrust_tracker_torrent_repository::repository::rw_lock_std_mutex_std::&lt;impl torrust_tracker_torrent_repository::repository::Repository&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt; for torrust_tracker_torrent_repository::repository::RwLockStd&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;&gt;::update_torrent_with_peer_and_get_stats (48 samples, 0.01%)</title><rect x="27.5829%" y="1797" width="0.0127%" height="15" fill="rgb(207,153,8)" fg:x="104365" fg:w="48"/><text x="27.8329%" y="1807.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (46 samples, 0.01%)</title><rect x="27.6027%" y="1749" width="0.0122%" height="15" fill="rgb(242,9,16)" fg:x="104440" fg:w="46"/><text x="27.8527%" y="1759.50"></text></g><g><title>core::sync::atomic::atomic_load (46 samples, 0.01%)</title><rect x="27.6027%" y="1733" width="0.0122%" height="15" fill="rgb(217,211,10)" fg:x="104440" fg:w="46"/><text x="27.8527%" y="1743.50"></text></g><g><title>torrust_tracker_torrent_repository::repository::rw_lock_std_mutex_std::&lt;impl torrust_tracker_torrent_repository::repository::RwLockStd&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;&gt;::get_torrents (74 samples, 0.02%)</title><rect x="27.5955%" y="1797" width="0.0196%" height="15" fill="rgb(219,228,52)" fg:x="104413" fg:w="74"/><text x="27.8455%" y="1807.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (68 samples, 0.02%)</title><rect x="27.5971%" y="1781" width="0.0180%" height="15" fill="rgb(231,92,29)" fg:x="104419" fg:w="68"/><text x="27.8471%" y="1791.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::read (65 samples, 0.02%)</title><rect x="27.5979%" y="1765" width="0.0172%" height="15" fill="rgb(232,8,23)" fg:x="104422" fg:w="65"/><text x="27.8479%" y="1775.50"></text></g><g><title>tracing::span::Span::log (64 samples, 0.02%)</title><rect x="27.6162%" y="1797" width="0.0169%" height="15" fill="rgb(216,211,34)" fg:x="104491" fg:w="64"/><text x="27.8662%" y="1807.50"></text></g><g><title>core::fmt::Arguments::new_v1 (39 samples, 0.01%)</title><rect x="27.6669%" y="1781" width="0.0103%" height="15" fill="rgb(236,151,0)" fg:x="104683" fg:w="39"/><text x="27.9169%" y="1791.50"></text></g><g><title>tracing_core::span::Record::is_empty (67 samples, 0.02%)</title><rect x="27.6807%" y="1781" width="0.0177%" height="15" fill="rgb(209,168,3)" fg:x="104735" fg:w="67"/><text x="27.9307%" y="1791.50"></text></g><g><title>tracing_core::field::ValueSet::is_empty (67 samples, 0.02%)</title><rect x="27.6807%" y="1765" width="0.0177%" height="15" fill="rgb(208,129,28)" fg:x="104735" fg:w="67"/><text x="27.9307%" y="1775.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (43 samples, 0.01%)</title><rect x="27.6870%" y="1749" width="0.0114%" height="15" fill="rgb(229,78,22)" fg:x="104759" fg:w="43"/><text x="27.9370%" y="1759.50"></text></g><g><title>tracing::span::Span::record_all (253 samples, 0.07%)</title><rect x="27.6331%" y="1797" width="0.0669%" height="15" fill="rgb(228,187,13)" fg:x="104555" fg:w="253"/><text x="27.8831%" y="1807.50"></text></g><g><title>unlink_chunk (517 samples, 0.14%)</title><rect x="27.6999%" y="1797" width="0.1366%" height="15" fill="rgb(240,119,24)" fg:x="104808" fg:w="517"/><text x="27.9499%" y="1807.50"></text></g><g><title>uuid::builder::Builder::with_variant (112 samples, 0.03%)</title><rect x="27.8408%" y="1765" width="0.0296%" height="15" fill="rgb(209,194,42)" fg:x="105341" fg:w="112"/><text x="28.0908%" y="1775.50"></text></g><g><title>__entry_text_start (86 samples, 0.02%)</title><rect x="27.8477%" y="1749" width="0.0227%" height="15" fill="rgb(247,200,46)" fg:x="105367" fg:w="86"/><text x="28.0977%" y="1759.50"></text></g><g><title>uuid::builder::Builder::from_random_bytes (150 samples, 0.04%)</title><rect x="27.8408%" y="1781" width="0.0396%" height="15" fill="rgb(218,76,16)" fg:x="105341" fg:w="150"/><text x="28.0908%" y="1791.50"></text></g><g><title>uuid::builder::Builder::with_version (38 samples, 0.01%)</title><rect x="27.8704%" y="1765" width="0.0100%" height="15" fill="rgb(225,21,48)" fg:x="105453" fg:w="38"/><text x="28.1204%" y="1775.50"></text></g><g><title>__entry_text_start (187 samples, 0.05%)</title><rect x="27.9600%" y="1637" width="0.0494%" height="15" fill="rgb(239,223,50)" fg:x="105792" fg:w="187"/><text x="28.2100%" y="1647.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u32 (433 samples, 0.11%)</title><rect x="27.8953%" y="1669" width="0.1144%" height="15" fill="rgb(244,45,21)" fg:x="105547" fg:w="433"/><text x="28.1453%" y="1679.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (433 samples, 0.11%)</title><rect x="27.8953%" y="1653" width="0.1144%" height="15" fill="rgb(232,33,43)" fg:x="105547" fg:w="433"/><text x="28.1453%" y="1663.50"></text></g><g><title>rand::rng::Rng::gen (445 samples, 0.12%)</title><rect x="27.8953%" y="1749" width="0.1176%" height="15" fill="rgb(209,8,3)" fg:x="105547" fg:w="445"/><text x="28.1453%" y="1759.50"></text></g><g><title>rand::distributions::other::&lt;impl rand::distributions::distribution::Distribution&lt;[T: _]&gt; for rand::distributions::Standard&gt;::sample (445 samples, 0.12%)</title><rect x="27.8953%" y="1733" width="0.1176%" height="15" fill="rgb(214,25,53)" fg:x="105547" fg:w="445"/><text x="28.1453%" y="1743.50"></text></g><g><title>rand::rng::Rng::gen (445 samples, 0.12%)</title><rect x="27.8953%" y="1717" width="0.1176%" height="15" fill="rgb(254,186,54)" fg:x="105547" fg:w="445"/><text x="28.1453%" y="1727.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u8&gt; for rand::distributions::Standard&gt;::sample (445 samples, 0.12%)</title><rect x="27.8953%" y="1701" width="0.1176%" height="15" fill="rgb(208,174,49)" fg:x="105547" fg:w="445"/><text x="28.1453%" y="1711.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u32 (445 samples, 0.12%)</title><rect x="27.8953%" y="1685" width="0.1176%" height="15" fill="rgb(233,191,51)" fg:x="105547" fg:w="445"/><text x="28.1453%" y="1695.50"></text></g><g><title>[unknown] (62,585 samples, 16.54%)</title><rect x="11.4806%" y="1813" width="16.5407%" height="15" fill="rgb(222,134,10)" fg:x="43439" fg:w="62585"/><text x="11.7306%" y="1823.50">[unknown]</text></g><g><title>uuid::v4::&lt;impl uuid::Uuid&gt;::new_v4 (699 samples, 0.18%)</title><rect x="27.8366%" y="1797" width="0.1847%" height="15" fill="rgb(230,226,20)" fg:x="105325" fg:w="699"/><text x="28.0866%" y="1807.50"></text></g><g><title>uuid::rng::bytes (533 samples, 0.14%)</title><rect x="27.8805%" y="1781" width="0.1409%" height="15" fill="rgb(251,111,25)" fg:x="105491" fg:w="533"/><text x="28.1305%" y="1791.50"></text></g><g><title>rand::random (533 samples, 0.14%)</title><rect x="27.8805%" y="1765" width="0.1409%" height="15" fill="rgb(224,40,46)" fg:x="105491" fg:w="533"/><text x="28.1305%" y="1775.50"></text></g><g><title>__entry_text_start (59 samples, 0.02%)</title><rect x="28.0443%" y="1797" width="0.0156%" height="15" fill="rgb(236,108,47)" fg:x="106111" fg:w="59"/><text x="28.2943%" y="1807.50"></text></g><g><title>__GI___libc_malloc (138 samples, 0.04%)</title><rect x="28.0263%" y="1813" width="0.0365%" height="15" fill="rgb(234,93,0)" fg:x="106043" fg:w="138"/><text x="28.2763%" y="1823.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (107 samples, 0.03%)</title><rect x="28.0684%" y="1813" width="0.0283%" height="15" fill="rgb(224,213,32)" fg:x="106202" fg:w="107"/><text x="28.3184%" y="1823.50"></text></g><g><title>_int_free (89 samples, 0.02%)</title><rect x="28.0998%" y="1813" width="0.0235%" height="15" fill="rgb(251,11,48)" fg:x="106321" fg:w="89"/><text x="28.3498%" y="1823.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (41 samples, 0.01%)</title><rect x="28.1329%" y="1781" width="0.0108%" height="15" fill="rgb(236,173,5)" fg:x="106446" fg:w="41"/><text x="28.3829%" y="1791.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (73 samples, 0.02%)</title><rect x="28.1297%" y="1813" width="0.0193%" height="15" fill="rgb(230,95,12)" fg:x="106434" fg:w="73"/><text x="28.3797%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (64 samples, 0.02%)</title><rect x="28.1321%" y="1797" width="0.0169%" height="15" fill="rgb(232,209,1)" fg:x="106443" fg:w="64"/><text x="28.3821%" y="1807.50"></text></g><g><title>__perf_event_task_sched_in (42 samples, 0.01%)</title><rect x="28.1738%" y="1333" width="0.0111%" height="15" fill="rgb(232,6,1)" fg:x="106601" fg:w="42"/><text x="28.4238%" y="1343.50"></text></g><g><title>ctx_sched_in (42 samples, 0.01%)</title><rect x="28.1738%" y="1317" width="0.0111%" height="15" fill="rgb(210,224,50)" fg:x="106601" fg:w="42"/><text x="28.4238%" y="1327.50"></text></g><g><title>visit_groups_merge.constprop.0.isra.0 (42 samples, 0.01%)</title><rect x="28.1738%" y="1301" width="0.0111%" height="15" fill="rgb(228,127,35)" fg:x="106601" fg:w="42"/><text x="28.4238%" y="1311.50"></text></g><g><title>__x64_sys_futex (45 samples, 0.01%)</title><rect x="28.1738%" y="1445" width="0.0119%" height="15" fill="rgb(245,102,45)" fg:x="106601" fg:w="45"/><text x="28.4238%" y="1455.50"></text></g><g><title>do_futex (45 samples, 0.01%)</title><rect x="28.1738%" y="1429" width="0.0119%" height="15" fill="rgb(214,1,49)" fg:x="106601" fg:w="45"/><text x="28.4238%" y="1439.50"></text></g><g><title>futex_wait (45 samples, 0.01%)</title><rect x="28.1738%" y="1413" width="0.0119%" height="15" fill="rgb(226,163,40)" fg:x="106601" fg:w="45"/><text x="28.4238%" y="1423.50"></text></g><g><title>futex_wait_queue (45 samples, 0.01%)</title><rect x="28.1738%" y="1397" width="0.0119%" height="15" fill="rgb(239,212,28)" fg:x="106601" fg:w="45"/><text x="28.4238%" y="1407.50"></text></g><g><title>schedule (45 samples, 0.01%)</title><rect x="28.1738%" y="1381" width="0.0119%" height="15" fill="rgb(220,20,13)" fg:x="106601" fg:w="45"/><text x="28.4238%" y="1391.50"></text></g><g><title>__schedule (45 samples, 0.01%)</title><rect x="28.1738%" y="1365" width="0.0119%" height="15" fill="rgb(210,164,35)" fg:x="106601" fg:w="45"/><text x="28.4238%" y="1375.50"></text></g><g><title>finish_task_switch.isra.0 (45 samples, 0.01%)</title><rect x="28.1738%" y="1349" width="0.0119%" height="15" fill="rgb(248,109,41)" fg:x="106601" fg:w="45"/><text x="28.4238%" y="1359.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (48 samples, 0.01%)</title><rect x="28.1738%" y="1509" width="0.0127%" height="15" fill="rgb(238,23,50)" fg:x="106601" fg:w="48"/><text x="28.4238%" y="1519.50"></text></g><g><title>syscall (48 samples, 0.01%)</title><rect x="28.1738%" y="1493" width="0.0127%" height="15" fill="rgb(211,48,49)" fg:x="106601" fg:w="48"/><text x="28.4238%" y="1503.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (48 samples, 0.01%)</title><rect x="28.1738%" y="1477" width="0.0127%" height="15" fill="rgb(223,36,21)" fg:x="106601" fg:w="48"/><text x="28.4238%" y="1487.50"></text></g><g><title>do_syscall_64 (48 samples, 0.01%)</title><rect x="28.1738%" y="1461" width="0.0127%" height="15" fill="rgb(207,123,46)" fg:x="106601" fg:w="48"/><text x="28.4238%" y="1471.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (50 samples, 0.01%)</title><rect x="28.1738%" y="1573" width="0.0132%" height="15" fill="rgb(240,218,32)" fg:x="106601" fg:w="50"/><text x="28.4238%" y="1583.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (50 samples, 0.01%)</title><rect x="28.1738%" y="1557" width="0.0132%" height="15" fill="rgb(252,5,43)" fg:x="106601" fg:w="50"/><text x="28.4238%" y="1567.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (50 samples, 0.01%)</title><rect x="28.1738%" y="1541" width="0.0132%" height="15" fill="rgb(252,84,19)" fg:x="106601" fg:w="50"/><text x="28.4238%" y="1551.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (50 samples, 0.01%)</title><rect x="28.1738%" y="1525" width="0.0132%" height="15" fill="rgb(243,152,39)" fg:x="106601" fg:w="50"/><text x="28.4238%" y="1535.50"></text></g><g><title>[[vdso]] (49 samples, 0.01%)</title><rect x="28.2531%" y="1125" width="0.0130%" height="15" fill="rgb(234,160,15)" fg:x="106901" fg:w="49"/><text x="28.5031%" y="1135.50"></text></g><g><title>[[vdso]] (43 samples, 0.01%)</title><rect x="28.2766%" y="1109" width="0.0114%" height="15" fill="rgb(237,34,20)" fg:x="106990" fg:w="43"/><text x="28.5266%" y="1119.50"></text></g><g><title>[[vdso]] (1,196 samples, 0.32%)</title><rect x="28.2885%" y="1093" width="0.3161%" height="15" fill="rgb(229,97,13)" fg:x="107035" fg:w="1196"/><text x="28.5385%" y="1103.50"></text></g><g><title>__pow (1,270 samples, 0.34%)</title><rect x="28.2885%" y="1109" width="0.3357%" height="15" fill="rgb(234,71,50)" fg:x="107035" fg:w="1270"/><text x="28.5385%" y="1119.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (1,334 samples, 0.35%)</title><rect x="28.2719%" y="1125" width="0.3526%" height="15" fill="rgb(253,155,4)" fg:x="106972" fg:w="1334"/><text x="28.5219%" y="1135.50"></text></g><g><title>std::time::Instant::now (43 samples, 0.01%)</title><rect x="28.6273%" y="1125" width="0.0114%" height="15" fill="rgb(222,185,37)" fg:x="108317" fg:w="43"/><text x="28.8773%" y="1135.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (43 samples, 0.01%)</title><rect x="28.6273%" y="1109" width="0.0114%" height="15" fill="rgb(251,177,13)" fg:x="108317" fg:w="43"/><text x="28.8773%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (1,559 samples, 0.41%)</title><rect x="28.2269%" y="1141" width="0.4120%" height="15" fill="rgb(250,179,40)" fg:x="106802" fg:w="1559"/><text x="28.4769%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::start_processing_scheduled_tasks (47 samples, 0.01%)</title><rect x="28.6390%" y="1141" width="0.0124%" height="15" fill="rgb(242,44,2)" fg:x="108361" fg:w="47"/><text x="28.8890%" y="1151.50"></text></g><g><title>std::time::Instant::now (45 samples, 0.01%)</title><rect x="28.6395%" y="1125" width="0.0119%" height="15" fill="rgb(216,177,13)" fg:x="108363" fg:w="45"/><text x="28.8895%" y="1135.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (45 samples, 0.01%)</title><rect x="28.6395%" y="1109" width="0.0119%" height="15" fill="rgb(216,106,43)" fg:x="108363" fg:w="45"/><text x="28.8895%" y="1119.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (40 samples, 0.01%)</title><rect x="28.6408%" y="1093" width="0.0106%" height="15" fill="rgb(216,183,2)" fg:x="108368" fg:w="40"/><text x="28.8908%" y="1103.50"></text></g><g><title>ep_item_poll.isra.0 (48 samples, 0.01%)</title><rect x="28.6924%" y="869" width="0.0127%" height="15" fill="rgb(249,75,3)" fg:x="108563" fg:w="48"/><text x="28.9424%" y="879.50"></text></g><g><title>ep_send_events (86 samples, 0.02%)</title><rect x="28.6836%" y="885" width="0.0227%" height="15" fill="rgb(219,67,39)" fg:x="108530" fg:w="86"/><text x="28.9336%" y="895.50"></text></g><g><title>__x64_sys_epoll_wait (135 samples, 0.04%)</title><rect x="28.6728%" y="933" width="0.0357%" height="15" fill="rgb(253,228,2)" fg:x="108489" fg:w="135"/><text x="28.9228%" y="943.50"></text></g><g><title>do_epoll_wait (131 samples, 0.03%)</title><rect x="28.6739%" y="917" width="0.0346%" height="15" fill="rgb(235,138,27)" fg:x="108493" fg:w="131"/><text x="28.9239%" y="927.50"></text></g><g><title>ep_poll (124 samples, 0.03%)</title><rect x="28.6757%" y="901" width="0.0328%" height="15" fill="rgb(236,97,51)" fg:x="108500" fg:w="124"/><text x="28.9257%" y="911.50"></text></g><g><title>mio::poll::Poll::poll (144 samples, 0.04%)</title><rect x="28.6710%" y="1013" width="0.0381%" height="15" fill="rgb(240,80,30)" fg:x="108482" fg:w="144"/><text x="28.9210%" y="1023.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (144 samples, 0.04%)</title><rect x="28.6710%" y="997" width="0.0381%" height="15" fill="rgb(230,178,19)" fg:x="108482" fg:w="144"/><text x="28.9210%" y="1007.50"></text></g><g><title>epoll_wait (143 samples, 0.04%)</title><rect x="28.6712%" y="981" width="0.0378%" height="15" fill="rgb(210,190,27)" fg:x="108483" fg:w="143"/><text x="28.9212%" y="991.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (140 samples, 0.04%)</title><rect x="28.6720%" y="965" width="0.0370%" height="15" fill="rgb(222,107,31)" fg:x="108486" fg:w="140"/><text x="28.9220%" y="975.50"></text></g><g><title>do_syscall_64 (137 samples, 0.04%)</title><rect x="28.6728%" y="949" width="0.0362%" height="15" fill="rgb(216,127,34)" fg:x="108489" fg:w="137"/><text x="28.9228%" y="959.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (157 samples, 0.04%)</title><rect x="28.6710%" y="1029" width="0.0415%" height="15" fill="rgb(234,116,52)" fg:x="108482" fg:w="157"/><text x="28.9210%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (169 samples, 0.04%)</title><rect x="28.6680%" y="1125" width="0.0447%" height="15" fill="rgb(222,124,15)" fg:x="108471" fg:w="169"/><text x="28.9180%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park_timeout (168 samples, 0.04%)</title><rect x="28.6683%" y="1109" width="0.0444%" height="15" fill="rgb(231,179,28)" fg:x="108472" fg:w="168"/><text x="28.9183%" y="1119.50"></text></g><g><title>tokio::runtime::driver::Driver::park_timeout (168 samples, 0.04%)</title><rect x="28.6683%" y="1093" width="0.0444%" height="15" fill="rgb(226,93,45)" fg:x="108472" fg:w="168"/><text x="28.9183%" y="1103.50"></text></g><g><title>tokio::runtime::driver::TimeDriver::park_timeout (168 samples, 0.04%)</title><rect x="28.6683%" y="1077" width="0.0444%" height="15" fill="rgb(215,8,51)" fg:x="108472" fg:w="168"/><text x="28.9183%" y="1087.50"></text></g><g><title>tokio::runtime::time::Driver::park_timeout (168 samples, 0.04%)</title><rect x="28.6683%" y="1061" width="0.0444%" height="15" fill="rgb(223,106,5)" fg:x="108472" fg:w="168"/><text x="28.9183%" y="1071.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (161 samples, 0.04%)</title><rect x="28.6702%" y="1045" width="0.0426%" height="15" fill="rgb(250,191,5)" fg:x="108479" fg:w="161"/><text x="28.9202%" y="1055.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::maintenance (244 samples, 0.06%)</title><rect x="28.6517%" y="1141" width="0.0645%" height="15" fill="rgb(242,132,44)" fg:x="108409" fg:w="244"/><text x="28.9017%" y="1151.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (149 samples, 0.04%)</title><rect x="28.7888%" y="1125" width="0.0394%" height="15" fill="rgb(251,152,29)" fg:x="108928" fg:w="149"/><text x="29.0388%" y="1135.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (149 samples, 0.04%)</title><rect x="28.7888%" y="1109" width="0.0394%" height="15" fill="rgb(218,179,5)" fg:x="108928" fg:w="149"/><text x="29.0388%" y="1119.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (149 samples, 0.04%)</title><rect x="28.7888%" y="1093" width="0.0394%" height="15" fill="rgb(227,67,19)" fg:x="108928" fg:w="149"/><text x="29.0388%" y="1103.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (44 samples, 0.01%)</title><rect x="28.8710%" y="1077" width="0.0116%" height="15" fill="rgb(233,119,31)" fg:x="109239" fg:w="44"/><text x="29.1210%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (43 samples, 0.01%)</title><rect x="28.8827%" y="1077" width="0.0114%" height="15" fill="rgb(241,120,22)" fg:x="109283" fg:w="43"/><text x="29.1327%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (43 samples, 0.01%)</title><rect x="28.8827%" y="1061" width="0.0114%" height="15" fill="rgb(224,102,30)" fg:x="109283" fg:w="43"/><text x="29.1327%" y="1071.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (63 samples, 0.02%)</title><rect x="28.9701%" y="997" width="0.0167%" height="15" fill="rgb(210,164,37)" fg:x="109614" fg:w="63"/><text x="29.2201%" y="1007.50"></text></g><g><title>__x64_sys_futex (297 samples, 0.08%)</title><rect x="29.1210%" y="965" width="0.0785%" height="15" fill="rgb(226,191,16)" fg:x="110185" fg:w="297"/><text x="29.3710%" y="975.50"></text></g><g><title>futex_setup_timer (44 samples, 0.01%)</title><rect x="29.3359%" y="917" width="0.0116%" height="15" fill="rgb(214,40,45)" fg:x="110998" fg:w="44"/><text x="29.5859%" y="927.50"></text></g><g><title>_raw_spin_unlock (43 samples, 0.01%)</title><rect x="29.4744%" y="901" width="0.0114%" height="15" fill="rgb(244,29,26)" fg:x="111522" fg:w="43"/><text x="29.7244%" y="911.50"></text></g><g><title>futex_unqueue (124 samples, 0.03%)</title><rect x="29.4900%" y="901" width="0.0328%" height="15" fill="rgb(216,16,5)" fg:x="111581" fg:w="124"/><text x="29.7400%" y="911.50"></text></g><g><title>__futex_queue (105 samples, 0.03%)</title><rect x="29.5423%" y="885" width="0.0278%" height="15" fill="rgb(249,76,35)" fg:x="111779" fg:w="105"/><text x="29.7923%" y="895.50"></text></g><g><title>plist_add (143 samples, 0.04%)</title><rect x="29.5751%" y="885" width="0.0378%" height="15" fill="rgb(207,11,44)" fg:x="111903" fg:w="143"/><text x="29.8251%" y="895.50"></text></g><g><title>_raw_spin_lock (582 samples, 0.15%)</title><rect x="29.8349%" y="853" width="0.1538%" height="15" fill="rgb(228,190,49)" fg:x="112886" fg:w="582"/><text x="30.0849%" y="863.50"></text></g><g><title>clear_buddies (87 samples, 0.02%)</title><rect x="30.0773%" y="821" width="0.0230%" height="15" fill="rgb(214,173,12)" fg:x="113803" fg:w="87"/><text x="30.3273%" y="831.50"></text></g><g><title>__update_load_avg_cfs_rq (68 samples, 0.02%)</title><rect x="30.2749%" y="805" width="0.0180%" height="15" fill="rgb(218,26,35)" fg:x="114551" fg:w="68"/><text x="30.5249%" y="815.50"></text></g><g><title>__update_load_avg_se (74 samples, 0.02%)</title><rect x="30.2929%" y="805" width="0.0196%" height="15" fill="rgb(220,200,19)" fg:x="114619" fg:w="74"/><text x="30.5429%" y="815.50"></text></g><g><title>clear_buddies (130 samples, 0.03%)</title><rect x="30.3125%" y="805" width="0.0344%" height="15" fill="rgb(239,95,49)" fg:x="114693" fg:w="130"/><text x="30.5625%" y="815.50"></text></g><g><title>update_cfs_group (489 samples, 0.13%)</title><rect x="30.3553%" y="805" width="0.1292%" height="15" fill="rgb(235,85,53)" fg:x="114855" fg:w="489"/><text x="30.6053%" y="815.50"></text></g><g><title>reweight_entity (204 samples, 0.05%)</title><rect x="30.4306%" y="789" width="0.0539%" height="15" fill="rgb(233,133,31)" fg:x="115140" fg:w="204"/><text x="30.6806%" y="799.50"></text></g><g><title>__calc_delta (373 samples, 0.10%)</title><rect x="30.6442%" y="789" width="0.0986%" height="15" fill="rgb(218,25,20)" fg:x="115948" fg:w="373"/><text x="30.8942%" y="799.50"></text></g><g><title>__cgroup_account_cputime (50 samples, 0.01%)</title><rect x="30.7427%" y="789" width="0.0132%" height="15" fill="rgb(252,210,38)" fg:x="116321" fg:w="50"/><text x="30.9927%" y="799.50"></text></g><g><title>cpuacct_charge (423 samples, 0.11%)</title><rect x="30.7570%" y="789" width="0.1118%" height="15" fill="rgb(242,134,21)" fg:x="116375" fg:w="423"/><text x="31.0070%" y="799.50"></text></g><g><title>update_curr (1,525 samples, 0.40%)</title><rect x="30.4845%" y="805" width="0.4030%" height="15" fill="rgb(213,28,48)" fg:x="115344" fg:w="1525"/><text x="30.7345%" y="815.50"></text></g><g><title>update_min_vruntime (71 samples, 0.02%)</title><rect x="30.8688%" y="789" width="0.0188%" height="15" fill="rgb(250,196,2)" fg:x="116798" fg:w="71"/><text x="31.1188%" y="799.50"></text></g><g><title>__update_load_avg_cfs_rq (489 samples, 0.13%)</title><rect x="31.0226%" y="789" width="0.1292%" height="15" fill="rgb(227,5,17)" fg:x="117380" fg:w="489"/><text x="31.2726%" y="799.50"></text></g><g><title>__update_load_avg_se (418 samples, 0.11%)</title><rect x="31.1519%" y="789" width="0.1105%" height="15" fill="rgb(221,226,24)" fg:x="117869" fg:w="418"/><text x="31.4019%" y="799.50"></text></g><g><title>update_load_avg (1,435 samples, 0.38%)</title><rect x="30.8876%" y="805" width="0.3793%" height="15" fill="rgb(211,5,48)" fg:x="116869" fg:w="1435"/><text x="31.1376%" y="815.50"></text></g><g><title>dequeue_entity (4,560 samples, 1.21%)</title><rect x="30.1002%" y="821" width="1.2052%" height="15" fill="rgb(219,150,6)" fg:x="113890" fg:w="4560"/><text x="30.3502%" y="831.50"></text></g><g><title>update_min_vruntime (146 samples, 0.04%)</title><rect x="31.2668%" y="805" width="0.0386%" height="15" fill="rgb(251,46,16)" fg:x="118304" fg:w="146"/><text x="31.5168%" y="815.50"></text></g><g><title>update_cfs_group (222 samples, 0.06%)</title><rect x="31.3054%" y="821" width="0.0587%" height="15" fill="rgb(220,204,40)" fg:x="118450" fg:w="222"/><text x="31.5554%" y="831.50"></text></g><g><title>update_curr (42 samples, 0.01%)</title><rect x="31.3641%" y="821" width="0.0111%" height="15" fill="rgb(211,85,2)" fg:x="118672" fg:w="42"/><text x="31.6141%" y="831.50"></text></g><g><title>dequeue_task_fair (5,294 samples, 1.40%)</title><rect x="30.0022%" y="837" width="1.3992%" height="15" fill="rgb(229,17,7)" fg:x="113519" fg:w="5294"/><text x="30.2522%" y="847.50"></text></g><g><title>update_min_vruntime (65 samples, 0.02%)</title><rect x="31.3842%" y="821" width="0.0172%" height="15" fill="rgb(239,72,28)" fg:x="118748" fg:w="65"/><text x="31.6342%" y="831.50"></text></g><g><title>dequeue_task (5,351 samples, 1.41%)</title><rect x="29.9892%" y="853" width="1.4142%" height="15" fill="rgb(230,47,54)" fg:x="113470" fg:w="5351"/><text x="30.2392%" y="863.50"></text></g><g><title>dequeue_task_fair (63 samples, 0.02%)</title><rect x="31.4035%" y="853" width="0.0167%" height="15" fill="rgb(214,50,8)" fg:x="118821" fg:w="63"/><text x="31.6535%" y="863.50"></text></g><g><title>_raw_spin_unlock (82 samples, 0.02%)</title><rect x="31.5388%" y="821" width="0.0217%" height="15" fill="rgb(216,198,43)" fg:x="119333" fg:w="82"/><text x="31.7888%" y="831.50"></text></g><g><title>__rcu_read_unlock (179 samples, 0.05%)</title><rect x="31.7286%" y="725" width="0.0473%" height="15" fill="rgb(234,20,35)" fg:x="120051" fg:w="179"/><text x="31.9786%" y="735.50"></text></g><g><title>perf_ibs_add (421 samples, 0.11%)</title><rect x="31.6987%" y="757" width="0.1113%" height="15" fill="rgb(254,45,19)" fg:x="119938" fg:w="421"/><text x="31.9487%" y="767.50"></text></g><g><title>perf_ibs_start (364 samples, 0.10%)</title><rect x="31.7138%" y="741" width="0.0962%" height="15" fill="rgb(219,14,44)" fg:x="119995" fg:w="364"/><text x="31.9638%" y="751.50"></text></g><g><title>perf_event_update_userpage (129 samples, 0.03%)</title><rect x="31.7759%" y="725" width="0.0341%" height="15" fill="rgb(217,220,26)" fg:x="120230" fg:w="129"/><text x="32.0259%" y="735.50"></text></g><g><title>event_sched_in (736 samples, 0.19%)</title><rect x="31.6249%" y="773" width="0.1945%" height="15" fill="rgb(213,158,28)" fg:x="119659" fg:w="736"/><text x="31.8749%" y="783.50"></text></g><g><title>merge_sched_in (889 samples, 0.23%)</title><rect x="31.5879%" y="789" width="0.2350%" height="15" fill="rgb(252,51,52)" fg:x="119519" fg:w="889"/><text x="31.8379%" y="799.50"></text></g><g><title>perf_pmu_nop_int (88 samples, 0.02%)</title><rect x="31.8308%" y="789" width="0.0233%" height="15" fill="rgb(246,89,16)" fg:x="120438" fg:w="88"/><text x="32.0808%" y="799.50"></text></g><g><title>ctx_sched_in (1,272 samples, 0.34%)</title><rect x="31.5605%" y="821" width="0.3362%" height="15" fill="rgb(216,158,49)" fg:x="119415" fg:w="1272"/><text x="31.8105%" y="831.50"></text></g><g><title>visit_groups_merge.constprop.0.isra.0 (1,233 samples, 0.33%)</title><rect x="31.5708%" y="805" width="0.3259%" height="15" fill="rgb(236,107,19)" fg:x="119454" fg:w="1233"/><text x="31.8208%" y="815.50"></text></g><g><title>rb_next (161 samples, 0.04%)</title><rect x="31.8541%" y="789" width="0.0426%" height="15" fill="rgb(228,185,30)" fg:x="120526" fg:w="161"/><text x="32.1041%" y="799.50"></text></g><g><title>perf_ctx_enable (43 samples, 0.01%)</title><rect x="31.8966%" y="821" width="0.0114%" height="15" fill="rgb(246,134,8)" fg:x="120687" fg:w="43"/><text x="32.1466%" y="831.50"></text></g><g><title>perf_ctx_sched_task_cb (68 samples, 0.02%)</title><rect x="31.9080%" y="821" width="0.0180%" height="15" fill="rgb(214,143,50)" fg:x="120730" fg:w="68"/><text x="32.1580%" y="831.50"></text></g><g><title>perf_pmu_nop_void (75 samples, 0.02%)</title><rect x="31.9260%" y="821" width="0.0198%" height="15" fill="rgb(228,75,8)" fg:x="120798" fg:w="75"/><text x="32.1760%" y="831.50"></text></g><g><title>__perf_event_task_sched_in (1,616 samples, 0.43%)</title><rect x="31.5211%" y="837" width="0.4271%" height="15" fill="rgb(207,175,4)" fg:x="119266" fg:w="1616"/><text x="31.7711%" y="847.50"></text></g><g><title>__rcu_read_unlock (40 samples, 0.01%)</title><rect x="31.9482%" y="837" width="0.0106%" height="15" fill="rgb(205,108,24)" fg:x="120882" fg:w="40"/><text x="32.1982%" y="847.50"></text></g><g><title>_raw_spin_unlock (100 samples, 0.03%)</title><rect x="31.9587%" y="837" width="0.0264%" height="15" fill="rgb(244,120,49)" fg:x="120922" fg:w="100"/><text x="32.2087%" y="847.50"></text></g><g><title>finish_task_switch.isra.0 (2,202 samples, 0.58%)</title><rect x="31.4204%" y="853" width="0.5820%" height="15" fill="rgb(223,47,38)" fg:x="118885" fg:w="2202"/><text x="31.6704%" y="863.50"></text></g><g><title>pick_next_task_fair (308 samples, 0.08%)</title><rect x="32.0367%" y="837" width="0.0814%" height="15" fill="rgb(229,179,11)" fg:x="121217" fg:w="308"/><text x="32.2867%" y="847.50"></text></g><g><title>newidle_balance (193 samples, 0.05%)</title><rect x="32.0671%" y="821" width="0.0510%" height="15" fill="rgb(231,122,1)" fg:x="121332" fg:w="193"/><text x="32.3171%" y="831.50"></text></g><g><title>__rcu_read_lock (39 samples, 0.01%)</title><rect x="32.1223%" y="821" width="0.0103%" height="15" fill="rgb(245,119,9)" fg:x="121541" fg:w="39"/><text x="32.3723%" y="831.50"></text></g><g><title>pick_next_task_idle (192 samples, 0.05%)</title><rect x="32.1181%" y="837" width="0.0507%" height="15" fill="rgb(241,163,25)" fg:x="121525" fg:w="192"/><text x="32.3681%" y="847.50"></text></g><g><title>__update_idle_core (128 samples, 0.03%)</title><rect x="32.1350%" y="821" width="0.0338%" height="15" fill="rgb(217,214,3)" fg:x="121589" fg:w="128"/><text x="32.3850%" y="831.50"></text></g><g><title>put_prev_entity (53 samples, 0.01%)</title><rect x="32.1689%" y="837" width="0.0140%" height="15" fill="rgb(240,86,28)" fg:x="121717" fg:w="53"/><text x="32.4189%" y="847.50"></text></g><g><title>check_cfs_rq_runtime (38 samples, 0.01%)</title><rect x="32.2045%" y="821" width="0.0100%" height="15" fill="rgb(215,47,9)" fg:x="121852" fg:w="38"/><text x="32.4545%" y="831.50"></text></g><g><title>check_spread.isra.0 (133 samples, 0.04%)</title><rect x="32.2146%" y="821" width="0.0352%" height="15" fill="rgb(252,25,45)" fg:x="121890" fg:w="133"/><text x="32.4646%" y="831.50"></text></g><g><title>pick_next_task (1,105 samples, 0.29%)</title><rect x="32.0024%" y="853" width="0.2920%" height="15" fill="rgb(251,164,9)" fg:x="121087" fg:w="1105"/><text x="32.2524%" y="863.50"></text></g><g><title>put_prev_task_fair (422 samples, 0.11%)</title><rect x="32.1829%" y="837" width="0.1115%" height="15" fill="rgb(233,194,0)" fg:x="121770" fg:w="422"/><text x="32.4329%" y="847.50"></text></g><g><title>put_prev_entity (169 samples, 0.04%)</title><rect x="32.2497%" y="821" width="0.0447%" height="15" fill="rgb(249,111,24)" fg:x="122023" fg:w="169"/><text x="32.4997%" y="831.50"></text></g><g><title>__rcu_read_unlock (39 samples, 0.01%)</title><rect x="32.3319%" y="821" width="0.0103%" height="15" fill="rgb(250,223,3)" fg:x="122334" fg:w="39"/><text x="32.5819%" y="831.50"></text></g><g><title>_raw_spin_lock (91 samples, 0.02%)</title><rect x="32.3422%" y="821" width="0.0241%" height="15" fill="rgb(236,178,37)" fg:x="122373" fg:w="91"/><text x="32.5922%" y="831.50"></text></g><g><title>perf_ibs_del (737 samples, 0.19%)</title><rect x="32.4427%" y="741" width="0.1948%" height="15" fill="rgb(241,158,50)" fg:x="122753" fg:w="737"/><text x="32.6927%" y="751.50"></text></g><g><title>perf_ibs_stop (677 samples, 0.18%)</title><rect x="32.4585%" y="725" width="0.1789%" height="15" fill="rgb(213,121,41)" fg:x="122813" fg:w="677"/><text x="32.7085%" y="735.50"></text></g><g><title>native_read_msr (236 samples, 0.06%)</title><rect x="32.5751%" y="709" width="0.0624%" height="15" fill="rgb(240,92,3)" fg:x="123254" fg:w="236"/><text x="32.8251%" y="719.50"></text></g><g><title>event_sched_out (785 samples, 0.21%)</title><rect x="32.4305%" y="757" width="0.2075%" height="15" fill="rgb(205,123,3)" fg:x="122707" fg:w="785"/><text x="32.6805%" y="767.50"></text></g><g><title>__pmu_ctx_sched_out (1,001 samples, 0.26%)</title><rect x="32.3927%" y="789" width="0.2646%" height="15" fill="rgb(205,97,47)" fg:x="122564" fg:w="1001"/><text x="32.6427%" y="799.50"></text></g><g><title>group_sched_out (928 samples, 0.25%)</title><rect x="32.4120%" y="773" width="0.2453%" height="15" fill="rgb(247,152,14)" fg:x="122637" fg:w="928"/><text x="32.6620%" y="783.50"></text></g><g><title>perf_ibs_del (73 samples, 0.02%)</title><rect x="32.6380%" y="757" width="0.0193%" height="15" fill="rgb(248,195,53)" fg:x="123492" fg:w="73"/><text x="32.8880%" y="767.50"></text></g><g><title>ctx_sched_out (1,285 samples, 0.34%)</title><rect x="32.3845%" y="805" width="0.3396%" height="15" fill="rgb(226,201,16)" fg:x="122533" fg:w="1285"/><text x="32.6345%" y="815.50"></text></g><g><title>sched_clock_cpu (225 samples, 0.06%)</title><rect x="32.6647%" y="789" width="0.0595%" height="15" fill="rgb(205,98,0)" fg:x="123593" fg:w="225"/><text x="32.9147%" y="799.50"></text></g><g><title>sched_clock (194 samples, 0.05%)</title><rect x="32.6729%" y="773" width="0.0513%" height="15" fill="rgb(214,191,48)" fg:x="123624" fg:w="194"/><text x="32.9229%" y="783.50"></text></g><g><title>native_sched_clock (194 samples, 0.05%)</title><rect x="32.6729%" y="757" width="0.0513%" height="15" fill="rgb(237,112,39)" fg:x="123624" fg:w="194"/><text x="32.9229%" y="767.50"></text></g><g><title>perf_ctx_disable (116 samples, 0.03%)</title><rect x="32.7241%" y="805" width="0.0307%" height="15" fill="rgb(247,203,27)" fg:x="123818" fg:w="116"/><text x="32.9741%" y="815.50"></text></g><g><title>perf_ctx_sched_task_cb (85 samples, 0.02%)</title><rect x="32.7548%" y="805" width="0.0225%" height="15" fill="rgb(235,124,28)" fg:x="123934" fg:w="85"/><text x="33.0048%" y="815.50"></text></g><g><title>perf_pmu_nop_void (71 samples, 0.02%)</title><rect x="32.7773%" y="805" width="0.0188%" height="15" fill="rgb(208,207,46)" fg:x="124019" fg:w="71"/><text x="33.0273%" y="815.50"></text></g><g><title>__perf_event_task_sched_out (1,815 samples, 0.48%)</title><rect x="32.3203%" y="837" width="0.4797%" height="15" fill="rgb(234,176,4)" fg:x="122290" fg:w="1815"/><text x="32.5703%" y="847.50"></text></g><g><title>perf_event_context_sched_out (1,620 samples, 0.43%)</title><rect x="32.3718%" y="821" width="0.4282%" height="15" fill="rgb(230,133,28)" fg:x="122485" fg:w="1620"/><text x="32.6218%" y="831.50"></text></g><g><title>prepare_task_switch (1,888 samples, 0.50%)</title><rect x="32.3013%" y="853" width="0.4990%" height="15" fill="rgb(211,137,40)" fg:x="122218" fg:w="1888"/><text x="32.5513%" y="863.50"></text></g><g><title>psi_group_change (82 samples, 0.02%)</title><rect x="32.8026%" y="853" width="0.0217%" height="15" fill="rgb(254,35,13)" fg:x="124115" fg:w="82"/><text x="33.0526%" y="863.50"></text></g><g><title>psi_group_change (1,810 samples, 0.48%)</title><rect x="32.8967%" y="837" width="0.4784%" height="15" fill="rgb(225,49,51)" fg:x="124471" fg:w="1810"/><text x="33.1467%" y="847.50"></text></g><g><title>record_times (50 samples, 0.01%)</title><rect x="33.3619%" y="821" width="0.0132%" height="15" fill="rgb(251,10,15)" fg:x="126231" fg:w="50"/><text x="33.6119%" y="831.50"></text></g><g><title>record_times (90 samples, 0.02%)</title><rect x="33.3751%" y="837" width="0.0238%" height="15" fill="rgb(228,207,15)" fg:x="126281" fg:w="90"/><text x="33.6251%" y="847.50"></text></g><g><title>psi_task_switch (2,481 samples, 0.66%)</title><rect x="32.8243%" y="853" width="0.6557%" height="15" fill="rgb(241,99,19)" fg:x="124197" fg:w="2481"/><text x="33.0743%" y="863.50"></text></g><g><title>sched_clock_cpu (300 samples, 0.08%)</title><rect x="33.4007%" y="837" width="0.0793%" height="15" fill="rgb(207,104,49)" fg:x="126378" fg:w="300"/><text x="33.6507%" y="847.50"></text></g><g><title>sched_clock (256 samples, 0.07%)</title><rect x="33.4124%" y="821" width="0.0677%" height="15" fill="rgb(234,99,18)" fg:x="126422" fg:w="256"/><text x="33.6624%" y="831.50"></text></g><g><title>native_sched_clock (256 samples, 0.07%)</title><rect x="33.4124%" y="805" width="0.0677%" height="15" fill="rgb(213,191,49)" fg:x="126422" fg:w="256"/><text x="33.6624%" y="815.50"></text></g><g><title>put_prev_task_fair (111 samples, 0.03%)</title><rect x="33.4800%" y="853" width="0.0293%" height="15" fill="rgb(210,226,19)" fg:x="126678" fg:w="111"/><text x="33.7300%" y="863.50"></text></g><g><title>rcu_note_context_switch (60 samples, 0.02%)</title><rect x="33.5202%" y="853" width="0.0159%" height="15" fill="rgb(229,97,18)" fg:x="126830" fg:w="60"/><text x="33.7702%" y="863.50"></text></g><g><title>__schedule (14,876 samples, 3.93%)</title><rect x="29.6393%" y="869" width="3.9316%" height="15" fill="rgb(211,167,15)" fg:x="112146" fg:w="14876"/><text x="29.8893%" y="879.50">__sc..</text></g><g><title>update_rq_clock (114 samples, 0.03%)</title><rect x="33.5408%" y="853" width="0.0301%" height="15" fill="rgb(210,169,34)" fg:x="126908" fg:w="114"/><text x="33.7908%" y="863.50"></text></g><g><title>sched_clock_cpu (81 samples, 0.02%)</title><rect x="33.5495%" y="837" width="0.0214%" height="15" fill="rgb(241,121,31)" fg:x="126941" fg:w="81"/><text x="33.7995%" y="847.50"></text></g><g><title>sched_clock (66 samples, 0.02%)</title><rect x="33.5535%" y="821" width="0.0174%" height="15" fill="rgb(232,40,11)" fg:x="126956" fg:w="66"/><text x="33.8035%" y="831.50"></text></g><g><title>native_sched_clock (66 samples, 0.02%)</title><rect x="33.5535%" y="805" width="0.0174%" height="15" fill="rgb(205,86,26)" fg:x="126956" fg:w="66"/><text x="33.8035%" y="815.50"></text></g><g><title>futex_wait_queue (15,388 samples, 4.07%)</title><rect x="29.5228%" y="901" width="4.0669%" height="15" fill="rgb(231,126,28)" fg:x="111705" fg:w="15388"/><text x="29.7728%" y="911.50">fute..</text></g><g><title>schedule (15,047 samples, 3.98%)</title><rect x="29.6129%" y="885" width="3.9768%" height="15" fill="rgb(219,221,18)" fg:x="112046" fg:w="15047"/><text x="29.8629%" y="895.50">sche..</text></g><g><title>__get_user_nocheck_4 (99 samples, 0.03%)</title><rect x="33.6550%" y="885" width="0.0262%" height="15" fill="rgb(211,40,0)" fg:x="127340" fg:w="99"/><text x="33.9050%" y="895.50"></text></g><g><title>_raw_spin_lock (50 samples, 0.01%)</title><rect x="33.6811%" y="885" width="0.0132%" height="15" fill="rgb(239,85,43)" fg:x="127439" fg:w="50"/><text x="33.9311%" y="895.50"></text></g><g><title>futex_hash (258 samples, 0.07%)</title><rect x="33.6957%" y="885" width="0.0682%" height="15" fill="rgb(231,55,21)" fg:x="127494" fg:w="258"/><text x="33.9457%" y="895.50"></text></g><g><title>futex_q_lock (294 samples, 0.08%)</title><rect x="33.7639%" y="885" width="0.0777%" height="15" fill="rgb(225,184,43)" fg:x="127752" fg:w="294"/><text x="34.0139%" y="895.50"></text></g><g><title>futex_q_unlock (47 samples, 0.01%)</title><rect x="33.8416%" y="885" width="0.0124%" height="15" fill="rgb(251,158,41)" fg:x="128046" fg:w="47"/><text x="34.0916%" y="895.50"></text></g><g><title>futex_wait_setup (1,137 samples, 0.30%)</title><rect x="33.5897%" y="901" width="0.3005%" height="15" fill="rgb(234,159,37)" fg:x="127093" fg:w="1137"/><text x="33.8397%" y="911.50"></text></g><g><title>get_futex_key (137 samples, 0.04%)</title><rect x="33.8540%" y="885" width="0.0362%" height="15" fill="rgb(216,204,22)" fg:x="128093" fg:w="137"/><text x="34.1040%" y="895.50"></text></g><g><title>get_futex_key (71 samples, 0.02%)</title><rect x="33.8902%" y="901" width="0.0188%" height="15" fill="rgb(214,17,3)" fg:x="128230" fg:w="71"/><text x="34.1402%" y="911.50"></text></g><g><title>futex_wait (17,298 samples, 4.57%)</title><rect x="29.3483%" y="917" width="4.5717%" height="15" fill="rgb(212,111,17)" fg:x="111045" fg:w="17298"/><text x="29.5983%" y="927.50">futex..</text></g><g><title>schedule (42 samples, 0.01%)</title><rect x="33.9090%" y="901" width="0.0111%" height="15" fill="rgb(221,157,24)" fg:x="128301" fg:w="42"/><text x="34.1590%" y="911.50"></text></g><g><title>do_futex (17,499 samples, 4.62%)</title><rect x="29.2979%" y="933" width="4.6249%" height="15" fill="rgb(252,16,13)" fg:x="110854" fg:w="17499"/><text x="29.5479%" y="943.50">do_fu..</text></g><g><title>__x64_sys_futex (17,785 samples, 4.70%)</title><rect x="29.2276%" y="949" width="4.7004%" height="15" fill="rgb(221,62,2)" fg:x="110588" fg:w="17785"/><text x="29.4776%" y="959.50">__x64..</text></g><g><title>do_futex (50 samples, 0.01%)</title><rect x="33.9280%" y="949" width="0.0132%" height="15" fill="rgb(247,87,22)" fg:x="128373" fg:w="50"/><text x="34.1780%" y="959.50"></text></g><g><title>__put_user_8 (417 samples, 0.11%)</title><rect x="34.4690%" y="885" width="0.1102%" height="15" fill="rgb(215,73,9)" fg:x="130420" fg:w="417"/><text x="34.7190%" y="895.50"></text></g><g><title>__get_user_8 (293 samples, 0.08%)</title><rect x="34.6078%" y="869" width="0.0774%" height="15" fill="rgb(207,175,33)" fg:x="130945" fg:w="293"/><text x="34.8578%" y="879.50"></text></g><g><title>__rseq_handle_notify_resume (2,024 samples, 0.53%)</title><rect x="34.1735%" y="901" width="0.5349%" height="15" fill="rgb(243,129,54)" fg:x="129302" fg:w="2024"/><text x="34.4235%" y="911.50"></text></g><g><title>rseq_ip_fixup (472 samples, 0.12%)</title><rect x="34.5837%" y="885" width="0.1247%" height="15" fill="rgb(227,119,45)" fg:x="130854" fg:w="472"/><text x="34.8337%" y="895.50"></text></g><g><title>rseq_get_rseq_cs.isra.0 (88 samples, 0.02%)</title><rect x="34.6852%" y="869" width="0.0233%" height="15" fill="rgb(205,109,36)" fg:x="131238" fg:w="88"/><text x="34.9352%" y="879.50"></text></g><g><title>blkcg_maybe_throttle_current (123 samples, 0.03%)</title><rect x="34.7084%" y="901" width="0.0325%" height="15" fill="rgb(205,6,39)" fg:x="131326" fg:w="123"/><text x="34.9584%" y="911.50"></text></g><g><title>mem_cgroup_handle_over_high (234 samples, 0.06%)</title><rect x="34.7410%" y="901" width="0.0618%" height="15" fill="rgb(221,32,16)" fg:x="131449" fg:w="234"/><text x="34.9910%" y="911.50"></text></g><g><title>exit_to_user_mode_loop (2,785 samples, 0.74%)</title><rect x="34.0710%" y="917" width="0.7361%" height="15" fill="rgb(228,144,50)" fg:x="128914" fg:w="2785"/><text x="34.3210%" y="927.50"></text></g><g><title>mem_cgroup_handle_over_high (59 samples, 0.02%)</title><rect x="34.8078%" y="917" width="0.0156%" height="15" fill="rgb(229,201,53)" fg:x="131702" fg:w="59"/><text x="35.0578%" y="927.50"></text></g><g><title>exit_to_user_mode_prepare (3,301 samples, 0.87%)</title><rect x="33.9674%" y="933" width="0.8724%" height="15" fill="rgb(249,153,27)" fg:x="128522" fg:w="3301"/><text x="34.2174%" y="943.50"></text></g><g><title>switch_fpu_return (62 samples, 0.02%)</title><rect x="34.8234%" y="917" width="0.0164%" height="15" fill="rgb(227,106,25)" fg:x="131761" fg:w="62"/><text x="35.0734%" y="927.50"></text></g><g><title>fpregs_assert_state_consistent (42 samples, 0.01%)</title><rect x="34.8398%" y="933" width="0.0111%" height="15" fill="rgb(230,65,29)" fg:x="131823" fg:w="42"/><text x="35.0898%" y="943.50"></text></g><g><title>do_syscall_64 (21,396 samples, 5.65%)</title><rect x="29.2003%" y="965" width="5.6548%" height="15" fill="rgb(221,57,46)" fg:x="110485" fg:w="21396"/><text x="29.4503%" y="975.50">do_sysc..</text></g><g><title>syscall_exit_to_user_mode (3,407 samples, 0.90%)</title><rect x="33.9547%" y="949" width="0.9004%" height="15" fill="rgb(229,161,17)" fg:x="128474" fg:w="3407"/><text x="34.2047%" y="959.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (21,799 samples, 5.76%)</title><rect x="29.1047%" y="981" width="5.7613%" height="15" fill="rgb(222,213,11)" fg:x="110123" fg:w="21799"/><text x="29.3547%" y="991.50">entry_S..</text></g><g><title>std::sys::pal::unix::futex::futex_wait (22,733 samples, 6.01%)</title><rect x="28.9133%" y="1013" width="6.0082%" height="15" fill="rgb(235,35,13)" fg:x="109399" fg:w="22733"/><text x="29.1633%" y="1023.50">std::sys..</text></g><g><title>syscall (22,455 samples, 5.93%)</title><rect x="28.9868%" y="997" width="5.9347%" height="15" fill="rgb(233,158,34)" fg:x="109677" fg:w="22455"/><text x="29.2368%" y="1007.50">syscall</text></g><g><title>syscall_return_via_sysret (192 samples, 0.05%)</title><rect x="34.8707%" y="981" width="0.0507%" height="15" fill="rgb(215,151,48)" fg:x="131940" fg:w="192"/><text x="35.1207%" y="991.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (236 samples, 0.06%)</title><rect x="34.9215%" y="997" width="0.0624%" height="15" fill="rgb(229,84,14)" fg:x="132132" fg:w="236"/><text x="35.1715%" y="1007.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (236 samples, 0.06%)</title><rect x="34.9215%" y="981" width="0.0624%" height="15" fill="rgb(229,68,14)" fg:x="132132" fg:w="236"/><text x="35.1715%" y="991.50"></text></g><g><title>std::sync::condvar::Condvar::wait (22,990 samples, 6.08%)</title><rect x="28.9130%" y="1061" width="6.0761%" height="15" fill="rgb(243,106,26)" fg:x="109398" fg:w="22990"/><text x="29.1630%" y="1071.50">std::syn..</text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (22,989 samples, 6.08%)</title><rect x="28.9133%" y="1045" width="6.0758%" height="15" fill="rgb(206,45,38)" fg:x="109399" fg:w="22989"/><text x="29.1633%" y="1055.50">std::sys..</text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_optional_timeout (22,989 samples, 6.08%)</title><rect x="28.9133%" y="1029" width="6.0758%" height="15" fill="rgb(226,6,15)" fg:x="109399" fg:w="22989"/><text x="29.1633%" y="1039.50">std::sys..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (256 samples, 0.07%)</title><rect x="34.9215%" y="1013" width="0.0677%" height="15" fill="rgb(232,22,54)" fg:x="132132" fg:w="256"/><text x="35.1715%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_condvar (23,237 samples, 6.14%)</title><rect x="28.8940%" y="1077" width="6.1414%" height="15" fill="rgb(229,222,32)" fg:x="109326" fg:w="23237"/><text x="29.1440%" y="1087.50">tokio::r..</text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (175 samples, 0.05%)</title><rect x="34.9891%" y="1061" width="0.0463%" height="15" fill="rgb(228,62,29)" fg:x="132388" fg:w="175"/><text x="35.2391%" y="1071.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (86 samples, 0.02%)</title><rect x="35.0126%" y="1045" width="0.0227%" height="15" fill="rgb(251,103,34)" fg:x="132477" fg:w="86"/><text x="35.2626%" y="1055.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (82 samples, 0.02%)</title><rect x="35.0137%" y="1029" width="0.0217%" height="15" fill="rgb(233,12,30)" fg:x="132481" fg:w="82"/><text x="35.2637%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (82 samples, 0.02%)</title><rect x="35.0137%" y="1013" width="0.0217%" height="15" fill="rgb(238,52,0)" fg:x="132481" fg:w="82"/><text x="35.2637%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (82 samples, 0.02%)</title><rect x="35.0137%" y="997" width="0.0217%" height="15" fill="rgb(223,98,5)" fg:x="132481" fg:w="82"/><text x="35.2637%" y="1007.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (127 samples, 0.03%)</title><rect x="35.0563%" y="1013" width="0.0336%" height="15" fill="rgb(228,75,37)" fg:x="132642" fg:w="127"/><text x="35.3063%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (102 samples, 0.03%)</title><rect x="35.0629%" y="997" width="0.0270%" height="15" fill="rgb(205,115,49)" fg:x="132667" fg:w="102"/><text x="35.3129%" y="1007.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (102 samples, 0.03%)</title><rect x="35.0629%" y="981" width="0.0270%" height="15" fill="rgb(250,154,43)" fg:x="132667" fg:w="102"/><text x="35.3129%" y="991.50"></text></g><g><title>core::array::&lt;impl core::default::Default for [T: 32]&gt;::default (58 samples, 0.02%)</title><rect x="35.0919%" y="997" width="0.0153%" height="15" fill="rgb(226,43,29)" fg:x="132777" fg:w="58"/><text x="35.3419%" y="1007.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (104 samples, 0.03%)</title><rect x="35.1535%" y="965" width="0.0275%" height="15" fill="rgb(249,228,39)" fg:x="133010" fg:w="104"/><text x="35.4035%" y="975.50"></text></g><g><title>tokio::runtime::time::wheel::level::level_range (41 samples, 0.01%)</title><rect x="35.1810%" y="965" width="0.0108%" height="15" fill="rgb(216,79,43)" fg:x="133114" fg:w="41"/><text x="35.4310%" y="975.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (204 samples, 0.05%)</title><rect x="35.1506%" y="981" width="0.0539%" height="15" fill="rgb(228,95,12)" fg:x="132999" fg:w="204"/><text x="35.4006%" y="991.50"></text></g><g><title>tokio::runtime::time::wheel::level::slot_range (48 samples, 0.01%)</title><rect x="35.1918%" y="965" width="0.0127%" height="15" fill="rgb(249,221,15)" fg:x="133155" fg:w="48"/><text x="35.4418%" y="975.50"></text></g><g><title>core::num::&lt;impl usize&gt;::pow (48 samples, 0.01%)</title><rect x="35.1918%" y="949" width="0.0127%" height="15" fill="rgb(233,34,13)" fg:x="133155" fg:w="48"/><text x="35.4418%" y="959.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (389 samples, 0.10%)</title><rect x="35.1178%" y="997" width="0.1028%" height="15" fill="rgb(214,103,39)" fg:x="132875" fg:w="389"/><text x="35.3678%" y="1007.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (61 samples, 0.02%)</title><rect x="35.2045%" y="981" width="0.0161%" height="15" fill="rgb(251,126,39)" fg:x="133203" fg:w="61"/><text x="35.4545%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (61 samples, 0.02%)</title><rect x="35.2045%" y="965" width="0.0161%" height="15" fill="rgb(214,216,36)" fg:x="133203" fg:w="61"/><text x="35.4545%" y="975.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (60 samples, 0.02%)</title><rect x="35.2315%" y="965" width="0.0159%" height="15" fill="rgb(220,221,8)" fg:x="133305" fg:w="60"/><text x="35.4815%" y="975.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (597 samples, 0.16%)</title><rect x="35.0898%" y="1013" width="0.1578%" height="15" fill="rgb(240,216,3)" fg:x="132769" fg:w="597"/><text x="35.3398%" y="1023.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll_at (82 samples, 0.02%)</title><rect x="35.2259%" y="997" width="0.0217%" height="15" fill="rgb(232,218,17)" fg:x="133284" fg:w="82"/><text x="35.4759%" y="1007.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (70 samples, 0.02%)</title><rect x="35.2291%" y="981" width="0.0185%" height="15" fill="rgb(229,163,45)" fg:x="133296" fg:w="70"/><text x="35.4791%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (163 samples, 0.04%)</title><rect x="35.2814%" y="965" width="0.0431%" height="15" fill="rgb(231,110,42)" fg:x="133494" fg:w="163"/><text x="35.5314%" y="975.50"></text></g><g><title>&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (174 samples, 0.05%)</title><rect x="35.2804%" y="981" width="0.0460%" height="15" fill="rgb(208,170,48)" fg:x="133490" fg:w="174"/><text x="35.5304%" y="991.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (82 samples, 0.02%)</title><rect x="35.3599%" y="949" width="0.0217%" height="15" fill="rgb(239,116,25)" fg:x="133791" fg:w="82"/><text x="35.6099%" y="959.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select::{{closure}} (82 samples, 0.02%)</title><rect x="35.3599%" y="933" width="0.0217%" height="15" fill="rgb(219,200,50)" fg:x="133791" fg:w="82"/><text x="35.6099%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (51 samples, 0.01%)</title><rect x="35.3681%" y="917" width="0.0135%" height="15" fill="rgb(245,200,0)" fg:x="133822" fg:w="51"/><text x="35.6181%" y="927.50"></text></g><g><title>[[vdso]] (152 samples, 0.04%)</title><rect x="35.4863%" y="933" width="0.0402%" height="15" fill="rgb(245,119,33)" fg:x="134269" fg:w="152"/><text x="35.7363%" y="943.50"></text></g><g><title>__GI___pthread_disable_asynccancel (86 samples, 0.02%)</title><rect x="35.5270%" y="933" width="0.0227%" height="15" fill="rgb(231,125,12)" fg:x="134423" fg:w="86"/><text x="35.7770%" y="943.50"></text></g><g><title>__x64_sys_epoll_wait (99 samples, 0.03%)</title><rect x="35.5629%" y="917" width="0.0262%" height="15" fill="rgb(216,96,41)" fg:x="134559" fg:w="99"/><text x="35.8129%" y="927.50"></text></g><g><title>__fget_light (521 samples, 0.14%)</title><rect x="35.7032%" y="853" width="0.1377%" height="15" fill="rgb(248,43,45)" fg:x="135090" fg:w="521"/><text x="35.9532%" y="863.50"></text></g><g><title>__fdget (595 samples, 0.16%)</title><rect x="35.7032%" y="869" width="0.1573%" height="15" fill="rgb(217,222,7)" fg:x="135090" fg:w="595"/><text x="35.9532%" y="879.50"></text></g><g><title>__rcu_read_unlock (60 samples, 0.02%)</title><rect x="35.8446%" y="853" width="0.0159%" height="15" fill="rgb(233,28,6)" fg:x="135625" fg:w="60"/><text x="36.0946%" y="863.50"></text></g><g><title>__put_user_nocheck_4 (916 samples, 0.24%)</title><rect x="35.9889%" y="853" width="0.2421%" height="15" fill="rgb(231,218,15)" fg:x="136171" fg:w="916"/><text x="36.2389%" y="863.50"></text></g><g><title>__put_user_nocheck_8 (1,566 samples, 0.41%)</title><rect x="36.2310%" y="853" width="0.4139%" height="15" fill="rgb(226,171,48)" fg:x="137087" fg:w="1566"/><text x="36.4810%" y="863.50"></text></g><g><title>_raw_write_lock_irq (418 samples, 0.11%)</title><rect x="36.6449%" y="853" width="0.1105%" height="15" fill="rgb(235,201,9)" fg:x="138653" fg:w="418"/><text x="36.8949%" y="863.50"></text></g><g><title>queued_write_lock_slowpath (97 samples, 0.03%)</title><rect x="36.7298%" y="837" width="0.0256%" height="15" fill="rgb(217,80,15)" fg:x="138974" fg:w="97"/><text x="36.9798%" y="847.50"></text></g><g><title>_raw_write_unlock_irq (119 samples, 0.03%)</title><rect x="36.7554%" y="853" width="0.0315%" height="15" fill="rgb(219,152,8)" fg:x="139071" fg:w="119"/><text x="37.0054%" y="863.50"></text></g><g><title>ep_done_scan (55 samples, 0.01%)</title><rect x="36.7871%" y="853" width="0.0145%" height="15" fill="rgb(243,107,38)" fg:x="139191" fg:w="55"/><text x="37.0371%" y="863.50"></text></g><g><title>__pm_relax (54 samples, 0.01%)</title><rect x="36.9420%" y="837" width="0.0143%" height="15" fill="rgb(231,17,5)" fg:x="139777" fg:w="54"/><text x="37.1920%" y="847.50"></text></g><g><title>_raw_write_lock_irq (1,420 samples, 0.38%)</title><rect x="36.9563%" y="837" width="0.3753%" height="15" fill="rgb(209,25,54)" fg:x="139831" fg:w="1420"/><text x="37.2063%" y="847.50"></text></g><g><title>queued_write_lock_slowpath (237 samples, 0.06%)</title><rect x="37.2689%" y="821" width="0.0626%" height="15" fill="rgb(219,0,2)" fg:x="141014" fg:w="237"/><text x="37.5189%" y="831.50"></text></g><g><title>_raw_write_unlock_irq (256 samples, 0.07%)</title><rect x="37.3315%" y="837" width="0.0677%" height="15" fill="rgb(246,9,5)" fg:x="141251" fg:w="256"/><text x="37.5815%" y="847.50"></text></g><g><title>_raw_write_lock_irq (1,302 samples, 0.34%)</title><rect x="37.4801%" y="821" width="0.3441%" height="15" fill="rgb(226,159,4)" fg:x="141813" fg:w="1302"/><text x="37.7301%" y="831.50"></text></g><g><title>queued_write_lock_slowpath (356 samples, 0.09%)</title><rect x="37.7301%" y="805" width="0.0941%" height="15" fill="rgb(219,175,34)" fg:x="142759" fg:w="356"/><text x="37.9801%" y="815.50"></text></g><g><title>_raw_write_unlock_irq (135 samples, 0.04%)</title><rect x="37.8242%" y="821" width="0.0357%" height="15" fill="rgb(236,10,46)" fg:x="143115" fg:w="135"/><text x="38.0742%" y="831.50"></text></g><g><title>ep_done_scan (1,745 samples, 0.46%)</title><rect x="37.4000%" y="837" width="0.4612%" height="15" fill="rgb(240,211,16)" fg:x="141510" fg:w="1745"/><text x="37.6500%" y="847.50"></text></g><g><title>eventfd_poll (107 samples, 0.03%)</title><rect x="37.9899%" y="821" width="0.0283%" height="15" fill="rgb(205,3,43)" fg:x="143742" fg:w="107"/><text x="38.2399%" y="831.50"></text></g><g><title>sock_poll (4,183 samples, 1.11%)</title><rect x="38.0182%" y="821" width="1.1055%" height="15" fill="rgb(245,7,22)" fg:x="143849" fg:w="4183"/><text x="38.2682%" y="831.50"></text></g><g><title>udp_poll (3,029 samples, 0.80%)</title><rect x="38.3232%" y="805" width="0.8005%" height="15" fill="rgb(239,132,32)" fg:x="145003" fg:w="3029"/><text x="38.5732%" y="815.50"></text></g><g><title>datagram_poll (2,364 samples, 0.62%)</title><rect x="38.4989%" y="789" width="0.6248%" height="15" fill="rgb(228,202,34)" fg:x="145668" fg:w="2364"/><text x="38.7489%" y="799.50"></text></g><g><title>ep_item_poll.isra.0 (4,869 samples, 1.29%)</title><rect x="37.8612%" y="837" width="1.2868%" height="15" fill="rgb(254,200,22)" fg:x="143255" fg:w="4869"/><text x="38.1112%" y="847.50"></text></g><g><title>udp_poll (92 samples, 0.02%)</title><rect x="39.1237%" y="821" width="0.0243%" height="15" fill="rgb(219,10,39)" fg:x="148032" fg:w="92"/><text x="39.3737%" y="831.50"></text></g><g><title>mutex_lock (697 samples, 0.18%)</title><rect x="39.1530%" y="837" width="0.1842%" height="15" fill="rgb(226,210,39)" fg:x="148143" fg:w="697"/><text x="39.4030%" y="847.50"></text></g><g><title>ep_send_events (9,657 samples, 2.55%)</title><rect x="36.8048%" y="853" width="2.5523%" height="15" fill="rgb(208,219,16)" fg:x="139258" fg:w="9657"/><text x="37.0548%" y="863.50">ep..</text></g><g><title>sock_poll (71 samples, 0.02%)</title><rect x="39.3383%" y="837" width="0.0188%" height="15" fill="rgb(216,158,51)" fg:x="148844" fg:w="71"/><text x="39.5883%" y="847.50"></text></g><g><title>mutex_unlock (1,230 samples, 0.33%)</title><rect x="39.3629%" y="853" width="0.3251%" height="15" fill="rgb(233,14,44)" fg:x="148937" fg:w="1230"/><text x="39.6129%" y="863.50"></text></g><g><title>_raw_spin_lock_irqsave (40 samples, 0.01%)</title><rect x="39.7411%" y="821" width="0.0106%" height="15" fill="rgb(237,97,39)" fg:x="150368" fg:w="40"/><text x="39.9911%" y="831.50"></text></g><g><title>hrtimer_init_sleeper (55 samples, 0.01%)</title><rect x="39.7556%" y="821" width="0.0145%" height="15" fill="rgb(218,198,43)" fg:x="150423" fg:w="55"/><text x="40.0056%" y="831.50"></text></g><g><title>__hrtimer_init (47 samples, 0.01%)</title><rect x="39.7577%" y="805" width="0.0124%" height="15" fill="rgb(231,104,20)" fg:x="150431" fg:w="47"/><text x="40.0077%" y="815.50"></text></g><g><title>enqueue_hrtimer (76 samples, 0.02%)</title><rect x="39.7990%" y="789" width="0.0201%" height="15" fill="rgb(254,36,13)" fg:x="150587" fg:w="76"/><text x="40.0490%" y="799.50"></text></g><g><title>timerqueue_add (55 samples, 0.01%)</title><rect x="39.8045%" y="773" width="0.0145%" height="15" fill="rgb(248,14,50)" fg:x="150608" fg:w="55"/><text x="40.0545%" y="783.50"></text></g><g><title>__hrtimer_start_range_ns (185 samples, 0.05%)</title><rect x="39.7784%" y="805" width="0.0489%" height="15" fill="rgb(217,107,29)" fg:x="150509" fg:w="185"/><text x="40.0284%" y="815.50"></text></g><g><title>_raw_spin_lock_irqsave (98 samples, 0.03%)</title><rect x="39.8299%" y="805" width="0.0259%" height="15" fill="rgb(251,169,33)" fg:x="150704" fg:w="98"/><text x="40.0799%" y="815.50"></text></g><g><title>__raw_spin_lock_irqsave (98 samples, 0.03%)</title><rect x="39.8299%" y="789" width="0.0259%" height="15" fill="rgb(217,108,32)" fg:x="150704" fg:w="98"/><text x="40.0799%" y="799.50"></text></g><g><title>hrtimer_start_range_ns (349 samples, 0.09%)</title><rect x="39.7702%" y="821" width="0.0922%" height="15" fill="rgb(219,66,42)" fg:x="150478" fg:w="349"/><text x="40.0202%" y="831.50"></text></g><g><title>rb_erase (52 samples, 0.01%)</title><rect x="39.8960%" y="789" width="0.0137%" height="15" fill="rgb(206,180,7)" fg:x="150954" fg:w="52"/><text x="40.1460%" y="799.50"></text></g><g><title>__remove_hrtimer (120 samples, 0.03%)</title><rect x="39.8854%" y="805" width="0.0317%" height="15" fill="rgb(208,226,31)" fg:x="150914" fg:w="120"/><text x="40.1354%" y="815.50"></text></g><g><title>_raw_spin_lock_irqsave (125 samples, 0.03%)</title><rect x="39.9171%" y="805" width="0.0330%" height="15" fill="rgb(218,26,49)" fg:x="151034" fg:w="125"/><text x="40.1671%" y="815.50"></text></g><g><title>__raw_spin_lock_irqsave (123 samples, 0.03%)</title><rect x="39.9176%" y="789" width="0.0325%" height="15" fill="rgb(233,197,48)" fg:x="151036" fg:w="123"/><text x="40.1676%" y="799.50"></text></g><g><title>hrtimer_try_to_cancel (380 samples, 0.10%)</title><rect x="39.8624%" y="821" width="0.1004%" height="15" fill="rgb(252,181,51)" fg:x="150827" fg:w="380"/><text x="40.1124%" y="831.50"></text></g><g><title>_raw_spin_lock (103 samples, 0.03%)</title><rect x="40.0493%" y="789" width="0.0272%" height="15" fill="rgb(253,90,19)" fg:x="151534" fg:w="103"/><text x="40.2993%" y="799.50"></text></g><g><title>clear_buddies (64 samples, 0.02%)</title><rect x="40.1360%" y="757" width="0.0169%" height="15" fill="rgb(215,171,30)" fg:x="151862" fg:w="64"/><text x="40.3860%" y="767.50"></text></g><g><title>__update_load_avg_cfs_rq (53 samples, 0.01%)</title><rect x="40.2866%" y="741" width="0.0140%" height="15" fill="rgb(214,222,9)" fg:x="152432" fg:w="53"/><text x="40.5366%" y="751.50"></text></g><g><title>__update_load_avg_se (58 samples, 0.02%)</title><rect x="40.3006%" y="741" width="0.0153%" height="15" fill="rgb(223,3,22)" fg:x="152485" fg:w="58"/><text x="40.5506%" y="751.50"></text></g><g><title>clear_buddies (87 samples, 0.02%)</title><rect x="40.3159%" y="741" width="0.0230%" height="15" fill="rgb(225,196,46)" fg:x="152543" fg:w="87"/><text x="40.5659%" y="751.50"></text></g><g><title>update_cfs_group (299 samples, 0.08%)</title><rect x="40.3439%" y="741" width="0.0790%" height="15" fill="rgb(209,110,37)" fg:x="152649" fg:w="299"/><text x="40.5939%" y="751.50"></text></g><g><title>reweight_entity (137 samples, 0.04%)</title><rect x="40.3868%" y="725" width="0.0362%" height="15" fill="rgb(249,89,12)" fg:x="152811" fg:w="137"/><text x="40.6368%" y="735.50"></text></g><g><title>__calc_delta (268 samples, 0.07%)</title><rect x="40.5025%" y="725" width="0.0708%" height="15" fill="rgb(226,27,33)" fg:x="153249" fg:w="268"/><text x="40.7525%" y="735.50"></text></g><g><title>__cgroup_account_cputime (46 samples, 0.01%)</title><rect x="40.5734%" y="725" width="0.0122%" height="15" fill="rgb(213,82,22)" fg:x="153517" fg:w="46"/><text x="40.8234%" y="735.50"></text></g><g><title>cpuacct_charge (227 samples, 0.06%)</title><rect x="40.5860%" y="725" width="0.0600%" height="15" fill="rgb(248,140,0)" fg:x="153565" fg:w="227"/><text x="40.8360%" y="735.50"></text></g><g><title>update_curr (885 samples, 0.23%)</title><rect x="40.4230%" y="741" width="0.2339%" height="15" fill="rgb(228,106,3)" fg:x="152948" fg:w="885"/><text x="40.6730%" y="751.50"></text></g><g><title>update_min_vruntime (41 samples, 0.01%)</title><rect x="40.6460%" y="725" width="0.0108%" height="15" fill="rgb(209,23,37)" fg:x="153792" fg:w="41"/><text x="40.8960%" y="735.50"></text></g><g><title>__update_load_avg_cfs_rq (348 samples, 0.09%)</title><rect x="40.7541%" y="725" width="0.0920%" height="15" fill="rgb(241,93,50)" fg:x="154201" fg:w="348"/><text x="41.0041%" y="735.50"></text></g><g><title>__update_load_avg_se (251 samples, 0.07%)</title><rect x="40.8461%" y="725" width="0.0663%" height="15" fill="rgb(253,46,43)" fg:x="154549" fg:w="251"/><text x="41.0961%" y="735.50"></text></g><g><title>update_load_avg (968 samples, 0.26%)</title><rect x="40.6569%" y="741" width="0.2558%" height="15" fill="rgb(226,206,43)" fg:x="153833" fg:w="968"/><text x="40.9069%" y="751.50"></text></g><g><title>dequeue_entity (2,967 samples, 0.78%)</title><rect x="40.1529%" y="757" width="0.7842%" height="15" fill="rgb(217,54,7)" fg:x="151926" fg:w="2967"/><text x="40.4029%" y="767.50"></text></g><g><title>update_min_vruntime (92 samples, 0.02%)</title><rect x="40.9127%" y="741" width="0.0243%" height="15" fill="rgb(223,5,52)" fg:x="154801" fg:w="92"/><text x="41.1627%" y="751.50"></text></g><g><title>update_cfs_group (119 samples, 0.03%)</title><rect x="40.9370%" y="757" width="0.0315%" height="15" fill="rgb(206,52,46)" fg:x="154893" fg:w="119"/><text x="41.1870%" y="767.50"></text></g><g><title>dequeue_task_fair (3,442 samples, 0.91%)</title><rect x="40.0863%" y="773" width="0.9097%" height="15" fill="rgb(253,136,11)" fg:x="151674" fg:w="3442"/><text x="40.3363%" y="783.50"></text></g><g><title>dequeue_task (3,487 samples, 0.92%)</title><rect x="40.0765%" y="789" width="0.9216%" height="15" fill="rgb(208,106,33)" fg:x="151637" fg:w="3487"/><text x="40.3265%" y="799.50"></text></g><g><title>dequeue_task_fair (42 samples, 0.01%)</title><rect x="40.9981%" y="789" width="0.0111%" height="15" fill="rgb(206,54,4)" fg:x="155124" fg:w="42"/><text x="41.2481%" y="799.50"></text></g><g><title>_raw_spin_unlock (55 samples, 0.01%)</title><rect x="41.0898%" y="757" width="0.0145%" height="15" fill="rgb(213,3,15)" fg:x="155471" fg:w="55"/><text x="41.3398%" y="767.50"></text></g><g><title>perf_ibs_add (51 samples, 0.01%)</title><rect x="41.1307%" y="693" width="0.0135%" height="15" fill="rgb(252,211,39)" fg:x="155626" fg:w="51"/><text x="41.3807%" y="703.50"></text></g><g><title>perf_ibs_start (42 samples, 0.01%)</title><rect x="41.1331%" y="677" width="0.0111%" height="15" fill="rgb(223,6,36)" fg:x="155635" fg:w="42"/><text x="41.3831%" y="687.50"></text></g><g><title>event_sched_in (79 samples, 0.02%)</title><rect x="41.1239%" y="709" width="0.0209%" height="15" fill="rgb(252,169,45)" fg:x="155600" fg:w="79"/><text x="41.3739%" y="719.50"></text></g><g><title>merge_sched_in (116 samples, 0.03%)</title><rect x="41.1149%" y="725" width="0.0307%" height="15" fill="rgb(212,48,26)" fg:x="155566" fg:w="116"/><text x="41.3649%" y="735.50"></text></g><g><title>ctx_sched_in (250 samples, 0.07%)</title><rect x="41.1043%" y="757" width="0.0661%" height="15" fill="rgb(251,102,48)" fg:x="155526" fg:w="250"/><text x="41.3543%" y="767.50"></text></g><g><title>visit_groups_merge.constprop.0.isra.0 (226 samples, 0.06%)</title><rect x="41.1107%" y="741" width="0.0597%" height="15" fill="rgb(243,208,16)" fg:x="155550" fg:w="226"/><text x="41.3607%" y="751.50"></text></g><g><title>rb_next (57 samples, 0.02%)</title><rect x="41.1553%" y="725" width="0.0151%" height="15" fill="rgb(219,96,24)" fg:x="155719" fg:w="57"/><text x="41.4053%" y="735.50"></text></g><g><title>perf_ctx_sched_task_cb (49 samples, 0.01%)</title><rect x="41.1796%" y="757" width="0.0130%" height="15" fill="rgb(219,33,29)" fg:x="155811" fg:w="49"/><text x="41.4296%" y="767.50"></text></g><g><title>perf_pmu_nop_void (45 samples, 0.01%)</title><rect x="41.1926%" y="757" width="0.0119%" height="15" fill="rgb(223,176,5)" fg:x="155860" fg:w="45"/><text x="41.4426%" y="767.50"></text></g><g><title>__perf_event_task_sched_in (505 samples, 0.13%)</title><rect x="41.0723%" y="773" width="0.1335%" height="15" fill="rgb(228,140,14)" fg:x="155405" fg:w="505"/><text x="41.3223%" y="783.50"></text></g><g><title>_raw_spin_unlock (65 samples, 0.02%)</title><rect x="41.2108%" y="773" width="0.0172%" height="15" fill="rgb(217,179,31)" fg:x="155929" fg:w="65"/><text x="41.4608%" y="783.50"></text></g><g><title>finish_task_switch.isra.0 (876 samples, 0.23%)</title><rect x="41.0092%" y="789" width="0.2315%" height="15" fill="rgb(230,9,30)" fg:x="155166" fg:w="876"/><text x="41.2592%" y="799.50"></text></g><g><title>newidle_balance (124 samples, 0.03%)</title><rect x="41.2782%" y="757" width="0.0328%" height="15" fill="rgb(230,136,20)" fg:x="156184" fg:w="124"/><text x="41.5282%" y="767.50"></text></g><g><title>pick_next_task_fair (200 samples, 0.05%)</title><rect x="41.2587%" y="773" width="0.0529%" height="15" fill="rgb(215,210,22)" fg:x="156110" fg:w="200"/><text x="41.5087%" y="783.50"></text></g><g><title>pick_next_task_idle (154 samples, 0.04%)</title><rect x="41.3115%" y="773" width="0.0407%" height="15" fill="rgb(218,43,5)" fg:x="156310" fg:w="154"/><text x="41.5615%" y="783.50"></text></g><g><title>__update_idle_core (95 samples, 0.03%)</title><rect x="41.3271%" y="757" width="0.0251%" height="15" fill="rgb(216,11,5)" fg:x="156369" fg:w="95"/><text x="41.5771%" y="767.50"></text></g><g><title>put_prev_entity (44 samples, 0.01%)</title><rect x="41.3522%" y="773" width="0.0116%" height="15" fill="rgb(209,82,29)" fg:x="156464" fg:w="44"/><text x="41.6022%" y="783.50"></text></g><g><title>check_spread.isra.0 (78 samples, 0.02%)</title><rect x="41.3863%" y="757" width="0.0206%" height="15" fill="rgb(244,115,12)" fg:x="156593" fg:w="78"/><text x="41.6363%" y="767.50"></text></g><g><title>pick_next_task (735 samples, 0.19%)</title><rect x="41.2407%" y="789" width="0.1943%" height="15" fill="rgb(222,82,18)" fg:x="156042" fg:w="735"/><text x="41.4907%" y="799.50"></text></g><g><title>put_prev_task_fair (269 samples, 0.07%)</title><rect x="41.3639%" y="773" width="0.0711%" height="15" fill="rgb(249,227,8)" fg:x="156508" fg:w="269"/><text x="41.6139%" y="783.50"></text></g><g><title>put_prev_entity (106 samples, 0.03%)</title><rect x="41.4069%" y="757" width="0.0280%" height="15" fill="rgb(253,141,45)" fg:x="156671" fg:w="106"/><text x="41.6569%" y="767.50"></text></g><g><title>_raw_spin_lock (72 samples, 0.02%)</title><rect x="41.4714%" y="757" width="0.0190%" height="15" fill="rgb(234,184,4)" fg:x="156915" fg:w="72"/><text x="41.7214%" y="767.50"></text></g><g><title>perf_ibs_del (525 samples, 0.14%)</title><rect x="41.5396%" y="677" width="0.1388%" height="15" fill="rgb(218,194,23)" fg:x="157173" fg:w="525"/><text x="41.7896%" y="687.50"></text></g><g><title>perf_ibs_stop (478 samples, 0.13%)</title><rect x="41.5520%" y="661" width="0.1263%" height="15" fill="rgb(235,66,41)" fg:x="157220" fg:w="478"/><text x="41.8020%" y="671.50"></text></g><g><title>native_read_msr (186 samples, 0.05%)</title><rect x="41.6292%" y="645" width="0.0492%" height="15" fill="rgb(245,217,1)" fg:x="157512" fg:w="186"/><text x="41.8792%" y="655.50"></text></g><g><title>event_sched_out (557 samples, 0.15%)</title><rect x="41.5327%" y="693" width="0.1472%" height="15" fill="rgb(229,91,1)" fg:x="157147" fg:w="557"/><text x="41.7827%" y="703.50"></text></g><g><title>__pmu_ctx_sched_out (682 samples, 0.18%)</title><rect x="41.5134%" y="725" width="0.1802%" height="15" fill="rgb(207,101,30)" fg:x="157074" fg:w="682"/><text x="41.7634%" y="735.50"></text></g><g><title>group_sched_out (639 samples, 0.17%)</title><rect x="41.5248%" y="709" width="0.1689%" height="15" fill="rgb(223,82,49)" fg:x="157117" fg:w="639"/><text x="41.7748%" y="719.50"></text></g><g><title>perf_ibs_del (52 samples, 0.01%)</title><rect x="41.6799%" y="693" width="0.0137%" height="15" fill="rgb(218,167,17)" fg:x="157704" fg:w="52"/><text x="41.9299%" y="703.50"></text></g><g><title>ctx_sched_out (932 samples, 0.25%)</title><rect x="41.5050%" y="741" width="0.2463%" height="15" fill="rgb(208,103,14)" fg:x="157042" fg:w="932"/><text x="41.7550%" y="751.50"></text></g><g><title>sched_clock_cpu (202 samples, 0.05%)</title><rect x="41.6979%" y="725" width="0.0534%" height="15" fill="rgb(238,20,8)" fg:x="157772" fg:w="202"/><text x="41.9479%" y="735.50"></text></g><g><title>sched_clock (184 samples, 0.05%)</title><rect x="41.7027%" y="709" width="0.0486%" height="15" fill="rgb(218,80,54)" fg:x="157790" fg:w="184"/><text x="41.9527%" y="719.50"></text></g><g><title>native_sched_clock (184 samples, 0.05%)</title><rect x="41.7027%" y="693" width="0.0486%" height="15" fill="rgb(240,144,17)" fg:x="157790" fg:w="184"/><text x="41.9527%" y="703.50"></text></g><g><title>perf_ctx_disable (49 samples, 0.01%)</title><rect x="41.7513%" y="741" width="0.0130%" height="15" fill="rgb(245,27,50)" fg:x="157974" fg:w="49"/><text x="42.0013%" y="751.50"></text></g><g><title>perf_ctx_sched_task_cb (56 samples, 0.01%)</title><rect x="41.7643%" y="741" width="0.0148%" height="15" fill="rgb(251,51,7)" fg:x="158023" fg:w="56"/><text x="42.0143%" y="751.50"></text></g><g><title>__perf_event_task_sched_out (1,260 samples, 0.33%)</title><rect x="41.4579%" y="773" width="0.3330%" height="15" fill="rgb(245,217,29)" fg:x="156864" fg:w="1260"/><text x="41.7079%" y="783.50"></text></g><g><title>perf_event_context_sched_out (1,125 samples, 0.30%)</title><rect x="41.4936%" y="757" width="0.2973%" height="15" fill="rgb(221,176,29)" fg:x="156999" fg:w="1125"/><text x="41.7436%" y="767.50"></text></g><g><title>prepare_task_switch (1,336 samples, 0.35%)</title><rect x="41.4386%" y="789" width="0.3531%" height="15" fill="rgb(212,180,24)" fg:x="156791" fg:w="1336"/><text x="41.6886%" y="799.50"></text></g><g><title>psi_group_change (71 samples, 0.02%)</title><rect x="41.7923%" y="789" width="0.0188%" height="15" fill="rgb(254,24,2)" fg:x="158129" fg:w="71"/><text x="42.0423%" y="799.50"></text></g><g><title>psi_group_change (1,302 samples, 0.34%)</title><rect x="41.8866%" y="773" width="0.3441%" height="15" fill="rgb(230,100,2)" fg:x="158486" fg:w="1302"/><text x="42.1366%" y="783.50"></text></g><g><title>record_times (58 samples, 0.02%)</title><rect x="42.2154%" y="757" width="0.0153%" height="15" fill="rgb(219,142,25)" fg:x="159730" fg:w="58"/><text x="42.4654%" y="767.50"></text></g><g><title>record_times (60 samples, 0.02%)</title><rect x="42.2307%" y="773" width="0.0159%" height="15" fill="rgb(240,73,43)" fg:x="159788" fg:w="60"/><text x="42.4807%" y="783.50"></text></g><g><title>psi_task_switch (1,806 samples, 0.48%)</title><rect x="41.8110%" y="789" width="0.4773%" height="15" fill="rgb(214,114,15)" fg:x="158200" fg:w="1806"/><text x="42.0610%" y="799.50"></text></g><g><title>sched_clock_cpu (152 samples, 0.04%)</title><rect x="42.2482%" y="773" width="0.0402%" height="15" fill="rgb(207,130,4)" fg:x="159854" fg:w="152"/><text x="42.4982%" y="783.50"></text></g><g><title>sched_clock (134 samples, 0.04%)</title><rect x="42.2529%" y="757" width="0.0354%" height="15" fill="rgb(221,25,40)" fg:x="159872" fg:w="134"/><text x="42.5029%" y="767.50"></text></g><g><title>native_sched_clock (134 samples, 0.04%)</title><rect x="42.2529%" y="741" width="0.0354%" height="15" fill="rgb(241,184,7)" fg:x="159872" fg:w="134"/><text x="42.5029%" y="751.50"></text></g><g><title>put_prev_task_fair (57 samples, 0.02%)</title><rect x="42.2883%" y="789" width="0.0151%" height="15" fill="rgb(235,159,4)" fg:x="160006" fg:w="57"/><text x="42.5383%" y="799.50"></text></g><g><title>__schedule (9,010 samples, 2.38%)</title><rect x="39.9734%" y="805" width="2.3813%" height="15" fill="rgb(214,87,48)" fg:x="151247" fg:w="9010"/><text x="40.2234%" y="815.50">__..</text></g><g><title>update_rq_clock (151 samples, 0.04%)</title><rect x="42.3148%" y="789" width="0.0399%" height="15" fill="rgb(246,198,24)" fg:x="160106" fg:w="151"/><text x="42.5648%" y="799.50"></text></g><g><title>sched_clock_cpu (126 samples, 0.03%)</title><rect x="42.3214%" y="773" width="0.0333%" height="15" fill="rgb(209,66,40)" fg:x="160131" fg:w="126"/><text x="42.5714%" y="783.50"></text></g><g><title>sched_clock (113 samples, 0.03%)</title><rect x="42.3248%" y="757" width="0.0299%" height="15" fill="rgb(233,147,39)" fg:x="160144" fg:w="113"/><text x="42.5748%" y="767.50"></text></g><g><title>native_sched_clock (113 samples, 0.03%)</title><rect x="42.3248%" y="741" width="0.0299%" height="15" fill="rgb(231,145,52)" fg:x="160144" fg:w="113"/><text x="42.5748%" y="751.50"></text></g><g><title>schedule_hrtimeout_range (10,138 samples, 2.68%)</title><rect x="39.6882%" y="853" width="2.6794%" height="15" fill="rgb(206,20,26)" fg:x="150168" fg:w="10138"/><text x="39.9382%" y="863.50">sc..</text></g><g><title>schedule_hrtimeout_range_clock (10,108 samples, 2.67%)</title><rect x="39.6962%" y="837" width="2.6715%" height="15" fill="rgb(238,220,4)" fg:x="150198" fg:w="10108"/><text x="39.9462%" y="847.50">sc..</text></g><g><title>schedule (9,099 samples, 2.40%)</title><rect x="39.9628%" y="821" width="2.4048%" height="15" fill="rgb(252,195,42)" fg:x="151207" fg:w="9099"/><text x="40.2128%" y="831.50">sc..</text></g><g><title>ktime_get_ts64 (80 samples, 0.02%)</title><rect x="42.4094%" y="837" width="0.0211%" height="15" fill="rgb(209,10,6)" fg:x="160464" fg:w="80"/><text x="42.6594%" y="847.50"></text></g><g><title>read_tsc (561 samples, 0.15%)</title><rect x="42.4305%" y="837" width="0.1483%" height="15" fill="rgb(229,3,52)" fg:x="160544" fg:w="561"/><text x="42.6805%" y="847.50"></text></g><g><title>select_estimate_accuracy (800 samples, 0.21%)</title><rect x="42.3690%" y="853" width="0.2114%" height="15" fill="rgb(253,49,37)" fg:x="160311" fg:w="800"/><text x="42.6190%" y="863.50"></text></g><g><title>ep_poll (25,387 samples, 6.71%)</title><rect x="35.8737%" y="869" width="6.7096%" height="15" fill="rgb(240,103,49)" fg:x="135735" fg:w="25387"/><text x="36.1237%" y="879.50">ep_poll</text></g><g><title>schedule_hrtimeout_range (48 samples, 0.01%)</title><rect x="42.5902%" y="869" width="0.0127%" height="15" fill="rgb(250,182,30)" fg:x="161148" fg:w="48"/><text x="42.8402%" y="879.50"></text></g><g><title>do_epoll_wait (26,191 samples, 6.92%)</title><rect x="35.6850%" y="885" width="6.9221%" height="15" fill="rgb(248,8,30)" fg:x="135021" fg:w="26191"/><text x="35.9350%" y="895.50">do_epoll_..</text></g><g><title>fput (140 samples, 0.04%)</title><rect x="42.6132%" y="885" width="0.0370%" height="15" fill="rgb(237,120,30)" fg:x="161235" fg:w="140"/><text x="42.8632%" y="895.50"></text></g><g><title>ktime_get_ts64 (245 samples, 0.06%)</title><rect x="42.6502%" y="885" width="0.0648%" height="15" fill="rgb(221,146,34)" fg:x="161375" fg:w="245"/><text x="42.9002%" y="895.50"></text></g><g><title>read_tsc (625 samples, 0.17%)</title><rect x="42.7149%" y="885" width="0.1652%" height="15" fill="rgb(242,55,13)" fg:x="161620" fg:w="625"/><text x="42.9649%" y="895.50"></text></g><g><title>__x64_sys_epoll_wait (27,553 samples, 7.28%)</title><rect x="35.6070%" y="901" width="7.2820%" height="15" fill="rgb(242,112,31)" fg:x="134726" fg:w="27553"/><text x="35.8570%" y="911.50">__x64_sys_..</text></g><g><title>__put_user_8 (200 samples, 0.05%)</title><rect x="43.2083%" y="837" width="0.0529%" height="15" fill="rgb(249,192,27)" fg:x="163487" fg:w="200"/><text x="43.4583%" y="847.50"></text></g><g><title>__get_user_8 (189 samples, 0.05%)</title><rect x="43.2805%" y="821" width="0.0500%" height="15" fill="rgb(208,204,44)" fg:x="163760" fg:w="189"/><text x="43.5305%" y="831.50"></text></g><g><title>__rseq_handle_notify_resume (1,198 samples, 0.32%)</title><rect x="43.0239%" y="853" width="0.3166%" height="15" fill="rgb(208,93,54)" fg:x="162789" fg:w="1198"/><text x="43.2739%" y="863.50"></text></g><g><title>rseq_ip_fixup (299 samples, 0.08%)</title><rect x="43.2615%" y="837" width="0.0790%" height="15" fill="rgb(242,1,31)" fg:x="163688" fg:w="299"/><text x="43.5115%" y="847.50"></text></g><g><title>rseq_get_rseq_cs.isra.0 (38 samples, 0.01%)</title><rect x="43.3305%" y="821" width="0.0100%" height="15" fill="rgb(241,83,25)" fg:x="163949" fg:w="38"/><text x="43.5805%" y="831.50"></text></g><g><title>mem_cgroup_handle_over_high (38 samples, 0.01%)</title><rect x="43.3484%" y="853" width="0.0100%" height="15" fill="rgb(205,169,50)" fg:x="164017" fg:w="38"/><text x="43.5984%" y="863.50"></text></g><g><title>exit_to_user_mode_loop (1,413 samples, 0.37%)</title><rect x="42.9895%" y="869" width="0.3734%" height="15" fill="rgb(239,186,37)" fg:x="162659" fg:w="1413"/><text x="43.2395%" y="879.50"></text></g><g><title>exit_to_user_mode_prepare (1,731 samples, 0.46%)</title><rect x="42.9197%" y="885" width="0.4575%" height="15" fill="rgb(205,221,10)" fg:x="162395" fg:w="1731"/><text x="43.1697%" y="895.50"></text></g><g><title>syscall_exit_to_user_mode (1,821 samples, 0.48%)</title><rect x="42.9055%" y="901" width="0.4813%" height="15" fill="rgb(218,196,15)" fg:x="162341" fg:w="1821"/><text x="43.1555%" y="911.50"></text></g><g><title>do_syscall_64 (29,522 samples, 7.80%)</title><rect x="35.5891%" y="917" width="7.8024%" height="15" fill="rgb(218,196,35)" fg:x="134658" fg:w="29522"/><text x="35.8391%" y="927.50">do_syscall_..</text></g><g><title>entry_SYSCALL_64_after_hwframe (29,687 samples, 7.85%)</title><rect x="35.5531%" y="933" width="7.8460%" height="15" fill="rgb(233,63,24)" fg:x="134522" fg:w="29687"/><text x="35.8031%" y="943.50">entry_SYSCA..</text></g><g><title>syscall_return_via_sysret (120 samples, 0.03%)</title><rect x="43.4034%" y="933" width="0.0317%" height="15" fill="rgb(225,8,4)" fg:x="164225" fg:w="120"/><text x="43.6534%" y="943.50"></text></g><g><title>epoll_wait (30,473 samples, 8.05%)</title><rect x="35.3816%" y="949" width="8.0538%" height="15" fill="rgb(234,105,35)" fg:x="133873" fg:w="30473"/><text x="35.6316%" y="959.50">epoll_wait</text></g><g><title>mio::poll::Poll::poll (30,680 samples, 8.11%)</title><rect x="35.3274%" y="981" width="8.1085%" height="15" fill="rgb(236,21,32)" fg:x="133668" fg:w="30680"/><text x="35.5774%" y="991.50">mio::poll::..</text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (30,680 samples, 8.11%)</title><rect x="35.3274%" y="965" width="8.1085%" height="15" fill="rgb(228,109,6)" fg:x="133668" fg:w="30680"/><text x="35.5774%" y="975.50">mio::sys::u..</text></g><g><title>tokio::io::ready::Ready::from_mio (42 samples, 0.01%)</title><rect x="43.4359%" y="981" width="0.0111%" height="15" fill="rgb(229,215,31)" fg:x="164348" fg:w="42"/><text x="43.6859%" y="991.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness (398 samples, 0.11%)</title><rect x="43.4470%" y="981" width="0.1052%" height="15" fill="rgb(221,52,54)" fg:x="164390" fg:w="398"/><text x="43.6970%" y="991.50"></text></g><g><title>tokio::util::bit::Pack::pack (313 samples, 0.08%)</title><rect x="43.4695%" y="965" width="0.0827%" height="15" fill="rgb(252,129,43)" fg:x="164475" fg:w="313"/><text x="43.7195%" y="975.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (61 samples, 0.02%)</title><rect x="43.6418%" y="917" width="0.0161%" height="15" fill="rgb(248,183,27)" fg:x="165127" fg:w="61"/><text x="43.8918%" y="927.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (61 samples, 0.02%)</title><rect x="43.6418%" y="901" width="0.0161%" height="15" fill="rgb(250,0,22)" fg:x="165127" fg:w="61"/><text x="43.8918%" y="911.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (119 samples, 0.03%)</title><rect x="43.6339%" y="965" width="0.0315%" height="15" fill="rgb(213,166,10)" fg:x="165097" fg:w="119"/><text x="43.8839%" y="975.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (117 samples, 0.03%)</title><rect x="43.6344%" y="949" width="0.0309%" height="15" fill="rgb(207,163,36)" fg:x="165099" fg:w="117"/><text x="43.8844%" y="959.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (92 samples, 0.02%)</title><rect x="43.6410%" y="933" width="0.0243%" height="15" fill="rgb(208,122,22)" fg:x="165124" fg:w="92"/><text x="43.8910%" y="943.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (31,755 samples, 8.39%)</title><rect x="35.2732%" y="997" width="8.3926%" height="15" fill="rgb(207,104,49)" fg:x="133463" fg:w="31755"/><text x="35.5232%" y="1007.50">tokio::runti..</text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (430 samples, 0.11%)</title><rect x="43.5522%" y="981" width="0.1136%" height="15" fill="rgb(248,211,50)" fg:x="164788" fg:w="430"/><text x="43.8022%" y="991.50"></text></g><g><title>__GI___clock_gettime (38 samples, 0.01%)</title><rect x="43.6687%" y="885" width="0.0100%" height="15" fill="rgb(217,13,45)" fg:x="165229" fg:w="38"/><text x="43.9187%" y="895.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (41 samples, 0.01%)</title><rect x="43.6685%" y="901" width="0.0108%" height="15" fill="rgb(211,216,49)" fg:x="165228" fg:w="41"/><text x="43.9185%" y="911.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (52 samples, 0.01%)</title><rect x="43.6658%" y="997" width="0.0137%" height="15" fill="rgb(221,58,53)" fg:x="165218" fg:w="52"/><text x="43.9158%" y="1007.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::now (52 samples, 0.01%)</title><rect x="43.6658%" y="981" width="0.0137%" height="15" fill="rgb(220,112,41)" fg:x="165218" fg:w="52"/><text x="43.9158%" y="991.50"></text></g><g><title>tokio::time::clock::Clock::now (43 samples, 0.01%)</title><rect x="43.6682%" y="965" width="0.0114%" height="15" fill="rgb(236,38,28)" fg:x="165227" fg:w="43"/><text x="43.9182%" y="975.50"></text></g><g><title>tokio::time::clock::now (43 samples, 0.01%)</title><rect x="43.6682%" y="949" width="0.0114%" height="15" fill="rgb(227,195,22)" fg:x="165227" fg:w="43"/><text x="43.9182%" y="959.50"></text></g><g><title>std::time::Instant::now (43 samples, 0.01%)</title><rect x="43.6682%" y="933" width="0.0114%" height="15" fill="rgb(214,55,33)" fg:x="165227" fg:w="43"/><text x="43.9182%" y="943.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (43 samples, 0.01%)</title><rect x="43.6682%" y="917" width="0.0114%" height="15" fill="rgb(248,80,13)" fg:x="165227" fg:w="43"/><text x="43.9182%" y="927.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (45 samples, 0.01%)</title><rect x="43.6865%" y="917" width="0.0119%" height="15" fill="rgb(238,52,6)" fg:x="165296" fg:w="45"/><text x="43.9365%" y="927.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::now (56 samples, 0.01%)</title><rect x="43.6838%" y="997" width="0.0148%" height="15" fill="rgb(224,198,47)" fg:x="165286" fg:w="56"/><text x="43.9338%" y="1007.50"></text></g><g><title>tokio::time::clock::Clock::now (49 samples, 0.01%)</title><rect x="43.6857%" y="981" width="0.0130%" height="15" fill="rgb(233,171,20)" fg:x="165293" fg:w="49"/><text x="43.9357%" y="991.50"></text></g><g><title>tokio::time::clock::now (49 samples, 0.01%)</title><rect x="43.6857%" y="965" width="0.0130%" height="15" fill="rgb(241,30,25)" fg:x="165293" fg:w="49"/><text x="43.9357%" y="975.50"></text></g><g><title>std::time::Instant::now (49 samples, 0.01%)</title><rect x="43.6857%" y="949" width="0.0130%" height="15" fill="rgb(207,171,38)" fg:x="165293" fg:w="49"/><text x="43.9357%" y="959.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (49 samples, 0.01%)</title><rect x="43.6857%" y="933" width="0.0130%" height="15" fill="rgb(234,70,1)" fg:x="165293" fg:w="49"/><text x="43.9357%" y="943.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (31,983 samples, 8.45%)</title><rect x="35.2476%" y="1013" width="8.4529%" height="15" fill="rgb(232,178,18)" fg:x="133366" fg:w="31983"/><text x="35.4976%" y="1023.50">tokio::runti..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_driver (32,791 samples, 8.67%)</title><rect x="35.0354%" y="1077" width="8.6664%" height="15" fill="rgb(241,78,40)" fg:x="132563" fg:w="32791"/><text x="35.2854%" y="1087.50">tokio::runti..</text></g><g><title>tokio::runtime::driver::Driver::park (32,760 samples, 8.66%)</title><rect x="35.0436%" y="1061" width="8.6582%" height="15" fill="rgb(222,35,25)" fg:x="132594" fg:w="32760"/><text x="35.2936%" y="1071.50">tokio::runti..</text></g><g><title>tokio::runtime::driver::TimeDriver::park (32,760 samples, 8.66%)</title><rect x="35.0436%" y="1045" width="8.6582%" height="15" fill="rgb(207,92,16)" fg:x="132594" fg:w="32760"/><text x="35.2936%" y="1055.50">tokio::runti..</text></g><g><title>tokio::runtime::time::Driver::park (32,760 samples, 8.66%)</title><rect x="35.0436%" y="1029" width="8.6582%" height="15" fill="rgb(216,59,51)" fg:x="132594" fg:w="32760"/><text x="35.2936%" y="1039.50">tokio::runti..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (56,209 samples, 14.86%)</title><rect x="28.8483%" y="1109" width="14.8556%" height="15" fill="rgb(213,80,28)" fg:x="109153" fg:w="56209"/><text x="29.0983%" y="1119.50">tokio::runtime::schedul..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (56,209 samples, 14.86%)</title><rect x="28.8483%" y="1093" width="14.8556%" height="15" fill="rgb(220,93,7)" fg:x="109153" fg:w="56209"/><text x="29.0983%" y="1103.50">tokio::runtime::schedul..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (56,281 samples, 14.87%)</title><rect x="28.8306%" y="1125" width="14.8746%" height="15" fill="rgb(225,24,44)" fg:x="109086" fg:w="56281"/><text x="29.0806%" y="1135.50">tokio::runtime::schedul..</text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (121 samples, 0.03%)</title><rect x="43.7269%" y="1109" width="0.0320%" height="15" fill="rgb(243,74,40)" fg:x="165449" fg:w="121"/><text x="43.9769%" y="1119.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (121 samples, 0.03%)</title><rect x="43.7269%" y="1093" width="0.0320%" height="15" fill="rgb(228,39,7)" fg:x="165449" fg:w="121"/><text x="43.9769%" y="1103.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (115 samples, 0.03%)</title><rect x="43.7285%" y="1077" width="0.0304%" height="15" fill="rgb(227,79,8)" fg:x="165455" fg:w="115"/><text x="43.9785%" y="1087.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (121 samples, 0.03%)</title><rect x="43.7602%" y="1077" width="0.0320%" height="15" fill="rgb(236,58,11)" fg:x="165575" fg:w="121"/><text x="44.0102%" y="1087.50"></text></g><g><title>std::sync::poison::Flag::guard (117 samples, 0.03%)</title><rect x="43.7612%" y="1061" width="0.0309%" height="15" fill="rgb(249,63,35)" fg:x="165579" fg:w="117"/><text x="44.0112%" y="1071.50"></text></g><g><title>std::thread::panicking (114 samples, 0.03%)</title><rect x="43.7620%" y="1045" width="0.0301%" height="15" fill="rgb(252,114,16)" fg:x="165582" fg:w="114"/><text x="44.0120%" y="1055.50"></text></g><g><title>std::panicking::panicking (114 samples, 0.03%)</title><rect x="43.7620%" y="1029" width="0.0301%" height="15" fill="rgb(254,151,24)" fg:x="165582" fg:w="114"/><text x="44.0120%" y="1039.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (114 samples, 0.03%)</title><rect x="43.7620%" y="1013" width="0.0301%" height="15" fill="rgb(253,54,39)" fg:x="165582" fg:w="114"/><text x="44.0120%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (108 samples, 0.03%)</title><rect x="43.7636%" y="997" width="0.0285%" height="15" fill="rgb(243,25,45)" fg:x="165588" fg:w="108"/><text x="44.0136%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_load (108 samples, 0.03%)</title><rect x="43.7636%" y="981" width="0.0285%" height="15" fill="rgb(234,134,9)" fg:x="165588" fg:w="108"/><text x="44.0136%" y="991.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (207 samples, 0.05%)</title><rect x="43.7932%" y="1061" width="0.0547%" height="15" fill="rgb(227,166,31)" fg:x="165700" fg:w="207"/><text x="44.0432%" y="1071.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (207 samples, 0.05%)</title><rect x="43.7932%" y="1045" width="0.0547%" height="15" fill="rgb(245,143,41)" fg:x="165700" fg:w="207"/><text x="44.0432%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (128 samples, 0.03%)</title><rect x="43.8479%" y="1061" width="0.0338%" height="15" fill="rgb(238,181,32)" fg:x="165907" fg:w="128"/><text x="44.0979%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (128 samples, 0.03%)</title><rect x="43.8479%" y="1045" width="0.0338%" height="15" fill="rgb(224,113,18)" fg:x="165907" fg:w="128"/><text x="44.0979%" y="1055.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (599 samples, 0.16%)</title><rect x="43.7589%" y="1109" width="0.1583%" height="15" fill="rgb(240,229,28)" fg:x="165570" fg:w="599"/><text x="44.0089%" y="1119.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (594 samples, 0.16%)</title><rect x="43.7602%" y="1093" width="0.1570%" height="15" fill="rgb(250,185,3)" fg:x="165575" fg:w="594"/><text x="44.0102%" y="1103.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (473 samples, 0.13%)</title><rect x="43.7922%" y="1077" width="0.1250%" height="15" fill="rgb(212,59,25)" fg:x="165696" fg:w="473"/><text x="44.0422%" y="1087.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (134 samples, 0.04%)</title><rect x="43.8818%" y="1061" width="0.0354%" height="15" fill="rgb(221,87,20)" fg:x="166035" fg:w="134"/><text x="44.1318%" y="1071.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (96 samples, 0.03%)</title><rect x="43.8918%" y="1045" width="0.0254%" height="15" fill="rgb(213,74,28)" fg:x="166073" fg:w="96"/><text x="44.1418%" y="1055.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::maintenance (806 samples, 0.21%)</title><rect x="43.7052%" y="1125" width="0.2130%" height="15" fill="rgb(224,132,34)" fg:x="165367" fg:w="806"/><text x="43.9552%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (80 samples, 0.02%)</title><rect x="43.9264%" y="1093" width="0.0211%" height="15" fill="rgb(222,101,24)" fg:x="166204" fg:w="80"/><text x="44.1764%" y="1103.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (80 samples, 0.02%)</title><rect x="43.9264%" y="1077" width="0.0211%" height="15" fill="rgb(254,142,4)" fg:x="166204" fg:w="80"/><text x="44.1764%" y="1087.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (48 samples, 0.01%)</title><rect x="43.9349%" y="1061" width="0.0127%" height="15" fill="rgb(230,229,49)" fg:x="166236" fg:w="48"/><text x="44.1849%" y="1071.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::{{closure}} (589 samples, 0.16%)</title><rect x="44.0731%" y="1045" width="0.1557%" height="15" fill="rgb(238,70,47)" fg:x="166759" fg:w="589"/><text x="44.3231%" y="1055.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (589 samples, 0.16%)</title><rect x="44.0731%" y="1029" width="0.1557%" height="15" fill="rgb(231,160,17)" fg:x="166759" fg:w="589"/><text x="44.3231%" y="1039.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (1,373 samples, 0.36%)</title><rect x="43.9476%" y="1093" width="0.3629%" height="15" fill="rgb(218,68,53)" fg:x="166284" fg:w="1373"/><text x="44.1976%" y="1103.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (1,373 samples, 0.36%)</title><rect x="43.9476%" y="1077" width="0.3629%" height="15" fill="rgb(236,111,10)" fg:x="166284" fg:w="1373"/><text x="44.1976%" y="1087.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (1,373 samples, 0.36%)</title><rect x="43.9476%" y="1061" width="0.3629%" height="15" fill="rgb(224,34,41)" fg:x="166284" fg:w="1373"/><text x="44.1976%" y="1071.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (309 samples, 0.08%)</title><rect x="44.2288%" y="1045" width="0.0817%" height="15" fill="rgb(241,118,19)" fg:x="167348" fg:w="309"/><text x="44.4788%" y="1055.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (309 samples, 0.08%)</title><rect x="44.2288%" y="1029" width="0.0817%" height="15" fill="rgb(238,129,25)" fg:x="167348" fg:w="309"/><text x="44.4788%" y="1039.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (50 samples, 0.01%)</title><rect x="44.3192%" y="1045" width="0.0132%" height="15" fill="rgb(238,22,31)" fg:x="167690" fg:w="50"/><text x="44.5692%" y="1055.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (50 samples, 0.01%)</title><rect x="44.3192%" y="1029" width="0.0132%" height="15" fill="rgb(222,174,48)" fg:x="167690" fg:w="50"/><text x="44.5692%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (59 samples, 0.02%)</title><rect x="44.3324%" y="1045" width="0.0156%" height="15" fill="rgb(206,152,40)" fg:x="167740" fg:w="59"/><text x="44.5824%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (59 samples, 0.02%)</title><rect x="44.3324%" y="1029" width="0.0156%" height="15" fill="rgb(218,99,54)" fg:x="167740" fg:w="59"/><text x="44.5824%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::is_parked (1,625 samples, 0.43%)</title><rect x="43.9256%" y="1109" width="0.4295%" height="15" fill="rgb(220,174,26)" fg:x="166201" fg:w="1625"/><text x="44.1756%" y="1119.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (169 samples, 0.04%)</title><rect x="44.3104%" y="1093" width="0.0447%" height="15" fill="rgb(245,116,9)" fg:x="167657" fg:w="169"/><text x="44.5604%" y="1103.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (168 samples, 0.04%)</title><rect x="44.3107%" y="1077" width="0.0444%" height="15" fill="rgb(209,72,35)" fg:x="167658" fg:w="168"/><text x="44.5607%" y="1087.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (136 samples, 0.04%)</title><rect x="44.3192%" y="1061" width="0.0359%" height="15" fill="rgb(226,126,21)" fg:x="167690" fg:w="136"/><text x="44.5692%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_parked (1,675 samples, 0.44%)</title><rect x="43.9182%" y="1125" width="0.4427%" height="15" fill="rgb(227,192,1)" fg:x="166173" fg:w="1675"/><text x="44.1682%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (95 samples, 0.03%)</title><rect x="44.3802%" y="1093" width="0.0251%" height="15" fill="rgb(237,180,29)" fg:x="167921" fg:w="95"/><text x="44.6302%" y="1103.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (95 samples, 0.03%)</title><rect x="44.3802%" y="1077" width="0.0251%" height="15" fill="rgb(230,197,35)" fg:x="167921" fg:w="95"/><text x="44.6302%" y="1087.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (88 samples, 0.02%)</title><rect x="44.3821%" y="1061" width="0.0233%" height="15" fill="rgb(246,193,31)" fg:x="167928" fg:w="88"/><text x="44.6321%" y="1071.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (163 samples, 0.04%)</title><rect x="44.4130%" y="1045" width="0.0431%" height="15" fill="rgb(241,36,4)" fg:x="168045" fg:w="163"/><text x="44.6630%" y="1055.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (163 samples, 0.04%)</title><rect x="44.4130%" y="1029" width="0.0431%" height="15" fill="rgb(241,130,17)" fg:x="168045" fg:w="163"/><text x="44.6630%" y="1039.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (342 samples, 0.09%)</title><rect x="44.4053%" y="1093" width="0.0904%" height="15" fill="rgb(206,137,32)" fg:x="168016" fg:w="342"/><text x="44.6553%" y="1103.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (341 samples, 0.09%)</title><rect x="44.4056%" y="1077" width="0.0901%" height="15" fill="rgb(237,228,51)" fg:x="168017" fg:w="341"/><text x="44.6556%" y="1087.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (318 samples, 0.08%)</title><rect x="44.4117%" y="1061" width="0.0840%" height="15" fill="rgb(243,6,42)" fg:x="168040" fg:w="318"/><text x="44.6617%" y="1071.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (117 samples, 0.03%)</title><rect x="44.4648%" y="1045" width="0.0309%" height="15" fill="rgb(251,74,28)" fg:x="168241" fg:w="117"/><text x="44.7148%" y="1055.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (81 samples, 0.02%)</title><rect x="44.4743%" y="1029" width="0.0214%" height="15" fill="rgb(218,20,49)" fg:x="168277" fg:w="81"/><text x="44.7243%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (512 samples, 0.14%)</title><rect x="44.3781%" y="1109" width="0.1353%" height="15" fill="rgb(238,28,14)" fg:x="167913" fg:w="512"/><text x="44.6281%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::dec_num_unparked (67 samples, 0.02%)</title><rect x="44.4957%" y="1093" width="0.0177%" height="15" fill="rgb(229,40,46)" fg:x="168358" fg:w="67"/><text x="44.7457%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::is_empty (57 samples, 0.02%)</title><rect x="44.5211%" y="1093" width="0.0151%" height="15" fill="rgb(244,195,20)" fg:x="168454" fg:w="57"/><text x="44.7711%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::is_empty (46 samples, 0.01%)</title><rect x="44.5240%" y="1077" width="0.0122%" height="15" fill="rgb(253,56,35)" fg:x="168465" fg:w="46"/><text x="44.7740%" y="1087.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (61 samples, 0.02%)</title><rect x="44.5465%" y="1013" width="0.0161%" height="15" fill="rgb(210,149,44)" fg:x="168550" fg:w="61"/><text x="44.7965%" y="1023.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (53 samples, 0.01%)</title><rect x="44.5486%" y="997" width="0.0140%" height="15" fill="rgb(240,135,12)" fg:x="168558" fg:w="53"/><text x="44.7986%" y="1007.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (88 samples, 0.02%)</title><rect x="44.5396%" y="1061" width="0.0233%" height="15" fill="rgb(251,24,50)" fg:x="168524" fg:w="88"/><text x="44.7896%" y="1071.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (88 samples, 0.02%)</title><rect x="44.5396%" y="1045" width="0.0233%" height="15" fill="rgb(243,200,47)" fg:x="168524" fg:w="88"/><text x="44.7896%" y="1055.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (78 samples, 0.02%)</title><rect x="44.5422%" y="1029" width="0.0206%" height="15" fill="rgb(224,166,26)" fg:x="168534" fg:w="78"/><text x="44.7922%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_if_work_pending (287 samples, 0.08%)</title><rect x="44.5134%" y="1109" width="0.0759%" height="15" fill="rgb(233,0,47)" fg:x="168425" fg:w="287"/><text x="44.7634%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (201 samples, 0.05%)</title><rect x="44.5362%" y="1093" width="0.0531%" height="15" fill="rgb(253,80,5)" fg:x="168511" fg:w="201"/><text x="44.7862%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (201 samples, 0.05%)</title><rect x="44.5362%" y="1077" width="0.0531%" height="15" fill="rgb(214,133,25)" fg:x="168511" fg:w="201"/><text x="44.7862%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (100 samples, 0.03%)</title><rect x="44.5628%" y="1061" width="0.0264%" height="15" fill="rgb(209,27,14)" fg:x="168612" fg:w="100"/><text x="44.8128%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (98 samples, 0.03%)</title><rect x="44.5634%" y="1045" width="0.0259%" height="15" fill="rgb(219,102,51)" fg:x="168614" fg:w="98"/><text x="44.8134%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_add (98 samples, 0.03%)</title><rect x="44.5634%" y="1029" width="0.0259%" height="15" fill="rgb(237,18,16)" fg:x="168614" fg:w="98"/><text x="44.8134%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (60,093 samples, 15.88%)</title><rect x="28.7161%" y="1141" width="15.8821%" height="15" fill="rgb(241,85,17)" fg:x="108653" fg:w="60093"/><text x="28.9661%" y="1151.50">tokio::runtime::schedule..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_parked (898 samples, 0.24%)</title><rect x="44.3609%" y="1125" width="0.2373%" height="15" fill="rgb(236,90,42)" fg:x="167848" fg:w="898"/><text x="44.6109%" y="1135.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (81 samples, 0.02%)</title><rect x="44.5985%" y="1125" width="0.0214%" height="15" fill="rgb(249,57,21)" fg:x="168747" fg:w="81"/><text x="44.8485%" y="1135.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (81 samples, 0.02%)</title><rect x="44.5985%" y="1109" width="0.0214%" height="15" fill="rgb(243,12,36)" fg:x="168747" fg:w="81"/><text x="44.8485%" y="1119.50"></text></g><g><title>core::cell::BorrowRefMut::new (81 samples, 0.02%)</title><rect x="44.5985%" y="1093" width="0.0214%" height="15" fill="rgb(253,128,47)" fg:x="168747" fg:w="81"/><text x="44.8485%" y="1103.50"></text></g><g><title>tokio::runtime::context::budget (60 samples, 0.02%)</title><rect x="44.6220%" y="1093" width="0.0159%" height="15" fill="rgb(207,33,20)" fg:x="168836" fg:w="60"/><text x="44.8720%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (60 samples, 0.02%)</title><rect x="44.6220%" y="1077" width="0.0159%" height="15" fill="rgb(233,215,35)" fg:x="168836" fg:w="60"/><text x="44.8720%" y="1087.50"></text></g><g><title>[[vdso]] (62 samples, 0.02%)</title><rect x="44.7611%" y="1045" width="0.0164%" height="15" fill="rgb(249,188,52)" fg:x="169362" fg:w="62"/><text x="45.0111%" y="1055.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (434 samples, 0.11%)</title><rect x="44.8330%" y="869" width="0.1147%" height="15" fill="rgb(225,12,32)" fg:x="169634" fg:w="434"/><text x="45.0830%" y="879.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (591 samples, 0.16%)</title><rect x="44.9484%" y="837" width="0.1562%" height="15" fill="rgb(247,98,14)" fg:x="170071" fg:w="591"/><text x="45.1984%" y="847.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (596 samples, 0.16%)</title><rect x="44.9477%" y="869" width="0.1575%" height="15" fill="rgb(247,219,48)" fg:x="170068" fg:w="596"/><text x="45.1977%" y="879.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage::{{closure}} (596 samples, 0.16%)</title><rect x="44.9477%" y="853" width="0.1575%" height="15" fill="rgb(253,60,48)" fg:x="170068" fg:w="596"/><text x="45.1977%" y="863.50"></text></g><g><title>std::panic::catch_unwind (1,053 samples, 0.28%)</title><rect x="44.8298%" y="997" width="0.2783%" height="15" fill="rgb(245,15,52)" fg:x="169622" fg:w="1053"/><text x="45.0798%" y="1007.50"></text></g><g><title>std::panicking::try (1,053 samples, 0.28%)</title><rect x="44.8298%" y="981" width="0.2783%" height="15" fill="rgb(220,133,28)" fg:x="169622" fg:w="1053"/><text x="45.0798%" y="991.50"></text></g><g><title>std::panicking::try::do_call (1,053 samples, 0.28%)</title><rect x="44.8298%" y="965" width="0.2783%" height="15" fill="rgb(217,180,4)" fg:x="169622" fg:w="1053"/><text x="45.0798%" y="975.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,053 samples, 0.28%)</title><rect x="44.8298%" y="949" width="0.2783%" height="15" fill="rgb(251,24,1)" fg:x="169622" fg:w="1053"/><text x="45.0798%" y="959.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,053 samples, 0.28%)</title><rect x="44.8298%" y="933" width="0.2783%" height="15" fill="rgb(212,185,49)" fg:x="169622" fg:w="1053"/><text x="45.0798%" y="943.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete::{{closure}} (1,053 samples, 0.28%)</title><rect x="44.8298%" y="917" width="0.2783%" height="15" fill="rgb(215,175,22)" fg:x="169622" fg:w="1053"/><text x="45.0798%" y="927.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::drop_future_or_output (1,053 samples, 0.28%)</title><rect x="44.8298%" y="901" width="0.2783%" height="15" fill="rgb(250,205,14)" fg:x="169622" fg:w="1053"/><text x="45.0798%" y="911.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (1,041 samples, 0.28%)</title><rect x="44.8330%" y="885" width="0.2751%" height="15" fill="rgb(225,211,22)" fg:x="169634" fg:w="1041"/><text x="45.0830%" y="895.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (38 samples, 0.01%)</title><rect x="45.1266%" y="949" width="0.0100%" height="15" fill="rgb(251,179,42)" fg:x="170745" fg:w="38"/><text x="45.3766%" y="959.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (76 samples, 0.02%)</title><rect x="45.1527%" y="933" width="0.0201%" height="15" fill="rgb(208,216,51)" fg:x="170844" fg:w="76"/><text x="45.4027%" y="943.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (750 samples, 0.20%)</title><rect x="45.1773%" y="869" width="0.1982%" height="15" fill="rgb(235,36,11)" fg:x="170937" fg:w="750"/><text x="45.4273%" y="879.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (750 samples, 0.20%)</title><rect x="45.1773%" y="853" width="0.1982%" height="15" fill="rgb(213,189,28)" fg:x="170937" fg:w="750"/><text x="45.4273%" y="863.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (2,086 samples, 0.55%)</title><rect x="44.8298%" y="1013" width="0.5513%" height="15" fill="rgb(227,203,42)" fg:x="169622" fg:w="2086"/><text x="45.0798%" y="1023.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::release (1,033 samples, 0.27%)</title><rect x="45.1081%" y="997" width="0.2730%" height="15" fill="rgb(244,72,36)" fg:x="170675" fg:w="1033"/><text x="45.3581%" y="1007.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::release (1,023 samples, 0.27%)</title><rect x="45.1107%" y="981" width="0.2704%" height="15" fill="rgb(213,53,17)" fg:x="170685" fg:w="1023"/><text x="45.3607%" y="991.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::remove (1,023 samples, 0.27%)</title><rect x="45.1107%" y="965" width="0.2704%" height="15" fill="rgb(207,167,3)" fg:x="170685" fg:w="1023"/><text x="45.3607%" y="975.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (892 samples, 0.24%)</title><rect x="45.1453%" y="949" width="0.2357%" height="15" fill="rgb(216,98,30)" fg:x="170816" fg:w="892"/><text x="45.3953%" y="959.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::shard_inner (788 samples, 0.21%)</title><rect x="45.1728%" y="933" width="0.2083%" height="15" fill="rgb(236,123,15)" fg:x="170920" fg:w="788"/><text x="45.4228%" y="943.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (775 samples, 0.20%)</title><rect x="45.1763%" y="917" width="0.2048%" height="15" fill="rgb(248,81,50)" fg:x="170933" fg:w="775"/><text x="45.4263%" y="927.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (775 samples, 0.20%)</title><rect x="45.1763%" y="901" width="0.2048%" height="15" fill="rgb(214,120,4)" fg:x="170933" fg:w="775"/><text x="45.4263%" y="911.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (771 samples, 0.20%)</title><rect x="45.1773%" y="885" width="0.2038%" height="15" fill="rgb(208,179,34)" fg:x="170937" fg:w="771"/><text x="45.4273%" y="895.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (42 samples, 0.01%)</title><rect x="45.4107%" y="837" width="0.0111%" height="15" fill="rgb(227,140,7)" fg:x="171820" fg:w="42"/><text x="45.6607%" y="847.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (42 samples, 0.01%)</title><rect x="45.4107%" y="821" width="0.0111%" height="15" fill="rgb(214,22,6)" fg:x="171820" fg:w="42"/><text x="45.6607%" y="831.50"></text></g><g><title>core::cell::BorrowRefMut::new (42 samples, 0.01%)</title><rect x="45.4107%" y="805" width="0.0111%" height="15" fill="rgb(207,137,27)" fg:x="171820" fg:w="42"/><text x="45.6607%" y="815.50"></text></g><g><title>tokio::runtime::coop::budget (46 samples, 0.01%)</title><rect x="45.4239%" y="837" width="0.0122%" height="15" fill="rgb(210,8,46)" fg:x="171870" fg:w="46"/><text x="45.6739%" y="847.50"></text></g><g><title>tokio::runtime::coop::with_budget (46 samples, 0.01%)</title><rect x="45.4239%" y="821" width="0.0122%" height="15" fill="rgb(240,16,54)" fg:x="171870" fg:w="46"/><text x="45.6739%" y="831.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::start_poll (86 samples, 0.02%)</title><rect x="45.4361%" y="837" width="0.0227%" height="15" fill="rgb(211,209,29)" fg:x="171916" fg:w="86"/><text x="45.6861%" y="847.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (212 samples, 0.06%)</title><rect x="45.4094%" y="853" width="0.0560%" height="15" fill="rgb(226,228,24)" fg:x="171815" fg:w="212"/><text x="45.6594%" y="863.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (71 samples, 0.02%)</title><rect x="45.9277%" y="837" width="0.0188%" height="15" fill="rgb(222,84,9)" fg:x="173776" fg:w="71"/><text x="46.1777%" y="847.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (139 samples, 0.04%)</title><rect x="46.1542%" y="821" width="0.0367%" height="15" fill="rgb(234,203,30)" fg:x="174633" fg:w="139"/><text x="46.4042%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (115 samples, 0.03%)</title><rect x="46.1605%" y="805" width="0.0304%" height="15" fill="rgb(238,109,14)" fg:x="174657" fg:w="115"/><text x="46.4105%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_add (115 samples, 0.03%)</title><rect x="46.1605%" y="789" width="0.0304%" height="15" fill="rgb(233,206,34)" fg:x="174657" fg:w="115"/><text x="46.4105%" y="799.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (138 samples, 0.04%)</title><rect x="46.1938%" y="821" width="0.0365%" height="15" fill="rgb(220,167,47)" fg:x="174783" fg:w="138"/><text x="46.4438%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::net::udp::UdpSocket&gt;&gt; (174 samples, 0.05%)</title><rect x="46.2305%" y="821" width="0.0460%" height="15" fill="rgb(238,105,10)" fg:x="174922" fg:w="174"/><text x="46.4805%" y="831.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (174 samples, 0.05%)</title><rect x="46.2305%" y="805" width="0.0460%" height="15" fill="rgb(213,227,17)" fg:x="174922" fg:w="174"/><text x="46.4805%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;torrust_tracker::core::Tracker&gt;&gt; (282 samples, 0.07%)</title><rect x="46.2765%" y="821" width="0.0745%" height="15" fill="rgb(217,132,38)" fg:x="175096" fg:w="282"/><text x="46.5265%" y="831.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (282 samples, 0.07%)</title><rect x="46.2765%" y="805" width="0.0745%" height="15" fill="rgb(242,146,4)" fg:x="175096" fg:w="282"/><text x="46.5265%" y="815.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (53 samples, 0.01%)</title><rect x="46.7602%" y="789" width="0.0140%" height="15" fill="rgb(212,61,9)" fg:x="176926" fg:w="53"/><text x="47.0102%" y="799.50"></text></g><g><title>std::io::cursor::Cursor&lt;T&gt;::remaining_slice (58 samples, 0.02%)</title><rect x="46.7789%" y="757" width="0.0153%" height="15" fill="rgb(247,126,22)" fg:x="176997" fg:w="58"/><text x="47.0289%" y="767.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (103 samples, 0.03%)</title><rect x="46.7789%" y="773" width="0.0272%" height="15" fill="rgb(220,196,2)" fg:x="176997" fg:w="103"/><text x="47.0289%" y="783.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (45 samples, 0.01%)</title><rect x="46.7943%" y="757" width="0.0119%" height="15" fill="rgb(208,46,4)" fg:x="177055" fg:w="45"/><text x="47.0443%" y="767.50"></text></g><g><title>byteorder::io::ReadBytesExt::read_i32 (108 samples, 0.03%)</title><rect x="46.7789%" y="789" width="0.0285%" height="15" fill="rgb(252,104,46)" fg:x="176997" fg:w="108"/><text x="47.0289%" y="799.50"></text></g><g><title>std::io::cursor::Cursor&lt;T&gt;::remaining_slice (55 samples, 0.01%)</title><rect x="46.8075%" y="757" width="0.0145%" height="15" fill="rgb(237,152,48)" fg:x="177105" fg:w="55"/><text x="47.0575%" y="767.50"></text></g><g><title>byteorder::io::ReadBytesExt::read_i64 (57 samples, 0.02%)</title><rect x="46.8075%" y="789" width="0.0151%" height="15" fill="rgb(221,59,37)" fg:x="177105" fg:w="57"/><text x="47.0575%" y="799.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (57 samples, 0.02%)</title><rect x="46.8075%" y="773" width="0.0151%" height="15" fill="rgb(209,202,51)" fg:x="177105" fg:w="57"/><text x="47.0575%" y="783.50"></text></g><g><title>aquatic_udp_protocol::request::Request::from_bytes (1,438 samples, 0.38%)</title><rect x="46.4554%" y="805" width="0.3801%" height="15" fill="rgb(228,81,30)" fg:x="175773" fg:w="1438"/><text x="46.7054%" y="815.50"></text></g><g><title>__GI___lll_lock_wait_private (55 samples, 0.01%)</title><rect x="46.8553%" y="661" width="0.0145%" height="15" fill="rgb(227,42,39)" fg:x="177286" fg:w="55"/><text x="47.1053%" y="671.50"></text></g><g><title>futex_wait (38 samples, 0.01%)</title><rect x="46.8598%" y="645" width="0.0100%" height="15" fill="rgb(221,26,2)" fg:x="177303" fg:w="38"/><text x="47.1098%" y="655.50"></text></g><g><title>__x64_sys_futex (128 samples, 0.03%)</title><rect x="46.9298%" y="629" width="0.0338%" height="15" fill="rgb(254,61,31)" fg:x="177568" fg:w="128"/><text x="47.1798%" y="639.50"></text></g><g><title>_raw_spin_lock (67 samples, 0.02%)</title><rect x="47.0443%" y="581" width="0.0177%" height="15" fill="rgb(222,173,38)" fg:x="178001" fg:w="67"/><text x="47.2943%" y="591.50"></text></g><g><title>futex_hash (251 samples, 0.07%)</title><rect x="47.0646%" y="581" width="0.0663%" height="15" fill="rgb(218,50,12)" fg:x="178078" fg:w="251"/><text x="47.3146%" y="591.50"></text></g><g><title>_raw_spin_lock (190 samples, 0.05%)</title><rect x="47.3218%" y="565" width="0.0502%" height="15" fill="rgb(223,88,40)" fg:x="179051" fg:w="190"/><text x="47.5718%" y="575.50"></text></g><g><title>native_queued_spin_lock_slowpath (188 samples, 0.05%)</title><rect x="47.3223%" y="549" width="0.0497%" height="15" fill="rgb(237,54,19)" fg:x="179053" fg:w="188"/><text x="47.5723%" y="559.50"></text></g><g><title>futex_wake_mark (67 samples, 0.02%)</title><rect x="47.3731%" y="565" width="0.0177%" height="15" fill="rgb(251,129,25)" fg:x="179245" fg:w="67"/><text x="47.6231%" y="575.50"></text></g><g><title>get_futex_key (210 samples, 0.06%)</title><rect x="47.3908%" y="565" width="0.0555%" height="15" fill="rgb(238,97,19)" fg:x="179312" fg:w="210"/><text x="47.6408%" y="575.50"></text></g><g><title>_raw_spin_lock_irqsave (45 samples, 0.01%)</title><rect x="47.5491%" y="533" width="0.0119%" height="15" fill="rgb(240,169,18)" fg:x="179911" fg:w="45"/><text x="47.7991%" y="543.50"></text></g><g><title>__raw_spin_lock_irqsave (44 samples, 0.01%)</title><rect x="47.5493%" y="517" width="0.0116%" height="15" fill="rgb(230,187,49)" fg:x="179912" fg:w="44"/><text x="47.7993%" y="527.50"></text></g><g><title>__smp_call_single_queue (117 samples, 0.03%)</title><rect x="47.5771%" y="517" width="0.0309%" height="15" fill="rgb(209,44,26)" fg:x="180017" fg:w="117"/><text x="47.8271%" y="527.50"></text></g><g><title>send_call_function_single_ipi (107 samples, 0.03%)</title><rect x="47.5797%" y="501" width="0.0283%" height="15" fill="rgb(244,0,6)" fg:x="180027" fg:w="107"/><text x="47.8297%" y="511.50"></text></g><g><title>native_send_call_func_single_ipi (64 samples, 0.02%)</title><rect x="47.5911%" y="485" width="0.0169%" height="15" fill="rgb(248,18,21)" fg:x="180070" fg:w="64"/><text x="47.8411%" y="495.50"></text></g><g><title>default_send_IPI_single_phys (64 samples, 0.02%)</title><rect x="47.5911%" y="469" width="0.0169%" height="15" fill="rgb(245,180,19)" fg:x="180070" fg:w="64"/><text x="47.8411%" y="479.50"></text></g><g><title>__default_send_IPI_dest_field (54 samples, 0.01%)</title><rect x="47.5938%" y="453" width="0.0143%" height="15" fill="rgb(252,118,36)" fg:x="180080" fg:w="54"/><text x="47.8438%" y="463.50"></text></g><g><title>llist_add_batch (86 samples, 0.02%)</title><rect x="47.6080%" y="517" width="0.0227%" height="15" fill="rgb(210,224,19)" fg:x="180134" fg:w="86"/><text x="47.8580%" y="527.50"></text></g><g><title>ttwu_queue_wakelist (259 samples, 0.07%)</title><rect x="47.5686%" y="533" width="0.0685%" height="15" fill="rgb(218,30,24)" fg:x="179985" fg:w="259"/><text x="47.8186%" y="543.50"></text></g><g><title>futex_wake (1,916 samples, 0.51%)</title><rect x="47.1310%" y="581" width="0.5064%" height="15" fill="rgb(219,75,50)" fg:x="178329" fg:w="1916"/><text x="47.3810%" y="591.50"></text></g><g><title>wake_up_q (702 samples, 0.19%)</title><rect x="47.4518%" y="565" width="0.1855%" height="15" fill="rgb(234,72,50)" fg:x="179543" fg:w="702"/><text x="47.7018%" y="575.50"></text></g><g><title>try_to_wake_up (671 samples, 0.18%)</title><rect x="47.4600%" y="549" width="0.1773%" height="15" fill="rgb(219,100,48)" fg:x="179574" fg:w="671"/><text x="47.7100%" y="559.50"></text></g><g><title>do_futex (2,387 samples, 0.63%)</title><rect x="47.0150%" y="597" width="0.6309%" height="15" fill="rgb(253,5,41)" fg:x="177890" fg:w="2387"/><text x="47.2650%" y="607.50"></text></g><g><title>__x64_sys_futex (2,616 samples, 0.69%)</title><rect x="46.9684%" y="613" width="0.6914%" height="15" fill="rgb(247,181,11)" fg:x="177714" fg:w="2616"/><text x="47.2184%" y="623.50"></text></g><g><title>futex_wake (53 samples, 0.01%)</title><rect x="47.6458%" y="597" width="0.0140%" height="15" fill="rgb(222,223,25)" fg:x="180277" fg:w="53"/><text x="47.8958%" y="607.50"></text></g><g><title>do_futex (38 samples, 0.01%)</title><rect x="47.6598%" y="613" width="0.0100%" height="15" fill="rgb(214,198,28)" fg:x="180330" fg:w="38"/><text x="47.9098%" y="623.50"></text></g><g><title>exit_to_user_mode_prepare (140 samples, 0.04%)</title><rect x="47.6868%" y="597" width="0.0370%" height="15" fill="rgb(230,46,43)" fg:x="180432" fg:w="140"/><text x="47.9368%" y="607.50"></text></g><g><title>do_syscall_64 (2,881 samples, 0.76%)</title><rect x="46.9637%" y="629" width="0.7614%" height="15" fill="rgb(233,65,53)" fg:x="177696" fg:w="2881"/><text x="47.2137%" y="639.50"></text></g><g><title>syscall_exit_to_user_mode (189 samples, 0.05%)</title><rect x="47.6752%" y="613" width="0.0500%" height="15" fill="rgb(221,121,27)" fg:x="180388" fg:w="189"/><text x="47.9252%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3,055 samples, 0.81%)</title><rect x="46.9272%" y="645" width="0.8074%" height="15" fill="rgb(247,70,47)" fg:x="177558" fg:w="3055"/><text x="47.1772%" y="655.50"></text></g><g><title>__GI___lll_lock_wake_private (3,294 samples, 0.87%)</title><rect x="46.8699%" y="661" width="0.8706%" height="15" fill="rgb(228,85,35)" fg:x="177341" fg:w="3294"/><text x="47.1199%" y="671.50"></text></g><g><title>__x64_sys_futex (43 samples, 0.01%)</title><rect x="48.1377%" y="597" width="0.0114%" height="15" fill="rgb(209,50,18)" fg:x="182138" fg:w="43"/><text x="48.3877%" y="607.50"></text></g><g><title>plist_add (66 samples, 0.02%)</title><rect x="48.2627%" y="517" width="0.0174%" height="15" fill="rgb(250,19,35)" fg:x="182611" fg:w="66"/><text x="48.5127%" y="527.50"></text></g><g><title>update_cfs_group (57 samples, 0.02%)</title><rect x="48.3620%" y="437" width="0.0151%" height="15" fill="rgb(253,107,29)" fg:x="182987" fg:w="57"/><text x="48.6120%" y="447.50"></text></g><g><title>__calc_delta (40 samples, 0.01%)</title><rect x="48.3990%" y="421" width="0.0106%" height="15" fill="rgb(252,179,29)" fg:x="183127" fg:w="40"/><text x="48.6490%" y="431.50"></text></g><g><title>cpuacct_charge (53 samples, 0.01%)</title><rect x="48.4117%" y="421" width="0.0140%" height="15" fill="rgb(238,194,6)" fg:x="183175" fg:w="53"/><text x="48.6617%" y="431.50"></text></g><g><title>update_curr (190 samples, 0.05%)</title><rect x="48.3771%" y="437" width="0.0502%" height="15" fill="rgb(238,164,29)" fg:x="183044" fg:w="190"/><text x="48.6271%" y="447.50"></text></g><g><title>__update_load_avg_cfs_rq (50 samples, 0.01%)</title><rect x="48.4442%" y="421" width="0.0132%" height="15" fill="rgb(224,25,9)" fg:x="183298" fg:w="50"/><text x="48.6942%" y="431.50"></text></g><g><title>__update_load_avg_se (43 samples, 0.01%)</title><rect x="48.4575%" y="421" width="0.0114%" height="15" fill="rgb(244,153,23)" fg:x="183348" fg:w="43"/><text x="48.7075%" y="431.50"></text></g><g><title>update_load_avg (158 samples, 0.04%)</title><rect x="48.4273%" y="437" width="0.0418%" height="15" fill="rgb(212,203,14)" fg:x="183234" fg:w="158"/><text x="48.6773%" y="447.50"></text></g><g><title>dequeue_entity (565 samples, 0.15%)</title><rect x="48.3253%" y="453" width="0.1493%" height="15" fill="rgb(220,164,20)" fg:x="182848" fg:w="565"/><text x="48.5753%" y="463.50"></text></g><g><title>dequeue_task_fair (664 samples, 0.18%)</title><rect x="48.3118%" y="469" width="0.1755%" height="15" fill="rgb(222,203,48)" fg:x="182797" fg:w="664"/><text x="48.5618%" y="479.50"></text></g><g><title>dequeue_task (672 samples, 0.18%)</title><rect x="48.3100%" y="485" width="0.1776%" height="15" fill="rgb(215,159,22)" fg:x="182790" fg:w="672"/><text x="48.5600%" y="495.50"></text></g><g><title>ctx_sched_in (59 samples, 0.02%)</title><rect x="48.5053%" y="453" width="0.0156%" height="15" fill="rgb(216,183,47)" fg:x="183529" fg:w="59"/><text x="48.7553%" y="463.50"></text></g><g><title>visit_groups_merge.constprop.0.isra.0 (57 samples, 0.02%)</title><rect x="48.5058%" y="437" width="0.0151%" height="15" fill="rgb(229,195,25)" fg:x="183531" fg:w="57"/><text x="48.7558%" y="447.50"></text></g><g><title>__perf_event_task_sched_in (108 samples, 0.03%)</title><rect x="48.5000%" y="469" width="0.0285%" height="15" fill="rgb(224,132,51)" fg:x="183509" fg:w="108"/><text x="48.7500%" y="479.50"></text></g><g><title>finish_task_switch.isra.0 (172 samples, 0.05%)</title><rect x="48.4905%" y="485" width="0.0455%" height="15" fill="rgb(240,63,7)" fg:x="183473" fg:w="172"/><text x="48.7405%" y="495.50"></text></g><g><title>pick_next_task_fair (43 samples, 0.01%)</title><rect x="48.5402%" y="469" width="0.0114%" height="15" fill="rgb(249,182,41)" fg:x="183661" fg:w="43"/><text x="48.7902%" y="479.50"></text></g><g><title>pick_next_task (155 samples, 0.04%)</title><rect x="48.5360%" y="485" width="0.0410%" height="15" fill="rgb(243,47,26)" fg:x="183645" fg:w="155"/><text x="48.7860%" y="495.50"></text></g><g><title>put_prev_task_fair (50 samples, 0.01%)</title><rect x="48.5637%" y="469" width="0.0132%" height="15" fill="rgb(233,48,2)" fg:x="183750" fg:w="50"/><text x="48.8137%" y="479.50"></text></g><g><title>perf_ibs_del (92 samples, 0.02%)</title><rect x="48.6100%" y="373" width="0.0243%" height="15" fill="rgb(244,165,34)" fg:x="183925" fg:w="92"/><text x="48.8600%" y="383.50"></text></g><g><title>perf_ibs_stop (71 samples, 0.02%)</title><rect x="48.6155%" y="357" width="0.0188%" height="15" fill="rgb(207,89,7)" fg:x="183946" fg:w="71"/><text x="48.8655%" y="367.50"></text></g><g><title>event_sched_out (103 samples, 0.03%)</title><rect x="48.6076%" y="389" width="0.0272%" height="15" fill="rgb(244,117,36)" fg:x="183916" fg:w="103"/><text x="48.8576%" y="399.50"></text></g><g><title>__pmu_ctx_sched_out (133 samples, 0.04%)</title><rect x="48.6023%" y="421" width="0.0352%" height="15" fill="rgb(226,144,34)" fg:x="183896" fg:w="133"/><text x="48.8523%" y="431.50"></text></g><g><title>group_sched_out (125 samples, 0.03%)</title><rect x="48.6044%" y="405" width="0.0330%" height="15" fill="rgb(213,23,19)" fg:x="183904" fg:w="125"/><text x="48.8544%" y="415.50"></text></g><g><title>ctx_sched_out (177 samples, 0.05%)</title><rect x="48.6007%" y="437" width="0.0468%" height="15" fill="rgb(217,75,12)" fg:x="183890" fg:w="177"/><text x="48.8507%" y="447.50"></text></g><g><title>prepare_task_switch (276 samples, 0.07%)</title><rect x="48.5780%" y="485" width="0.0729%" height="15" fill="rgb(224,159,17)" fg:x="183804" fg:w="276"/><text x="48.8280%" y="495.50"></text></g><g><title>__perf_event_task_sched_out (237 samples, 0.06%)</title><rect x="48.5883%" y="469" width="0.0626%" height="15" fill="rgb(217,118,1)" fg:x="183843" fg:w="237"/><text x="48.8383%" y="479.50"></text></g><g><title>perf_event_context_sched_out (197 samples, 0.05%)</title><rect x="48.5989%" y="453" width="0.0521%" height="15" fill="rgb(232,180,48)" fg:x="183883" fg:w="197"/><text x="48.8489%" y="463.50"></text></g><g><title>psi_group_change (234 samples, 0.06%)</title><rect x="48.6723%" y="469" width="0.0618%" height="15" fill="rgb(230,27,33)" fg:x="184161" fg:w="234"/><text x="48.9223%" y="479.50"></text></g><g><title>psi_task_switch (343 samples, 0.09%)</title><rect x="48.6525%" y="485" width="0.0907%" height="15" fill="rgb(205,31,21)" fg:x="184086" fg:w="343"/><text x="48.9025%" y="495.50"></text></g><g><title>__schedule (1,782 samples, 0.47%)</title><rect x="48.2830%" y="501" width="0.4710%" height="15" fill="rgb(253,59,4)" fg:x="182688" fg:w="1782"/><text x="48.5330%" y="511.50"></text></g><g><title>futex_wait_queue (1,981 samples, 0.52%)</title><rect x="48.2339%" y="533" width="0.5236%" height="15" fill="rgb(224,201,9)" fg:x="182502" fg:w="1981"/><text x="48.4839%" y="543.50"></text></g><g><title>schedule (1,806 samples, 0.48%)</title><rect x="48.2801%" y="517" width="0.4773%" height="15" fill="rgb(229,206,30)" fg:x="182677" fg:w="1806"/><text x="48.5301%" y="527.50"></text></g><g><title>__get_user_nocheck_4 (110 samples, 0.03%)</title><rect x="48.7804%" y="517" width="0.0291%" height="15" fill="rgb(212,67,47)" fg:x="184570" fg:w="110"/><text x="49.0304%" y="527.50"></text></g><g><title>futex_hash (112 samples, 0.03%)</title><rect x="48.8172%" y="517" width="0.0296%" height="15" fill="rgb(211,96,50)" fg:x="184709" fg:w="112"/><text x="49.0672%" y="527.50"></text></g><g><title>futex_q_lock (233 samples, 0.06%)</title><rect x="48.8468%" y="517" width="0.0616%" height="15" fill="rgb(252,114,18)" fg:x="184821" fg:w="233"/><text x="49.0968%" y="527.50"></text></g><g><title>_raw_spin_lock (85 samples, 0.02%)</title><rect x="48.8859%" y="501" width="0.0225%" height="15" fill="rgb(223,58,37)" fg:x="184969" fg:w="85"/><text x="49.1359%" y="511.50"></text></g><g><title>native_queued_spin_lock_slowpath (85 samples, 0.02%)</title><rect x="48.8859%" y="485" width="0.0225%" height="15" fill="rgb(237,70,4)" fg:x="184969" fg:w="85"/><text x="49.1359%" y="495.50"></text></g><g><title>futex_q_unlock (740 samples, 0.20%)</title><rect x="48.9083%" y="517" width="0.1956%" height="15" fill="rgb(244,85,46)" fg:x="185054" fg:w="740"/><text x="49.1583%" y="527.50"></text></g><g><title>futex_wait_setup (1,346 samples, 0.36%)</title><rect x="48.7574%" y="533" width="0.3557%" height="15" fill="rgb(223,39,52)" fg:x="184483" fg:w="1346"/><text x="49.0074%" y="543.50"></text></g><g><title>futex_wait (3,533 samples, 0.93%)</title><rect x="48.1834%" y="549" width="0.9337%" height="15" fill="rgb(218,200,14)" fg:x="182311" fg:w="3533"/><text x="48.4334%" y="559.50"></text></g><g><title>do_futex (3,584 samples, 0.95%)</title><rect x="48.1720%" y="565" width="0.9472%" height="15" fill="rgb(208,171,16)" fg:x="182268" fg:w="3584"/><text x="48.4220%" y="575.50"></text></g><g><title>__x64_sys_futex (3,670 samples, 0.97%)</title><rect x="48.1535%" y="581" width="0.9700%" height="15" fill="rgb(234,200,18)" fg:x="182198" fg:w="3670"/><text x="48.4035%" y="591.50"></text></g><g><title>__put_user_8 (52 samples, 0.01%)</title><rect x="49.2160%" y="517" width="0.0137%" height="15" fill="rgb(228,45,11)" fg:x="186218" fg:w="52"/><text x="49.4660%" y="527.50"></text></g><g><title>__rseq_handle_notify_resume (254 samples, 0.07%)</title><rect x="49.1726%" y="533" width="0.0671%" height="15" fill="rgb(237,182,11)" fg:x="186054" fg:w="254"/><text x="49.4226%" y="543.50"></text></g><g><title>exit_to_user_mode_loop (337 samples, 0.09%)</title><rect x="49.1626%" y="549" width="0.0891%" height="15" fill="rgb(241,175,49)" fg:x="186016" fg:w="337"/><text x="49.4126%" y="559.50"></text></g><g><title>exit_to_user_mode_prepare (451 samples, 0.12%)</title><rect x="49.1385%" y="565" width="0.1192%" height="15" fill="rgb(247,38,35)" fg:x="185925" fg:w="451"/><text x="49.3885%" y="575.50"></text></g><g><title>do_syscall_64 (4,206 samples, 1.11%)</title><rect x="48.1490%" y="597" width="1.1116%" height="15" fill="rgb(228,39,49)" fg:x="182181" fg:w="4206"/><text x="48.3990%" y="607.50"></text></g><g><title>syscall_exit_to_user_mode (483 samples, 0.13%)</title><rect x="49.1330%" y="581" width="0.1277%" height="15" fill="rgb(226,101,26)" fg:x="185904" fg:w="483"/><text x="49.3830%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4,268 samples, 1.13%)</title><rect x="48.1353%" y="613" width="1.1280%" height="15" fill="rgb(206,141,19)" fg:x="182129" fg:w="4268"/><text x="48.3853%" y="623.50"></text></g><g><title>__GI___lll_lock_wait_private (4,605 samples, 1.22%)</title><rect x="48.0560%" y="645" width="1.2171%" height="15" fill="rgb(211,200,13)" fg:x="181829" fg:w="4605"/><text x="48.3060%" y="655.50"></text></g><g><title>futex_wait (4,488 samples, 1.19%)</title><rect x="48.0869%" y="629" width="1.1861%" height="15" fill="rgb(241,121,6)" fg:x="181946" fg:w="4488"/><text x="48.3369%" y="639.50"></text></g><g><title>_int_free (5,829 samples, 1.54%)</title><rect x="47.7404%" y="661" width="1.5406%" height="15" fill="rgb(234,221,29)" fg:x="180635" fg:w="5829"/><text x="47.9904%" y="671.50"></text></g><g><title>__GI___libc_free (9,251 samples, 2.44%)</title><rect x="46.8373%" y="677" width="2.4450%" height="15" fill="rgb(229,136,5)" fg:x="177218" fg:w="9251"/><text x="47.0873%" y="687.50">__..</text></g><g><title>core::ptr::drop_in_place&lt;torrust_tracker::servers::udp::UdpRequest&gt; (9,429 samples, 2.49%)</title><rect x="46.8373%" y="805" width="2.4920%" height="15" fill="rgb(238,36,11)" fg:x="177218" fg:w="9429"/><text x="47.0873%" y="815.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (9,429 samples, 2.49%)</title><rect x="46.8373%" y="789" width="2.4920%" height="15" fill="rgb(251,55,41)" fg:x="177218" fg:w="9429"/><text x="47.0873%" y="799.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (9,429 samples, 2.49%)</title><rect x="46.8373%" y="773" width="2.4920%" height="15" fill="rgb(242,34,40)" fg:x="177218" fg:w="9429"/><text x="47.0873%" y="783.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,429 samples, 2.49%)</title><rect x="46.8373%" y="757" width="2.4920%" height="15" fill="rgb(215,42,17)" fg:x="177218" fg:w="9429"/><text x="47.0873%" y="767.50">&lt;a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9,429 samples, 2.49%)</title><rect x="46.8373%" y="741" width="2.4920%" height="15" fill="rgb(207,44,46)" fg:x="177218" fg:w="9429"/><text x="47.0873%" y="751.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (9,429 samples, 2.49%)</title><rect x="46.8373%" y="725" width="2.4920%" height="15" fill="rgb(211,206,28)" fg:x="177218" fg:w="9429"/><text x="47.0873%" y="735.50">al..</text></g><g><title>__rdl_dealloc (9,429 samples, 2.49%)</title><rect x="46.8373%" y="709" width="2.4920%" height="15" fill="rgb(237,167,16)" fg:x="177218" fg:w="9429"/><text x="47.0873%" y="719.50">__..</text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (9,429 samples, 2.49%)</title><rect x="46.8373%" y="693" width="2.4920%" height="15" fill="rgb(233,66,6)" fg:x="177218" fg:w="9429"/><text x="47.0873%" y="703.50">st..</text></g><g><title>tracing::span::Span::record_all (174 samples, 0.05%)</title><rect x="49.2834%" y="677" width="0.0460%" height="15" fill="rgb(246,123,29)" fg:x="186473" fg:w="174"/><text x="49.5334%" y="687.50"></text></g><g><title>unlink_chunk (168 samples, 0.04%)</title><rect x="49.2850%" y="661" width="0.0444%" height="15" fill="rgb(209,62,40)" fg:x="186479" fg:w="168"/><text x="49.5350%" y="671.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (227 samples, 0.06%)</title><rect x="49.3294%" y="805" width="0.0600%" height="15" fill="rgb(218,4,25)" fg:x="186647" fg:w="227"/><text x="49.5794%" y="815.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (66 samples, 0.02%)</title><rect x="49.3894%" y="805" width="0.0174%" height="15" fill="rgb(253,91,49)" fg:x="186874" fg:w="66"/><text x="49.6394%" y="815.50"></text></g><g><title>__GI___clock_gettime (61 samples, 0.02%)</title><rect x="49.4184%" y="741" width="0.0161%" height="15" fill="rgb(228,155,29)" fg:x="186984" fg:w="61"/><text x="49.6684%" y="751.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (68 samples, 0.02%)</title><rect x="49.4174%" y="757" width="0.0180%" height="15" fill="rgb(243,57,37)" fg:x="186980" fg:w="68"/><text x="49.6674%" y="767.50"></text></g><g><title>std::time::Instant::elapsed (109 samples, 0.03%)</title><rect x="49.4068%" y="805" width="0.0288%" height="15" fill="rgb(244,167,17)" fg:x="186940" fg:w="109"/><text x="49.6568%" y="815.50"></text></g><g><title>std::time::Instant::now (80 samples, 0.02%)</title><rect x="49.4145%" y="789" width="0.0211%" height="15" fill="rgb(207,181,38)" fg:x="186969" fg:w="80"/><text x="49.6645%" y="799.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (80 samples, 0.02%)</title><rect x="49.4145%" y="773" width="0.0211%" height="15" fill="rgb(211,8,23)" fg:x="186969" fg:w="80"/><text x="49.6645%" y="783.50"></text></g><g><title>std::sys::pal::unix::cvt (48 samples, 0.01%)</title><rect x="49.4433%" y="725" width="0.0127%" height="15" fill="rgb(235,11,44)" fg:x="187078" fg:w="48"/><text x="49.6933%" y="735.50"></text></g><g><title>__x64_sys_getsockname (580 samples, 0.15%)</title><rect x="49.5426%" y="677" width="0.1533%" height="15" fill="rgb(248,18,52)" fg:x="187454" fg:w="580"/><text x="49.7926%" y="687.50"></text></g><g><title>__sys_getsockname (64 samples, 0.02%)</title><rect x="49.7068%" y="661" width="0.0169%" height="15" fill="rgb(208,4,7)" fg:x="188075" fg:w="64"/><text x="49.9568%" y="671.50"></text></g><g><title>__get_user_4 (812 samples, 0.21%)</title><rect x="49.9380%" y="629" width="0.2146%" height="15" fill="rgb(240,17,39)" fg:x="188950" fg:w="812"/><text x="50.1880%" y="639.50"></text></g><g><title>__put_user_nocheck_4 (1,020 samples, 0.27%)</title><rect x="50.1526%" y="629" width="0.2696%" height="15" fill="rgb(207,170,3)" fg:x="189762" fg:w="1020"/><text x="50.4026%" y="639.50"></text></g><g><title>_copy_to_user (40 samples, 0.01%)</title><rect x="50.4248%" y="629" width="0.0106%" height="15" fill="rgb(236,100,52)" fg:x="190792" fg:w="40"/><text x="50.6748%" y="639.50"></text></g><g><title>apparmor_socket_getsockname (82 samples, 0.02%)</title><rect x="50.4354%" y="629" width="0.0217%" height="15" fill="rgb(246,78,51)" fg:x="190832" fg:w="82"/><text x="50.6854%" y="639.50"></text></g><g><title>_raw_spin_lock_bh (1,657 samples, 0.44%)</title><rect x="50.5012%" y="613" width="0.4379%" height="15" fill="rgb(211,17,15)" fg:x="191081" fg:w="1657"/><text x="50.7512%" y="623.50"></text></g><g><title>_raw_spin_unlock_bh (55 samples, 0.01%)</title><rect x="50.9392%" y="613" width="0.0145%" height="15" fill="rgb(209,59,46)" fg:x="192738" fg:w="55"/><text x="51.1892%" y="623.50"></text></g><g><title>ip4_datagram_release_cb (93 samples, 0.02%)</title><rect x="50.9540%" y="613" width="0.0246%" height="15" fill="rgb(210,92,25)" fg:x="192794" fg:w="93"/><text x="51.2040%" y="623.50"></text></g><g><title>dequeue_entity (62 samples, 0.02%)</title><rect x="51.0161%" y="517" width="0.0164%" height="15" fill="rgb(238,174,52)" fg:x="193029" fg:w="62"/><text x="51.2661%" y="527.50"></text></g><g><title>dequeue_task (76 samples, 0.02%)</title><rect x="51.0134%" y="549" width="0.0201%" height="15" fill="rgb(230,73,7)" fg:x="193019" fg:w="76"/><text x="51.2634%" y="559.50"></text></g><g><title>dequeue_task_fair (75 samples, 0.02%)</title><rect x="51.0137%" y="533" width="0.0198%" height="15" fill="rgb(243,124,40)" fg:x="193020" fg:w="75"/><text x="51.2637%" y="543.50"></text></g><g><title>__schedule (179 samples, 0.05%)</title><rect x="51.0100%" y="565" width="0.0473%" height="15" fill="rgb(244,170,11)" fg:x="193006" fg:w="179"/><text x="51.2600%" y="575.50"></text></g><g><title>__lock_sock (196 samples, 0.05%)</title><rect x="51.0058%" y="597" width="0.0518%" height="15" fill="rgb(207,114,54)" fg:x="192990" fg:w="196"/><text x="51.2558%" y="607.50"></text></g><g><title>schedule (180 samples, 0.05%)</title><rect x="51.0100%" y="581" width="0.0476%" height="15" fill="rgb(205,42,20)" fg:x="193006" fg:w="180"/><text x="51.2600%" y="591.50"></text></g><g><title>_raw_spin_lock_bh (83 samples, 0.02%)</title><rect x="51.0576%" y="597" width="0.0219%" height="15" fill="rgb(230,30,28)" fg:x="193186" fg:w="83"/><text x="51.3076%" y="607.50"></text></g><g><title>native_queued_spin_lock_slowpath (78 samples, 0.02%)</title><rect x="51.0589%" y="581" width="0.0206%" height="15" fill="rgb(205,73,54)" fg:x="193191" fg:w="78"/><text x="51.3089%" y="591.50"></text></g><g><title>_raw_spin_unlock_bh (125 samples, 0.03%)</title><rect x="51.0795%" y="597" width="0.0330%" height="15" fill="rgb(254,227,23)" fg:x="193269" fg:w="125"/><text x="51.3295%" y="607.50"></text></g><g><title>__local_bh_enable_ip (71 samples, 0.02%)</title><rect x="51.0938%" y="581" width="0.0188%" height="15" fill="rgb(228,202,34)" fg:x="193323" fg:w="71"/><text x="51.3438%" y="591.50"></text></g><g><title>lock_sock_nested (508 samples, 0.13%)</title><rect x="50.9785%" y="613" width="0.1343%" height="15" fill="rgb(222,225,37)" fg:x="192887" fg:w="508"/><text x="51.2285%" y="623.50"></text></g><g><title>autoremove_wake_function (166 samples, 0.04%)</title><rect x="51.1879%" y="549" width="0.0439%" height="15" fill="rgb(221,14,54)" fg:x="193679" fg:w="166"/><text x="51.4379%" y="559.50"></text></g><g><title>default_wake_function (166 samples, 0.04%)</title><rect x="51.1879%" y="533" width="0.0439%" height="15" fill="rgb(254,102,2)" fg:x="193679" fg:w="166"/><text x="51.4379%" y="543.50"></text></g><g><title>try_to_wake_up (166 samples, 0.04%)</title><rect x="51.1879%" y="517" width="0.0439%" height="15" fill="rgb(232,104,17)" fg:x="193679" fg:w="166"/><text x="51.4379%" y="527.50"></text></g><g><title>__wake_up_common (169 samples, 0.04%)</title><rect x="51.1873%" y="565" width="0.0447%" height="15" fill="rgb(250,220,14)" fg:x="193677" fg:w="169"/><text x="51.4373%" y="575.50"></text></g><g><title>__wake_up (189 samples, 0.05%)</title><rect x="51.1871%" y="597" width="0.0500%" height="15" fill="rgb(241,158,9)" fg:x="193676" fg:w="189"/><text x="51.4371%" y="607.50"></text></g><g><title>__wake_up_common_lock (188 samples, 0.05%)</title><rect x="51.1873%" y="581" width="0.0497%" height="15" fill="rgb(246,9,43)" fg:x="193677" fg:w="188"/><text x="51.4373%" y="591.50"></text></g><g><title>_raw_spin_unlock_bh (139 samples, 0.04%)</title><rect x="51.2402%" y="597" width="0.0367%" height="15" fill="rgb(206,73,33)" fg:x="193877" fg:w="139"/><text x="51.4902%" y="607.50"></text></g><g><title>__local_bh_enable_ip (118 samples, 0.03%)</title><rect x="51.2457%" y="581" width="0.0312%" height="15" fill="rgb(222,79,8)" fg:x="193898" fg:w="118"/><text x="51.4957%" y="591.50"></text></g><g><title>inet_getname (3,442 samples, 0.91%)</title><rect x="50.4571%" y="629" width="0.9097%" height="15" fill="rgb(234,8,54)" fg:x="190914" fg:w="3442"/><text x="50.7071%" y="639.50"></text></g><g><title>release_sock (961 samples, 0.25%)</title><rect x="51.1128%" y="613" width="0.2540%" height="15" fill="rgb(209,134,38)" fg:x="193395" fg:w="961"/><text x="51.3628%" y="623.50"></text></g><g><title>ip4_datagram_release_cb (340 samples, 0.09%)</title><rect x="51.2769%" y="597" width="0.0899%" height="15" fill="rgb(230,127,29)" fg:x="194016" fg:w="340"/><text x="51.5269%" y="607.50"></text></g><g><title>lock_sock_nested (41 samples, 0.01%)</title><rect x="51.3668%" y="629" width="0.0108%" height="15" fill="rgb(242,44,41)" fg:x="194356" fg:w="41"/><text x="51.6168%" y="639.50"></text></g><g><title>__check_object_size.part.0 (339 samples, 0.09%)</title><rect x="51.4344%" y="597" width="0.0896%" height="15" fill="rgb(222,56,43)" fg:x="194612" fg:w="339"/><text x="51.6844%" y="607.50"></text></g><g><title>check_stack_object (284 samples, 0.08%)</title><rect x="51.4490%" y="581" width="0.0751%" height="15" fill="rgb(238,39,47)" fg:x="194667" fg:w="284"/><text x="51.6990%" y="591.50"></text></g><g><title>__check_object_size (408 samples, 0.11%)</title><rect x="51.4344%" y="613" width="0.1078%" height="15" fill="rgb(226,79,43)" fg:x="194612" fg:w="408"/><text x="51.6844%" y="623.50"></text></g><g><title>check_stack_object (69 samples, 0.02%)</title><rect x="51.5240%" y="597" width="0.0182%" height="15" fill="rgb(242,105,53)" fg:x="194951" fg:w="69"/><text x="51.7740%" y="607.50"></text></g><g><title>move_addr_to_user (2,340 samples, 0.62%)</title><rect x="51.3776%" y="629" width="0.6184%" height="15" fill="rgb(251,132,46)" fg:x="194397" fg:w="2340"/><text x="51.6276%" y="639.50"></text></g><g><title>copy_user_enhanced_fast_string (1,695 samples, 0.45%)</title><rect x="51.5481%" y="613" width="0.4480%" height="15" fill="rgb(231,77,14)" fg:x="195042" fg:w="1695"/><text x="51.7981%" y="623.50"></text></g><g><title>security_socket_getsockname (298 samples, 0.08%)</title><rect x="52.0035%" y="629" width="0.0788%" height="15" fill="rgb(240,135,9)" fg:x="196765" fg:w="298"/><text x="52.2535%" y="639.50"></text></g><g><title>apparmor_socket_getsockname (254 samples, 0.07%)</title><rect x="52.0151%" y="613" width="0.0671%" height="15" fill="rgb(248,109,14)" fg:x="196809" fg:w="254"/><text x="52.2651%" y="623.50"></text></g><g><title>aa_sk_perm (204 samples, 0.05%)</title><rect x="52.0283%" y="597" width="0.0539%" height="15" fill="rgb(227,146,52)" fg:x="196859" fg:w="204"/><text x="52.2783%" y="607.50"></text></g><g><title>__fget_light (1,889 samples, 0.50%)</title><rect x="52.1084%" y="597" width="0.4992%" height="15" fill="rgb(232,54,3)" fg:x="197162" fg:w="1889"/><text x="52.3584%" y="607.50"></text></g><g><title>__fdget (1,912 samples, 0.51%)</title><rect x="52.1084%" y="613" width="0.5053%" height="15" fill="rgb(229,201,43)" fg:x="197162" fg:w="1912"/><text x="52.3584%" y="623.50"></text></g><g><title>__sys_getsockname (10,968 samples, 2.90%)</title><rect x="49.7239%" y="645" width="2.8988%" height="15" fill="rgb(252,161,33)" fg:x="188140" fg:w="10968"/><text x="49.9739%" y="655.50">__..</text></g><g><title>sockfd_lookup_light (2,045 samples, 0.54%)</title><rect x="52.0822%" y="629" width="0.5405%" height="15" fill="rgb(226,146,40)" fg:x="197063" fg:w="2045"/><text x="52.3322%" y="639.50"></text></g><g><title>fput (545 samples, 0.14%)</title><rect x="52.6230%" y="645" width="0.1440%" height="15" fill="rgb(219,47,25)" fg:x="199109" fg:w="545"/><text x="52.8730%" y="655.50"></text></g><g><title>inet_getname (177 samples, 0.05%)</title><rect x="52.7670%" y="645" width="0.0468%" height="15" fill="rgb(250,135,13)" fg:x="199654" fg:w="177"/><text x="53.0170%" y="655.50"></text></g><g><title>__x64_sys_getsockname (11,723 samples, 3.10%)</title><rect x="49.7237%" y="661" width="3.0983%" height="15" fill="rgb(219,229,18)" fg:x="188139" fg:w="11723"/><text x="49.9737%" y="671.50">__x..</text></g><g><title>syscall_enter_from_user_mode (48 samples, 0.01%)</title><rect x="52.8244%" y="661" width="0.0127%" height="15" fill="rgb(217,152,27)" fg:x="199871" fg:w="48"/><text x="53.0744%" y="671.50"></text></g><g><title>fpregs_assert_state_consistent (42 samples, 0.01%)</title><rect x="52.9623%" y="629" width="0.0111%" height="15" fill="rgb(225,71,47)" fg:x="200393" fg:w="42"/><text x="53.2123%" y="639.50"></text></g><g><title>exit_to_user_mode_prepare (363 samples, 0.10%)</title><rect x="52.8780%" y="645" width="0.0959%" height="15" fill="rgb(220,139,14)" fg:x="200074" fg:w="363"/><text x="53.1280%" y="655.50"></text></g><g><title>do_syscall_64 (12,453 samples, 3.29%)</title><rect x="49.6967%" y="677" width="3.2912%" height="15" fill="rgb(247,54,32)" fg:x="188037" fg:w="12453"/><text x="49.9467%" y="687.50">do_..</text></g><g><title>syscall_exit_to_user_mode (571 samples, 0.15%)</title><rect x="52.8370%" y="661" width="0.1509%" height="15" fill="rgb(252,131,39)" fg:x="199919" fg:w="571"/><text x="53.0870%" y="671.50"></text></g><g><title>fpregs_assert_state_consistent (53 samples, 0.01%)</title><rect x="52.9739%" y="645" width="0.0140%" height="15" fill="rgb(210,108,39)" fg:x="200437" fg:w="53"/><text x="53.2239%" y="655.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (13,099 samples, 3.46%)</title><rect x="49.5395%" y="693" width="3.4620%" height="15" fill="rgb(205,23,29)" fg:x="187442" fg:w="13099"/><text x="49.7895%" y="703.50">ent..</text></g><g><title>__GI_getsockname (13,459 samples, 3.56%)</title><rect x="49.4560%" y="709" width="3.5571%" height="15" fill="rgb(246,139,46)" fg:x="187126" fg:w="13459"/><text x="49.7060%" y="719.50">__GI..</text></g><g><title>std::sys_common::net::TcpListener::socket_addr::{{closure}} (13,494 samples, 3.57%)</title><rect x="49.4560%" y="725" width="3.5664%" height="15" fill="rgb(250,81,26)" fg:x="187126" fg:w="13494"/><text x="49.7060%" y="735.50">std:..</text></g><g><title>tokio::net::udp::UdpSocket::local_addr (13,569 samples, 3.59%)</title><rect x="49.4404%" y="805" width="3.5862%" height="15" fill="rgb(214,104,7)" fg:x="187067" fg:w="13569"/><text x="49.6904%" y="815.50">toki..</text></g><g><title>mio::net::udp::UdpSocket::local_addr (13,568 samples, 3.59%)</title><rect x="49.4406%" y="789" width="3.5859%" height="15" fill="rgb(233,189,8)" fg:x="187068" fg:w="13568"/><text x="49.6906%" y="799.50">mio:..</text></g><g><title>std::net::tcp::TcpListener::local_addr (13,568 samples, 3.59%)</title><rect x="49.4406%" y="773" width="3.5859%" height="15" fill="rgb(228,141,17)" fg:x="187068" fg:w="13568"/><text x="49.6906%" y="783.50">std:..</text></g><g><title>std::sys_common::net::TcpListener::socket_addr (13,567 samples, 3.59%)</title><rect x="49.4409%" y="757" width="3.5857%" height="15" fill="rgb(247,157,1)" fg:x="187069" fg:w="13567"/><text x="49.6909%" y="767.50">std:..</text></g><g><title>std::sys_common::net::sockname (13,559 samples, 3.58%)</title><rect x="49.4430%" y="741" width="3.5835%" height="15" fill="rgb(249,225,5)" fg:x="187077" fg:w="13559"/><text x="49.6930%" y="751.50">std:..</text></g><g><title>[[vdso]] (338 samples, 0.09%)</title><rect x="53.0501%" y="565" width="0.0893%" height="15" fill="rgb(242,55,13)" fg:x="200725" fg:w="338"/><text x="53.3001%" y="575.50"></text></g><g><title>rand_chacha::guts::ChaCha::pos64 (177 samples, 0.05%)</title><rect x="53.1479%" y="517" width="0.0468%" height="15" fill="rgb(230,49,50)" fg:x="201095" fg:w="177"/><text x="53.3979%" y="527.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (67 samples, 0.02%)</title><rect x="53.1991%" y="501" width="0.0177%" height="15" fill="rgb(241,111,38)" fg:x="201289" fg:w="67"/><text x="53.4491%" y="511.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (67 samples, 0.02%)</title><rect x="53.1991%" y="485" width="0.0177%" height="15" fill="rgb(252,155,4)" fg:x="201289" fg:w="67"/><text x="53.4491%" y="495.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (67 samples, 0.02%)</title><rect x="53.1991%" y="469" width="0.0177%" height="15" fill="rgb(212,69,32)" fg:x="201289" fg:w="67"/><text x="53.4491%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (67 samples, 0.02%)</title><rect x="53.1991%" y="453" width="0.0177%" height="15" fill="rgb(243,107,47)" fg:x="201289" fg:w="67"/><text x="53.4491%" y="463.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (40 samples, 0.01%)</title><rect x="53.2232%" y="501" width="0.0106%" height="15" fill="rgb(247,130,12)" fg:x="201380" fg:w="40"/><text x="53.4732%" y="511.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (40 samples, 0.01%)</title><rect x="53.2232%" y="485" width="0.0106%" height="15" fill="rgb(233,74,16)" fg:x="201380" fg:w="40"/><text x="53.4732%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (40 samples, 0.01%)</title><rect x="53.2232%" y="469" width="0.0106%" height="15" fill="rgb(208,58,18)" fg:x="201380" fg:w="40"/><text x="53.4732%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (44 samples, 0.01%)</title><rect x="53.2337%" y="469" width="0.0116%" height="15" fill="rgb(242,225,1)" fg:x="201420" fg:w="44"/><text x="53.4837%" y="479.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (52 samples, 0.01%)</title><rect x="53.2337%" y="501" width="0.0137%" height="15" fill="rgb(249,39,40)" fg:x="201420" fg:w="52"/><text x="53.4837%" y="511.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (52 samples, 0.01%)</title><rect x="53.2337%" y="485" width="0.0137%" height="15" fill="rgb(207,72,44)" fg:x="201420" fg:w="52"/><text x="53.4837%" y="495.50"></text></g><g><title>rand_chacha::guts::round (234 samples, 0.06%)</title><rect x="53.1991%" y="517" width="0.0618%" height="15" fill="rgb(215,193,12)" fg:x="201289" fg:w="234"/><text x="53.4491%" y="527.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (472 samples, 0.12%)</title><rect x="53.1405%" y="565" width="0.1247%" height="15" fill="rgb(248,41,39)" fg:x="201067" fg:w="472"/><text x="53.3905%" y="575.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (472 samples, 0.12%)</title><rect x="53.1405%" y="549" width="0.1247%" height="15" fill="rgb(253,85,4)" fg:x="201067" fg:w="472"/><text x="53.3905%" y="559.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (472 samples, 0.12%)</title><rect x="53.1405%" y="533" width="0.1247%" height="15" fill="rgb(243,70,31)" fg:x="201067" fg:w="472"/><text x="53.3905%" y="543.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (825 samples, 0.22%)</title><rect x="53.0501%" y="597" width="0.2180%" height="15" fill="rgb(253,195,26)" fg:x="200725" fg:w="825"/><text x="53.3001%" y="607.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (825 samples, 0.22%)</title><rect x="53.0501%" y="581" width="0.2180%" height="15" fill="rgb(243,42,11)" fg:x="200725" fg:w="825"/><text x="53.3001%" y="591.50"></text></g><g><title>rand::rng::Rng::gen (912 samples, 0.24%)</title><rect x="53.0324%" y="741" width="0.2410%" height="15" fill="rgb(239,66,17)" fg:x="200658" fg:w="912"/><text x="53.2824%" y="751.50"></text></g><g><title>rand::distributions::other::&lt;impl rand::distributions::distribution::Distribution&lt;[T: _]&gt; for rand::distributions::Standard&gt;::sample (912 samples, 0.24%)</title><rect x="53.0324%" y="725" width="0.2410%" height="15" fill="rgb(217,132,21)" fg:x="200658" fg:w="912"/><text x="53.2824%" y="735.50"></text></g><g><title>rand::rng::Rng::gen (912 samples, 0.24%)</title><rect x="53.0324%" y="709" width="0.2410%" height="15" fill="rgb(252,202,21)" fg:x="200658" fg:w="912"/><text x="53.2824%" y="719.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u8&gt; for rand::distributions::Standard&gt;::sample (912 samples, 0.24%)</title><rect x="53.0324%" y="693" width="0.2410%" height="15" fill="rgb(233,98,36)" fg:x="200658" fg:w="912"/><text x="53.2824%" y="703.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u32 (912 samples, 0.24%)</title><rect x="53.0324%" y="677" width="0.2410%" height="15" fill="rgb(216,153,54)" fg:x="200658" fg:w="912"/><text x="53.2824%" y="687.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u32 (912 samples, 0.24%)</title><rect x="53.0324%" y="661" width="0.2410%" height="15" fill="rgb(250,99,7)" fg:x="200658" fg:w="912"/><text x="53.2824%" y="671.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (912 samples, 0.24%)</title><rect x="53.0324%" y="645" width="0.2410%" height="15" fill="rgb(207,56,50)" fg:x="200658" fg:w="912"/><text x="53.2824%" y="655.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (848 samples, 0.22%)</title><rect x="53.0493%" y="629" width="0.2241%" height="15" fill="rgb(244,61,34)" fg:x="200722" fg:w="848"/><text x="53.2993%" y="639.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (847 samples, 0.22%)</title><rect x="53.0495%" y="613" width="0.2239%" height="15" fill="rgb(241,50,38)" fg:x="200723" fg:w="847"/><text x="53.2995%" y="623.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::RequestId::make (941 samples, 0.25%)</title><rect x="53.0268%" y="805" width="0.2487%" height="15" fill="rgb(212,166,30)" fg:x="200637" fg:w="941"/><text x="53.2768%" y="815.50"></text></g><g><title>uuid::v4::&lt;impl uuid::Uuid&gt;::new_v4 (921 samples, 0.24%)</title><rect x="53.0321%" y="789" width="0.2434%" height="15" fill="rgb(249,127,32)" fg:x="200657" fg:w="921"/><text x="53.2821%" y="799.50"></text></g><g><title>uuid::rng::bytes (921 samples, 0.24%)</title><rect x="53.0321%" y="773" width="0.2434%" height="15" fill="rgb(209,103,0)" fg:x="200657" fg:w="921"/><text x="53.2821%" y="783.50"></text></g><g><title>rand::random (921 samples, 0.24%)</title><rect x="53.0321%" y="757" width="0.2434%" height="15" fill="rgb(238,209,51)" fg:x="200657" fg:w="921"/><text x="53.2821%" y="767.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (52 samples, 0.01%)</title><rect x="53.3294%" y="725" width="0.0137%" height="15" fill="rgb(237,56,23)" fg:x="201782" fg:w="52"/><text x="53.5794%" y="735.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (44 samples, 0.01%)</title><rect x="53.3315%" y="709" width="0.0116%" height="15" fill="rgb(215,153,46)" fg:x="201790" fg:w="44"/><text x="53.5815%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (43 samples, 0.01%)</title><rect x="53.3318%" y="693" width="0.0114%" height="15" fill="rgb(224,49,31)" fg:x="201791" fg:w="43"/><text x="53.5818%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (43 samples, 0.01%)</title><rect x="53.3318%" y="677" width="0.0114%" height="15" fill="rgb(250,18,42)" fg:x="201791" fg:w="43"/><text x="53.5818%" y="687.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::mutex_std::&lt;impl torrust_tracker_torrent_repository::entry::EntrySync for alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;::get_peers_for_client (125 samples, 0.03%)</title><rect x="53.3281%" y="741" width="0.0330%" height="15" fill="rgb(215,176,39)" fg:x="201777" fg:w="125"/><text x="53.5781%" y="751.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::single::&lt;impl torrust_tracker_torrent_repository::entry::Entry for torrust_tracker_torrent_repository::entry::Torrent&gt;::get_peers_for_client (68 samples, 0.02%)</title><rect x="53.3432%" y="725" width="0.0180%" height="15" fill="rgb(223,77,29)" fg:x="201834" fg:w="68"/><text x="53.5932%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (47 samples, 0.01%)</title><rect x="53.3487%" y="709" width="0.0124%" height="15" fill="rgb(234,94,52)" fg:x="201855" fg:w="47"/><text x="53.5987%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (47 samples, 0.01%)</title><rect x="53.3487%" y="693" width="0.0124%" height="15" fill="rgb(220,154,50)" fg:x="201855" fg:w="47"/><text x="53.5987%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (47 samples, 0.01%)</title><rect x="53.3487%" y="677" width="0.0124%" height="15" fill="rgb(212,11,10)" fg:x="201855" fg:w="47"/><text x="53.5987%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (47 samples, 0.01%)</title><rect x="53.3487%" y="661" width="0.0124%" height="15" fill="rgb(205,166,19)" fg:x="201855" fg:w="47"/><text x="53.5987%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (47 samples, 0.01%)</title><rect x="53.3487%" y="645" width="0.0124%" height="15" fill="rgb(244,198,16)" fg:x="201855" fg:w="47"/><text x="53.5987%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (47 samples, 0.01%)</title><rect x="53.3487%" y="629" width="0.0124%" height="15" fill="rgb(219,69,12)" fg:x="201855" fg:w="47"/><text x="53.5987%" y="639.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (93 samples, 0.02%)</title><rect x="53.4706%" y="629" width="0.0246%" height="15" fill="rgb(245,30,7)" fg:x="202316" fg:w="93"/><text x="53.7206%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (124 samples, 0.03%)</title><rect x="53.4706%" y="661" width="0.0328%" height="15" fill="rgb(218,221,48)" fg:x="202316" fg:w="124"/><text x="53.7206%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (124 samples, 0.03%)</title><rect x="53.4706%" y="645" width="0.0328%" height="15" fill="rgb(216,66,15)" fg:x="202316" fg:w="124"/><text x="53.7206%" y="655.50"></text></g><g><title>__memcmp_evex_movbe (244 samples, 0.06%)</title><rect x="53.5416%" y="581" width="0.0645%" height="15" fill="rgb(226,122,50)" fg:x="202585" fg:w="244"/><text x="53.7916%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (89 samples, 0.02%)</title><rect x="53.6061%" y="581" width="0.0235%" height="15" fill="rgb(239,156,16)" fg:x="202829" fg:w="89"/><text x="53.8561%" y="591.50"></text></g><g><title>&lt;torrust_tracker_primitives::info_hash::InfoHash as core::cmp::Ord&gt;::cmp (499 samples, 0.13%)</title><rect x="53.5033%" y="661" width="0.1319%" height="15" fill="rgb(224,27,38)" fg:x="202440" fg:w="499"/><text x="53.7533%" y="671.50"></text></g><g><title>core::array::&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (499 samples, 0.13%)</title><rect x="53.5033%" y="645" width="0.1319%" height="15" fill="rgb(224,39,27)" fg:x="202440" fg:w="499"/><text x="53.7533%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (499 samples, 0.13%)</title><rect x="53.5033%" y="629" width="0.1319%" height="15" fill="rgb(215,92,29)" fg:x="202440" fg:w="499"/><text x="53.7533%" y="639.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (499 samples, 0.13%)</title><rect x="53.5033%" y="613" width="0.1319%" height="15" fill="rgb(207,159,16)" fg:x="202440" fg:w="499"/><text x="53.7533%" y="623.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (499 samples, 0.13%)</title><rect x="53.5033%" y="597" width="0.1319%" height="15" fill="rgb(238,163,47)" fg:x="202440" fg:w="499"/><text x="53.7533%" y="607.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (986 samples, 0.26%)</title><rect x="53.3804%" y="709" width="0.2606%" height="15" fill="rgb(219,91,49)" fg:x="201975" fg:w="986"/><text x="53.6304%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (917 samples, 0.24%)</title><rect x="53.3987%" y="693" width="0.2424%" height="15" fill="rgb(227,167,31)" fg:x="202044" fg:w="917"/><text x="53.6487%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (917 samples, 0.24%)</title><rect x="53.3987%" y="677" width="0.2424%" height="15" fill="rgb(234,80,54)" fg:x="202044" fg:w="917"/><text x="53.6487%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (998 samples, 0.26%)</title><rect x="53.3775%" y="725" width="0.2638%" height="15" fill="rgb(212,114,2)" fg:x="201964" fg:w="998"/><text x="53.6275%" y="735.50"></text></g><g><title>torrust_tracker::core::Tracker::get_torrent_peers_for_peer (1,222 samples, 0.32%)</title><rect x="53.3233%" y="757" width="0.3230%" height="15" fill="rgb(234,50,24)" fg:x="201759" fg:w="1222"/><text x="53.5733%" y="767.50"></text></g><g><title>torrust_tracker_torrent_repository::repository::rw_lock_std_mutex_std::&lt;impl torrust_tracker_torrent_repository::repository::Repository&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt; for torrust_tracker_torrent_repository::repository::RwLockStd&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;&gt;::get (1,079 samples, 0.29%)</title><rect x="53.3611%" y="741" width="0.2852%" height="15" fill="rgb(221,68,8)" fg:x="201902" fg:w="1079"/><text x="53.6111%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (41 samples, 0.01%)</title><rect x="53.6667%" y="725" width="0.0108%" height="15" fill="rgb(254,180,31)" fg:x="203058" fg:w="41"/><text x="53.9167%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (40 samples, 0.01%)</title><rect x="53.6669%" y="709" width="0.0106%" height="15" fill="rgb(247,130,50)" fg:x="203059" fg:w="40"/><text x="53.9169%" y="719.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (173 samples, 0.05%)</title><rect x="53.8321%" y="629" width="0.0457%" height="15" fill="rgb(211,109,4)" fg:x="203684" fg:w="173"/><text x="54.0821%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (251 samples, 0.07%)</title><rect x="53.8321%" y="661" width="0.0663%" height="15" fill="rgb(238,50,21)" fg:x="203684" fg:w="251"/><text x="54.0821%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (251 samples, 0.07%)</title><rect x="53.8321%" y="645" width="0.0663%" height="15" fill="rgb(225,57,45)" fg:x="203684" fg:w="251"/><text x="54.0821%" y="655.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (78 samples, 0.02%)</title><rect x="53.8778%" y="629" width="0.0206%" height="15" fill="rgb(209,196,50)" fg:x="203857" fg:w="78"/><text x="54.1278%" y="639.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (78 samples, 0.02%)</title><rect x="53.8778%" y="613" width="0.0206%" height="15" fill="rgb(242,140,13)" fg:x="203857" fg:w="78"/><text x="54.1278%" y="623.50"></text></g><g><title>[[vdso]] (78 samples, 0.02%)</title><rect x="53.9764%" y="581" width="0.0206%" height="15" fill="rgb(217,111,7)" fg:x="204230" fg:w="78"/><text x="54.2264%" y="591.50"></text></g><g><title>__memcmp_evex_movbe (402 samples, 0.11%)</title><rect x="53.9970%" y="581" width="0.1062%" height="15" fill="rgb(253,193,51)" fg:x="204308" fg:w="402"/><text x="54.2470%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (258 samples, 0.07%)</title><rect x="54.1035%" y="581" width="0.0682%" height="15" fill="rgb(252,70,29)" fg:x="204711" fg:w="258"/><text x="54.3535%" y="591.50"></text></g><g><title>&lt;torrust_tracker_primitives::info_hash::InfoHash as core::cmp::Ord&gt;::cmp (1,036 samples, 0.27%)</title><rect x="53.8984%" y="661" width="0.2738%" height="15" fill="rgb(232,127,12)" fg:x="203935" fg:w="1036"/><text x="54.1484%" y="671.50"></text></g><g><title>core::array::&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (1,036 samples, 0.27%)</title><rect x="53.8984%" y="645" width="0.2738%" height="15" fill="rgb(211,180,21)" fg:x="203935" fg:w="1036"/><text x="54.1484%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (1,036 samples, 0.27%)</title><rect x="53.8984%" y="629" width="0.2738%" height="15" fill="rgb(229,72,13)" fg:x="203935" fg:w="1036"/><text x="54.1484%" y="639.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (1,036 samples, 0.27%)</title><rect x="53.8984%" y="613" width="0.2738%" height="15" fill="rgb(240,211,49)" fg:x="203935" fg:w="1036"/><text x="54.1484%" y="623.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (1,036 samples, 0.27%)</title><rect x="53.8984%" y="597" width="0.2738%" height="15" fill="rgb(219,149,40)" fg:x="203935" fg:w="1036"/><text x="54.1484%" y="607.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,912 samples, 0.51%)</title><rect x="53.6815%" y="709" width="0.5053%" height="15" fill="rgb(210,127,46)" fg:x="203114" fg:w="1912"/><text x="53.9315%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,824 samples, 0.48%)</title><rect x="53.7047%" y="693" width="0.4821%" height="15" fill="rgb(220,106,7)" fg:x="203202" fg:w="1824"/><text x="53.9547%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,824 samples, 0.48%)</title><rect x="53.7047%" y="677" width="0.4821%" height="15" fill="rgb(249,31,22)" fg:x="203202" fg:w="1824"/><text x="53.9547%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (55 samples, 0.01%)</title><rect x="54.1722%" y="661" width="0.0145%" height="15" fill="rgb(253,1,49)" fg:x="204971" fg:w="55"/><text x="54.4222%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1,928 samples, 0.51%)</title><rect x="53.6775%" y="725" width="0.5096%" height="15" fill="rgb(227,144,33)" fg:x="203099" fg:w="1928"/><text x="53.9275%" y="735.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::single::&lt;impl torrust_tracker_torrent_repository::entry::Entry for torrust_tracker_torrent_repository::entry::Torrent&gt;::get_stats (118 samples, 0.03%)</title><rect x="54.2040%" y="693" width="0.0312%" height="15" fill="rgb(249,163,44)" fg:x="205091" fg:w="118"/><text x="54.4540%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::values (83 samples, 0.02%)</title><rect x="54.2132%" y="677" width="0.0219%" height="15" fill="rgb(234,15,39)" fg:x="205126" fg:w="83"/><text x="54.4632%" y="687.50"></text></g><g><title>__rdl_alloc (40 samples, 0.01%)</title><rect x="54.2722%" y="581" width="0.0106%" height="15" fill="rgb(207,66,16)" fg:x="205349" fg:w="40"/><text x="54.5222%" y="591.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (40 samples, 0.01%)</title><rect x="54.2722%" y="565" width="0.0106%" height="15" fill="rgb(233,112,24)" fg:x="205349" fg:w="40"/><text x="54.5222%" y="575.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (70 samples, 0.02%)</title><rect x="54.2677%" y="677" width="0.0185%" height="15" fill="rgb(230,90,22)" fg:x="205332" fg:w="70"/><text x="54.5177%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (70 samples, 0.02%)</title><rect x="54.2677%" y="661" width="0.0185%" height="15" fill="rgb(229,61,13)" fg:x="205332" fg:w="70"/><text x="54.5177%" y="671.50"></text></g><g><title>alloc::alloc::exchange_malloc (53 samples, 0.01%)</title><rect x="54.2722%" y="645" width="0.0140%" height="15" fill="rgb(225,57,24)" fg:x="205349" fg:w="53"/><text x="54.5222%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (53 samples, 0.01%)</title><rect x="54.2722%" y="629" width="0.0140%" height="15" fill="rgb(208,169,48)" fg:x="205349" fg:w="53"/><text x="54.5222%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (53 samples, 0.01%)</title><rect x="54.2722%" y="613" width="0.0140%" height="15" fill="rgb(244,218,51)" fg:x="205349" fg:w="53"/><text x="54.5222%" y="623.50"></text></g><g><title>alloc::alloc::alloc (53 samples, 0.01%)</title><rect x="54.2722%" y="597" width="0.0140%" height="15" fill="rgb(214,148,10)" fg:x="205349" fg:w="53"/><text x="54.5222%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some_and (58 samples, 0.02%)</title><rect x="54.2909%" y="677" width="0.0153%" height="15" fill="rgb(225,174,27)" fg:x="205420" fg:w="58"/><text x="54.5409%" y="687.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::single::&lt;impl torrust_tracker_torrent_repository::entry::Entry for torrust_tracker_torrent_repository::entry::Torrent&gt;::insert_or_update_peer::{{closure}} (58 samples, 0.02%)</title><rect x="54.2909%" y="661" width="0.0153%" height="15" fill="rgb(230,96,26)" fg:x="205420" fg:w="58"/><text x="54.5409%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;torrust_tracker_primitives::peer::Peer&gt;&gt; (56 samples, 0.01%)</title><rect x="54.2914%" y="645" width="0.0148%" height="15" fill="rgb(232,10,30)" fg:x="205422" fg:w="56"/><text x="54.5414%" y="655.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (56 samples, 0.01%)</title><rect x="54.2914%" y="629" width="0.0148%" height="15" fill="rgb(222,8,50)" fg:x="205422" fg:w="56"/><text x="54.5414%" y="639.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::mutex_std::&lt;impl torrust_tracker_torrent_repository::entry::EntrySync for alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;::insert_or_update_peer_and_get_stats (423 samples, 0.11%)</title><rect x="54.1952%" y="725" width="0.1118%" height="15" fill="rgb(213,81,27)" fg:x="205058" fg:w="423"/><text x="54.4452%" y="735.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::single::&lt;impl torrust_tracker_torrent_repository::entry::Entry for torrust_tracker_torrent_repository::entry::Torrent&gt;::insert_or_update_peer_and_get_stats (391 samples, 0.10%)</title><rect x="54.2037%" y="709" width="0.1033%" height="15" fill="rgb(245,50,10)" fg:x="205090" fg:w="391"/><text x="54.4537%" y="719.50"></text></g><g><title>torrust_tracker_torrent_repository::entry::single::&lt;impl torrust_tracker_torrent_repository::entry::Entry for torrust_tracker_torrent_repository::entry::Torrent&gt;::insert_or_update_peer (272 samples, 0.07%)</title><rect x="54.2352%" y="693" width="0.0719%" height="15" fill="rgb(216,100,18)" fg:x="205209" fg:w="272"/><text x="54.4852%" y="703.50"></text></g><g><title>torrust_tracker::core::Tracker::update_torrent_with_peer_and_get_stats::{{closure}} (2,519 samples, 0.67%)</title><rect x="53.6463%" y="757" width="0.6658%" height="15" fill="rgb(236,147,54)" fg:x="202981" fg:w="2519"/><text x="53.8963%" y="767.50"></text></g><g><title>torrust_tracker_torrent_repository::repository::rw_lock_std_mutex_std::&lt;impl torrust_tracker_torrent_repository::repository::Repository&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt; for torrust_tracker_torrent_repository::repository::RwLockStd&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;&gt;::update_torrent_with_peer_and_get_stats (2,482 samples, 0.66%)</title><rect x="53.6561%" y="741" width="0.6560%" height="15" fill="rgb(205,143,26)" fg:x="203018" fg:w="2482"/><text x="53.9061%" y="751.50"></text></g><g><title>torrust_tracker::core::Tracker::announce::{{closure}} (3,776 samples, 1.00%)</title><rect x="53.3175%" y="773" width="0.9980%" height="15" fill="rgb(236,26,9)" fg:x="201737" fg:w="3776"/><text x="53.5675%" y="783.50"></text></g><g><title>&lt;core::net::socket_addr::SocketAddr as core::hash::Hash&gt;::hash (77 samples, 0.02%)</title><rect x="54.3168%" y="741" width="0.0204%" height="15" fill="rgb(221,165,53)" fg:x="205518" fg:w="77"/><text x="54.5668%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (79 samples, 0.02%)</title><rect x="54.3377%" y="629" width="0.0209%" height="15" fill="rgb(214,110,17)" fg:x="205597" fg:w="79"/><text x="54.5877%" y="639.50"></text></g><g><title>&lt;core::time::Nanoseconds as core::hash::Hash&gt;::hash (91 samples, 0.02%)</title><rect x="54.3374%" y="709" width="0.0241%" height="15" fill="rgb(237,197,12)" fg:x="205596" fg:w="91"/><text x="54.5874%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (91 samples, 0.02%)</title><rect x="54.3374%" y="693" width="0.0241%" height="15" fill="rgb(205,84,17)" fg:x="205596" fg:w="91"/><text x="54.5874%" y="703.50"></text></g><g><title>core::hash::Hasher::write_u32 (91 samples, 0.02%)</title><rect x="54.3374%" y="677" width="0.0241%" height="15" fill="rgb(237,18,45)" fg:x="205596" fg:w="91"/><text x="54.5874%" y="687.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (91 samples, 0.02%)</title><rect x="54.3374%" y="661" width="0.0241%" height="15" fill="rgb(221,87,14)" fg:x="205596" fg:w="91"/><text x="54.5874%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (91 samples, 0.02%)</title><rect x="54.3374%" y="645" width="0.0241%" height="15" fill="rgb(238,186,15)" fg:x="205596" fg:w="91"/><text x="54.5874%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (91 samples, 0.02%)</title><rect x="54.3617%" y="645" width="0.0241%" height="15" fill="rgb(208,115,11)" fg:x="205688" fg:w="91"/><text x="54.6117%" y="655.50"></text></g><g><title>&lt;core::time::Duration as core::hash::Hash&gt;::hash (188 samples, 0.05%)</title><rect x="54.3374%" y="725" width="0.0497%" height="15" fill="rgb(254,175,0)" fg:x="205596" fg:w="188"/><text x="54.5874%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (97 samples, 0.03%)</title><rect x="54.3615%" y="709" width="0.0256%" height="15" fill="rgb(227,24,42)" fg:x="205687" fg:w="97"/><text x="54.6115%" y="719.50"></text></g><g><title>core::hash::Hasher::write_u64 (97 samples, 0.03%)</title><rect x="54.3615%" y="693" width="0.0256%" height="15" fill="rgb(223,211,37)" fg:x="205687" fg:w="97"/><text x="54.6115%" y="703.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (97 samples, 0.03%)</title><rect x="54.3615%" y="677" width="0.0256%" height="15" fill="rgb(235,49,27)" fg:x="205687" fg:w="97"/><text x="54.6115%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (97 samples, 0.03%)</title><rect x="54.3615%" y="661" width="0.0256%" height="15" fill="rgb(254,97,51)" fg:x="205687" fg:w="97"/><text x="54.6115%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (102 samples, 0.03%)</title><rect x="54.3871%" y="661" width="0.0270%" height="15" fill="rgb(249,51,40)" fg:x="205784" fg:w="102"/><text x="54.6371%" y="671.50"></text></g><g><title>&lt;torrust_tracker_clock::time_extent::TimeExtent as core::hash::Hash&gt;::hash (292 samples, 0.08%)</title><rect x="54.3374%" y="741" width="0.0772%" height="15" fill="rgb(210,128,45)" fg:x="205596" fg:w="292"/><text x="54.5874%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (104 samples, 0.03%)</title><rect x="54.3871%" y="725" width="0.0275%" height="15" fill="rgb(224,137,50)" fg:x="205784" fg:w="104"/><text x="54.6371%" y="735.50"></text></g><g><title>core::hash::Hasher::write_u64 (104 samples, 0.03%)</title><rect x="54.3871%" y="709" width="0.0275%" height="15" fill="rgb(242,15,9)" fg:x="205784" fg:w="104"/><text x="54.6371%" y="719.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (104 samples, 0.03%)</title><rect x="54.3871%" y="693" width="0.0275%" height="15" fill="rgb(233,187,41)" fg:x="205784" fg:w="104"/><text x="54.6371%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (104 samples, 0.03%)</title><rect x="54.3871%" y="677" width="0.0275%" height="15" fill="rgb(227,2,29)" fg:x="205784" fg:w="104"/><text x="54.6371%" y="687.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (78 samples, 0.02%)</title><rect x="54.4149%" y="677" width="0.0206%" height="15" fill="rgb(222,70,3)" fg:x="205889" fg:w="78"/><text x="54.6649%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (78 samples, 0.02%)</title><rect x="54.4149%" y="661" width="0.0206%" height="15" fill="rgb(213,11,42)" fg:x="205889" fg:w="78"/><text x="54.6649%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (77 samples, 0.02%)</title><rect x="54.4151%" y="645" width="0.0204%" height="15" fill="rgb(225,150,9)" fg:x="205890" fg:w="77"/><text x="54.6651%" y="655.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (81 samples, 0.02%)</title><rect x="54.4149%" y="709" width="0.0214%" height="15" fill="rgb(230,162,45)" fg:x="205889" fg:w="81"/><text x="54.6649%" y="719.50"></text></g><g><title>core::hash::Hasher::write_usize (81 samples, 0.02%)</title><rect x="54.4149%" y="693" width="0.0214%" height="15" fill="rgb(222,14,52)" fg:x="205889" fg:w="81"/><text x="54.6649%" y="703.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (206 samples, 0.05%)</title><rect x="54.4149%" y="741" width="0.0544%" height="15" fill="rgb(254,198,14)" fg:x="205889" fg:w="206"/><text x="54.6649%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (206 samples, 0.05%)</title><rect x="54.4149%" y="725" width="0.0544%" height="15" fill="rgb(220,217,30)" fg:x="205889" fg:w="206"/><text x="54.6649%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (125 samples, 0.03%)</title><rect x="54.4363%" y="709" width="0.0330%" height="15" fill="rgb(215,146,41)" fg:x="205970" fg:w="125"/><text x="54.6863%" y="719.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (125 samples, 0.03%)</title><rect x="54.4363%" y="693" width="0.0330%" height="15" fill="rgb(217,27,36)" fg:x="205970" fg:w="125"/><text x="54.6863%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (125 samples, 0.03%)</title><rect x="54.4363%" y="677" width="0.0330%" height="15" fill="rgb(219,218,39)" fg:x="205970" fg:w="125"/><text x="54.6863%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (124 samples, 0.03%)</title><rect x="54.4365%" y="661" width="0.0328%" height="15" fill="rgb(219,4,42)" fg:x="205971" fg:w="124"/><text x="54.6865%" y="671.50"></text></g><g><title>core::hash::sip::u8to64_le (47 samples, 0.01%)</title><rect x="54.4569%" y="645" width="0.0124%" height="15" fill="rgb(249,119,36)" fg:x="206048" fg:w="47"/><text x="54.7069%" y="655.50"></text></g><g><title>torrust_tracker::servers::udp::connection_cookie::cookie_builder::build (589 samples, 0.16%)</title><rect x="54.3168%" y="757" width="0.1557%" height="15" fill="rgb(209,23,33)" fg:x="205518" fg:w="589"/><text x="54.5668%" y="767.50"></text></g><g><title>[[vdso]] (83 samples, 0.02%)</title><rect x="54.4725%" y="709" width="0.0219%" height="15" fill="rgb(211,10,0)" fg:x="206107" fg:w="83"/><text x="54.7225%" y="719.50"></text></g><g><title>core::num::&lt;impl u128&gt;::checked_div (84 samples, 0.02%)</title><rect x="54.4725%" y="725" width="0.0222%" height="15" fill="rgb(208,99,37)" fg:x="206107" fg:w="84"/><text x="54.7225%" y="735.50"></text></g><g><title>_int_free (40 samples, 0.01%)</title><rect x="54.4963%" y="677" width="0.0106%" height="15" fill="rgb(213,132,31)" fg:x="206197" fg:w="40"/><text x="54.7463%" y="687.50"></text></g><g><title>torrust_tracker::servers::udp::connection_cookie::check (748 samples, 0.20%)</title><rect x="54.3155%" y="773" width="0.1977%" height="15" fill="rgb(243,129,40)" fg:x="205513" fg:w="748"/><text x="54.5655%" y="783.50"></text></g><g><title>torrust_tracker::servers::udp::connection_cookie::cookie_builder::get_last_time_extent (154 samples, 0.04%)</title><rect x="54.4725%" y="757" width="0.0407%" height="15" fill="rgb(210,66,33)" fg:x="206107" fg:w="154"/><text x="54.7225%" y="767.50"></text></g><g><title>torrust_tracker_clock::time_extent::Make::now (154 samples, 0.04%)</title><rect x="54.4725%" y="741" width="0.0407%" height="15" fill="rgb(209,189,4)" fg:x="206107" fg:w="154"/><text x="54.7225%" y="751.50"></text></g><g><title>torrust_tracker_clock::clock::working::&lt;impl torrust_tracker_clock::clock::Time for torrust_tracker_clock::clock::Clock&lt;torrust_tracker_clock::clock::working::WorkingClock&gt;&gt;::now (70 samples, 0.02%)</title><rect x="54.4947%" y="725" width="0.0185%" height="15" fill="rgb(214,107,37)" fg:x="206191" fg:w="70"/><text x="54.7447%" y="735.50"></text></g><g><title>std::time::SystemTime::now (66 samples, 0.02%)</title><rect x="54.4957%" y="709" width="0.0174%" height="15" fill="rgb(245,88,54)" fg:x="206195" fg:w="66"/><text x="54.7457%" y="719.50"></text></g><g><title>std::sys::pal::unix::time::SystemTime::now (66 samples, 0.02%)</title><rect x="54.4957%" y="693" width="0.0174%" height="15" fill="rgb(205,146,20)" fg:x="206195" fg:w="66"/><text x="54.7457%" y="703.50"></text></g><g><title>torrust_tracker::servers::udp::connection_cookie::cookie_builder::build (68 samples, 0.02%)</title><rect x="54.5132%" y="773" width="0.0180%" height="15" fill="rgb(220,161,25)" fg:x="206261" fg:w="68"/><text x="54.7632%" y="783.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (68 samples, 0.02%)</title><rect x="54.5132%" y="757" width="0.0180%" height="15" fill="rgb(215,152,15)" fg:x="206261" fg:w="68"/><text x="54.7632%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (68 samples, 0.02%)</title><rect x="54.5132%" y="741" width="0.0180%" height="15" fill="rgb(233,192,44)" fg:x="206261" fg:w="68"/><text x="54.7632%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (68 samples, 0.02%)</title><rect x="54.5132%" y="725" width="0.0180%" height="15" fill="rgb(240,170,46)" fg:x="206261" fg:w="68"/><text x="54.7632%" y="735.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (68 samples, 0.02%)</title><rect x="54.5132%" y="709" width="0.0180%" height="15" fill="rgb(207,104,33)" fg:x="206261" fg:w="68"/><text x="54.7632%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (68 samples, 0.02%)</title><rect x="54.5132%" y="693" width="0.0180%" height="15" fill="rgb(219,21,39)" fg:x="206261" fg:w="68"/><text x="54.7632%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (68 samples, 0.02%)</title><rect x="54.5132%" y="677" width="0.0180%" height="15" fill="rgb(214,133,29)" fg:x="206261" fg:w="68"/><text x="54.7632%" y="687.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_announce::{{closure}} (4,754 samples, 1.26%)</title><rect x="53.2863%" y="789" width="1.2564%" height="15" fill="rgb(226,93,6)" fg:x="201619" fg:w="4754"/><text x="53.5363%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (80 samples, 0.02%)</title><rect x="54.5510%" y="725" width="0.0211%" height="15" fill="rgb(252,222,34)" fg:x="206404" fg:w="80"/><text x="54.8010%" y="735.50"></text></g><g><title>&lt;core::net::socket_addr::SocketAddrV4 as core::hash::Hash&gt;::hash (43 samples, 0.01%)</title><rect x="54.5721%" y="725" width="0.0114%" height="15" fill="rgb(252,92,48)" fg:x="206484" fg:w="43"/><text x="54.8221%" y="735.50"></text></g><g><title>&lt;core::net::ip_addr::Ipv4Addr as core::hash::Hash&gt;::hash (43 samples, 0.01%)</title><rect x="54.5721%" y="709" width="0.0114%" height="15" fill="rgb(245,223,24)" fg:x="206484" fg:w="43"/><text x="54.8221%" y="719.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (42 samples, 0.01%)</title><rect x="54.5724%" y="693" width="0.0111%" height="15" fill="rgb(205,176,3)" fg:x="206485" fg:w="42"/><text x="54.8224%" y="703.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (42 samples, 0.01%)</title><rect x="54.5724%" y="677" width="0.0111%" height="15" fill="rgb(235,151,15)" fg:x="206485" fg:w="42"/><text x="54.8224%" y="687.50"></text></g><g><title>&lt;core::net::socket_addr::SocketAddr as core::hash::Hash&gt;::hash (126 samples, 0.03%)</title><rect x="54.5510%" y="741" width="0.0333%" height="15" fill="rgb(237,209,11)" fg:x="206404" fg:w="126"/><text x="54.8010%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (86 samples, 0.02%)</title><rect x="54.5851%" y="629" width="0.0227%" height="15" fill="rgb(243,227,24)" fg:x="206533" fg:w="86"/><text x="54.8351%" y="639.50"></text></g><g><title>&lt;core::time::Nanoseconds as core::hash::Hash&gt;::hash (104 samples, 0.03%)</title><rect x="54.5845%" y="709" width="0.0275%" height="15" fill="rgb(239,193,16)" fg:x="206531" fg:w="104"/><text x="54.8345%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (104 samples, 0.03%)</title><rect x="54.5845%" y="693" width="0.0275%" height="15" fill="rgb(231,27,9)" fg:x="206531" fg:w="104"/><text x="54.8345%" y="703.50"></text></g><g><title>core::hash::Hasher::write_u32 (104 samples, 0.03%)</title><rect x="54.5845%" y="677" width="0.0275%" height="15" fill="rgb(219,169,10)" fg:x="206531" fg:w="104"/><text x="54.8345%" y="687.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (104 samples, 0.03%)</title><rect x="54.5845%" y="661" width="0.0275%" height="15" fill="rgb(244,229,43)" fg:x="206531" fg:w="104"/><text x="54.8345%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (104 samples, 0.03%)</title><rect x="54.5845%" y="645" width="0.0275%" height="15" fill="rgb(254,38,20)" fg:x="206531" fg:w="104"/><text x="54.8345%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (123 samples, 0.03%)</title><rect x="54.6123%" y="645" width="0.0325%" height="15" fill="rgb(250,47,30)" fg:x="206636" fg:w="123"/><text x="54.8623%" y="655.50"></text></g><g><title>&lt;core::time::Duration as core::hash::Hash&gt;::hash (232 samples, 0.06%)</title><rect x="54.5845%" y="725" width="0.0613%" height="15" fill="rgb(224,124,36)" fg:x="206531" fg:w="232"/><text x="54.8345%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (128 samples, 0.03%)</title><rect x="54.6120%" y="709" width="0.0338%" height="15" fill="rgb(246,68,51)" fg:x="206635" fg:w="128"/><text x="54.8620%" y="719.50"></text></g><g><title>core::hash::Hasher::write_u64 (127 samples, 0.03%)</title><rect x="54.6123%" y="693" width="0.0336%" height="15" fill="rgb(253,43,49)" fg:x="206636" fg:w="127"/><text x="54.8623%" y="703.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (127 samples, 0.03%)</title><rect x="54.6123%" y="677" width="0.0336%" height="15" fill="rgb(219,54,36)" fg:x="206636" fg:w="127"/><text x="54.8623%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (127 samples, 0.03%)</title><rect x="54.6123%" y="661" width="0.0336%" height="15" fill="rgb(227,133,34)" fg:x="206636" fg:w="127"/><text x="54.8623%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (115 samples, 0.03%)</title><rect x="54.6461%" y="661" width="0.0304%" height="15" fill="rgb(247,227,15)" fg:x="206764" fg:w="115"/><text x="54.8961%" y="671.50"></text></g><g><title>core::hash::sip::u8to64_le (46 samples, 0.01%)</title><rect x="54.6644%" y="645" width="0.0122%" height="15" fill="rgb(229,96,14)" fg:x="206833" fg:w="46"/><text x="54.9144%" y="655.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (117 samples, 0.03%)</title><rect x="54.6459%" y="693" width="0.0309%" height="15" fill="rgb(220,79,17)" fg:x="206763" fg:w="117"/><text x="54.8959%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (117 samples, 0.03%)</title><rect x="54.6459%" y="677" width="0.0309%" height="15" fill="rgb(205,131,53)" fg:x="206763" fg:w="117"/><text x="54.8959%" y="687.50"></text></g><g><title>&lt;torrust_tracker_clock::time_extent::TimeExtent as core::hash::Hash&gt;::hash (350 samples, 0.09%)</title><rect x="54.5845%" y="741" width="0.0925%" height="15" fill="rgb(209,50,29)" fg:x="206531" fg:w="350"/><text x="54.8345%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (118 samples, 0.03%)</title><rect x="54.6459%" y="725" width="0.0312%" height="15" fill="rgb(245,86,46)" fg:x="206763" fg:w="118"/><text x="54.8959%" y="735.50"></text></g><g><title>core::hash::Hasher::write_u64 (118 samples, 0.03%)</title><rect x="54.6459%" y="709" width="0.0312%" height="15" fill="rgb(235,66,46)" fg:x="206763" fg:w="118"/><text x="54.8959%" y="719.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (83 samples, 0.02%)</title><rect x="54.6776%" y="677" width="0.0219%" height="15" fill="rgb(232,148,31)" fg:x="206883" fg:w="83"/><text x="54.9276%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (83 samples, 0.02%)</title><rect x="54.6776%" y="661" width="0.0219%" height="15" fill="rgb(217,149,8)" fg:x="206883" fg:w="83"/><text x="54.9276%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (82 samples, 0.02%)</title><rect x="54.6778%" y="645" width="0.0217%" height="15" fill="rgb(209,183,11)" fg:x="206884" fg:w="82"/><text x="54.9278%" y="655.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (86 samples, 0.02%)</title><rect x="54.6776%" y="709" width="0.0227%" height="15" fill="rgb(208,55,20)" fg:x="206883" fg:w="86"/><text x="54.9276%" y="719.50"></text></g><g><title>core::hash::Hasher::write_usize (86 samples, 0.02%)</title><rect x="54.6776%" y="693" width="0.0227%" height="15" fill="rgb(218,39,14)" fg:x="206883" fg:w="86"/><text x="54.9276%" y="703.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (229 samples, 0.06%)</title><rect x="54.6776%" y="741" width="0.0605%" height="15" fill="rgb(216,169,33)" fg:x="206883" fg:w="229"/><text x="54.9276%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (229 samples, 0.06%)</title><rect x="54.6776%" y="725" width="0.0605%" height="15" fill="rgb(233,80,24)" fg:x="206883" fg:w="229"/><text x="54.9276%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (143 samples, 0.04%)</title><rect x="54.7003%" y="709" width="0.0378%" height="15" fill="rgb(213,179,31)" fg:x="206969" fg:w="143"/><text x="54.9503%" y="719.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (143 samples, 0.04%)</title><rect x="54.7003%" y="693" width="0.0378%" height="15" fill="rgb(209,19,5)" fg:x="206969" fg:w="143"/><text x="54.9503%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (143 samples, 0.04%)</title><rect x="54.7003%" y="677" width="0.0378%" height="15" fill="rgb(219,18,35)" fg:x="206969" fg:w="143"/><text x="54.9503%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (140 samples, 0.04%)</title><rect x="54.7011%" y="661" width="0.0370%" height="15" fill="rgb(209,169,16)" fg:x="206972" fg:w="140"/><text x="54.9511%" y="671.50"></text></g><g><title>core::hash::sip::u8to64_le (44 samples, 0.01%)</title><rect x="54.7265%" y="645" width="0.0116%" height="15" fill="rgb(245,90,51)" fg:x="207068" fg:w="44"/><text x="54.9765%" y="655.50"></text></g><g><title>torrust_tracker::servers::udp::connection_cookie::cookie_builder::build (710 samples, 0.19%)</title><rect x="54.5510%" y="757" width="0.1876%" height="15" fill="rgb(220,99,45)" fg:x="206404" fg:w="710"/><text x="54.8010%" y="767.50"></text></g><g><title>[[vdso]] (68 samples, 0.02%)</title><rect x="54.7389%" y="709" width="0.0180%" height="15" fill="rgb(249,89,25)" fg:x="207115" fg:w="68"/><text x="54.9889%" y="719.50"></text></g><g><title>core::num::&lt;impl u128&gt;::checked_div (70 samples, 0.02%)</title><rect x="54.7389%" y="725" width="0.0185%" height="15" fill="rgb(239,193,0)" fg:x="207115" fg:w="70"/><text x="54.9889%" y="735.50"></text></g><g><title>_int_free (40 samples, 0.01%)</title><rect x="54.7592%" y="677" width="0.0106%" height="15" fill="rgb(231,126,1)" fg:x="207192" fg:w="40"/><text x="55.0092%" y="687.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_connect::{{closure}} (887 samples, 0.23%)</title><rect x="54.5428%" y="789" width="0.2344%" height="15" fill="rgb(243,166,3)" fg:x="206373" fg:w="887"/><text x="54.7928%" y="799.50"></text></g><g><title>torrust_tracker::servers::udp::connection_cookie::make (865 samples, 0.23%)</title><rect x="54.5486%" y="773" width="0.2286%" height="15" fill="rgb(223,22,34)" fg:x="206395" fg:w="865"/><text x="54.7986%" y="783.50"></text></g><g><title>torrust_tracker::servers::udp::connection_cookie::cookie_builder::get_last_time_extent (146 samples, 0.04%)</title><rect x="54.7386%" y="757" width="0.0386%" height="15" fill="rgb(251,52,51)" fg:x="207114" fg:w="146"/><text x="54.9886%" y="767.50"></text></g><g><title>torrust_tracker_clock::time_extent::Make::now (145 samples, 0.04%)</title><rect x="54.7389%" y="741" width="0.0383%" height="15" fill="rgb(221,165,28)" fg:x="207115" fg:w="145"/><text x="54.9889%" y="751.50"></text></g><g><title>torrust_tracker_clock::clock::working::&lt;impl torrust_tracker_clock::clock::Time for torrust_tracker_clock::clock::Clock&lt;torrust_tracker_clock::clock::working::WorkingClock&gt;&gt;::now (75 samples, 0.02%)</title><rect x="54.7574%" y="725" width="0.0198%" height="15" fill="rgb(218,121,47)" fg:x="207185" fg:w="75"/><text x="55.0074%" y="735.50"></text></g><g><title>std::time::SystemTime::now (70 samples, 0.02%)</title><rect x="54.7587%" y="709" width="0.0185%" height="15" fill="rgb(209,120,9)" fg:x="207190" fg:w="70"/><text x="55.0087%" y="719.50"></text></g><g><title>std::sys::pal::unix::time::SystemTime::now (70 samples, 0.02%)</title><rect x="54.7587%" y="693" width="0.0185%" height="15" fill="rgb(236,68,12)" fg:x="207190" fg:w="70"/><text x="55.0087%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (47 samples, 0.01%)</title><rect x="54.7870%" y="693" width="0.0124%" height="15" fill="rgb(225,194,26)" fg:x="207297" fg:w="47"/><text x="55.0370%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (59 samples, 0.02%)</title><rect x="54.7844%" y="725" width="0.0156%" height="15" fill="rgb(231,84,39)" fg:x="207287" fg:w="59"/><text x="55.0344%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (49 samples, 0.01%)</title><rect x="54.7870%" y="709" width="0.0130%" height="15" fill="rgb(210,11,45)" fg:x="207297" fg:w="49"/><text x="55.0370%" y="719.50"></text></g><g><title>torrust_tracker::core::ScrapeData::add_file (61 samples, 0.02%)</title><rect x="54.7841%" y="757" width="0.0161%" height="15" fill="rgb(224,54,52)" fg:x="207286" fg:w="61"/><text x="55.0341%" y="767.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (61 samples, 0.02%)</title><rect x="54.7841%" y="741" width="0.0161%" height="15" fill="rgb(238,102,14)" fg:x="207286" fg:w="61"/><text x="55.0341%" y="751.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (146 samples, 0.04%)</title><rect x="54.8063%" y="709" width="0.0386%" height="15" fill="rgb(243,160,52)" fg:x="207370" fg:w="146"/><text x="55.0563%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (138 samples, 0.04%)</title><rect x="54.8084%" y="693" width="0.0365%" height="15" fill="rgb(216,114,19)" fg:x="207378" fg:w="138"/><text x="55.0584%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (138 samples, 0.04%)</title><rect x="54.8084%" y="677" width="0.0365%" height="15" fill="rgb(244,166,37)" fg:x="207378" fg:w="138"/><text x="55.0584%" y="687.50"></text></g><g><title>&lt;torrust_tracker_primitives::info_hash::InfoHash as core::cmp::Ord&gt;::cmp (70 samples, 0.02%)</title><rect x="54.8264%" y="661" width="0.0185%" height="15" fill="rgb(246,29,44)" fg:x="207446" fg:w="70"/><text x="55.0764%" y="671.50"></text></g><g><title>core::array::&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (70 samples, 0.02%)</title><rect x="54.8264%" y="645" width="0.0185%" height="15" fill="rgb(215,56,53)" fg:x="207446" fg:w="70"/><text x="55.0764%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (70 samples, 0.02%)</title><rect x="54.8264%" y="629" width="0.0185%" height="15" fill="rgb(217,60,2)" fg:x="207446" fg:w="70"/><text x="55.0764%" y="639.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (70 samples, 0.02%)</title><rect x="54.8264%" y="613" width="0.0185%" height="15" fill="rgb(207,26,24)" fg:x="207446" fg:w="70"/><text x="55.0764%" y="623.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (70 samples, 0.02%)</title><rect x="54.8264%" y="597" width="0.0185%" height="15" fill="rgb(252,210,15)" fg:x="207446" fg:w="70"/><text x="55.0764%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (147 samples, 0.04%)</title><rect x="54.8063%" y="725" width="0.0389%" height="15" fill="rgb(253,209,26)" fg:x="207370" fg:w="147"/><text x="55.0563%" y="735.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_request::{{closure}} (5,947 samples, 1.57%)</title><rect x="53.2755%" y="805" width="1.5717%" height="15" fill="rgb(238,170,14)" fg:x="201578" fg:w="5947"/><text x="53.5255%" y="815.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_scrape::{{closure}} (265 samples, 0.07%)</title><rect x="54.7772%" y="789" width="0.0700%" height="15" fill="rgb(216,178,15)" fg:x="207260" fg:w="265"/><text x="55.0272%" y="799.50"></text></g><g><title>torrust_tracker::core::Tracker::scrape::{{closure}} (243 samples, 0.06%)</title><rect x="54.7830%" y="773" width="0.0642%" height="15" fill="rgb(250,197,2)" fg:x="207282" fg:w="243"/><text x="55.0330%" y="783.50"></text></g><g><title>torrust_tracker::core::Tracker::get_swarm_metadata (176 samples, 0.05%)</title><rect x="54.8007%" y="757" width="0.0465%" height="15" fill="rgb(212,70,42)" fg:x="207349" fg:w="176"/><text x="55.0507%" y="767.50"></text></g><g><title>torrust_tracker_torrent_repository::repository::rw_lock_std_mutex_std::&lt;impl torrust_tracker_torrent_repository::repository::Repository&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt; for torrust_tracker_torrent_repository::repository::RwLockStd&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;torrust_tracker_torrent_repository::entry::Torrent&gt;&gt;&gt;&gt;::get (156 samples, 0.04%)</title><rect x="54.8060%" y="741" width="0.0412%" height="15" fill="rgb(227,213,9)" fg:x="207369" fg:w="156"/><text x="55.0560%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (54 samples, 0.01%)</title><rect x="54.9022%" y="741" width="0.0143%" height="15" fill="rgb(245,99,25)" fg:x="207733" fg:w="54"/><text x="55.1522%" y="751.50"></text></g><g><title>alloc::string::String::push_str (51 samples, 0.01%)</title><rect x="54.9030%" y="725" width="0.0135%" height="15" fill="rgb(250,82,29)" fg:x="207736" fg:w="51"/><text x="55.1530%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (51 samples, 0.01%)</title><rect x="54.9030%" y="709" width="0.0135%" height="15" fill="rgb(241,226,54)" fg:x="207736" fg:w="51"/><text x="55.1530%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (51 samples, 0.01%)</title><rect x="54.9030%" y="693" width="0.0135%" height="15" fill="rgb(221,99,41)" fg:x="207736" fg:w="51"/><text x="55.1530%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (51 samples, 0.01%)</title><rect x="54.9030%" y="677" width="0.0135%" height="15" fill="rgb(213,90,21)" fg:x="207736" fg:w="51"/><text x="55.1530%" y="687.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (186 samples, 0.05%)</title><rect x="54.8784%" y="773" width="0.0492%" height="15" fill="rgb(205,208,24)" fg:x="207643" fg:w="186"/><text x="55.1284%" y="783.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (178 samples, 0.05%)</title><rect x="54.8806%" y="757" width="0.0470%" height="15" fill="rgb(246,31,12)" fg:x="207651" fg:w="178"/><text x="55.1306%" y="767.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (85 samples, 0.02%)</title><rect x="54.9276%" y="773" width="0.0225%" height="15" fill="rgb(213,154,6)" fg:x="207829" fg:w="85"/><text x="55.1776%" y="783.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (84 samples, 0.02%)</title><rect x="54.9279%" y="757" width="0.0222%" height="15" fill="rgb(222,163,29)" fg:x="207830" fg:w="84"/><text x="55.1779%" y="767.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (319 samples, 0.08%)</title><rect x="54.8660%" y="789" width="0.0843%" height="15" fill="rgb(227,201,8)" fg:x="207596" fg:w="319"/><text x="55.1160%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (71 samples, 0.02%)</title><rect x="54.9538%" y="789" width="0.0188%" height="15" fill="rgb(233,9,32)" fg:x="207928" fg:w="71"/><text x="55.2038%" y="799.50"></text></g><g><title>__GI___libc_free (39 samples, 0.01%)</title><rect x="54.9916%" y="661" width="0.0103%" height="15" fill="rgb(217,54,24)" fg:x="208071" fg:w="39"/><text x="55.2416%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (112 samples, 0.03%)</title><rect x="54.9786%" y="725" width="0.0296%" height="15" fill="rgb(235,192,0)" fg:x="208022" fg:w="112"/><text x="55.2286%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (112 samples, 0.03%)</title><rect x="54.9786%" y="709" width="0.0296%" height="15" fill="rgb(235,45,9)" fg:x="208022" fg:w="112"/><text x="55.2286%" y="719.50"></text></g><g><title>__rdl_dealloc (112 samples, 0.03%)</title><rect x="54.9786%" y="693" width="0.0296%" height="15" fill="rgb(246,42,40)" fg:x="208022" fg:w="112"/><text x="55.2286%" y="703.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (112 samples, 0.03%)</title><rect x="54.9786%" y="677" width="0.0296%" height="15" fill="rgb(248,111,24)" fg:x="208022" fg:w="112"/><text x="55.2286%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (162 samples, 0.04%)</title><rect x="54.9725%" y="789" width="0.0428%" height="15" fill="rgb(249,65,22)" fg:x="207999" fg:w="162"/><text x="55.2225%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (162 samples, 0.04%)</title><rect x="54.9725%" y="773" width="0.0428%" height="15" fill="rgb(238,111,51)" fg:x="207999" fg:w="162"/><text x="55.2225%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (162 samples, 0.04%)</title><rect x="54.9725%" y="757" width="0.0428%" height="15" fill="rgb(250,118,22)" fg:x="207999" fg:w="162"/><text x="55.2225%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (162 samples, 0.04%)</title><rect x="54.9725%" y="741" width="0.0428%" height="15" fill="rgb(234,84,26)" fg:x="207999" fg:w="162"/><text x="55.2225%" y="751.50"></text></g><g><title>torrust_tracker::servers::udp::logging::map_action_name (46 samples, 0.01%)</title><rect x="55.0188%" y="789" width="0.0122%" height="15" fill="rgb(243,172,12)" fg:x="208174" fg:w="46"/><text x="55.2688%" y="799.50"></text></g><g><title>binascii::bin2hex (128 samples, 0.03%)</title><rect x="55.0354%" y="741" width="0.0338%" height="15" fill="rgb(236,150,49)" fg:x="208237" fg:w="128"/><text x="55.2854%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 0.01%)</title><rect x="55.0574%" y="725" width="0.0119%" height="15" fill="rgb(225,197,26)" fg:x="208320" fg:w="45"/><text x="55.3074%" y="735.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 0.01%)</title><rect x="55.0574%" y="709" width="0.0119%" height="15" fill="rgb(214,17,42)" fg:x="208320" fg:w="45"/><text x="55.3074%" y="719.50"></text></g><g><title>core::fmt::write (47 samples, 0.01%)</title><rect x="55.0759%" y="725" width="0.0124%" height="15" fill="rgb(224,165,40)" fg:x="208390" fg:w="47"/><text x="55.3259%" y="735.50"></text></g><g><title>core::fmt::Formatter::write_fmt (136 samples, 0.04%)</title><rect x="55.0693%" y="741" width="0.0359%" height="15" fill="rgb(246,100,4)" fg:x="208365" fg:w="136"/><text x="55.3193%" y="751.50"></text></g><g><title>core::str::converts::from_utf8 (64 samples, 0.02%)</title><rect x="55.0883%" y="725" width="0.0169%" height="15" fill="rgb(222,103,0)" fg:x="208437" fg:w="64"/><text x="55.3383%" y="735.50"></text></g><g><title>core::str::validations::run_utf8_validation (52 samples, 0.01%)</title><rect x="55.0915%" y="709" width="0.0137%" height="15" fill="rgb(227,189,26)" fg:x="208449" fg:w="52"/><text x="55.3415%" y="719.50"></text></g><g><title>&lt;torrust_tracker_primitives::info_hash::InfoHash as core::fmt::Display&gt;::fmt (289 samples, 0.08%)</title><rect x="55.0317%" y="757" width="0.0764%" height="15" fill="rgb(214,202,17)" fg:x="208223" fg:w="289"/><text x="55.2817%" y="767.50"></text></g><g><title>torrust_tracker_primitives::info_hash::InfoHash::to_hex_string (293 samples, 0.08%)</title><rect x="55.0309%" y="789" width="0.0774%" height="15" fill="rgb(229,111,3)" fg:x="208220" fg:w="293"/><text x="55.2809%" y="799.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (293 samples, 0.08%)</title><rect x="55.0309%" y="773" width="0.0774%" height="15" fill="rgb(229,172,15)" fg:x="208220" fg:w="293"/><text x="55.2809%" y="783.50"></text></g><g><title>torrust_tracker::servers::udp::logging::log_request (1,025 samples, 0.27%)</title><rect x="54.8473%" y="805" width="0.2709%" height="15" fill="rgb(230,224,35)" fg:x="207525" fg:w="1025"/><text x="55.0973%" y="815.50"></text></g><g><title>[[vdso]] (111 samples, 0.03%)</title><rect x="55.1818%" y="581" width="0.0293%" height="15" fill="rgb(251,141,6)" fg:x="208791" fg:w="111"/><text x="55.4318%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (120 samples, 0.03%)</title><rect x="55.1800%" y="597" width="0.0317%" height="15" fill="rgb(225,208,6)" fg:x="208784" fg:w="120"/><text x="55.4300%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (134 samples, 0.04%)</title><rect x="55.1774%" y="629" width="0.0354%" height="15" fill="rgb(246,181,16)" fg:x="208774" fg:w="134"/><text x="55.4274%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (134 samples, 0.04%)</title><rect x="55.1774%" y="613" width="0.0354%" height="15" fill="rgb(227,129,36)" fg:x="208774" fg:w="134"/><text x="55.4274%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (141 samples, 0.04%)</title><rect x="55.1758%" y="661" width="0.0373%" height="15" fill="rgb(248,117,24)" fg:x="208768" fg:w="141"/><text x="55.4258%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (141 samples, 0.04%)</title><rect x="55.1758%" y="645" width="0.0373%" height="15" fill="rgb(214,185,35)" fg:x="208768" fg:w="141"/><text x="55.4258%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (148 samples, 0.04%)</title><rect x="55.1750%" y="741" width="0.0391%" height="15" fill="rgb(236,150,34)" fg:x="208765" fg:w="148"/><text x="55.4250%" y="751.50"></text></g><g><title>alloc::string::String::push_str (145 samples, 0.04%)</title><rect x="55.1758%" y="725" width="0.0383%" height="15" fill="rgb(243,228,27)" fg:x="208768" fg:w="145"/><text x="55.4258%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (145 samples, 0.04%)</title><rect x="55.1758%" y="709" width="0.0383%" height="15" fill="rgb(245,77,44)" fg:x="208768" fg:w="145"/><text x="55.4258%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (145 samples, 0.04%)</title><rect x="55.1758%" y="693" width="0.0383%" height="15" fill="rgb(235,214,42)" fg:x="208768" fg:w="145"/><text x="55.4258%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (145 samples, 0.04%)</title><rect x="55.1758%" y="677" width="0.0383%" height="15" fill="rgb(221,74,3)" fg:x="208768" fg:w="145"/><text x="55.4258%" y="687.50"></text></g><g><title>[[vdso]] (52 samples, 0.01%)</title><rect x="55.2141%" y="741" width="0.0137%" height="15" fill="rgb(206,121,29)" fg:x="208913" fg:w="52"/><text x="55.4641%" y="751.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (286 samples, 0.08%)</title><rect x="55.1604%" y="773" width="0.0756%" height="15" fill="rgb(249,131,53)" fg:x="208710" fg:w="286"/><text x="55.4104%" y="783.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (277 samples, 0.07%)</title><rect x="55.1628%" y="757" width="0.0732%" height="15" fill="rgb(236,170,29)" fg:x="208719" fg:w="277"/><text x="55.4128%" y="767.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (328 samples, 0.09%)</title><rect x="55.1499%" y="789" width="0.0867%" height="15" fill="rgb(247,96,15)" fg:x="208670" fg:w="328"/><text x="55.3999%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (43 samples, 0.01%)</title><rect x="55.2384%" y="789" width="0.0114%" height="15" fill="rgb(211,210,7)" fg:x="209005" fg:w="43"/><text x="55.4884%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (51 samples, 0.01%)</title><rect x="55.2498%" y="789" width="0.0135%" height="15" fill="rgb(240,88,50)" fg:x="209048" fg:w="51"/><text x="55.4998%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (51 samples, 0.01%)</title><rect x="55.2498%" y="773" width="0.0135%" height="15" fill="rgb(209,229,26)" fg:x="209048" fg:w="51"/><text x="55.4998%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (51 samples, 0.01%)</title><rect x="55.2498%" y="757" width="0.0135%" height="15" fill="rgb(210,68,23)" fg:x="209048" fg:w="51"/><text x="55.4998%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 0.01%)</title><rect x="55.2498%" y="741" width="0.0135%" height="15" fill="rgb(229,180,13)" fg:x="209048" fg:w="51"/><text x="55.4998%" y="751.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_packet::{{closure}} (33,755 samples, 8.92%)</title><rect x="46.3590%" y="821" width="8.9212%" height="15" fill="rgb(236,53,44)" fg:x="175408" fg:w="33755"/><text x="46.6090%" y="831.50">torrust_track..</text></g><g><title>torrust_tracker::servers::udp::logging::log_response (613 samples, 0.16%)</title><rect x="55.1182%" y="805" width="0.1620%" height="15" fill="rgb(244,214,29)" fg:x="208550" fg:w="613"/><text x="55.3682%" y="815.50"></text></g><g><title>futex_wake (46 samples, 0.01%)</title><rect x="55.4046%" y="565" width="0.0122%" height="15" fill="rgb(220,75,29)" fg:x="209634" fg:w="46"/><text x="55.6546%" y="575.50"></text></g><g><title>do_futex (52 samples, 0.01%)</title><rect x="55.4033%" y="581" width="0.0137%" height="15" fill="rgb(214,183,37)" fg:x="209629" fg:w="52"/><text x="55.6533%" y="591.50"></text></g><g><title>__x64_sys_futex (57 samples, 0.02%)</title><rect x="55.4025%" y="597" width="0.0151%" height="15" fill="rgb(239,117,29)" fg:x="209626" fg:w="57"/><text x="55.6525%" y="607.50"></text></g><g><title>__GI___lll_lock_wake_private (63 samples, 0.02%)</title><rect x="55.4015%" y="645" width="0.0167%" height="15" fill="rgb(237,171,35)" fg:x="209622" fg:w="63"/><text x="55.6515%" y="655.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (60 samples, 0.02%)</title><rect x="55.4023%" y="629" width="0.0159%" height="15" fill="rgb(229,178,53)" fg:x="209625" fg:w="60"/><text x="55.6523%" y="639.50"></text></g><g><title>do_syscall_64 (60 samples, 0.02%)</title><rect x="55.4023%" y="613" width="0.0159%" height="15" fill="rgb(210,102,19)" fg:x="209625" fg:w="60"/><text x="55.6523%" y="623.50"></text></g><g><title>_int_malloc (252 samples, 0.07%)</title><rect x="55.4187%" y="645" width="0.0666%" height="15" fill="rgb(235,127,22)" fg:x="209687" fg:w="252"/><text x="55.6687%" y="655.50"></text></g><g><title>__libc_calloc (366 samples, 0.10%)</title><rect x="55.3904%" y="661" width="0.0967%" height="15" fill="rgb(244,31,31)" fg:x="209580" fg:w="366"/><text x="55.6404%" y="671.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (86 samples, 0.02%)</title><rect x="55.4871%" y="661" width="0.0227%" height="15" fill="rgb(231,43,21)" fg:x="209946" fg:w="86"/><text x="55.7371%" y="671.50"></text></g><g><title>__memset_avx512_unaligned_erms (51 samples, 0.01%)</title><rect x="55.5098%" y="661" width="0.0135%" height="15" fill="rgb(217,131,35)" fg:x="210032" fg:w="51"/><text x="55.7598%" y="671.50"></text></g><g><title>alloc::vec::from_elem (589 samples, 0.16%)</title><rect x="55.3732%" y="805" width="0.1557%" height="15" fill="rgb(221,149,4)" fg:x="209515" fg:w="589"/><text x="55.6232%" y="815.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (589 samples, 0.16%)</title><rect x="55.3732%" y="789" width="0.1557%" height="15" fill="rgb(232,170,28)" fg:x="209515" fg:w="589"/><text x="55.6232%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (589 samples, 0.16%)</title><rect x="55.3732%" y="773" width="0.1557%" height="15" fill="rgb(238,56,10)" fg:x="209515" fg:w="589"/><text x="55.6232%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (589 samples, 0.16%)</title><rect x="55.3732%" y="757" width="0.1557%" height="15" fill="rgb(235,196,14)" fg:x="209515" fg:w="589"/><text x="55.6232%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (562 samples, 0.15%)</title><rect x="55.3803%" y="741" width="0.1485%" height="15" fill="rgb(216,45,48)" fg:x="209542" fg:w="562"/><text x="55.6303%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (562 samples, 0.15%)</title><rect x="55.3803%" y="725" width="0.1485%" height="15" fill="rgb(238,213,17)" fg:x="209542" fg:w="562"/><text x="55.6303%" y="735.50"></text></g><g><title>alloc::alloc::alloc_zeroed (562 samples, 0.15%)</title><rect x="55.3803%" y="709" width="0.1485%" height="15" fill="rgb(212,13,2)" fg:x="209542" fg:w="562"/><text x="55.6303%" y="719.50"></text></g><g><title>__rdl_alloc_zeroed (562 samples, 0.15%)</title><rect x="55.3803%" y="693" width="0.1485%" height="15" fill="rgb(240,114,20)" fg:x="209542" fg:w="562"/><text x="55.6303%" y="703.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (562 samples, 0.15%)</title><rect x="55.3803%" y="677" width="0.1485%" height="15" fill="rgb(228,41,40)" fg:x="209542" fg:w="562"/><text x="55.6303%" y="687.50"></text></g><g><title>byteorder::ByteOrder::write_i32 (106 samples, 0.03%)</title><rect x="55.5963%" y="773" width="0.0280%" height="15" fill="rgb(244,132,35)" fg:x="210359" fg:w="106"/><text x="55.8463%" y="783.50"></text></g><g><title>&lt;byteorder::BigEndian as byteorder::ByteOrder&gt;::write_u32 (106 samples, 0.03%)</title><rect x="55.5963%" y="757" width="0.0280%" height="15" fill="rgb(253,189,4)" fg:x="210359" fg:w="106"/><text x="55.8463%" y="767.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_be_bytes (106 samples, 0.03%)</title><rect x="55.5963%" y="741" width="0.0280%" height="15" fill="rgb(224,37,19)" fg:x="210359" fg:w="106"/><text x="55.8463%" y="751.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_be (106 samples, 0.03%)</title><rect x="55.5963%" y="725" width="0.0280%" height="15" fill="rgb(235,223,18)" fg:x="210359" fg:w="106"/><text x="55.8463%" y="735.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (106 samples, 0.03%)</title><rect x="55.5963%" y="709" width="0.0280%" height="15" fill="rgb(235,163,25)" fg:x="210359" fg:w="106"/><text x="55.8463%" y="719.50"></text></g><g><title>byteorder::io::WriteBytesExt::write_i32 (315 samples, 0.08%)</title><rect x="55.5960%" y="789" width="0.0833%" height="15" fill="rgb(217,145,28)" fg:x="210358" fg:w="315"/><text x="55.8460%" y="799.50"></text></g><g><title>std::io::Write::write_all (208 samples, 0.05%)</title><rect x="55.6243%" y="773" width="0.0550%" height="15" fill="rgb(223,223,32)" fg:x="210465" fg:w="208"/><text x="55.8743%" y="783.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;alloc::vec::Vec&lt;u8,A&gt;&gt; as std::io::Write&gt;::write (208 samples, 0.05%)</title><rect x="55.6243%" y="757" width="0.0550%" height="15" fill="rgb(227,189,39)" fg:x="210465" fg:w="208"/><text x="55.8743%" y="767.50"></text></g><g><title>std::io::cursor::vec_write (208 samples, 0.05%)</title><rect x="55.6243%" y="741" width="0.0550%" height="15" fill="rgb(248,10,22)" fg:x="210465" fg:w="208"/><text x="55.8743%" y="751.50"></text></g><g><title>std::io::cursor::vec_write_unchecked (132 samples, 0.03%)</title><rect x="55.6444%" y="725" width="0.0349%" height="15" fill="rgb(248,46,39)" fg:x="210541" fg:w="132"/><text x="55.8944%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from (132 samples, 0.03%)</title><rect x="55.6444%" y="709" width="0.0349%" height="15" fill="rgb(248,113,48)" fg:x="210541" fg:w="132"/><text x="55.8944%" y="719.50"></text></g><g><title>core::intrinsics::copy (132 samples, 0.03%)</title><rect x="55.6444%" y="693" width="0.0349%" height="15" fill="rgb(245,16,25)" fg:x="210541" fg:w="132"/><text x="55.8944%" y="703.50"></text></g><g><title>aquatic_udp_protocol::response::Response::write (634 samples, 0.17%)</title><rect x="55.5289%" y="805" width="0.1676%" height="15" fill="rgb(249,152,16)" fg:x="210104" fg:w="634"/><text x="55.7789%" y="815.50"></text></g><g><title>byteorder::io::WriteBytesExt::write_i64 (65 samples, 0.02%)</title><rect x="55.6792%" y="789" width="0.0172%" height="15" fill="rgb(250,16,1)" fg:x="210673" fg:w="65"/><text x="55.9292%" y="799.50"></text></g><g><title>std::io::Write::write_all (43 samples, 0.01%)</title><rect x="55.6851%" y="773" width="0.0114%" height="15" fill="rgb(249,138,3)" fg:x="210695" fg:w="43"/><text x="55.9351%" y="783.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;alloc::vec::Vec&lt;u8,A&gt;&gt; as std::io::Write&gt;::write (43 samples, 0.01%)</title><rect x="55.6851%" y="757" width="0.0114%" height="15" fill="rgb(227,71,41)" fg:x="210695" fg:w="43"/><text x="55.9351%" y="767.50"></text></g><g><title>std::io::cursor::vec_write (43 samples, 0.01%)</title><rect x="55.6851%" y="741" width="0.0114%" height="15" fill="rgb(209,184,23)" fg:x="210695" fg:w="43"/><text x="55.9351%" y="751.50"></text></g><g><title>std::io::cursor::vec_write_unchecked (43 samples, 0.01%)</title><rect x="55.6851%" y="725" width="0.0114%" height="15" fill="rgb(223,215,31)" fg:x="210695" fg:w="43"/><text x="55.9351%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from (43 samples, 0.01%)</title><rect x="55.6851%" y="709" width="0.0114%" height="15" fill="rgb(210,146,28)" fg:x="210695" fg:w="43"/><text x="55.9351%" y="719.50"></text></g><g><title>core::intrinsics::copy (43 samples, 0.01%)</title><rect x="55.6851%" y="693" width="0.0114%" height="15" fill="rgb(209,183,41)" fg:x="210695" fg:w="43"/><text x="55.9351%" y="703.50"></text></g><g><title>_int_free (514 samples, 0.14%)</title><rect x="55.7384%" y="661" width="0.1358%" height="15" fill="rgb(209,224,45)" fg:x="210897" fg:w="514"/><text x="55.9884%" y="671.50"></text></g><g><title>__GI___libc_free (669 samples, 0.18%)</title><rect x="55.7020%" y="677" width="0.1768%" height="15" fill="rgb(224,209,51)" fg:x="210759" fg:w="669"/><text x="55.9520%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (685 samples, 0.18%)</title><rect x="55.7017%" y="741" width="0.1810%" height="15" fill="rgb(223,17,39)" fg:x="210758" fg:w="685"/><text x="55.9517%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (685 samples, 0.18%)</title><rect x="55.7017%" y="725" width="0.1810%" height="15" fill="rgb(234,204,37)" fg:x="210758" fg:w="685"/><text x="55.9517%" y="735.50"></text></g><g><title>__rdl_dealloc (685 samples, 0.18%)</title><rect x="55.7017%" y="709" width="0.1810%" height="15" fill="rgb(236,120,5)" fg:x="210758" fg:w="685"/><text x="55.9517%" y="719.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (685 samples, 0.18%)</title><rect x="55.7017%" y="693" width="0.1810%" height="15" fill="rgb(248,97,27)" fg:x="210758" fg:w="685"/><text x="55.9517%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::cursor::Cursor&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (701 samples, 0.19%)</title><rect x="55.7009%" y="805" width="0.1853%" height="15" fill="rgb(240,66,17)" fg:x="210755" fg:w="701"/><text x="55.9509%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (701 samples, 0.19%)</title><rect x="55.7009%" y="789" width="0.1853%" height="15" fill="rgb(210,79,3)" fg:x="210755" fg:w="701"/><text x="55.9509%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (701 samples, 0.19%)</title><rect x="55.7009%" y="773" width="0.1853%" height="15" fill="rgb(214,176,27)" fg:x="210755" fg:w="701"/><text x="55.9509%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (701 samples, 0.19%)</title><rect x="55.7009%" y="757" width="0.1853%" height="15" fill="rgb(235,185,3)" fg:x="210755" fg:w="701"/><text x="55.9509%" y="767.50"></text></g><g><title>std::io::cursor::Cursor&lt;T&gt;::new (38 samples, 0.01%)</title><rect x="55.8862%" y="805" width="0.0100%" height="15" fill="rgb(227,24,12)" fg:x="211456" fg:w="38"/><text x="56.1362%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::net::udp::UdpSocket::send_to&lt;&amp;core::net::socket_addr::SocketAddr&gt;::{{closure}}&gt; (48 samples, 0.01%)</title><rect x="55.9597%" y="789" width="0.0127%" height="15" fill="rgb(252,169,48)" fg:x="211734" fg:w="48"/><text x="56.2097%" y="799.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (45 samples, 0.01%)</title><rect x="56.0165%" y="773" width="0.0119%" height="15" fill="rgb(212,65,1)" fg:x="211949" fg:w="45"/><text x="56.2665%" y="783.50"></text></g><g><title>tokio::io::ready::Ready::intersection (115 samples, 0.03%)</title><rect x="56.1544%" y="725" width="0.0304%" height="15" fill="rgb(242,39,24)" fg:x="212471" fg:w="115"/><text x="56.4044%" y="735.50"></text></g><g><title>tokio::io::ready::Ready::from_interest (112 samples, 0.03%)</title><rect x="56.1552%" y="709" width="0.0296%" height="15" fill="rgb(249,32,23)" fg:x="212474" fg:w="112"/><text x="56.4052%" y="719.50"></text></g><g><title>tokio::io::interest::Interest::is_readable (90 samples, 0.02%)</title><rect x="56.1610%" y="693" width="0.0238%" height="15" fill="rgb(251,195,23)" fg:x="212496" fg:w="90"/><text x="56.4110%" y="703.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::future::future::Future&gt;::poll (369 samples, 0.10%)</title><rect x="56.0884%" y="741" width="0.0975%" height="15" fill="rgb(236,174,8)" fg:x="212221" fg:w="369"/><text x="56.3384%" y="751.50"></text></g><g><title>__GI___pthread_disable_asynccancel (147 samples, 0.04%)</title><rect x="56.3236%" y="613" width="0.0389%" height="15" fill="rgb(220,197,8)" fg:x="213111" fg:w="147"/><text x="56.5736%" y="623.50"></text></g><g><title>__x64_sys_sendto (620 samples, 0.16%)</title><rect x="56.4219%" y="597" width="0.1639%" height="15" fill="rgb(240,108,37)" fg:x="213483" fg:w="620"/><text x="56.6719%" y="607.50"></text></g><g><title>__sys_sendto (40 samples, 0.01%)</title><rect x="56.6148%" y="581" width="0.0106%" height="15" fill="rgb(232,176,24)" fg:x="214213" fg:w="40"/><text x="56.8648%" y="591.50"></text></g><g><title>__check_object_size.part.0 (98 samples, 0.03%)</title><rect x="57.1344%" y="517" width="0.0259%" height="15" fill="rgb(243,35,29)" fg:x="216179" fg:w="98"/><text x="57.3844%" y="527.50"></text></g><g><title>check_stack_object (69 samples, 0.02%)</title><rect x="57.1421%" y="501" width="0.0182%" height="15" fill="rgb(210,37,18)" fg:x="216208" fg:w="69"/><text x="57.3921%" y="511.50"></text></g><g><title>__check_object_size (126 samples, 0.03%)</title><rect x="57.1344%" y="533" width="0.0333%" height="15" fill="rgb(224,184,40)" fg:x="216179" fg:w="126"/><text x="57.3844%" y="543.50"></text></g><g><title>_copy_from_user (248 samples, 0.07%)</title><rect x="57.1677%" y="533" width="0.0655%" height="15" fill="rgb(236,39,29)" fg:x="216305" fg:w="248"/><text x="57.4177%" y="543.50"></text></g><g><title>move_addr_to_kernel (1,485 samples, 0.39%)</title><rect x="57.0628%" y="549" width="0.3925%" height="15" fill="rgb(232,48,39)" fg:x="215908" fg:w="1485"/><text x="57.3128%" y="559.50"></text></g><g><title>copy_user_enhanced_fast_string (840 samples, 0.22%)</title><rect x="57.2333%" y="533" width="0.2220%" height="15" fill="rgb(236,34,42)" fg:x="216553" fg:w="840"/><text x="57.4833%" y="543.50"></text></g><g><title>apparmor_socket_sendmsg (984 samples, 0.26%)</title><rect x="57.5708%" y="533" width="0.2601%" height="15" fill="rgb(243,106,37)" fg:x="217830" fg:w="984"/><text x="57.8208%" y="543.50"></text></g><g><title>__rcu_read_lock (164 samples, 0.04%)</title><rect x="57.9493%" y="517" width="0.0433%" height="15" fill="rgb(218,96,6)" fg:x="219262" fg:w="164"/><text x="58.1993%" y="527.50"></text></g><g><title>__rcu_read_unlock (68 samples, 0.02%)</title><rect x="57.9926%" y="517" width="0.0180%" height="15" fill="rgb(235,130,12)" fg:x="219426" fg:w="68"/><text x="58.2426%" y="527.50"></text></g><g><title>inet_send_prepare (44 samples, 0.01%)</title><rect x="58.0174%" y="517" width="0.0116%" height="15" fill="rgb(231,95,0)" fg:x="219520" fg:w="44"/><text x="58.2674%" y="527.50"></text></g><g><title>ip_make_skb (46 samples, 0.01%)</title><rect x="58.0291%" y="517" width="0.0122%" height="15" fill="rgb(228,12,23)" fg:x="219564" fg:w="46"/><text x="58.2791%" y="527.50"></text></g><g><title>ip_route_output_flow (54 samples, 0.01%)</title><rect x="58.0412%" y="517" width="0.0143%" height="15" fill="rgb(216,12,1)" fg:x="219610" fg:w="54"/><text x="58.2912%" y="527.50"></text></g><g><title>security_sk_classify_flow (48 samples, 0.01%)</title><rect x="58.0555%" y="517" width="0.0127%" height="15" fill="rgb(219,59,3)" fg:x="219664" fg:w="48"/><text x="58.3055%" y="527.50"></text></g><g><title>__ip_append_data (56 samples, 0.01%)</title><rect x="58.7323%" y="501" width="0.0148%" height="15" fill="rgb(215,208,46)" fg:x="222225" fg:w="56"/><text x="58.9823%" y="511.50"></text></g><g><title>__rcu_read_lock (60 samples, 0.02%)</title><rect x="58.7527%" y="501" width="0.0159%" height="15" fill="rgb(254,224,29)" fg:x="222302" fg:w="60"/><text x="59.0027%" y="511.50"></text></g><g><title>__rcu_read_unlock (54 samples, 0.01%)</title><rect x="58.7686%" y="501" width="0.0143%" height="15" fill="rgb(232,14,29)" fg:x="222362" fg:w="54"/><text x="59.0186%" y="511.50"></text></g><g><title>__check_object_size (55 samples, 0.01%)</title><rect x="59.2208%" y="469" width="0.0145%" height="15" fill="rgb(208,45,52)" fg:x="224073" fg:w="55"/><text x="59.4708%" y="479.50"></text></g><g><title>alloc_skb_with_frags (38 samples, 0.01%)</title><rect x="59.2422%" y="469" width="0.0100%" height="15" fill="rgb(234,191,28)" fg:x="224154" fg:w="38"/><text x="59.4922%" y="479.50"></text></g><g><title>__check_object_size.part.0 (42 samples, 0.01%)</title><rect x="59.2900%" y="453" width="0.0111%" height="15" fill="rgb(244,67,43)" fg:x="224335" fg:w="42"/><text x="59.5400%" y="463.50"></text></g><g><title>__check_heap_object (206 samples, 0.05%)</title><rect x="59.4956%" y="405" width="0.0544%" height="15" fill="rgb(236,189,24)" fg:x="225113" fg:w="206"/><text x="59.7456%" y="415.50"></text></g><g><title>__virt_addr_valid (473 samples, 0.13%)</title><rect x="59.5501%" y="405" width="0.1250%" height="15" fill="rgb(239,214,33)" fg:x="225319" fg:w="473"/><text x="59.8001%" y="415.50"></text></g><g><title>check_heap_object (1,244 samples, 0.33%)</title><rect x="59.3474%" y="421" width="0.3288%" height="15" fill="rgb(226,176,41)" fg:x="224552" fg:w="1244"/><text x="59.5974%" y="431.50"></text></g><g><title>__check_object_size.part.0 (1,487 samples, 0.39%)</title><rect x="59.3011%" y="437" width="0.3930%" height="15" fill="rgb(248,47,8)" fg:x="224377" fg:w="1487"/><text x="59.5511%" y="447.50"></text></g><g><title>is_vmalloc_addr (68 samples, 0.02%)</title><rect x="59.6761%" y="421" width="0.0180%" height="15" fill="rgb(218,81,44)" fg:x="225796" fg:w="68"/><text x="59.9261%" y="431.50"></text></g><g><title>__check_object_size (1,571 samples, 0.42%)</title><rect x="59.3011%" y="453" width="0.4152%" height="15" fill="rgb(213,98,6)" fg:x="224377" fg:w="1571"/><text x="59.5511%" y="463.50"></text></g><g><title>check_stack_object (57 samples, 0.02%)</title><rect x="59.7012%" y="437" width="0.0151%" height="15" fill="rgb(222,85,22)" fg:x="225891" fg:w="57"/><text x="59.9512%" y="447.50"></text></g><g><title>_copy_from_iter (469 samples, 0.12%)</title><rect x="59.7163%" y="453" width="0.1240%" height="15" fill="rgb(239,46,39)" fg:x="225948" fg:w="469"/><text x="59.9663%" y="463.50"></text></g><g><title>ip_generic_getfrag (3,554 samples, 0.94%)</title><rect x="59.2522%" y="469" width="0.9393%" height="15" fill="rgb(237,12,29)" fg:x="224192" fg:w="3554"/><text x="59.5022%" y="479.50"></text></g><g><title>copy_user_enhanced_fast_string (1,329 samples, 0.35%)</title><rect x="59.8403%" y="453" width="0.3512%" height="15" fill="rgb(214,77,8)" fg:x="226417" fg:w="1329"/><text x="60.0903%" y="463.50"></text></g><g><title>__build_skb_around (233 samples, 0.06%)</title><rect x="60.5697%" y="421" width="0.0616%" height="15" fill="rgb(217,168,37)" fg:x="229177" fg:w="233"/><text x="60.8197%" y="431.50"></text></g><g><title>__kmalloc_node_track_caller (74 samples, 0.02%)</title><rect x="60.6397%" y="421" width="0.0196%" height="15" fill="rgb(221,217,23)" fg:x="229442" fg:w="74"/><text x="60.8897%" y="431.50"></text></g><g><title>___slab_alloc (129 samples, 0.03%)</title><rect x="60.9651%" y="373" width="0.0341%" height="15" fill="rgb(243,229,36)" fg:x="230673" fg:w="129"/><text x="61.2151%" y="383.50"></text></g><g><title>memcg_slab_post_alloc_hook (87 samples, 0.02%)</title><rect x="60.9997%" y="373" width="0.0230%" height="15" fill="rgb(251,163,40)" fg:x="230804" fg:w="87"/><text x="61.2497%" y="383.50"></text></g><g><title>__kmem_cache_alloc_node (1,044 samples, 0.28%)</title><rect x="60.7494%" y="389" width="0.2759%" height="15" fill="rgb(237,222,12)" fg:x="229857" fg:w="1044"/><text x="60.9994%" y="399.50"></text></g><g><title>kmalloc_slab (40 samples, 0.01%)</title><rect x="61.0256%" y="389" width="0.0106%" height="15" fill="rgb(248,132,6)" fg:x="230902" fg:w="40"/><text x="61.2756%" y="399.50"></text></g><g><title>memset_erms (331 samples, 0.09%)</title><rect x="61.0452%" y="389" width="0.0875%" height="15" fill="rgb(227,167,50)" fg:x="230976" fg:w="331"/><text x="61.2952%" y="399.50"></text></g><g><title>__kmalloc_node_track_caller (1,662 samples, 0.44%)</title><rect x="60.6958%" y="405" width="0.4393%" height="15" fill="rgb(242,84,37)" fg:x="229654" fg:w="1662"/><text x="60.9458%" y="415.50"></text></g><g><title>__kmem_cache_alloc_node (57 samples, 0.02%)</title><rect x="61.1350%" y="405" width="0.0151%" height="15" fill="rgb(212,4,50)" fg:x="231316" fg:w="57"/><text x="61.3850%" y="415.50"></text></g><g><title>kmalloc_reserve (1,865 samples, 0.49%)</title><rect x="60.6596%" y="421" width="0.4929%" height="15" fill="rgb(230,228,32)" fg:x="229517" fg:w="1865"/><text x="60.9096%" y="431.50"></text></g><g><title>kmalloc_size_roundup (156 samples, 0.04%)</title><rect x="61.1525%" y="421" width="0.0412%" height="15" fill="rgb(248,217,23)" fg:x="231382" fg:w="156"/><text x="61.4025%" y="431.50"></text></g><g><title>kmalloc_slab (94 samples, 0.02%)</title><rect x="61.1689%" y="405" width="0.0248%" height="15" fill="rgb(238,197,32)" fg:x="231444" fg:w="94"/><text x="61.4189%" y="415.50"></text></g><g><title>___slab_alloc (69 samples, 0.02%)</title><rect x="61.3428%" y="405" width="0.0182%" height="15" fill="rgb(236,106,1)" fg:x="232102" fg:w="69"/><text x="61.5928%" y="415.50"></text></g><g><title>memcg_slab_post_alloc_hook (59 samples, 0.02%)</title><rect x="61.3623%" y="405" width="0.0156%" height="15" fill="rgb(219,228,13)" fg:x="232176" fg:w="59"/><text x="61.6123%" y="415.50"></text></g><g><title>kmem_cache_alloc_node (700 samples, 0.19%)</title><rect x="61.1987%" y="421" width="0.1850%" height="15" fill="rgb(238,30,35)" fg:x="231557" fg:w="700"/><text x="61.4487%" y="431.50"></text></g><g><title>memset_erms (98 samples, 0.03%)</title><rect x="61.3874%" y="421" width="0.0259%" height="15" fill="rgb(236,70,23)" fg:x="232271" fg:w="98"/><text x="61.6374%" y="431.50"></text></g><g><title>__alloc_skb (4,155 samples, 1.10%)</title><rect x="60.3184%" y="437" width="1.0981%" height="15" fill="rgb(249,104,48)" fg:x="228226" fg:w="4155"/><text x="60.5684%" y="447.50"></text></g><g><title>alloc_skb_with_frags (4,425 samples, 1.17%)</title><rect x="60.2830%" y="453" width="1.1695%" height="15" fill="rgb(254,117,50)" fg:x="228092" fg:w="4425"/><text x="60.5330%" y="463.50"></text></g><g><title>kmem_cache_alloc_node (48 samples, 0.01%)</title><rect x="61.4398%" y="437" width="0.0127%" height="15" fill="rgb(223,152,4)" fg:x="232469" fg:w="48"/><text x="61.6898%" y="447.50"></text></g><g><title>__ip_append_data (11,490 samples, 3.04%)</title><rect x="58.8323%" y="485" width="3.0367%" height="15" fill="rgb(245,6,2)" fg:x="222603" fg:w="11490"/><text x="59.0823%" y="495.50">__i..</text></g><g><title>sock_alloc_send_pskb (6,335 samples, 1.67%)</title><rect x="60.1947%" y="469" width="1.6743%" height="15" fill="rgb(249,150,24)" fg:x="227758" fg:w="6335"/><text x="60.4447%" y="479.50"></text></g><g><title>skb_set_owner_w (1,576 samples, 0.42%)</title><rect x="61.4524%" y="453" width="0.4165%" height="15" fill="rgb(228,185,42)" fg:x="232517" fg:w="1576"/><text x="61.7024%" y="463.50"></text></g><g><title>__ip_select_ident (1,244 samples, 0.33%)</title><rect x="62.2020%" y="469" width="0.3288%" height="15" fill="rgb(226,39,33)" fg:x="235353" fg:w="1244"/><text x="62.4520%" y="479.50"></text></g><g><title>ipv4_mtu (151 samples, 0.04%)</title><rect x="62.5313%" y="469" width="0.0399%" height="15" fill="rgb(221,166,19)" fg:x="236599" fg:w="151"/><text x="62.7813%" y="479.50"></text></g><g><title>__ip_make_skb (3,290 samples, 0.87%)</title><rect x="61.8690%" y="485" width="0.8695%" height="15" fill="rgb(209,109,2)" fg:x="234093" fg:w="3290"/><text x="62.1190%" y="495.50"></text></g><g><title>siphash_3u32 (619 samples, 0.16%)</title><rect x="62.5749%" y="469" width="0.1636%" height="15" fill="rgb(252,216,26)" fg:x="236764" fg:w="619"/><text x="62.8249%" y="479.50"></text></g><g><title>ip_generic_getfrag (113 samples, 0.03%)</title><rect x="62.7512%" y="485" width="0.0299%" height="15" fill="rgb(227,173,36)" fg:x="237431" fg:w="113"/><text x="63.0012%" y="495.50"></text></g><g><title>ip_setup_cork (313 samples, 0.08%)</title><rect x="62.7810%" y="485" width="0.0827%" height="15" fill="rgb(209,90,7)" fg:x="237544" fg:w="313"/><text x="63.0310%" y="495.50"></text></g><g><title>ipv4_mtu (121 samples, 0.03%)</title><rect x="62.8318%" y="469" width="0.0320%" height="15" fill="rgb(250,194,11)" fg:x="237736" fg:w="121"/><text x="63.0818%" y="479.50"></text></g><g><title>ipv4_mtu (67 samples, 0.02%)</title><rect x="62.8638%" y="485" width="0.0177%" height="15" fill="rgb(220,72,50)" fg:x="237857" fg:w="67"/><text x="63.1138%" y="495.50"></text></g><g><title>ip_make_skb (15,572 samples, 4.12%)</title><rect x="58.7831%" y="501" width="4.1156%" height="15" fill="rgb(222,106,48)" fg:x="222417" fg:w="15572"/><text x="59.0331%" y="511.50">ip_m..</text></g><g><title>__rcu_read_lock (38 samples, 0.01%)</title><rect x="62.9824%" y="485" width="0.0100%" height="15" fill="rgb(216,220,45)" fg:x="238306" fg:w="38"/><text x="63.2324%" y="495.50"></text></g><g><title>__rcu_read_unlock (50 samples, 0.01%)</title><rect x="62.9925%" y="485" width="0.0132%" height="15" fill="rgb(234,112,18)" fg:x="238344" fg:w="50"/><text x="63.2425%" y="495.50"></text></g><g><title>__mkroute_output (806 samples, 0.21%)</title><rect x="63.0588%" y="469" width="0.2130%" height="15" fill="rgb(206,179,9)" fg:x="238595" fg:w="806"/><text x="63.3088%" y="479.50"></text></g><g><title>fib_table_lookup (1,252 samples, 0.33%)</title><rect x="63.2829%" y="469" width="0.3309%" height="15" fill="rgb(215,115,40)" fg:x="239443" fg:w="1252"/><text x="63.5329%" y="479.50"></text></g><g><title>fib_lookup_good_nhc (418 samples, 0.11%)</title><rect x="63.5034%" y="453" width="0.1105%" height="15" fill="rgb(222,69,34)" fg:x="240277" fg:w="418"/><text x="63.7534%" y="463.50"></text></g><g><title>ip_route_output_key_hash_rcu (2,298 samples, 0.61%)</title><rect x="63.0110%" y="485" width="0.6073%" height="15" fill="rgb(209,161,10)" fg:x="238414" fg:w="2298"/><text x="63.2610%" y="495.50"></text></g><g><title>xfrm_lookup_route (258 samples, 0.07%)</title><rect x="63.6183%" y="485" width="0.0682%" height="15" fill="rgb(217,6,38)" fg:x="240712" fg:w="258"/><text x="63.8683%" y="495.50"></text></g><g><title>xfrm_lookup_with_ifid (213 samples, 0.06%)</title><rect x="63.6302%" y="469" width="0.0563%" height="15" fill="rgb(229,229,48)" fg:x="240757" fg:w="213"/><text x="63.8802%" y="479.50"></text></g><g><title>ip_route_output_flow (3,011 samples, 0.80%)</title><rect x="62.8987%" y="501" width="0.7958%" height="15" fill="rgb(225,21,28)" fg:x="237989" fg:w="3011"/><text x="63.1487%" y="511.50"></text></g><g><title>security_sk_classify_flow (115 samples, 0.03%)</title><rect x="63.7140%" y="501" width="0.0304%" height="15" fill="rgb(206,33,13)" fg:x="241074" fg:w="115"/><text x="63.9640%" y="511.50"></text></g><g><title>ip_send_check (954 samples, 0.25%)</title><rect x="64.0499%" y="453" width="0.2521%" height="15" fill="rgb(242,178,17)" fg:x="242345" fg:w="954"/><text x="64.2999%" y="463.50"></text></g><g><title>ipv4_conntrack_defrag (148 samples, 0.04%)</title><rect x="64.3020%" y="453" width="0.0391%" height="15" fill="rgb(220,162,5)" fg:x="243299" fg:w="148"/><text x="64.5520%" y="463.50"></text></g><g><title>ipv4_conntrack_local (711 samples, 0.19%)</title><rect x="64.3412%" y="453" width="0.1879%" height="15" fill="rgb(210,33,43)" fg:x="243447" fg:w="711"/><text x="64.5912%" y="463.50"></text></g><g><title>ipv4_conntrack_defrag (219 samples, 0.06%)</title><rect x="64.6028%" y="437" width="0.0579%" height="15" fill="rgb(216,116,54)" fg:x="244437" fg:w="219"/><text x="64.8528%" y="447.50"></text></g><g><title>get_l4proto (223 samples, 0.06%)</title><rect x="64.8668%" y="405" width="0.0589%" height="15" fill="rgb(249,92,24)" fg:x="245436" fg:w="223"/><text x="65.1168%" y="415.50"></text></g><g><title>hash_conntrack_raw (101 samples, 0.03%)</title><rect x="64.9258%" y="405" width="0.0267%" height="15" fill="rgb(231,189,14)" fg:x="245659" fg:w="101"/><text x="65.1758%" y="415.50"></text></g><g><title>__nf_ct_refresh_acct (57 samples, 0.02%)</title><rect x="64.9630%" y="389" width="0.0151%" height="15" fill="rgb(230,8,41)" fg:x="245800" fg:w="57"/><text x="65.2130%" y="399.50"></text></g><g><title>nf_conntrack_handle_packet (676 samples, 0.18%)</title><rect x="64.9525%" y="405" width="0.1787%" height="15" fill="rgb(249,7,27)" fg:x="245760" fg:w="676"/><text x="65.2025%" y="415.50"></text></g><g><title>nf_conntrack_udp_packet (578 samples, 0.15%)</title><rect x="64.9784%" y="389" width="0.1528%" height="15" fill="rgb(232,86,5)" fg:x="245858" fg:w="578"/><text x="65.2284%" y="399.50"></text></g><g><title>nf_ct_get_tuple (65 samples, 0.02%)</title><rect x="65.1406%" y="405" width="0.0172%" height="15" fill="rgb(224,175,18)" fg:x="246472" fg:w="65"/><text x="65.3906%" y="415.50"></text></g><g><title>__nf_conntrack_find_get (1,301 samples, 0.34%)</title><rect x="65.2498%" y="389" width="0.3438%" height="15" fill="rgb(220,129,12)" fg:x="246885" fg:w="1301"/><text x="65.4998%" y="399.50"></text></g><g><title>__rcu_read_lock (58 samples, 0.02%)</title><rect x="65.5936%" y="389" width="0.0153%" height="15" fill="rgb(210,19,36)" fg:x="248186" fg:w="58"/><text x="65.8436%" y="399.50"></text></g><g><title>hash_conntrack_raw (427 samples, 0.11%)</title><rect x="65.6095%" y="389" width="0.1129%" height="15" fill="rgb(219,96,14)" fg:x="248246" fg:w="427"/><text x="65.8595%" y="399.50"></text></g><g><title>nf_ct_get_tuple (421 samples, 0.11%)</title><rect x="65.7224%" y="389" width="0.1113%" height="15" fill="rgb(249,106,1)" fg:x="248673" fg:w="421"/><text x="65.9724%" y="399.50"></text></g><g><title>nf_conntrack_in (4,938 samples, 1.31%)</title><rect x="64.7109%" y="421" width="1.3051%" height="15" fill="rgb(249,155,20)" fg:x="244846" fg:w="4938"/><text x="64.9609%" y="431.50"></text></g><g><title>resolve_normal_ct (3,247 samples, 0.86%)</title><rect x="65.1578%" y="405" width="0.8582%" height="15" fill="rgb(244,168,9)" fg:x="246537" fg:w="3247"/><text x="65.4078%" y="415.50"></text></g><g><title>siphash_4u64 (690 samples, 0.18%)</title><rect x="65.8336%" y="389" width="0.1824%" height="15" fill="rgb(216,23,50)" fg:x="249094" fg:w="690"/><text x="66.0836%" y="399.50"></text></g><g><title>ipv4_conntrack_local (5,156 samples, 1.36%)</title><rect x="64.6607%" y="437" width="1.3627%" height="15" fill="rgb(224,219,20)" fg:x="244656" fg:w="5156"/><text x="64.9107%" y="447.50"></text></g><g><title>nf_nat_inet_fn (43 samples, 0.01%)</title><rect x="66.0287%" y="437" width="0.0114%" height="15" fill="rgb(222,156,15)" fg:x="249832" fg:w="43"/><text x="66.2787%" y="447.50"></text></g><g><title>nf_hook_slow (6,435 samples, 1.70%)</title><rect x="64.5291%" y="453" width="1.7007%" height="15" fill="rgb(231,97,17)" fg:x="244158" fg:w="6435"/><text x="64.7791%" y="463.50"></text></g><g><title>nf_nat_ipv4_local_fn (718 samples, 0.19%)</title><rect x="66.0400%" y="437" width="0.1898%" height="15" fill="rgb(218,70,48)" fg:x="249875" fg:w="718"/><text x="66.2900%" y="447.50"></text></g><g><title>nf_nat_inet_fn (362 samples, 0.10%)</title><rect x="66.1341%" y="421" width="0.0957%" height="15" fill="rgb(212,196,52)" fg:x="250231" fg:w="362"/><text x="66.3841%" y="431.50"></text></g><g><title>__ip_local_out (8,585 samples, 2.27%)</title><rect x="64.0068%" y="469" width="2.2689%" height="15" fill="rgb(243,203,18)" fg:x="242182" fg:w="8585"/><text x="64.2568%" y="479.50">_..</text></g><g><title>nf_nat_ipv4_local_fn (174 samples, 0.05%)</title><rect x="66.2298%" y="453" width="0.0460%" height="15" fill="rgb(252,125,41)" fg:x="250593" fg:w="174"/><text x="66.4798%" y="463.50"></text></g><g><title>__rcu_read_lock (88 samples, 0.02%)</title><rect x="66.2758%" y="469" width="0.0233%" height="15" fill="rgb(223,180,33)" fg:x="250767" fg:w="88"/><text x="66.5258%" y="479.50"></text></g><g><title>__rcu_read_unlock (218 samples, 0.06%)</title><rect x="66.2990%" y="469" width="0.0576%" height="15" fill="rgb(254,159,46)" fg:x="250855" fg:w="218"/><text x="66.5490%" y="479.50"></text></g><g><title>__ip_finish_output (43 samples, 0.01%)</title><rect x="66.6376%" y="453" width="0.0114%" height="15" fill="rgb(254,38,10)" fg:x="252136" fg:w="43"/><text x="66.8876%" y="463.50"></text></g><g><title>__x86_indirect_thunk_rax (62 samples, 0.02%)</title><rect x="66.6545%" y="453" width="0.0164%" height="15" fill="rgb(208,217,32)" fg:x="252200" fg:w="62"/><text x="66.9045%" y="463.50"></text></g><g><title>apparmor_ip_postroute (470 samples, 0.12%)</title><rect x="66.6709%" y="453" width="0.1242%" height="15" fill="rgb(221,120,13)" fg:x="252262" fg:w="470"/><text x="66.9209%" y="463.50"></text></g><g><title>__usecs_to_jiffies (74 samples, 0.02%)</title><rect x="67.7135%" y="357" width="0.0196%" height="15" fill="rgb(246,54,52)" fg:x="256207" fg:w="74"/><text x="67.9635%" y="367.50"></text></g><g><title>_raw_spin_lock_irq (128 samples, 0.03%)</title><rect x="67.9524%" y="325" width="0.0338%" height="15" fill="rgb(242,34,25)" fg:x="257111" fg:w="128"/><text x="68.2024%" y="335.50"></text></g><g><title>_raw_spin_unlock_irq (76 samples, 0.02%)</title><rect x="67.9863%" y="325" width="0.0201%" height="15" fill="rgb(247,209,9)" fg:x="257239" fg:w="76"/><text x="68.2363%" y="335.50"></text></g><g><title>__netif_receive_skb_core.constprop.0 (52 samples, 0.01%)</title><rect x="68.1113%" y="293" width="0.0137%" height="15" fill="rgb(228,71,26)" fg:x="257712" fg:w="52"/><text x="68.3613%" y="303.50"></text></g><g><title>__netif_receive_skb_core.constprop.0 (564 samples, 0.15%)</title><rect x="68.1850%" y="277" width="0.1491%" height="15" fill="rgb(222,145,49)" fg:x="257991" fg:w="564"/><text x="68.4350%" y="287.50"></text></g><g><title>__rcu_read_unlock (54 samples, 0.01%)</title><rect x="68.3433%" y="277" width="0.0143%" height="15" fill="rgb(218,121,17)" fg:x="258590" fg:w="54"/><text x="68.5933%" y="287.50"></text></g><g><title>__rcu_read_unlock (89 samples, 0.02%)</title><rect x="68.4670%" y="261" width="0.0235%" height="15" fill="rgb(244,50,7)" fg:x="259058" fg:w="89"/><text x="68.7170%" y="271.50"></text></g><g><title>__rcu_read_lock (67 samples, 0.02%)</title><rect x="68.5780%" y="245" width="0.0177%" height="15" fill="rgb(246,229,37)" fg:x="259478" fg:w="67"/><text x="68.8280%" y="255.50"></text></g><g><title>__rcu_read_lock (57 samples, 0.02%)</title><rect x="68.7509%" y="197" width="0.0151%" height="15" fill="rgb(225,18,5)" fg:x="260132" fg:w="57"/><text x="69.0009%" y="207.50"></text></g><g><title>__rcu_read_unlock (105 samples, 0.03%)</title><rect x="68.7659%" y="197" width="0.0278%" height="15" fill="rgb(213,204,8)" fg:x="260189" fg:w="105"/><text x="69.0159%" y="207.50"></text></g><g><title>raw_local_deliver (389 samples, 0.10%)</title><rect x="68.7493%" y="213" width="0.1028%" height="15" fill="rgb(238,103,6)" fg:x="260126" fg:w="389"/><text x="68.9993%" y="223.50"></text></g><g><title>raw_v4_input (221 samples, 0.06%)</title><rect x="68.7937%" y="197" width="0.0584%" height="15" fill="rgb(222,25,35)" fg:x="260294" fg:w="221"/><text x="69.0437%" y="207.50"></text></g><g><title>raw_v4_input (38 samples, 0.01%)</title><rect x="68.8521%" y="213" width="0.0100%" height="15" fill="rgb(213,203,35)" fg:x="260515" fg:w="38"/><text x="69.1021%" y="223.50"></text></g><g><title>__udp4_lib_lookup (49 samples, 0.01%)</title><rect x="68.8669%" y="197" width="0.0130%" height="15" fill="rgb(221,79,53)" fg:x="260571" fg:w="49"/><text x="69.1169%" y="207.50"></text></g><g><title>__udp4_lib_lookup (504 samples, 0.13%)</title><rect x="68.9491%" y="181" width="0.1332%" height="15" fill="rgb(243,200,35)" fg:x="260882" fg:w="504"/><text x="69.1991%" y="191.50"></text></g><g><title>udp4_lib_lookup2 (352 samples, 0.09%)</title><rect x="68.9893%" y="165" width="0.0930%" height="15" fill="rgb(248,60,25)" fg:x="261034" fg:w="352"/><text x="69.2393%" y="175.50"></text></g><g><title>udp4_csum_init (812 samples, 0.21%)</title><rect x="69.0826%" y="181" width="0.2146%" height="15" fill="rgb(227,53,46)" fg:x="261387" fg:w="812"/><text x="69.3326%" y="191.50"></text></g><g><title>__udp_enqueue_schedule_skb (59 samples, 0.02%)</title><rect x="69.3175%" y="149" width="0.0156%" height="15" fill="rgb(216,120,32)" fg:x="262276" fg:w="59"/><text x="69.5675%" y="159.50"></text></g><g><title>__rcu_read_lock (61 samples, 0.02%)</title><rect x="69.7666%" y="117" width="0.0161%" height="15" fill="rgb(220,134,1)" fg:x="263975" fg:w="61"/><text x="70.0166%" y="127.50"></text></g><g><title>mem_cgroup_charge_skmem (57 samples, 0.02%)</title><rect x="69.7983%" y="101" width="0.0151%" height="15" fill="rgb(237,168,5)" fg:x="264095" fg:w="57"/><text x="70.0483%" y="111.50"></text></g><g><title>__sk_mem_raise_allocated (100 samples, 0.03%)</title><rect x="69.7872%" y="117" width="0.0264%" height="15" fill="rgb(231,100,33)" fg:x="264053" fg:w="100"/><text x="70.0372%" y="127.50"></text></g><g><title>__udp_enqueue_schedule_skb (1,313 samples, 0.35%)</title><rect x="69.5173%" y="133" width="0.3470%" height="15" fill="rgb(236,177,47)" fg:x="263032" fg:w="1313"/><text x="69.7673%" y="143.50"></text></g><g><title>sock_def_readable (155 samples, 0.04%)</title><rect x="69.8234%" y="117" width="0.0410%" height="15" fill="rgb(235,7,49)" fg:x="264190" fg:w="155"/><text x="70.0734%" y="127.50"></text></g><g><title>__x86_indirect_thunk_rax (44 samples, 0.01%)</title><rect x="69.8643%" y="133" width="0.0116%" height="15" fill="rgb(232,119,22)" fg:x="264345" fg:w="44"/><text x="70.1143%" y="143.50"></text></g><g><title>__xfrm_policy_check2.constprop.0 (40 samples, 0.01%)</title><rect x="69.8760%" y="133" width="0.0106%" height="15" fill="rgb(254,73,53)" fg:x="264389" fg:w="40"/><text x="70.1260%" y="143.50"></text></g><g><title>_raw_spin_lock (493 samples, 0.13%)</title><rect x="69.8865%" y="133" width="0.1303%" height="15" fill="rgb(251,35,20)" fg:x="264429" fg:w="493"/><text x="70.1365%" y="143.50"></text></g><g><title>_raw_spin_unlock (136 samples, 0.04%)</title><rect x="70.0168%" y="133" width="0.0359%" height="15" fill="rgb(241,119,20)" fg:x="264922" fg:w="136"/><text x="70.2668%" y="143.50"></text></g><g><title>ipv4_pktinfo_prepare (380 samples, 0.10%)</title><rect x="70.0618%" y="133" width="0.1004%" height="15" fill="rgb(207,102,14)" fg:x="265092" fg:w="380"/><text x="70.3118%" y="143.50"></text></g><g><title>dst_release (281 samples, 0.07%)</title><rect x="70.0879%" y="117" width="0.0743%" height="15" fill="rgb(248,201,50)" fg:x="265191" fg:w="281"/><text x="70.3379%" y="127.50"></text></g><g><title>security_sock_rcv_skb (39 samples, 0.01%)</title><rect x="70.1622%" y="133" width="0.0103%" height="15" fill="rgb(222,185,44)" fg:x="265472" fg:w="39"/><text x="70.4122%" y="143.50"></text></g><g><title>apparmor_socket_sock_rcv_skb (106 samples, 0.03%)</title><rect x="70.2106%" y="117" width="0.0280%" height="15" fill="rgb(218,107,18)" fg:x="265655" fg:w="106"/><text x="70.4606%" y="127.50"></text></g><g><title>sk_filter_trim_cap (322 samples, 0.09%)</title><rect x="70.1725%" y="133" width="0.0851%" height="15" fill="rgb(237,177,39)" fg:x="265511" fg:w="322"/><text x="70.4225%" y="143.50"></text></g><g><title>security_sock_rcv_skb (72 samples, 0.02%)</title><rect x="70.2386%" y="117" width="0.0190%" height="15" fill="rgb(246,69,6)" fg:x="265761" fg:w="72"/><text x="70.4886%" y="127.50"></text></g><g><title>skb_pull_rcsum (53 samples, 0.01%)</title><rect x="70.2576%" y="133" width="0.0140%" height="15" fill="rgb(234,208,37)" fg:x="265833" fg:w="53"/><text x="70.5076%" y="143.50"></text></g><g><title>__udp4_lib_rcv (5,414 samples, 1.43%)</title><rect x="68.8799%" y="197" width="1.4309%" height="15" fill="rgb(225,4,6)" fg:x="260620" fg:w="5414"/><text x="69.1299%" y="207.50"></text></g><g><title>udp_unicast_rcv_skb (3,792 samples, 1.00%)</title><rect x="69.3085%" y="181" width="1.0022%" height="15" fill="rgb(233,45,0)" fg:x="262242" fg:w="3792"/><text x="69.5585%" y="191.50"></text></g><g><title>udp_queue_rcv_skb (3,762 samples, 0.99%)</title><rect x="69.3165%" y="165" width="0.9943%" height="15" fill="rgb(226,136,5)" fg:x="262272" fg:w="3762"/><text x="69.5665%" y="175.50"></text></g><g><title>udp_queue_rcv_one_skb (3,636 samples, 0.96%)</title><rect x="69.3498%" y="149" width="0.9610%" height="15" fill="rgb(211,91,47)" fg:x="262398" fg:w="3636"/><text x="69.5998%" y="159.50"></text></g><g><title>sock_def_readable (148 samples, 0.04%)</title><rect x="70.2716%" y="133" width="0.0391%" height="15" fill="rgb(242,88,51)" fg:x="265886" fg:w="148"/><text x="70.5216%" y="143.50"></text></g><g><title>udp4_csum_init (57 samples, 0.02%)</title><rect x="70.3107%" y="197" width="0.0151%" height="15" fill="rgb(230,91,28)" fg:x="266034" fg:w="57"/><text x="70.5607%" y="207.50"></text></g><g><title>ip_protocol_deliver_rcu (6,453 samples, 1.71%)</title><rect x="68.6539%" y="229" width="1.7055%" height="15" fill="rgb(254,186,29)" fg:x="259765" fg:w="6453"/><text x="68.9039%" y="239.50"></text></g><g><title>udp_rcv (5,665 samples, 1.50%)</title><rect x="68.8621%" y="213" width="1.4972%" height="15" fill="rgb(238,6,4)" fg:x="260553" fg:w="5665"/><text x="69.1121%" y="223.50"></text></g><g><title>udp_unicast_rcv_skb (127 samples, 0.03%)</title><rect x="70.3258%" y="197" width="0.0336%" height="15" fill="rgb(221,151,16)" fg:x="266091" fg:w="127"/><text x="70.5758%" y="207.50"></text></g><g><title>raw_local_deliver (40 samples, 0.01%)</title><rect x="70.3594%" y="229" width="0.0106%" height="15" fill="rgb(251,143,52)" fg:x="266218" fg:w="40"/><text x="70.6094%" y="239.50"></text></g><g><title>ip_local_deliver_finish (6,677 samples, 1.76%)</title><rect x="68.6111%" y="245" width="1.7647%" height="15" fill="rgb(206,90,15)" fg:x="259603" fg:w="6677"/><text x="68.8611%" y="255.50"></text></g><g><title>nf_confirm (192 samples, 0.05%)</title><rect x="70.3792%" y="245" width="0.0507%" height="15" fill="rgb(218,35,8)" fg:x="266293" fg:w="192"/><text x="70.6292%" y="255.50"></text></g><g><title>nf_confirm (221 samples, 0.06%)</title><rect x="70.4799%" y="229" width="0.0584%" height="15" fill="rgb(239,215,6)" fg:x="266674" fg:w="221"/><text x="70.7299%" y="239.50"></text></g><g><title>nf_nat_inet_fn (41 samples, 0.01%)</title><rect x="70.5383%" y="229" width="0.0108%" height="15" fill="rgb(245,116,39)" fg:x="266895" fg:w="41"/><text x="70.7883%" y="239.50"></text></g><g><title>nf_hook_slow (767 samples, 0.20%)</title><rect x="70.4299%" y="245" width="0.2027%" height="15" fill="rgb(242,65,28)" fg:x="266485" fg:w="767"/><text x="70.6799%" y="255.50"></text></g><g><title>nf_nat_ipv4_local_in (316 samples, 0.08%)</title><rect x="70.5491%" y="229" width="0.0835%" height="15" fill="rgb(252,132,53)" fg:x="266936" fg:w="316"/><text x="70.7991%" y="239.50"></text></g><g><title>nf_nat_inet_fn (175 samples, 0.05%)</title><rect x="70.5864%" y="213" width="0.0463%" height="15" fill="rgb(224,159,50)" fg:x="267077" fg:w="175"/><text x="70.8364%" y="223.50"></text></g><g><title>ip_local_deliver (8,248 samples, 2.18%)</title><rect x="68.5006%" y="261" width="2.1799%" height="15" fill="rgb(224,93,4)" fg:x="259185" fg:w="8248"/><text x="68.7506%" y="271.50">i..</text></g><g><title>nf_nat_ipv4_local_in (181 samples, 0.05%)</title><rect x="70.6326%" y="245" width="0.0478%" height="15" fill="rgb(208,81,34)" fg:x="267252" fg:w="181"/><text x="70.8826%" y="255.50"></text></g><g><title>ip_local_deliver_finish (75 samples, 0.02%)</title><rect x="70.6805%" y="261" width="0.0198%" height="15" fill="rgb(233,92,54)" fg:x="267433" fg:w="75"/><text x="70.9305%" y="271.50"></text></g><g><title>ip_rcv_core (309 samples, 0.08%)</title><rect x="70.7003%" y="261" width="0.0817%" height="15" fill="rgb(237,21,14)" fg:x="267508" fg:w="309"/><text x="70.9503%" y="271.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (355 samples, 0.09%)</title><rect x="70.7820%" y="261" width="0.0938%" height="15" fill="rgb(249,128,51)" fg:x="267817" fg:w="355"/><text x="71.0320%" y="271.50"></text></g><g><title>ip_sabotage_in (306 samples, 0.08%)</title><rect x="70.8758%" y="261" width="0.0809%" height="15" fill="rgb(223,129,24)" fg:x="268172" fg:w="306"/><text x="71.1258%" y="271.50"></text></g><g><title>ipv4_conntrack_defrag (138 samples, 0.04%)</title><rect x="70.9567%" y="261" width="0.0365%" height="15" fill="rgb(231,168,25)" fg:x="268478" fg:w="138"/><text x="71.2067%" y="271.50"></text></g><g><title>ipv4_conntrack_in (323 samples, 0.09%)</title><rect x="70.9931%" y="261" width="0.0854%" height="15" fill="rgb(224,39,20)" fg:x="268616" fg:w="323"/><text x="71.2431%" y="271.50"></text></g><g><title>ip_sabotage_in (69 samples, 0.02%)</title><rect x="71.1847%" y="245" width="0.0182%" height="15" fill="rgb(225,152,53)" fg:x="269341" fg:w="69"/><text x="71.4347%" y="255.50"></text></g><g><title>ipv4_conntrack_defrag (108 samples, 0.03%)</title><rect x="71.2030%" y="245" width="0.0285%" height="15" fill="rgb(252,17,24)" fg:x="269410" fg:w="108"/><text x="71.4530%" y="255.50"></text></g><g><title>ipv4_conntrack_in (282 samples, 0.07%)</title><rect x="71.2315%" y="245" width="0.0745%" height="15" fill="rgb(250,114,30)" fg:x="269518" fg:w="282"/><text x="71.4815%" y="255.50"></text></g><g><title>nf_conntrack_in (278 samples, 0.07%)</title><rect x="71.2326%" y="229" width="0.0735%" height="15" fill="rgb(229,5,4)" fg:x="269522" fg:w="278"/><text x="71.4826%" y="239.50"></text></g><g><title>nf_conntrack_in (57 samples, 0.02%)</title><rect x="71.3061%" y="245" width="0.0151%" height="15" fill="rgb(225,176,49)" fg:x="269800" fg:w="57"/><text x="71.5561%" y="255.50"></text></g><g><title>nf_hook_slow (1,381 samples, 0.36%)</title><rect x="71.0785%" y="261" width="0.3650%" height="15" fill="rgb(224,221,49)" fg:x="268939" fg:w="1381"/><text x="71.3285%" y="271.50"></text></g><g><title>nf_nat_ipv4_pre_routing (432 samples, 0.11%)</title><rect x="71.3293%" y="245" width="0.1142%" height="15" fill="rgb(253,169,27)" fg:x="269888" fg:w="432"/><text x="71.5793%" y="255.50"></text></g><g><title>nf_nat_inet_fn (255 samples, 0.07%)</title><rect x="71.3761%" y="229" width="0.0674%" height="15" fill="rgb(211,206,16)" fg:x="270065" fg:w="255"/><text x="71.6261%" y="239.50"></text></g><g><title>ip_rcv (11,869 samples, 3.14%)</title><rect x="68.3597%" y="277" width="3.1369%" height="15" fill="rgb(244,87,35)" fg:x="258652" fg:w="11869"/><text x="68.6097%" y="287.50">ip_..</text></g><g><title>nf_nat_ipv4_pre_routing (201 samples, 0.05%)</title><rect x="71.4435%" y="261" width="0.0531%" height="15" fill="rgb(246,28,10)" fg:x="270320" fg:w="201"/><text x="71.6935%" y="271.50"></text></g><g><title>__netif_receive_skb_one_core (12,879 samples, 3.40%)</title><rect x="68.1250%" y="293" width="3.4038%" height="15" fill="rgb(229,12,44)" fg:x="257764" fg:w="12879"/><text x="68.3750%" y="303.50">__n..</text></g><g><title>nf_hook_slow (90 samples, 0.02%)</title><rect x="71.5051%" y="277" width="0.0238%" height="15" fill="rgb(210,145,37)" fg:x="270553" fg:w="90"/><text x="71.7551%" y="287.50"></text></g><g><title>__netif_receive_skb (12,980 samples, 3.43%)</title><rect x="68.1005%" y="309" width="3.4305%" height="15" fill="rgb(227,112,52)" fg:x="257671" fg:w="12980"/><text x="68.3505%" y="319.50">__n..</text></g><g><title>__netif_receive_skb_one_core (61 samples, 0.02%)</title><rect x="71.5310%" y="309" width="0.0161%" height="15" fill="rgb(238,155,34)" fg:x="270651" fg:w="61"/><text x="71.7810%" y="319.50"></text></g><g><title>_raw_spin_lock_irq (716 samples, 0.19%)</title><rect x="71.5521%" y="309" width="0.1892%" height="15" fill="rgb(239,226,36)" fg:x="270731" fg:w="716"/><text x="71.8021%" y="319.50"></text></g><g><title>__napi_poll (14,705 samples, 3.89%)</title><rect x="67.9144%" y="341" width="3.8864%" height="15" fill="rgb(230,16,23)" fg:x="256967" fg:w="14705"/><text x="68.1644%" y="351.50">__na..</text></g><g><title>process_backlog (14,356 samples, 3.79%)</title><rect x="68.0066%" y="325" width="3.7942%" height="15" fill="rgb(236,171,36)" fg:x="257316" fg:w="14356"/><text x="68.2566%" y="335.50">proc..</text></g><g><title>_raw_spin_unlock_irq (225 samples, 0.06%)</title><rect x="71.7413%" y="309" width="0.0595%" height="15" fill="rgb(221,22,14)" fg:x="271447" fg:w="225"/><text x="71.9913%" y="319.50"></text></g><g><title>net_rx_action (15,607 samples, 4.12%)</title><rect x="67.7334%" y="357" width="4.1248%" height="15" fill="rgb(242,43,11)" fg:x="256282" fg:w="15607"/><text x="67.9834%" y="367.50">net_..</text></g><g><title>process_backlog (195 samples, 0.05%)</title><rect x="71.8066%" y="341" width="0.0515%" height="15" fill="rgb(232,69,23)" fg:x="271694" fg:w="195"/><text x="72.0566%" y="351.50"></text></g><g><title>__do_softirq (16,392 samples, 4.33%)</title><rect x="67.5277%" y="373" width="4.3323%" height="15" fill="rgb(216,180,54)" fg:x="255504" fg:w="16392"/><text x="67.7777%" y="383.50">__do_..</text></g><g><title>__x86_indirect_thunk_rax (38 samples, 0.01%)</title><rect x="71.8600%" y="373" width="0.0100%" height="15" fill="rgb(216,5,24)" fg:x="271896" fg:w="38"/><text x="72.1100%" y="383.50"></text></g><g><title>__local_bh_enable_ip (17,356 samples, 4.59%)</title><rect x="67.3216%" y="405" width="4.5871%" height="15" fill="rgb(225,89,9)" fg:x="254724" fg:w="17356"/><text x="67.5716%" y="415.50">__loc..</text></g><g><title>do_softirq.part.0 (17,063 samples, 4.51%)</title><rect x="67.3990%" y="389" width="4.5096%" height="15" fill="rgb(243,75,33)" fg:x="255017" fg:w="17063"/><text x="67.6490%" y="399.50">do_so..</text></g><g><title>net_rx_action (146 samples, 0.04%)</title><rect x="71.8701%" y="373" width="0.0386%" height="15" fill="rgb(247,141,45)" fg:x="271934" fg:w="146"/><text x="72.1201%" y="383.50"></text></g><g><title>do_softirq.part.0 (41 samples, 0.01%)</title><rect x="71.9086%" y="405" width="0.0108%" height="15" fill="rgb(232,177,36)" fg:x="272080" fg:w="41"/><text x="72.1586%" y="415.50"></text></g><g><title>__local_bh_enable_ip (78 samples, 0.02%)</title><rect x="72.0397%" y="373" width="0.0206%" height="15" fill="rgb(219,125,36)" fg:x="272576" fg:w="78"/><text x="72.2897%" y="383.50"></text></g><g><title>enqueue_to_backlog (49 samples, 0.01%)</title><rect x="72.5162%" y="325" width="0.0130%" height="15" fill="rgb(227,94,9)" fg:x="274379" fg:w="49"/><text x="72.7662%" y="335.50"></text></g><g><title>__raise_softirq_irqoff (57 samples, 0.02%)</title><rect x="72.5495%" y="309" width="0.0151%" height="15" fill="rgb(240,34,52)" fg:x="274505" fg:w="57"/><text x="72.7995%" y="319.50"></text></g><g><title>_raw_spin_unlock_irqrestore (46 samples, 0.01%)</title><rect x="72.5762%" y="309" width="0.0122%" height="15" fill="rgb(216,45,12)" fg:x="274606" fg:w="46"/><text x="72.8262%" y="319.50"></text></g><g><title>_raw_spin_lock_irqsave (321 samples, 0.08%)</title><rect x="72.7092%" y="293" width="0.0848%" height="15" fill="rgb(246,21,19)" fg:x="275109" fg:w="321"/><text x="72.9592%" y="303.50"></text></g><g><title>__raw_spin_lock_irqsave (320 samples, 0.08%)</title><rect x="72.7094%" y="277" width="0.0846%" height="15" fill="rgb(213,98,42)" fg:x="275110" fg:w="320"/><text x="72.9594%" y="287.50"></text></g><g><title>enqueue_to_backlog (898 samples, 0.24%)</title><rect x="72.5884%" y="309" width="0.2373%" height="15" fill="rgb(250,136,47)" fg:x="274652" fg:w="898"/><text x="72.8384%" y="319.50"></text></g><g><title>_raw_spin_unlock_irqrestore (120 samples, 0.03%)</title><rect x="72.7940%" y="293" width="0.0317%" height="15" fill="rgb(251,124,27)" fg:x="275430" fg:w="120"/><text x="73.0440%" y="303.50"></text></g><g><title>ktime_get_with_offset (165 samples, 0.04%)</title><rect x="72.8257%" y="309" width="0.0436%" height="15" fill="rgb(229,180,14)" fg:x="275550" fg:w="165"/><text x="73.0757%" y="319.50"></text></g><g><title>__netif_rx (2,105 samples, 0.56%)</title><rect x="72.4988%" y="341" width="0.5563%" height="15" fill="rgb(245,216,25)" fg:x="274313" fg:w="2105"/><text x="72.7488%" y="351.50"></text></g><g><title>netif_rx_internal (1,977 samples, 0.52%)</title><rect x="72.5326%" y="325" width="0.5225%" height="15" fill="rgb(251,43,5)" fg:x="274441" fg:w="1977"/><text x="72.7826%" y="335.50"></text></g><g><title>read_tsc (703 samples, 0.19%)</title><rect x="72.8693%" y="309" width="0.1858%" height="15" fill="rgb(250,128,24)" fg:x="275715" fg:w="703"/><text x="73.1193%" y="319.50"></text></g><g><title>__rcu_read_lock (82 samples, 0.02%)</title><rect x="73.0551%" y="341" width="0.0217%" height="15" fill="rgb(217,117,27)" fg:x="276418" fg:w="82"/><text x="73.3051%" y="351.50"></text></g><g><title>__rcu_read_unlock (38 samples, 0.01%)</title><rect x="73.0768%" y="341" width="0.0100%" height="15" fill="rgb(245,147,4)" fg:x="276500" fg:w="38"/><text x="73.3268%" y="351.50"></text></g><g><title>eth_type_trans (85 samples, 0.02%)</title><rect x="73.0898%" y="341" width="0.0225%" height="15" fill="rgb(242,201,35)" fg:x="276549" fg:w="85"/><text x="73.3398%" y="351.50"></text></g><g><title>skb_clone_tx_timestamp (158 samples, 0.04%)</title><rect x="73.1191%" y="341" width="0.0418%" height="15" fill="rgb(218,181,1)" fg:x="276660" fg:w="158"/><text x="73.3691%" y="351.50"></text></g><g><title>__wake_up_common (61 samples, 0.02%)</title><rect x="73.4896%" y="309" width="0.0161%" height="15" fill="rgb(222,6,29)" fg:x="278062" fg:w="61"/><text x="73.7396%" y="319.50"></text></g><g><title>_raw_read_unlock_irqrestore (65 samples, 0.02%)</title><rect x="73.6321%" y="277" width="0.0172%" height="15" fill="rgb(208,186,3)" fg:x="278601" fg:w="65"/><text x="73.8821%" y="287.50"></text></g><g><title>__task_rq_lock (52 samples, 0.01%)</title><rect x="74.1882%" y="165" width="0.0137%" height="15" fill="rgb(216,36,26)" fg:x="280705" fg:w="52"/><text x="74.4382%" y="175.50"></text></g><g><title>raw_spin_rq_lock_nested (48 samples, 0.01%)</title><rect x="74.1892%" y="149" width="0.0127%" height="15" fill="rgb(248,201,23)" fg:x="280709" fg:w="48"/><text x="74.4392%" y="159.50"></text></g><g><title>_raw_spin_lock (48 samples, 0.01%)</title><rect x="74.1892%" y="133" width="0.0127%" height="15" fill="rgb(251,170,31)" fg:x="280709" fg:w="48"/><text x="74.4392%" y="143.50"></text></g><g><title>native_queued_spin_lock_slowpath (48 samples, 0.01%)</title><rect x="74.1892%" y="117" width="0.0127%" height="15" fill="rgb(207,110,25)" fg:x="280709" fg:w="48"/><text x="74.4392%" y="127.50"></text></g><g><title>_raw_spin_lock_irqsave (273 samples, 0.07%)</title><rect x="74.2019%" y="165" width="0.0722%" height="15" fill="rgb(250,54,15)" fg:x="280757" fg:w="273"/><text x="74.4519%" y="175.50"></text></g><g><title>__raw_spin_lock_irqsave (273 samples, 0.07%)</title><rect x="74.2019%" y="149" width="0.0722%" height="15" fill="rgb(227,68,33)" fg:x="280757" fg:w="273"/><text x="74.4519%" y="159.50"></text></g><g><title>select_task_rq_fair (164 samples, 0.04%)</title><rect x="74.2756%" y="165" width="0.0433%" height="15" fill="rgb(238,34,41)" fg:x="281036" fg:w="164"/><text x="74.5256%" y="175.50"></text></g><g><title>wake_affine (42 samples, 0.01%)</title><rect x="74.3079%" y="149" width="0.0111%" height="15" fill="rgb(220,11,15)" fg:x="281158" fg:w="42"/><text x="74.5579%" y="159.50"></text></g><g><title>__smp_call_single_queue (224 samples, 0.06%)</title><rect x="74.3600%" y="149" width="0.0592%" height="15" fill="rgb(246,111,35)" fg:x="281355" fg:w="224"/><text x="74.6100%" y="159.50"></text></g><g><title>send_call_function_single_ipi (214 samples, 0.06%)</title><rect x="74.3626%" y="133" width="0.0566%" height="15" fill="rgb(209,88,53)" fg:x="281365" fg:w="214"/><text x="74.6126%" y="143.50"></text></g><g><title>native_send_call_func_single_ipi (117 samples, 0.03%)</title><rect x="74.3882%" y="117" width="0.0309%" height="15" fill="rgb(231,185,47)" fg:x="281462" fg:w="117"/><text x="74.6382%" y="127.50"></text></g><g><title>default_send_IPI_single_phys (115 samples, 0.03%)</title><rect x="74.3888%" y="101" width="0.0304%" height="15" fill="rgb(233,154,1)" fg:x="281464" fg:w="115"/><text x="74.6388%" y="111.50"></text></g><g><title>__default_send_IPI_dest_field (105 samples, 0.03%)</title><rect x="74.3914%" y="85" width="0.0278%" height="15" fill="rgb(225,15,46)" fg:x="281474" fg:w="105"/><text x="74.6414%" y="95.50"></text></g><g><title>llist_add_batch (149 samples, 0.04%)</title><rect x="74.4192%" y="149" width="0.0394%" height="15" fill="rgb(211,135,41)" fg:x="281579" fg:w="149"/><text x="74.6692%" y="159.50"></text></g><g><title>sched_clock_cpu (45 samples, 0.01%)</title><rect x="74.4588%" y="149" width="0.0119%" height="15" fill="rgb(208,54,0)" fg:x="281729" fg:w="45"/><text x="74.7088%" y="159.50"></text></g><g><title>sched_clock (44 samples, 0.01%)</title><rect x="74.4591%" y="133" width="0.0116%" height="15" fill="rgb(244,136,14)" fg:x="281730" fg:w="44"/><text x="74.7091%" y="143.50"></text></g><g><title>native_sched_clock (44 samples, 0.01%)</title><rect x="74.4591%" y="117" width="0.0116%" height="15" fill="rgb(241,56,14)" fg:x="281730" fg:w="44"/><text x="74.7091%" y="127.50"></text></g><g><title>ttwu_queue_wakelist (575 samples, 0.15%)</title><rect x="74.3190%" y="165" width="0.1520%" height="15" fill="rgb(205,80,24)" fg:x="281200" fg:w="575"/><text x="74.5690%" y="175.50"></text></g><g><title>try_to_wake_up (1,751 samples, 0.46%)</title><rect x="74.0084%" y="181" width="0.4628%" height="15" fill="rgb(220,57,4)" fg:x="280025" fg:w="1751"/><text x="74.2584%" y="191.50"></text></g><g><title>default_wake_function (1,771 samples, 0.47%)</title><rect x="74.0045%" y="197" width="0.4681%" height="15" fill="rgb(226,193,50)" fg:x="280010" fg:w="1771"/><text x="74.2545%" y="207.50"></text></g><g><title>__wake_up_common (1,874 samples, 0.50%)</title><rect x="73.9791%" y="229" width="0.4953%" height="15" fill="rgb(231,168,22)" fg:x="279914" fg:w="1874"/><text x="74.2291%" y="239.50"></text></g><g><title>ep_autoremove_wake_function (1,787 samples, 0.47%)</title><rect x="74.0021%" y="213" width="0.4723%" height="15" fill="rgb(254,215,14)" fg:x="280001" fg:w="1787"/><text x="74.2521%" y="223.50"></text></g><g><title>_raw_spin_lock_irqsave (179 samples, 0.05%)</title><rect x="74.4744%" y="229" width="0.0473%" height="15" fill="rgb(211,115,16)" fg:x="281788" fg:w="179"/><text x="74.7244%" y="239.50"></text></g><g><title>__raw_spin_lock_irqsave (177 samples, 0.05%)</title><rect x="74.4749%" y="213" width="0.0468%" height="15" fill="rgb(236,210,16)" fg:x="281790" fg:w="177"/><text x="74.7249%" y="223.50"></text></g><g><title>native_queued_spin_lock_slowpath (49 samples, 0.01%)</title><rect x="74.5087%" y="197" width="0.0130%" height="15" fill="rgb(221,94,12)" fg:x="281918" fg:w="49"/><text x="74.7587%" y="207.50"></text></g><g><title>__wake_up_common_lock (2,109 samples, 0.56%)</title><rect x="73.9725%" y="245" width="0.5574%" height="15" fill="rgb(235,218,49)" fg:x="279889" fg:w="2109"/><text x="74.2225%" y="255.50"></text></g><g><title>__wake_up (2,115 samples, 0.56%)</title><rect x="73.9725%" y="261" width="0.5590%" height="15" fill="rgb(217,114,14)" fg:x="279889" fg:w="2115"/><text x="74.2225%" y="271.50"></text></g><g><title>__raw_read_lock_irqsave (1,681 samples, 0.44%)</title><rect x="74.5333%" y="245" width="0.4443%" height="15" fill="rgb(216,145,22)" fg:x="282011" fg:w="1681"/><text x="74.7833%" y="255.50"></text></g><g><title>queued_read_lock_slowpath (112 samples, 0.03%)</title><rect x="74.9480%" y="229" width="0.0296%" height="15" fill="rgb(217,112,39)" fg:x="283580" fg:w="112"/><text x="75.1980%" y="239.50"></text></g><g><title>_raw_read_lock_irqsave (1,685 samples, 0.45%)</title><rect x="74.5328%" y="261" width="0.4453%" height="15" fill="rgb(225,85,32)" fg:x="282009" fg:w="1685"/><text x="74.7828%" y="271.50"></text></g><g><title>__wake_up_common (6,023 samples, 1.59%)</title><rect x="73.5314%" y="293" width="1.5918%" height="15" fill="rgb(245,209,47)" fg:x="278220" fg:w="6023"/><text x="73.7814%" y="303.50"></text></g><g><title>ep_poll_callback (5,577 samples, 1.47%)</title><rect x="73.6493%" y="277" width="1.4740%" height="15" fill="rgb(218,220,15)" fg:x="278666" fg:w="5577"/><text x="73.8993%" y="287.50"></text></g><g><title>_raw_read_unlock_irqrestore (549 samples, 0.15%)</title><rect x="74.9781%" y="261" width="0.1451%" height="15" fill="rgb(222,202,31)" fg:x="283694" fg:w="549"/><text x="75.2281%" y="271.50"></text></g><g><title>__raw_spin_lock_irqsave (2,457 samples, 0.65%)</title><rect x="75.1253%" y="277" width="0.6494%" height="15" fill="rgb(243,203,4)" fg:x="284251" fg:w="2457"/><text x="75.3753%" y="287.50"></text></g><g><title>native_queued_spin_lock_slowpath (2,074 samples, 0.55%)</title><rect x="75.2266%" y="261" width="0.5481%" height="15" fill="rgb(237,92,17)" fg:x="284634" fg:w="2074"/><text x="75.4766%" y="271.50"></text></g><g><title>_raw_spin_lock_irqsave (2,473 samples, 0.65%)</title><rect x="75.1243%" y="293" width="0.6536%" height="15" fill="rgb(231,119,7)" fg:x="284247" fg:w="2473"/><text x="75.3743%" y="303.50"></text></g><g><title>_raw_spin_unlock_irqrestore (128 samples, 0.03%)</title><rect x="75.7779%" y="293" width="0.0338%" height="15" fill="rgb(237,82,41)" fg:x="286720" fg:w="128"/><text x="76.0279%" y="303.50"></text></g><g><title>__wake_up_common_lock (8,884 samples, 2.35%)</title><rect x="73.5058%" y="309" width="2.3480%" height="15" fill="rgb(226,81,48)" fg:x="278123" fg:w="8884"/><text x="73.7558%" y="319.50">_..</text></g><g><title>ep_poll_callback (159 samples, 0.04%)</title><rect x="75.8117%" y="293" width="0.0420%" height="15" fill="rgb(234,70,51)" fg:x="286848" fg:w="159"/><text x="76.0617%" y="303.50"></text></g><g><title>loopback_xmit (13,069 samples, 3.45%)</title><rect x="72.4161%" y="357" width="3.4540%" height="15" fill="rgb(251,86,4)" fg:x="274000" fg:w="13069"/><text x="72.6661%" y="367.50">loo..</text></g><g><title>sock_wfree (10,251 samples, 2.71%)</title><rect x="73.1609%" y="341" width="2.7093%" height="15" fill="rgb(244,144,28)" fg:x="276818" fg:w="10251"/><text x="73.4109%" y="351.50">so..</text></g><g><title>__wake_up_sync_key (9,015 samples, 2.38%)</title><rect x="73.4875%" y="325" width="2.3826%" height="15" fill="rgb(232,161,39)" fg:x="278054" fg:w="9015"/><text x="73.7375%" y="335.50">__..</text></g><g><title>_raw_spin_unlock_irqrestore (50 samples, 0.01%)</title><rect x="75.8569%" y="309" width="0.0132%" height="15" fill="rgb(247,34,51)" fg:x="287019" fg:w="50"/><text x="76.1069%" y="319.50"></text></g><g><title>skb_clone_tx_timestamp (43 samples, 0.01%)</title><rect x="75.8701%" y="357" width="0.0114%" height="15" fill="rgb(225,132,2)" fg:x="287069" fg:w="43"/><text x="76.1201%" y="367.50"></text></g><g><title>dev_hard_start_xmit (14,617 samples, 3.86%)</title><rect x="72.0651%" y="373" width="3.8632%" height="15" fill="rgb(209,159,44)" fg:x="272672" fg:w="14617"/><text x="72.3151%" y="383.50">dev_..</text></g><g><title>sock_wfree (177 samples, 0.05%)</title><rect x="75.8815%" y="357" width="0.0468%" height="15" fill="rgb(251,214,1)" fg:x="287112" fg:w="177"/><text x="76.1315%" y="367.50"></text></g><g><title>loopback_xmit (247 samples, 0.07%)</title><rect x="75.9283%" y="373" width="0.0653%" height="15" fill="rgb(247,84,47)" fg:x="287289" fg:w="247"/><text x="76.1783%" y="383.50"></text></g><g><title>netdev_core_pick_tx (51 samples, 0.01%)</title><rect x="75.9935%" y="373" width="0.0135%" height="15" fill="rgb(240,111,43)" fg:x="287536" fg:w="51"/><text x="76.2435%" y="383.50"></text></g><g><title>qdisc_pkt_len_init (42 samples, 0.01%)</title><rect x="76.0128%" y="373" width="0.0111%" height="15" fill="rgb(215,214,35)" fg:x="287609" fg:w="42"/><text x="76.2628%" y="383.50"></text></g><g><title>netif_skb_features (232 samples, 0.06%)</title><rect x="76.0808%" y="357" width="0.0613%" height="15" fill="rgb(248,207,23)" fg:x="287866" fg:w="232"/><text x="76.3308%" y="367.50"></text></g><g><title>skb_network_protocol (98 samples, 0.03%)</title><rect x="76.1162%" y="341" width="0.0259%" height="15" fill="rgb(214,186,4)" fg:x="288000" fg:w="98"/><text x="76.3662%" y="351.50"></text></g><g><title>validate_xmit_skb (501 samples, 0.13%)</title><rect x="76.0329%" y="373" width="0.1324%" height="15" fill="rgb(220,133,22)" fg:x="287685" fg:w="501"/><text x="76.2829%" y="383.50"></text></g><g><title>validate_xmit_xfrm (46 samples, 0.01%)</title><rect x="76.1532%" y="357" width="0.0122%" height="15" fill="rgb(239,134,19)" fg:x="288140" fg:w="46"/><text x="76.4032%" y="367.50"></text></g><g><title>__dev_queue_xmit (16,029 samples, 4.24%)</title><rect x="71.9374%" y="389" width="4.2363%" height="15" fill="rgb(250,140,9)" fg:x="272189" fg:w="16029"/><text x="72.1874%" y="399.50">__dev..</text></g><g><title>ip_finish_output2 (34,592 samples, 9.14%)</title><rect x="67.0525%" y="421" width="9.1424%" height="15" fill="rgb(225,59,14)" fg:x="253706" fg:w="34592"/><text x="67.3025%" y="431.50">ip_finish_out..</text></g><g><title>neigh_hh_output (16,177 samples, 4.28%)</title><rect x="71.9195%" y="405" width="4.2755%" height="15" fill="rgb(214,152,51)" fg:x="272121" fg:w="16177"/><text x="72.1695%" y="415.50">neigh..</text></g><g><title>ip_skb_dst_mtu (147 samples, 0.04%)</title><rect x="76.1949%" y="421" width="0.0389%" height="15" fill="rgb(251,227,43)" fg:x="288298" fg:w="147"/><text x="76.4449%" y="431.50"></text></g><g><title>__ip_finish_output (35,105 samples, 9.28%)</title><rect x="66.9569%" y="437" width="9.2780%" height="15" fill="rgb(241,96,17)" fg:x="253344" fg:w="35105"/><text x="67.2069%" y="447.50">__ip_finish_o..</text></g><g><title>ip_finish_output (35,746 samples, 9.45%)</title><rect x="66.7954%" y="453" width="9.4474%" height="15" fill="rgb(234,198,43)" fg:x="252733" fg:w="35746"/><text x="67.0454%" y="463.50">ip_finish_outp..</text></g><g><title>nf_confirm (341 samples, 0.09%)</title><rect x="76.2428%" y="453" width="0.0901%" height="15" fill="rgb(220,108,29)" fg:x="288479" fg:w="341"/><text x="76.4928%" y="463.50"></text></g><g><title>nf_confirm (376 samples, 0.10%)</title><rect x="76.4471%" y="437" width="0.0994%" height="15" fill="rgb(226,163,33)" fg:x="289252" fg:w="376"/><text x="76.6971%" y="447.50"></text></g><g><title>nf_hook_slow (1,736 samples, 0.46%)</title><rect x="76.3329%" y="453" width="0.4588%" height="15" fill="rgb(205,194,45)" fg:x="288820" fg:w="1736"/><text x="76.5829%" y="463.50"></text></g><g><title>nf_nat_ipv4_out (902 samples, 0.24%)</title><rect x="76.5533%" y="437" width="0.2384%" height="15" fill="rgb(206,143,44)" fg:x="289654" fg:w="902"/><text x="76.8033%" y="447.50"></text></g><g><title>nf_nat_inet_fn (495 samples, 0.13%)</title><rect x="76.6609%" y="421" width="0.1308%" height="15" fill="rgb(236,136,36)" fg:x="290061" fg:w="495"/><text x="76.9109%" y="431.50"></text></g><g><title>ip_output (40,003 samples, 10.57%)</title><rect x="66.3664%" y="469" width="10.5725%" height="15" fill="rgb(249,172,42)" fg:x="251110" fg:w="40003"/><text x="66.6164%" y="479.50">ip_output</text></g><g><title>nf_nat_ipv4_out (557 samples, 0.15%)</title><rect x="76.7917%" y="453" width="0.1472%" height="15" fill="rgb(216,139,23)" fg:x="290556" fg:w="557"/><text x="77.0417%" y="463.50"></text></g><g><title>ip_send_skb (49,451 samples, 13.07%)</title><rect x="63.9022%" y="485" width="13.0695%" height="15" fill="rgb(207,166,20)" fg:x="241786" fg:w="49451"/><text x="64.1522%" y="495.50">ip_send_skb</text></g><g><title>nf_hook_slow (95 samples, 0.03%)</title><rect x="76.9466%" y="469" width="0.0251%" height="15" fill="rgb(210,209,22)" fg:x="291142" fg:w="95"/><text x="77.1966%" y="479.50"></text></g><g><title>udp_send_skb (50,114 samples, 13.24%)</title><rect x="63.7454%" y="501" width="13.2447%" height="15" fill="rgb(232,118,20)" fg:x="241193" fg:w="50114"/><text x="63.9954%" y="511.50">udp_send_skb</text></g><g><title>udp4_hwcsum (70 samples, 0.02%)</title><rect x="76.9717%" y="485" width="0.0185%" height="15" fill="rgb(238,113,42)" fg:x="291237" fg:w="70"/><text x="77.2217%" y="495.50"></text></g><g><title>inet_sendmsg (72,507 samples, 19.16%)</title><rect x="57.8364%" y="533" width="19.1630%" height="15" fill="rgb(231,42,5)" fg:x="218835" fg:w="72507"/><text x="58.0864%" y="543.50">inet_sendmsg</text></g><g><title>udp_sendmsg (71,624 samples, 18.93%)</title><rect x="58.0698%" y="517" width="18.9297%" height="15" fill="rgb(243,166,24)" fg:x="219718" fg:w="71624"/><text x="58.3198%" y="527.50">udp_sendmsg</text></g><g><title>aa_sk_perm (44 samples, 0.01%)</title><rect x="77.0785%" y="517" width="0.0116%" height="15" fill="rgb(237,226,12)" fg:x="291641" fg:w="44"/><text x="77.3285%" y="527.50"></text></g><g><title>security_socket_sendmsg (892 samples, 0.24%)</title><rect x="76.9994%" y="533" width="0.2357%" height="15" fill="rgb(229,133,24)" fg:x="291342" fg:w="892"/><text x="77.2494%" y="543.50"></text></g><g><title>apparmor_socket_sendmsg (549 samples, 0.15%)</title><rect x="77.0901%" y="517" width="0.1451%" height="15" fill="rgb(238,33,43)" fg:x="291685" fg:w="549"/><text x="77.3401%" y="527.50"></text></g><g><title>aa_sk_perm (524 samples, 0.14%)</title><rect x="77.0967%" y="501" width="0.1385%" height="15" fill="rgb(227,59,38)" fg:x="291710" fg:w="524"/><text x="77.3467%" y="511.50"></text></g><g><title>sock_sendmsg (74,871 samples, 19.79%)</title><rect x="57.4587%" y="549" width="19.7878%" height="15" fill="rgb(230,97,0)" fg:x="217406" fg:w="74871"/><text x="57.7087%" y="559.50">sock_sendmsg</text></g><g><title>udp_sendmsg (43 samples, 0.01%)</title><rect x="77.2352%" y="533" width="0.0114%" height="15" fill="rgb(250,173,50)" fg:x="292234" fg:w="43"/><text x="77.4852%" y="543.50"></text></g><g><title>__fget_light (1,626 samples, 0.43%)</title><rect x="77.2799%" y="517" width="0.4297%" height="15" fill="rgb(240,15,50)" fg:x="292403" fg:w="1626"/><text x="77.5299%" y="527.50"></text></g><g><title>__fdget (1,664 samples, 0.44%)</title><rect x="77.2799%" y="533" width="0.4398%" height="15" fill="rgb(221,93,22)" fg:x="292403" fg:w="1664"/><text x="77.5299%" y="543.50"></text></g><g><title>__sys_sendto (79,939 samples, 21.13%)</title><rect x="56.6254%" y="565" width="21.1273%" height="15" fill="rgb(245,180,53)" fg:x="214253" fg:w="79939"/><text x="56.8754%" y="575.50">__sys_sendto</text></g><g><title>sockfd_lookup_light (1,915 samples, 0.51%)</title><rect x="77.2466%" y="549" width="0.5061%" height="15" fill="rgb(231,88,51)" fg:x="292277" fg:w="1915"/><text x="77.4966%" y="559.50"></text></g><g><title>__fget_light (125 samples, 0.03%)</title><rect x="77.7196%" y="533" width="0.0330%" height="15" fill="rgb(240,58,21)" fg:x="294067" fg:w="125"/><text x="77.9696%" y="543.50"></text></g><g><title>fput (954 samples, 0.25%)</title><rect x="77.7527%" y="565" width="0.2521%" height="15" fill="rgb(237,21,10)" fg:x="294192" fg:w="954"/><text x="78.0027%" y="575.50"></text></g><g><title>import_single_range (191 samples, 0.05%)</title><rect x="78.0048%" y="565" width="0.0505%" height="15" fill="rgb(218,43,11)" fg:x="295146" fg:w="191"/><text x="78.2548%" y="575.50"></text></g><g><title>sockfd_lookup_light (69 samples, 0.02%)</title><rect x="78.0629%" y="565" width="0.0182%" height="15" fill="rgb(218,221,29)" fg:x="295366" fg:w="69"/><text x="78.3129%" y="575.50"></text></g><g><title>__x64_sys_sendto (81,183 samples, 21.46%)</title><rect x="56.6254%" y="581" width="21.4560%" height="15" fill="rgb(214,118,42)" fg:x="214253" fg:w="81183"/><text x="56.8754%" y="591.50">__x64_sys_sendto</text></g><g><title>exit_to_user_mode_prepare (43 samples, 0.01%)</title><rect x="78.0814%" y="581" width="0.0114%" height="15" fill="rgb(251,200,26)" fg:x="295436" fg:w="43"/><text x="78.3314%" y="591.50"></text></g><g><title>merge_sched_in (55 samples, 0.01%)</title><rect x="78.2154%" y="437" width="0.0145%" height="15" fill="rgb(237,101,39)" fg:x="295943" fg:w="55"/><text x="78.4654%" y="447.50"></text></g><g><title>ctx_sched_in (112 samples, 0.03%)</title><rect x="78.2144%" y="469" width="0.0296%" height="15" fill="rgb(251,117,11)" fg:x="295939" fg:w="112"/><text x="78.4644%" y="479.50"></text></g><g><title>visit_groups_merge.constprop.0.isra.0 (111 samples, 0.03%)</title><rect x="78.2147%" y="453" width="0.0293%" height="15" fill="rgb(216,223,23)" fg:x="295940" fg:w="111"/><text x="78.4647%" y="463.50"></text></g><g><title>rb_next (43 samples, 0.01%)</title><rect x="78.2326%" y="437" width="0.0114%" height="15" fill="rgb(251,54,12)" fg:x="296008" fg:w="43"/><text x="78.4826%" y="447.50"></text></g><g><title>__perf_event_task_sched_in (131 samples, 0.03%)</title><rect x="78.2141%" y="485" width="0.0346%" height="15" fill="rgb(254,176,54)" fg:x="295938" fg:w="131"/><text x="78.4641%" y="495.50"></text></g><g><title>finish_task_switch.isra.0 (140 samples, 0.04%)</title><rect x="78.2139%" y="501" width="0.0370%" height="15" fill="rgb(210,32,8)" fg:x="295937" fg:w="140"/><text x="78.4639%" y="511.50"></text></g><g><title>exit_to_user_mode_loop (146 samples, 0.04%)</title><rect x="78.2136%" y="549" width="0.0386%" height="15" fill="rgb(235,52,38)" fg:x="295936" fg:w="146"/><text x="78.4636%" y="559.50"></text></g><g><title>schedule (145 samples, 0.04%)</title><rect x="78.2139%" y="533" width="0.0383%" height="15" fill="rgb(231,4,44)" fg:x="295937" fg:w="145"/><text x="78.4639%" y="543.50"></text></g><g><title>__schedule (145 samples, 0.04%)</title><rect x="78.2139%" y="517" width="0.0383%" height="15" fill="rgb(249,2,32)" fg:x="295937" fg:w="145"/><text x="78.4639%" y="527.50"></text></g><g><title>exit_to_user_mode_prepare (506 samples, 0.13%)</title><rect x="78.1237%" y="565" width="0.1337%" height="15" fill="rgb(224,65,26)" fg:x="295596" fg:w="506"/><text x="78.3737%" y="575.50"></text></g><g><title>do_syscall_64 (82,006 samples, 21.67%)</title><rect x="56.5866%" y="597" width="21.6736%" height="15" fill="rgb(250,73,40)" fg:x="214106" fg:w="82006"/><text x="56.8366%" y="607.50">do_syscall_64</text></g><g><title>syscall_exit_to_user_mode (598 samples, 0.16%)</title><rect x="78.1021%" y="581" width="0.1580%" height="15" fill="rgb(253,177,16)" fg:x="295514" fg:w="598"/><text x="78.3521%" y="591.50"></text></g><g><title>syscall_enter_from_user_mode (42 samples, 0.01%)</title><rect x="78.2601%" y="597" width="0.0111%" height="15" fill="rgb(217,32,34)" fg:x="296112" fg:w="42"/><text x="78.5101%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (82,860 samples, 21.90%)</title><rect x="56.3788%" y="613" width="21.8993%" height="15" fill="rgb(212,7,10)" fg:x="213320" fg:w="82860"/><text x="56.6288%" y="623.50">entry_SYSCALL_64_after_hwframe</text></g><g><title>syscall_return_via_sysret (245 samples, 0.06%)</title><rect x="78.2805%" y="613" width="0.0648%" height="15" fill="rgb(245,89,8)" fg:x="296189" fg:w="245"/><text x="78.5305%" y="623.50"></text></g><g><title>__libc_sendto (83,829 samples, 22.16%)</title><rect x="56.1901%" y="629" width="22.1554%" height="15" fill="rgb(237,16,53)" fg:x="212606" fg:w="83829"/><text x="56.4401%" y="639.50">__libc_sendto</text></g><g><title>std::sys::pal::unix::cvt (143 samples, 0.04%)</title><rect x="78.3455%" y="629" width="0.0378%" height="15" fill="rgb(250,204,30)" fg:x="296435" fg:w="143"/><text x="78.5955%" y="639.50"></text></g><g><title>tokio::net::udp::UdpSocket::send_to_addr::{{closure}}::{{closure}} (83,973 samples, 22.19%)</title><rect x="56.1901%" y="741" width="22.1934%" height="15" fill="rgb(208,77,27)" fg:x="212606" fg:w="83973"/><text x="56.4401%" y="751.50">tokio::net::udp::UdpSocket::send_to..</text></g><g><title>mio::net::udp::UdpSocket::send_to (83,973 samples, 22.19%)</title><rect x="56.1901%" y="725" width="22.1934%" height="15" fill="rgb(250,204,28)" fg:x="212606" fg:w="83973"/><text x="56.4401%" y="735.50">mio::net::udp::UdpSocket::send_to</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (83,973 samples, 22.19%)</title><rect x="56.1901%" y="709" width="22.1934%" height="15" fill="rgb(244,63,21)" fg:x="212606" fg:w="83973"/><text x="56.4401%" y="719.50">mio::io_source::IoSource&lt;T&gt;::do_io</text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (83,973 samples, 22.19%)</title><rect x="56.1901%" y="693" width="22.1934%" height="15" fill="rgb(236,85,44)" fg:x="212606" fg:w="83973"/><text x="56.4401%" y="703.50">mio::sys::unix::stateless_io_source..</text></g><g><title>mio::net::udp::UdpSocket::send_to::{{closure}} (83,973 samples, 22.19%)</title><rect x="56.1901%" y="677" width="22.1934%" height="15" fill="rgb(215,98,4)" fg:x="212606" fg:w="83973"/><text x="56.4401%" y="687.50">mio::net::udp::UdpSocket::send_to::..</text></g><g><title>std::net::udp::UdpSocket::send_to (83,973 samples, 22.19%)</title><rect x="56.1901%" y="661" width="22.1934%" height="15" fill="rgb(235,38,11)" fg:x="212606" fg:w="83973"/><text x="56.4401%" y="671.50">std::net::udp::UdpSocket::send_to</text></g><g><title>std::sys_common::net::UdpSocket::send_to (83,973 samples, 22.19%)</title><rect x="56.1901%" y="645" width="22.1934%" height="15" fill="rgb(254,186,25)" fg:x="212606" fg:w="83973"/><text x="56.4401%" y="655.50">std::sys_common::net::UdpSocket::se..</text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (368 samples, 0.10%)</title><rect x="78.3896%" y="629" width="0.0973%" height="15" fill="rgb(225,55,31)" fg:x="296602" fg:w="368"/><text x="78.6396%" y="639.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (368 samples, 0.10%)</title><rect x="78.3896%" y="613" width="0.0973%" height="15" fill="rgb(211,15,21)" fg:x="296602" fg:w="368"/><text x="78.6396%" y="623.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::ops::drop::Drop&gt;::drop (420 samples, 0.11%)</title><rect x="78.3856%" y="693" width="0.1110%" height="15" fill="rgb(215,187,41)" fg:x="296587" fg:w="420"/><text x="78.6356%" y="703.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (416 samples, 0.11%)</title><rect x="78.3867%" y="677" width="0.1099%" height="15" fill="rgb(248,69,32)" fg:x="296591" fg:w="416"/><text x="78.6367%" y="687.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (415 samples, 0.11%)</title><rect x="78.3870%" y="661" width="0.1097%" height="15" fill="rgb(252,102,52)" fg:x="296592" fg:w="415"/><text x="78.6370%" y="671.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (412 samples, 0.11%)</title><rect x="78.3878%" y="645" width="0.1089%" height="15" fill="rgb(253,140,32)" fg:x="296595" fg:w="412"/><text x="78.6378%" y="655.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::send_packet::{{closure}} (85,524 samples, 22.60%)</title><rect x="55.8962%" y="805" width="22.6033%" height="15" fill="rgb(216,56,42)" fg:x="211494" fg:w="85524"/><text x="56.1462%" y="815.50">torrust_tracker::servers::udp::serve..</text></g><g><title>tokio::net::udp::UdpSocket::send_to::{{closure}} (85,236 samples, 22.53%)</title><rect x="55.9723%" y="789" width="22.5272%" height="15" fill="rgb(216,184,14)" fg:x="211782" fg:w="85236"/><text x="56.2223%" y="799.50">tokio::net::udp::UdpSocket::send_to:..</text></g><g><title>tokio::net::udp::UdpSocket::send_to_addr::{{closure}} (84,989 samples, 22.46%)</title><rect x="56.0376%" y="773" width="22.4619%" height="15" fill="rgb(237,187,27)" fg:x="212029" fg:w="84989"/><text x="56.2876%" y="783.50">tokio::net::udp::UdpSocket::send_to_..</text></g><g><title>tokio::runtime::io::registration::Registration::async_io::{{closure}} (84,879 samples, 22.43%)</title><rect x="56.0667%" y="757" width="22.4329%" height="15" fill="rgb(219,65,3)" fg:x="212139" fg:w="84879"/><text x="56.3167%" y="767.50">tokio::runtime::io::registration::Re..</text></g><g><title>tokio::runtime::io::registration::Registration::readiness::{{closure}} (439 samples, 0.12%)</title><rect x="78.3835%" y="741" width="0.1160%" height="15" fill="rgb(245,83,25)" fg:x="296579" fg:w="439"/><text x="78.6335%" y="751.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::readiness::{{closure}} (435 samples, 0.11%)</title><rect x="78.3846%" y="725" width="0.1150%" height="15" fill="rgb(214,205,45)" fg:x="296583" fg:w="435"/><text x="78.6346%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::io::scheduled_io::Readiness&gt; (432 samples, 0.11%)</title><rect x="78.3854%" y="709" width="0.1142%" height="15" fill="rgb(241,20,18)" fg:x="296586" fg:w="432"/><text x="78.6354%" y="719.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::send_response::{{closure}} (87,857 samples, 23.22%)</title><rect x="55.2802%" y="821" width="23.2199%" height="15" fill="rgb(232,163,23)" fg:x="209163" fg:w="87857"/><text x="55.5302%" y="831.50">torrust_tracker::servers::udp::server..</text></g><g><title>torrust_tracker::servers::udp::server::Udp::process_request::{{closure}} (124,991 samples, 33.03%)</title><rect x="45.4675%" y="853" width="33.0342%" height="15" fill="rgb(214,5,46)" fg:x="172035" fg:w="124991"/><text x="45.7175%" y="863.50">torrust_tracker::servers::udp::server::Udp::process_r..</text></g><g><title>torrust_tracker::servers::udp::server::Udp::process_valid_request::{{closure}} (123,165 samples, 32.55%)</title><rect x="45.9501%" y="837" width="32.5516%" height="15" fill="rgb(229,78,17)" fg:x="173861" fg:w="123165"/><text x="46.2001%" y="847.50">torrust_tracker::servers::udp::server::Udp::process_v..</text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (238 samples, 0.06%)</title><rect x="78.5527%" y="821" width="0.0629%" height="15" fill="rgb(248,89,10)" fg:x="297219" fg:w="238"/><text x="78.8027%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (238 samples, 0.06%)</title><rect x="78.5527%" y="805" width="0.0629%" height="15" fill="rgb(248,54,15)" fg:x="297219" fg:w="238"/><text x="78.8027%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_add (238 samples, 0.06%)</title><rect x="78.5527%" y="789" width="0.0629%" height="15" fill="rgb(223,116,6)" fg:x="297219" fg:w="238"/><text x="78.8027%" y="799.50"></text></g><g><title>futex_hash (62 samples, 0.02%)</title><rect x="78.6703%" y="677" width="0.0164%" height="15" fill="rgb(205,125,38)" fg:x="297664" fg:w="62"/><text x="78.9203%" y="687.50"></text></g><g><title>get_futex_key (42 samples, 0.01%)</title><rect x="78.7276%" y="661" width="0.0111%" height="15" fill="rgb(251,78,38)" fg:x="297881" fg:w="42"/><text x="78.9776%" y="671.50"></text></g><g><title>futex_wake (248 samples, 0.07%)</title><rect x="78.6867%" y="677" width="0.0655%" height="15" fill="rgb(253,78,28)" fg:x="297726" fg:w="248"/><text x="78.9367%" y="687.50"></text></g><g><title>wake_up_q (50 samples, 0.01%)</title><rect x="78.7390%" y="661" width="0.0132%" height="15" fill="rgb(209,120,3)" fg:x="297924" fg:w="50"/><text x="78.9890%" y="671.50"></text></g><g><title>try_to_wake_up (46 samples, 0.01%)</title><rect x="78.7401%" y="645" width="0.0122%" height="15" fill="rgb(238,229,9)" fg:x="297928" fg:w="46"/><text x="78.9901%" y="655.50"></text></g><g><title>do_futex (364 samples, 0.10%)</title><rect x="78.6584%" y="693" width="0.0962%" height="15" fill="rgb(253,159,18)" fg:x="297619" fg:w="364"/><text x="78.9084%" y="703.50"></text></g><g><title>__x64_sys_futex (407 samples, 0.11%)</title><rect x="78.6499%" y="709" width="0.1076%" height="15" fill="rgb(244,42,34)" fg:x="297587" fg:w="407"/><text x="78.8999%" y="719.50"></text></g><g><title>do_syscall_64 (468 samples, 0.12%)</title><rect x="78.6491%" y="725" width="0.1237%" height="15" fill="rgb(224,8,7)" fg:x="297584" fg:w="468"/><text x="78.8991%" y="735.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (496 samples, 0.13%)</title><rect x="78.6428%" y="741" width="0.1311%" height="15" fill="rgb(210,201,45)" fg:x="297560" fg:w="496"/><text x="78.8928%" y="751.50"></text></g><g><title>__GI___lll_lock_wake_private (552 samples, 0.15%)</title><rect x="78.6285%" y="757" width="0.1459%" height="15" fill="rgb(252,185,21)" fg:x="297506" fg:w="552"/><text x="78.8785%" y="767.50"></text></g><g><title>update_load_avg (52 samples, 0.01%)</title><rect x="78.9523%" y="533" width="0.0137%" height="15" fill="rgb(223,131,1)" fg:x="298731" fg:w="52"/><text x="79.2023%" y="543.50"></text></g><g><title>dequeue_entity (134 samples, 0.04%)</title><rect x="78.9314%" y="549" width="0.0354%" height="15" fill="rgb(245,141,16)" fg:x="298652" fg:w="134"/><text x="79.1814%" y="559.50"></text></g><g><title>dequeue_task (163 samples, 0.04%)</title><rect x="78.9272%" y="581" width="0.0431%" height="15" fill="rgb(229,55,45)" fg:x="298636" fg:w="163"/><text x="79.1772%" y="591.50"></text></g><g><title>dequeue_task_fair (160 samples, 0.04%)</title><rect x="78.9280%" y="565" width="0.0423%" height="15" fill="rgb(208,92,15)" fg:x="298639" fg:w="160"/><text x="79.1780%" y="575.50"></text></g><g><title>ctx_sched_out (43 samples, 0.01%)</title><rect x="78.9901%" y="533" width="0.0114%" height="15" fill="rgb(234,185,47)" fg:x="298874" fg:w="43"/><text x="79.2401%" y="543.50"></text></g><g><title>prepare_task_switch (66 samples, 0.02%)</title><rect x="78.9864%" y="581" width="0.0174%" height="15" fill="rgb(253,104,50)" fg:x="298860" fg:w="66"/><text x="79.2364%" y="591.50"></text></g><g><title>__perf_event_task_sched_out (59 samples, 0.02%)</title><rect x="78.9882%" y="565" width="0.0156%" height="15" fill="rgb(205,70,7)" fg:x="298867" fg:w="59"/><text x="79.2382%" y="575.50"></text></g><g><title>perf_event_context_sched_out (52 samples, 0.01%)</title><rect x="78.9901%" y="549" width="0.0137%" height="15" fill="rgb(240,178,43)" fg:x="298874" fg:w="52"/><text x="79.2401%" y="559.50"></text></g><g><title>psi_group_change (39 samples, 0.01%)</title><rect x="79.0075%" y="565" width="0.0103%" height="15" fill="rgb(214,112,2)" fg:x="298940" fg:w="39"/><text x="79.2575%" y="575.50"></text></g><g><title>psi_task_switch (63 samples, 0.02%)</title><rect x="79.0044%" y="581" width="0.0167%" height="15" fill="rgb(206,46,17)" fg:x="298928" fg:w="63"/><text x="79.2544%" y="591.50"></text></g><g><title>__schedule (390 samples, 0.10%)</title><rect x="78.9200%" y="597" width="0.1031%" height="15" fill="rgb(225,220,16)" fg:x="298609" fg:w="390"/><text x="79.1700%" y="607.50"></text></g><g><title>futex_wait_queue (413 samples, 0.11%)</title><rect x="78.9142%" y="629" width="0.1092%" height="15" fill="rgb(238,65,40)" fg:x="298587" fg:w="413"/><text x="79.1642%" y="639.50"></text></g><g><title>schedule (393 samples, 0.10%)</title><rect x="78.9195%" y="613" width="0.1039%" height="15" fill="rgb(230,151,21)" fg:x="298607" fg:w="393"/><text x="79.1695%" y="623.50"></text></g><g><title>futex_q_unlock (143 samples, 0.04%)</title><rect x="79.0440%" y="613" width="0.0378%" height="15" fill="rgb(218,58,49)" fg:x="299078" fg:w="143"/><text x="79.2940%" y="623.50"></text></g><g><title>futex_wait_setup (230 samples, 0.06%)</title><rect x="79.0234%" y="629" width="0.0608%" height="15" fill="rgb(219,179,14)" fg:x="299000" fg:w="230"/><text x="79.2734%" y="639.50"></text></g><g><title>do_futex (688 samples, 0.18%)</title><rect x="78.9031%" y="661" width="0.1818%" height="15" fill="rgb(223,72,1)" fg:x="298545" fg:w="688"/><text x="79.1531%" y="671.50"></text></g><g><title>futex_wait (678 samples, 0.18%)</title><rect x="78.9058%" y="645" width="0.1792%" height="15" fill="rgb(238,126,10)" fg:x="298555" fg:w="678"/><text x="79.1558%" y="655.50"></text></g><g><title>__x64_sys_futex (696 samples, 0.18%)</title><rect x="78.9021%" y="677" width="0.1839%" height="15" fill="rgb(224,206,38)" fg:x="298541" fg:w="696"/><text x="79.1521%" y="687.50"></text></g><g><title>__rseq_handle_notify_resume (45 samples, 0.01%)</title><rect x="79.0971%" y="629" width="0.0119%" height="15" fill="rgb(212,201,54)" fg:x="299279" fg:w="45"/><text x="79.3471%" y="639.50"></text></g><g><title>exit_to_user_mode_loop (57 samples, 0.02%)</title><rect x="79.0947%" y="645" width="0.0151%" height="15" fill="rgb(218,154,48)" fg:x="299270" fg:w="57"/><text x="79.3447%" y="655.50"></text></g><g><title>exit_to_user_mode_prepare (86 samples, 0.02%)</title><rect x="79.0887%" y="661" width="0.0227%" height="15" fill="rgb(232,93,24)" fg:x="299247" fg:w="86"/><text x="79.3387%" y="671.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (800 samples, 0.21%)</title><rect x="78.9005%" y="709" width="0.2114%" height="15" fill="rgb(245,30,21)" fg:x="298535" fg:w="800"/><text x="79.1505%" y="719.50"></text></g><g><title>do_syscall_64 (795 samples, 0.21%)</title><rect x="78.9018%" y="693" width="0.2101%" height="15" fill="rgb(242,148,29)" fg:x="298540" fg:w="795"/><text x="79.1518%" y="703.50"></text></g><g><title>syscall_exit_to_user_mode (93 samples, 0.02%)</title><rect x="79.0873%" y="677" width="0.0246%" height="15" fill="rgb(244,153,54)" fg:x="299242" fg:w="93"/><text x="79.3373%" y="687.50"></text></g><g><title>__GI___lll_lock_wait_private (860 samples, 0.23%)</title><rect x="78.8862%" y="741" width="0.2273%" height="15" fill="rgb(252,87,22)" fg:x="298481" fg:w="860"/><text x="79.1362%" y="751.50"></text></g><g><title>futex_wait (844 samples, 0.22%)</title><rect x="78.8904%" y="725" width="0.2231%" height="15" fill="rgb(210,51,29)" fg:x="298497" fg:w="844"/><text x="79.1404%" y="735.50"></text></g><g><title>_int_free (1,310 samples, 0.35%)</title><rect x="78.7744%" y="757" width="0.3462%" height="15" fill="rgb(242,136,47)" fg:x="298058" fg:w="1310"/><text x="79.0244%" y="767.50"></text></g><g><title>__GI___libc_free (1,905 samples, 0.50%)</title><rect x="78.6190%" y="773" width="0.5035%" height="15" fill="rgb(238,68,4)" fg:x="297470" fg:w="1905"/><text x="78.8690%" y="783.50"></text></g><g><title>syscall (58 samples, 0.02%)</title><rect x="79.1233%" y="773" width="0.0153%" height="15" fill="rgb(242,161,30)" fg:x="299378" fg:w="58"/><text x="79.3733%" y="783.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (47 samples, 0.01%)</title><rect x="79.1436%" y="773" width="0.0124%" height="15" fill="rgb(218,58,44)" fg:x="299455" fg:w="47"/><text x="79.3936%" y="783.50"></text></g><g><title>core::mem::drop (43 samples, 0.01%)</title><rect x="79.1447%" y="757" width="0.0114%" height="15" fill="rgb(252,125,32)" fg:x="299459" fg:w="43"/><text x="79.3947%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;torrust_tracker::servers::udp::server::Udp::process_request::{{closure}},alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt;&gt; (43 samples, 0.01%)</title><rect x="79.1447%" y="741" width="0.0114%" height="15" fill="rgb(219,178,0)" fg:x="299459" fg:w="43"/><text x="79.3947%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Cell&lt;torrust_tracker::servers::udp::server::Udp::process_request::{{closure}},alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt; (43 samples, 0.01%)</title><rect x="79.1447%" y="725" width="0.0114%" height="15" fill="rgb(213,152,7)" fg:x="299459" fg:w="43"/><text x="79.3947%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Core&lt;torrust_tracker::servers::udp::server::Udp::process_request::{{closure}},alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt; (43 samples, 0.01%)</title><rect x="79.1447%" y="709" width="0.0114%" height="15" fill="rgb(249,109,34)" fg:x="299459" fg:w="43"/><text x="79.3947%" y="719.50"></text></g><g><title>tokio::runtime::task::raw::drop_abort_handle (152 samples, 0.04%)</title><rect x="79.1561%" y="773" width="0.0402%" height="15" fill="rgb(232,96,21)" fg:x="299502" fg:w="152"/><text x="79.4061%" y="783.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (139 samples, 0.04%)</title><rect x="79.1595%" y="757" width="0.0367%" height="15" fill="rgb(228,27,39)" fg:x="299515" fg:w="139"/><text x="79.4095%" y="767.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (139 samples, 0.04%)</title><rect x="79.1595%" y="741" width="0.0367%" height="15" fill="rgb(211,182,52)" fg:x="299515" fg:w="139"/><text x="79.4095%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::abort::AbortHandle&gt; (2,198 samples, 0.58%)</title><rect x="78.6156%" y="821" width="0.5809%" height="15" fill="rgb(234,178,38)" fg:x="297457" fg:w="2198"/><text x="78.8656%" y="831.50"></text></g><g><title>&lt;tokio::runtime::task::abort::AbortHandle as core::ops::drop::Drop&gt;::drop (2,198 samples, 0.58%)</title><rect x="78.6156%" y="805" width="0.5809%" height="15" fill="rgb(221,111,3)" fg:x="297457" fg:w="2198"/><text x="78.8656%" y="815.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::drop_abort_handle (2,195 samples, 0.58%)</title><rect x="78.6164%" y="789" width="0.5801%" height="15" fill="rgb(228,175,21)" fg:x="297460" fg:w="2195"/><text x="78.8664%" y="799.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (58 samples, 0.02%)</title><rect x="79.1965%" y="789" width="0.0153%" height="15" fill="rgb(228,174,43)" fg:x="299655" fg:w="58"/><text x="79.4465%" y="799.50"></text></g><g><title>tokio::runtime::task::raw::drop_join_handle_slow (47 samples, 0.01%)</title><rect x="79.2192%" y="773" width="0.0124%" height="15" fill="rgb(211,191,0)" fg:x="299741" fg:w="47"/><text x="79.4692%" y="783.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow (43 samples, 0.01%)</title><rect x="79.2203%" y="757" width="0.0114%" height="15" fill="rgb(253,117,3)" fg:x="299745" fg:w="43"/><text x="79.4703%" y="767.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::drop_join_handle_slow (78 samples, 0.02%)</title><rect x="79.2118%" y="789" width="0.0206%" height="15" fill="rgb(241,127,19)" fg:x="299713" fg:w="78"/><text x="79.4618%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::join::JoinHandle&lt;()&gt;&gt; (199 samples, 0.05%)</title><rect x="79.1965%" y="821" width="0.0526%" height="15" fill="rgb(218,103,12)" fg:x="299655" fg:w="199"/><text x="79.4465%" y="831.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (199 samples, 0.05%)</title><rect x="79.1965%" y="805" width="0.0526%" height="15" fill="rgb(236,214,43)" fg:x="299655" fg:w="199"/><text x="79.4465%" y="815.50"></text></g><g><title>tokio::runtime::task::state::State::drop_join_handle_fast (47 samples, 0.01%)</title><rect x="79.2367%" y="789" width="0.0124%" height="15" fill="rgb(244,144,19)" fg:x="299807" fg:w="47"/><text x="79.4867%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (47 samples, 0.01%)</title><rect x="79.2367%" y="773" width="0.0124%" height="15" fill="rgb(246,188,10)" fg:x="299807" fg:w="47"/><text x="79.4867%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (47 samples, 0.01%)</title><rect x="79.2367%" y="757" width="0.0124%" height="15" fill="rgb(212,193,33)" fg:x="299807" fg:w="47"/><text x="79.4867%" y="767.50"></text></g><g><title>ringbuf::ring_buffer::base::RbBase::is_full (57 samples, 0.02%)</title><rect x="79.2491%" y="805" width="0.0151%" height="15" fill="rgb(241,51,29)" fg:x="299854" fg:w="57"/><text x="79.4991%" y="815.50"></text></g><g><title>ringbuf::ring_buffer::base::RbBase::vacant_len (47 samples, 0.01%)</title><rect x="79.2517%" y="789" width="0.0124%" height="15" fill="rgb(211,58,19)" fg:x="299864" fg:w="47"/><text x="79.5017%" y="799.50"></text></g><g><title>ringbuf::consumer::Consumer&lt;T,R&gt;::advance (64 samples, 0.02%)</title><rect x="79.2650%" y="773" width="0.0169%" height="15" fill="rgb(229,111,26)" fg:x="299914" fg:w="64"/><text x="79.5150%" y="783.50"></text></g><g><title>ringbuf::ring_buffer::base::RbRead::advance_head (64 samples, 0.02%)</title><rect x="79.2650%" y="757" width="0.0169%" height="15" fill="rgb(213,115,40)" fg:x="299914" fg:w="64"/><text x="79.5150%" y="767.50"></text></g><g><title>ringbuf::consumer::Consumer&lt;T,R&gt;::as_uninit_slices (38 samples, 0.01%)</title><rect x="79.2819%" y="773" width="0.0100%" height="15" fill="rgb(209,56,44)" fg:x="299978" fg:w="38"/><text x="79.5319%" y="783.50"></text></g><g><title>ringbuf::ring_buffer::base::RbRead::occupied_slices (38 samples, 0.01%)</title><rect x="79.2819%" y="757" width="0.0100%" height="15" fill="rgb(230,108,32)" fg:x="299978" fg:w="38"/><text x="79.5319%" y="767.50"></text></g><g><title>ringbuf::ring_buffer::rb::Rb::pop (114 samples, 0.03%)</title><rect x="79.2642%" y="805" width="0.0301%" height="15" fill="rgb(216,165,31)" fg:x="299911" fg:w="114"/><text x="79.5142%" y="815.50"></text></g><g><title>ringbuf::consumer::Consumer&lt;T,R&gt;::pop (114 samples, 0.03%)</title><rect x="79.2642%" y="789" width="0.0301%" height="15" fill="rgb(218,122,21)" fg:x="299911" fg:w="114"/><text x="79.5142%" y="799.50"></text></g><g><title>ringbuf::producer::Producer&lt;T,R&gt;::advance (46 samples, 0.01%)</title><rect x="79.2953%" y="773" width="0.0122%" height="15" fill="rgb(223,224,47)" fg:x="300029" fg:w="46"/><text x="79.5453%" y="783.50"></text></g><g><title>ringbuf::ring_buffer::base::RbWrite::advance_tail (46 samples, 0.01%)</title><rect x="79.2953%" y="757" width="0.0122%" height="15" fill="rgb(238,102,44)" fg:x="300029" fg:w="46"/><text x="79.5453%" y="767.50"></text></g><g><title>ringbuf::ring_buffer::rb::Rb::push_overwrite (260 samples, 0.07%)</title><rect x="79.2491%" y="821" width="0.0687%" height="15" fill="rgb(236,46,40)" fg:x="299854" fg:w="260"/><text x="79.4991%" y="831.50"></text></g><g><title>ringbuf::ring_buffer::rb::Rb::push (89 samples, 0.02%)</title><rect x="79.2943%" y="805" width="0.0235%" height="15" fill="rgb(247,202,50)" fg:x="300025" fg:w="89"/><text x="79.5443%" y="815.50"></text></g><g><title>ringbuf::producer::Producer&lt;T,R&gt;::push (89 samples, 0.02%)</title><rect x="79.2943%" y="789" width="0.0235%" height="15" fill="rgb(209,99,20)" fg:x="300025" fg:w="89"/><text x="79.5443%" y="799.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::is_complete (52 samples, 0.01%)</title><rect x="79.3178%" y="805" width="0.0137%" height="15" fill="rgb(252,27,34)" fg:x="300114" fg:w="52"/><text x="79.5678%" y="815.50"></text></g><g><title>tokio::runtime::task::abort::AbortHandle::is_finished (58 samples, 0.02%)</title><rect x="79.3178%" y="821" width="0.0153%" height="15" fill="rgb(215,206,23)" fg:x="300114" fg:w="58"/><text x="79.5678%" y="831.50"></text></g><g><title>tokio::runtime::task::join::JoinHandle&lt;T&gt;::abort_handle (122 samples, 0.03%)</title><rect x="79.3331%" y="821" width="0.0322%" height="15" fill="rgb(212,135,36)" fg:x="300172" fg:w="122"/><text x="79.5831%" y="831.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::ref_inc (122 samples, 0.03%)</title><rect x="79.3331%" y="805" width="0.0322%" height="15" fill="rgb(240,189,1)" fg:x="300172" fg:w="122"/><text x="79.5831%" y="815.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (122 samples, 0.03%)</title><rect x="79.3331%" y="789" width="0.0322%" height="15" fill="rgb(242,56,20)" fg:x="300172" fg:w="122"/><text x="79.5831%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (44 samples, 0.01%)</title><rect x="79.3538%" y="773" width="0.0116%" height="15" fill="rgb(247,132,33)" fg:x="300250" fg:w="44"/><text x="79.6038%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_add (44 samples, 0.01%)</title><rect x="79.3538%" y="757" width="0.0116%" height="15" fill="rgb(208,149,11)" fg:x="300250" fg:w="44"/><text x="79.6038%" y="767.50"></text></g><g><title>dequeue_entity (83 samples, 0.02%)</title><rect x="79.5002%" y="453" width="0.0219%" height="15" fill="rgb(211,33,11)" fg:x="300804" fg:w="83"/><text x="79.7502%" y="463.50"></text></g><g><title>dequeue_task_fair (94 samples, 0.02%)</title><rect x="79.4986%" y="469" width="0.0248%" height="15" fill="rgb(221,29,38)" fg:x="300798" fg:w="94"/><text x="79.7486%" y="479.50"></text></g><g><title>dequeue_task (97 samples, 0.03%)</title><rect x="79.4981%" y="485" width="0.0256%" height="15" fill="rgb(206,182,49)" fg:x="300796" fg:w="97"/><text x="79.7481%" y="495.50"></text></g><g><title>psi_task_switch (52 samples, 0.01%)</title><rect x="79.5417%" y="485" width="0.0137%" height="15" fill="rgb(216,140,1)" fg:x="300961" fg:w="52"/><text x="79.7917%" y="495.50"></text></g><g><title>futex_wait_queue (252 samples, 0.07%)</title><rect x="79.4912%" y="533" width="0.0666%" height="15" fill="rgb(232,57,40)" fg:x="300770" fg:w="252"/><text x="79.7412%" y="543.50"></text></g><g><title>schedule (238 samples, 0.06%)</title><rect x="79.4949%" y="517" width="0.0629%" height="15" fill="rgb(224,186,18)" fg:x="300784" fg:w="238"/><text x="79.7449%" y="527.50"></text></g><g><title>__schedule (236 samples, 0.06%)</title><rect x="79.4954%" y="501" width="0.0624%" height="15" fill="rgb(215,121,11)" fg:x="300786" fg:w="236"/><text x="79.7454%" y="511.50"></text></g><g><title>futex_q_lock (38 samples, 0.01%)</title><rect x="79.5699%" y="517" width="0.0100%" height="15" fill="rgb(245,147,10)" fg:x="301068" fg:w="38"/><text x="79.8199%" y="527.50"></text></g><g><title>futex_q_unlock (146 samples, 0.04%)</title><rect x="79.5800%" y="517" width="0.0386%" height="15" fill="rgb(238,153,13)" fg:x="301106" fg:w="146"/><text x="79.8300%" y="527.50"></text></g><g><title>futex_wait_setup (238 samples, 0.06%)</title><rect x="79.5578%" y="533" width="0.0629%" height="15" fill="rgb(233,108,0)" fg:x="301022" fg:w="238"/><text x="79.8078%" y="543.50"></text></g><g><title>do_futex (520 samples, 0.14%)</title><rect x="79.4840%" y="565" width="0.1374%" height="15" fill="rgb(212,157,17)" fg:x="300743" fg:w="520"/><text x="79.7340%" y="575.50"></text></g><g><title>futex_wait (510 samples, 0.13%)</title><rect x="79.4867%" y="549" width="0.1348%" height="15" fill="rgb(225,213,38)" fg:x="300753" fg:w="510"/><text x="79.7367%" y="559.50"></text></g><g><title>__x64_sys_futex (538 samples, 0.14%)</title><rect x="79.4801%" y="581" width="0.1422%" height="15" fill="rgb(248,16,11)" fg:x="300728" fg:w="538"/><text x="79.7301%" y="591.50"></text></g><g><title>exit_to_user_mode_prepare (51 samples, 0.01%)</title><rect x="79.6233%" y="565" width="0.0135%" height="15" fill="rgb(241,33,4)" fg:x="301270" fg:w="51"/><text x="79.8733%" y="575.50"></text></g><g><title>do_syscall_64 (595 samples, 0.16%)</title><rect x="79.4798%" y="597" width="0.1573%" height="15" fill="rgb(222,26,43)" fg:x="300727" fg:w="595"/><text x="79.7298%" y="607.50"></text></g><g><title>syscall_exit_to_user_mode (52 samples, 0.01%)</title><rect x="79.6233%" y="581" width="0.0137%" height="15" fill="rgb(243,29,36)" fg:x="301270" fg:w="52"/><text x="79.8733%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (603 samples, 0.16%)</title><rect x="79.4782%" y="613" width="0.1594%" height="15" fill="rgb(241,9,27)" fg:x="300721" fg:w="603"/><text x="79.7282%" y="623.50"></text></g><g><title>__GI___lll_lock_wait_private (649 samples, 0.17%)</title><rect x="79.4679%" y="645" width="0.1715%" height="15" fill="rgb(205,117,26)" fg:x="300682" fg:w="649"/><text x="79.7179%" y="655.50"></text></g><g><title>futex_wait (634 samples, 0.17%)</title><rect x="79.4719%" y="629" width="0.1676%" height="15" fill="rgb(209,80,39)" fg:x="300697" fg:w="634"/><text x="79.7219%" y="639.50"></text></g><g><title>futex_hash (66 samples, 0.02%)</title><rect x="79.6860%" y="565" width="0.0174%" height="15" fill="rgb(239,155,6)" fg:x="301507" fg:w="66"/><text x="79.9360%" y="575.50"></text></g><g><title>_raw_spin_lock (46 samples, 0.01%)</title><rect x="79.7444%" y="549" width="0.0122%" height="15" fill="rgb(212,104,12)" fg:x="301728" fg:w="46"/><text x="79.9944%" y="559.50"></text></g><g><title>native_queued_spin_lock_slowpath (46 samples, 0.01%)</title><rect x="79.7444%" y="533" width="0.0122%" height="15" fill="rgb(234,204,3)" fg:x="301728" fg:w="46"/><text x="79.9944%" y="543.50"></text></g><g><title>get_futex_key (40 samples, 0.01%)</title><rect x="79.7639%" y="549" width="0.0106%" height="15" fill="rgb(251,218,7)" fg:x="301802" fg:w="40"/><text x="80.0139%" y="559.50"></text></g><g><title>__smp_call_single_queue (57 samples, 0.02%)</title><rect x="79.8615%" y="501" width="0.0151%" height="15" fill="rgb(221,81,32)" fg:x="302171" fg:w="57"/><text x="80.1115%" y="511.50"></text></g><g><title>send_call_function_single_ipi (54 samples, 0.01%)</title><rect x="79.8623%" y="485" width="0.0143%" height="15" fill="rgb(214,152,26)" fg:x="302174" fg:w="54"/><text x="80.1123%" y="495.50"></text></g><g><title>try_to_wake_up (404 samples, 0.11%)</title><rect x="79.7816%" y="533" width="0.1068%" height="15" fill="rgb(223,22,3)" fg:x="301869" fg:w="404"/><text x="80.0316%" y="543.50"></text></g><g><title>ttwu_queue_wakelist (116 samples, 0.03%)</title><rect x="79.8578%" y="517" width="0.0307%" height="15" fill="rgb(207,174,7)" fg:x="302157" fg:w="116"/><text x="80.1078%" y="527.50"></text></g><g><title>futex_wake (701 samples, 0.19%)</title><rect x="79.7034%" y="565" width="0.1853%" height="15" fill="rgb(224,19,52)" fg:x="301573" fg:w="701"/><text x="79.9534%" y="575.50"></text></g><g><title>wake_up_q (423 samples, 0.11%)</title><rect x="79.7769%" y="549" width="0.1118%" height="15" fill="rgb(228,24,14)" fg:x="301851" fg:w="423"/><text x="80.0269%" y="559.50"></text></g><g><title>do_futex (823 samples, 0.22%)</title><rect x="79.6738%" y="581" width="0.2175%" height="15" fill="rgb(230,153,43)" fg:x="301461" fg:w="823"/><text x="79.9238%" y="591.50"></text></g><g><title>__x64_sys_futex (865 samples, 0.23%)</title><rect x="79.6656%" y="597" width="0.2286%" height="15" fill="rgb(231,106,12)" fg:x="301430" fg:w="865"/><text x="79.9156%" y="607.50"></text></g><g><title>exit_to_user_mode_prepare (56 samples, 0.01%)</title><rect x="79.9008%" y="581" width="0.0148%" height="15" fill="rgb(215,92,2)" fg:x="302320" fg:w="56"/><text x="80.1508%" y="591.50"></text></g><g><title>do_syscall_64 (958 samples, 0.25%)</title><rect x="79.6627%" y="613" width="0.2532%" height="15" fill="rgb(249,143,25)" fg:x="301419" fg:w="958"/><text x="79.9127%" y="623.50"></text></g><g><title>syscall_exit_to_user_mode (63 samples, 0.02%)</title><rect x="79.8993%" y="597" width="0.0167%" height="15" fill="rgb(252,7,35)" fg:x="302314" fg:w="63"/><text x="80.1493%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (992 samples, 0.26%)</title><rect x="79.6556%" y="629" width="0.2622%" height="15" fill="rgb(216,69,40)" fg:x="301392" fg:w="992"/><text x="79.9056%" y="639.50"></text></g><g><title>__GI___lll_lock_wake_private (1,063 samples, 0.28%)</title><rect x="79.6395%" y="645" width="0.2809%" height="15" fill="rgb(240,36,33)" fg:x="301331" fg:w="1063"/><text x="79.8895%" y="655.50"></text></g><g><title>malloc_consolidate (690 samples, 0.18%)</title><rect x="80.0975%" y="629" width="0.1824%" height="15" fill="rgb(231,128,14)" fg:x="303064" fg:w="690"/><text x="80.3475%" y="639.50"></text></g><g><title>tokio::runtime::io::registration::Registration::readiness::{{closure}} (779 samples, 0.21%)</title><rect x="80.2798%" y="629" width="0.2059%" height="15" fill="rgb(245,143,14)" fg:x="303754" fg:w="779"/><text x="80.5298%" y="639.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::readiness::{{closure}} (192 samples, 0.05%)</title><rect x="80.4350%" y="613" width="0.0507%" height="15" fill="rgb(222,130,28)" fg:x="304341" fg:w="192"/><text x="80.6850%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::io::scheduled_io::Readiness&gt; (162 samples, 0.04%)</title><rect x="80.4429%" y="597" width="0.0428%" height="15" fill="rgb(212,10,48)" fg:x="304371" fg:w="162"/><text x="80.6929%" y="607.50"></text></g><g><title>_int_malloc (2,142 samples, 0.57%)</title><rect x="79.9204%" y="645" width="0.5661%" height="15" fill="rgb(254,118,45)" fg:x="302394" fg:w="2142"/><text x="80.1704%" y="655.50"></text></g><g><title>__GI___libc_malloc (3,995 samples, 1.06%)</title><rect x="79.4399%" y="661" width="1.0558%" height="15" fill="rgb(228,6,45)" fg:x="300576" fg:w="3995"/><text x="79.6899%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4,013 samples, 1.06%)</title><rect x="79.4367%" y="805" width="1.0606%" height="15" fill="rgb(241,18,35)" fg:x="300564" fg:w="4013"/><text x="79.6867%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,013 samples, 1.06%)</title><rect x="79.4367%" y="789" width="1.0606%" height="15" fill="rgb(227,214,53)" fg:x="300564" fg:w="4013"/><text x="79.6867%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,006 samples, 1.06%)</title><rect x="79.4386%" y="773" width="1.0588%" height="15" fill="rgb(224,107,51)" fg:x="300571" fg:w="4006"/><text x="79.6886%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (4,006 samples, 1.06%)</title><rect x="79.4386%" y="757" width="1.0588%" height="15" fill="rgb(248,60,28)" fg:x="300571" fg:w="4006"/><text x="79.6886%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,004 samples, 1.06%)</title><rect x="79.4391%" y="741" width="1.0582%" height="15" fill="rgb(249,101,23)" fg:x="300573" fg:w="4004"/><text x="79.6891%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4,004 samples, 1.06%)</title><rect x="79.4391%" y="725" width="1.0582%" height="15" fill="rgb(228,51,19)" fg:x="300573" fg:w="4004"/><text x="79.6891%" y="735.50"></text></g><g><title>alloc::alloc::alloc (4,004 samples, 1.06%)</title><rect x="79.4391%" y="709" width="1.0582%" height="15" fill="rgb(213,20,6)" fg:x="300573" fg:w="4004"/><text x="79.6891%" y="719.50"></text></g><g><title>__rdl_alloc (4,004 samples, 1.06%)</title><rect x="79.4391%" y="693" width="1.0582%" height="15" fill="rgb(212,124,10)" fg:x="300573" fg:w="4004"/><text x="79.6891%" y="703.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (4,004 samples, 1.06%)</title><rect x="79.4391%" y="677" width="1.0582%" height="15" fill="rgb(248,3,40)" fg:x="300573" fg:w="4004"/><text x="79.6891%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::net::udp::UdpSocket&gt;&gt; (175 samples, 0.05%)</title><rect x="80.4973%" y="805" width="0.0463%" height="15" fill="rgb(223,178,23)" fg:x="304577" fg:w="175"/><text x="80.7473%" y="815.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (175 samples, 0.05%)</title><rect x="80.4973%" y="789" width="0.0463%" height="15" fill="rgb(240,132,45)" fg:x="304577" fg:w="175"/><text x="80.7473%" y="799.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::future::future::Future&gt;::poll (189 samples, 0.05%)</title><rect x="80.5491%" y="773" width="0.0500%" height="15" fill="rgb(245,164,36)" fg:x="304773" fg:w="189"/><text x="80.7991%" y="783.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::ops::drop::Drop&gt;::drop (81 samples, 0.02%)</title><rect x="80.6128%" y="725" width="0.0214%" height="15" fill="rgb(231,188,53)" fg:x="305014" fg:w="81"/><text x="80.8628%" y="735.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (51 samples, 0.01%)</title><rect x="80.6208%" y="709" width="0.0135%" height="15" fill="rgb(237,198,39)" fg:x="305044" fg:w="51"/><text x="80.8708%" y="719.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (47 samples, 0.01%)</title><rect x="80.6218%" y="693" width="0.0124%" height="15" fill="rgb(223,120,35)" fg:x="305048" fg:w="47"/><text x="80.8718%" y="703.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (46 samples, 0.01%)</title><rect x="80.6221%" y="677" width="0.0122%" height="15" fill="rgb(253,107,49)" fg:x="305049" fg:w="46"/><text x="80.8721%" y="687.50"></text></g><g><title>tokio::runtime::io::registration::Registration::readiness::{{closure}} (42 samples, 0.01%)</title><rect x="80.6348%" y="725" width="0.0111%" height="15" fill="rgb(216,44,31)" fg:x="305097" fg:w="42"/><text x="80.8848%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::io::scheduled_io::Readiness&gt; (144 samples, 0.04%)</title><rect x="80.6086%" y="741" width="0.0381%" height="15" fill="rgb(253,87,21)" fg:x="304998" fg:w="144"/><text x="80.8586%" y="751.50"></text></g><g><title>tokio::net::udp::UdpSocket::readable::{{closure}} (392 samples, 0.10%)</title><rect x="80.5436%" y="805" width="0.1036%" height="15" fill="rgb(226,18,2)" fg:x="304752" fg:w="392"/><text x="80.7936%" y="815.50"></text></g><g><title>tokio::net::udp::UdpSocket::ready::{{closure}} (390 samples, 0.10%)</title><rect x="80.5441%" y="789" width="0.1031%" height="15" fill="rgb(216,8,46)" fg:x="304754" fg:w="390"/><text x="80.7941%" y="799.50"></text></g><g><title>tokio::runtime::io::registration::Registration::readiness::{{closure}} (181 samples, 0.05%)</title><rect x="80.5994%" y="773" width="0.0478%" height="15" fill="rgb(226,140,39)" fg:x="304963" fg:w="181"/><text x="80.8494%" y="783.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::readiness::{{closure}} (172 samples, 0.05%)</title><rect x="80.6017%" y="757" width="0.0455%" height="15" fill="rgb(221,194,54)" fg:x="304972" fg:w="172"/><text x="80.8517%" y="767.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::future::future::Future&gt;::poll (135 samples, 0.04%)</title><rect x="80.7812%" y="773" width="0.0357%" height="15" fill="rgb(213,92,11)" fg:x="305651" fg:w="135"/><text x="81.0312%" y="783.50"></text></g><g><title>__GI___pthread_disable_asynccancel (75 samples, 0.02%)</title><rect x="80.9517%" y="613" width="0.0198%" height="15" fill="rgb(229,162,46)" fg:x="306296" fg:w="75"/><text x="81.2017%" y="623.50"></text></g><g><title>__x64_sys_recvfrom (179 samples, 0.05%)</title><rect x="80.9844%" y="597" width="0.0473%" height="15" fill="rgb(214,111,36)" fg:x="306420" fg:w="179"/><text x="81.2344%" y="607.50"></text></g><g><title>__sys_recvfrom (40 samples, 0.01%)</title><rect x="81.0357%" y="581" width="0.0106%" height="15" fill="rgb(207,6,21)" fg:x="306614" fg:w="40"/><text x="81.2857%" y="591.50"></text></g><g><title>__get_user_4 (139 samples, 0.04%)</title><rect x="81.2580%" y="549" width="0.0367%" height="15" fill="rgb(213,127,38)" fg:x="307455" fg:w="139"/><text x="81.5080%" y="559.50"></text></g><g><title>__put_user_nocheck_4 (875 samples, 0.23%)</title><rect x="81.2947%" y="549" width="0.2313%" height="15" fill="rgb(238,118,32)" fg:x="307594" fg:w="875"/><text x="81.5447%" y="559.50"></text></g><g><title>__check_object_size.part.0 (127 samples, 0.03%)</title><rect x="81.5595%" y="517" width="0.0336%" height="15" fill="rgb(240,139,39)" fg:x="308596" fg:w="127"/><text x="81.8095%" y="527.50"></text></g><g><title>check_stack_object (103 samples, 0.03%)</title><rect x="81.5659%" y="501" width="0.0272%" height="15" fill="rgb(235,10,37)" fg:x="308620" fg:w="103"/><text x="81.8159%" y="511.50"></text></g><g><title>__check_object_size (158 samples, 0.04%)</title><rect x="81.5595%" y="533" width="0.0418%" height="15" fill="rgb(249,171,38)" fg:x="308596" fg:w="158"/><text x="81.8095%" y="543.50"></text></g><g><title>move_addr_to_user (955 samples, 0.25%)</title><rect x="81.5376%" y="549" width="0.2524%" height="15" fill="rgb(242,144,32)" fg:x="308513" fg:w="955"/><text x="81.7876%" y="559.50"></text></g><g><title>copy_user_enhanced_fast_string (704 samples, 0.19%)</title><rect x="81.6039%" y="533" width="0.1861%" height="15" fill="rgb(217,117,21)" fg:x="308764" fg:w="704"/><text x="81.8539%" y="543.50"></text></g><g><title>apparmor_socket_recvmsg (80 samples, 0.02%)</title><rect x="81.8154%" y="533" width="0.0211%" height="15" fill="rgb(249,87,1)" fg:x="309564" fg:w="80"/><text x="82.0654%" y="543.50"></text></g><g><title>__check_object_size (53 samples, 0.01%)</title><rect x="81.8587%" y="517" width="0.0140%" height="15" fill="rgb(248,196,48)" fg:x="309728" fg:w="53"/><text x="82.1087%" y="527.50"></text></g><g><title>__skb_recv_udp (43 samples, 0.01%)</title><rect x="81.8727%" y="517" width="0.0114%" height="15" fill="rgb(251,206,33)" fg:x="309781" fg:w="43"/><text x="82.1227%" y="527.50"></text></g><g><title>__check_object_size.part.0 (45 samples, 0.01%)</title><rect x="82.2813%" y="501" width="0.0119%" height="15" fill="rgb(232,141,28)" fg:x="311327" fg:w="45"/><text x="82.5313%" y="511.50"></text></g><g><title>__check_heap_object (63 samples, 0.02%)</title><rect x="82.3310%" y="469" width="0.0167%" height="15" fill="rgb(209,167,14)" fg:x="311515" fg:w="63"/><text x="82.5810%" y="479.50"></text></g><g><title>__check_heap_object (309 samples, 0.08%)</title><rect x="82.4682%" y="453" width="0.0817%" height="15" fill="rgb(225,11,50)" fg:x="312034" fg:w="309"/><text x="82.7182%" y="463.50"></text></g><g><title>__virt_addr_valid (486 samples, 0.13%)</title><rect x="82.5498%" y="453" width="0.1284%" height="15" fill="rgb(209,50,20)" fg:x="312343" fg:w="486"/><text x="82.7998%" y="463.50"></text></g><g><title>check_heap_object (1,230 samples, 0.33%)</title><rect x="82.3537%" y="469" width="0.3251%" height="15" fill="rgb(212,17,46)" fg:x="311601" fg:w="1230"/><text x="82.6037%" y="479.50"></text></g><g><title>__check_object_size.part.0 (1,550 samples, 0.41%)</title><rect x="82.2932%" y="485" width="0.4097%" height="15" fill="rgb(216,101,39)" fg:x="311372" fg:w="1550"/><text x="82.5432%" y="495.50"></text></g><g><title>is_vmalloc_addr (91 samples, 0.02%)</title><rect x="82.6788%" y="469" width="0.0241%" height="15" fill="rgb(212,228,48)" fg:x="312831" fg:w="91"/><text x="82.9288%" y="479.50"></text></g><g><title>__check_object_size (1,697 samples, 0.45%)</title><rect x="82.2932%" y="501" width="0.4485%" height="15" fill="rgb(250,6,50)" fg:x="311372" fg:w="1697"/><text x="82.5432%" y="511.50"></text></g><g><title>check_stack_object (122 samples, 0.03%)</title><rect x="82.7095%" y="485" width="0.0322%" height="15" fill="rgb(250,160,48)" fg:x="312947" fg:w="122"/><text x="82.9595%" y="495.50"></text></g><g><title>__skb_try_recv_from_queue (265 samples, 0.07%)</title><rect x="82.8155%" y="485" width="0.0700%" height="15" fill="rgb(244,216,33)" fg:x="313348" fg:w="265"/><text x="83.0655%" y="495.50"></text></g><g><title>_raw_spin_lock (56 samples, 0.01%)</title><rect x="82.8855%" y="485" width="0.0148%" height="15" fill="rgb(207,157,5)" fg:x="313613" fg:w="56"/><text x="83.1355%" y="495.50"></text></g><g><title>_raw_spin_unlock_bh (498 samples, 0.13%)</title><rect x="82.9008%" y="485" width="0.1316%" height="15" fill="rgb(228,199,8)" fg:x="313671" fg:w="498"/><text x="83.1508%" y="495.50"></text></g><g><title>__local_bh_enable_ip (441 samples, 0.12%)</title><rect x="82.9159%" y="469" width="0.1166%" height="15" fill="rgb(227,80,20)" fg:x="313728" fg:w="441"/><text x="83.1659%" y="479.50"></text></g><g><title>__refill_stock (48 samples, 0.01%)</title><rect x="83.0679%" y="421" width="0.0127%" height="15" fill="rgb(222,9,33)" fg:x="314303" fg:w="48"/><text x="83.3179%" y="431.50"></text></g><g><title>drain_stock (42 samples, 0.01%)</title><rect x="83.0694%" y="405" width="0.0111%" height="15" fill="rgb(239,44,28)" fg:x="314309" fg:w="42"/><text x="83.3194%" y="415.50"></text></g><g><title>__sk_mem_reduce_allocated (74 samples, 0.02%)</title><rect x="83.0612%" y="469" width="0.0196%" height="15" fill="rgb(249,187,43)" fg:x="314278" fg:w="74"/><text x="83.3112%" y="479.50"></text></g><g><title>mem_cgroup_uncharge_skmem (74 samples, 0.02%)</title><rect x="83.0612%" y="453" width="0.0196%" height="15" fill="rgb(216,141,28)" fg:x="314278" fg:w="74"/><text x="83.3112%" y="463.50"></text></g><g><title>refill_stock (61 samples, 0.02%)</title><rect x="83.0647%" y="437" width="0.0161%" height="15" fill="rgb(230,154,53)" fg:x="314291" fg:w="61"/><text x="83.3147%" y="447.50"></text></g><g><title>__skb_recv_udp (1,279 samples, 0.34%)</title><rect x="82.7438%" y="501" width="0.3380%" height="15" fill="rgb(227,82,4)" fg:x="313077" fg:w="1279"/><text x="82.9938%" y="511.50"></text></g><g><title>udp_rmem_release (187 samples, 0.05%)</title><rect x="83.0324%" y="485" width="0.0494%" height="15" fill="rgb(220,107,16)" fg:x="314169" fg:w="187"/><text x="83.2824%" y="495.50"></text></g><g><title>_copy_to_iter (408 samples, 0.11%)</title><rect x="83.0845%" y="501" width="0.1078%" height="15" fill="rgb(207,187,2)" fg:x="314366" fg:w="408"/><text x="83.3345%" y="511.50"></text></g><g><title>_raw_spin_lock_bh (603 samples, 0.16%)</title><rect x="83.1971%" y="501" width="0.1594%" height="15" fill="rgb(210,162,52)" fg:x="314792" fg:w="603"/><text x="83.4471%" y="511.50"></text></g><g><title>_raw_spin_unlock_bh (38 samples, 0.01%)</title><rect x="83.3567%" y="501" width="0.0100%" height="15" fill="rgb(217,216,49)" fg:x="315396" fg:w="38"/><text x="83.6067%" y="511.50"></text></g><g><title>copy_user_enhanced_fast_string (2,356 samples, 0.62%)</title><rect x="83.3668%" y="501" width="0.6227%" height="15" fill="rgb(218,146,49)" fg:x="315434" fg:w="2356"/><text x="83.6168%" y="511.50"></text></g><g><title>cmpxchg_double_slab.constprop.0.isra.0 (1,503 samples, 0.40%)</title><rect x="84.5260%" y="421" width="0.3972%" height="15" fill="rgb(216,55,40)" fg:x="319820" fg:w="1503"/><text x="84.7760%" y="431.50"></text></g><g><title>__slab_free (3,062 samples, 0.81%)</title><rect x="84.1337%" y="437" width="0.8093%" height="15" fill="rgb(208,196,21)" fg:x="318336" fg:w="3062"/><text x="84.3837%" y="447.50"></text></g><g><title>put_cpu_partial (75 samples, 0.02%)</title><rect x="84.9232%" y="421" width="0.0198%" height="15" fill="rgb(242,117,42)" fg:x="321323" fg:w="75"/><text x="85.1732%" y="431.50"></text></g><g><title>__unfreeze_partials (70 samples, 0.02%)</title><rect x="84.9245%" y="405" width="0.0185%" height="15" fill="rgb(210,11,23)" fg:x="321328" fg:w="70"/><text x="85.1745%" y="415.50"></text></g><g><title>cache_from_obj (75 samples, 0.02%)</title><rect x="84.9433%" y="437" width="0.0198%" height="15" fill="rgb(217,110,2)" fg:x="321399" fg:w="75"/><text x="85.1933%" y="447.50"></text></g><g><title>cmpxchg_double_slab.constprop.0.isra.0 (85 samples, 0.02%)</title><rect x="84.9631%" y="437" width="0.0225%" height="15" fill="rgb(229,77,54)" fg:x="321474" fg:w="85"/><text x="85.2131%" y="447.50"></text></g><g><title>kfree_skbmem (3,703 samples, 0.98%)</title><rect x="84.0071%" y="469" width="0.9787%" height="15" fill="rgb(218,53,16)" fg:x="317857" fg:w="3703"/><text x="84.2571%" y="479.50"></text></g><g><title>kmem_cache_free (3,665 samples, 0.97%)</title><rect x="84.0172%" y="453" width="0.9686%" height="15" fill="rgb(215,38,13)" fg:x="317895" fg:w="3665"/><text x="84.2672%" y="463.50"></text></g><g><title>cmpxchg_double_slab.constprop.0.isra.0 (404 samples, 0.11%)</title><rect x="85.7258%" y="389" width="0.1068%" height="15" fill="rgb(235,42,18)" fg:x="324360" fg:w="404"/><text x="85.9758%" y="399.50"></text></g><g><title>__slab_free (1,382 samples, 0.37%)</title><rect x="85.4824%" y="405" width="0.3653%" height="15" fill="rgb(219,66,54)" fg:x="323439" fg:w="1382"/><text x="85.7324%" y="415.50"></text></g><g><title>put_cpu_partial (57 samples, 0.02%)</title><rect x="85.8326%" y="389" width="0.0151%" height="15" fill="rgb(222,205,4)" fg:x="324764" fg:w="57"/><text x="86.0826%" y="399.50"></text></g><g><title>__unfreeze_partials (54 samples, 0.01%)</title><rect x="85.8334%" y="373" width="0.0143%" height="15" fill="rgb(227,213,46)" fg:x="324767" fg:w="54"/><text x="86.0834%" y="383.50"></text></g><g><title>__kmem_cache_free (1,536 samples, 0.41%)</title><rect x="85.4462%" y="421" width="0.4060%" height="15" fill="rgb(250,145,42)" fg:x="323302" fg:w="1536"/><text x="85.6962%" y="431.50"></text></g><g><title>__consume_stateless_skb (7,001 samples, 1.85%)</title><rect x="84.0037%" y="485" width="1.8503%" height="15" fill="rgb(219,15,2)" fg:x="317844" fg:w="7001"/><text x="84.2537%" y="495.50">_..</text></g><g><title>skb_release_data (3,272 samples, 0.86%)</title><rect x="84.9893%" y="469" width="0.8648%" height="15" fill="rgb(231,181,52)" fg:x="321573" fg:w="3272"/><text x="85.2393%" y="479.50"></text></g><g><title>skb_free_head (1,626 samples, 0.43%)</title><rect x="85.4243%" y="453" width="0.4297%" height="15" fill="rgb(235,1,42)" fg:x="323219" fg:w="1626"/><text x="85.6743%" y="463.50"></text></g><g><title>kfree (1,609 samples, 0.43%)</title><rect x="85.4288%" y="437" width="0.4252%" height="15" fill="rgb(249,88,27)" fg:x="323236" fg:w="1609"/><text x="85.6788%" y="447.50"></text></g><g><title>skb_consume_udp (7,079 samples, 1.87%)</title><rect x="83.9894%" y="501" width="1.8709%" height="15" fill="rgb(235,145,16)" fg:x="317790" fg:w="7079"/><text x="84.2394%" y="511.50">s..</text></g><g><title>inet_recvmsg (15,244 samples, 4.03%)</title><rect x="81.8365%" y="533" width="4.0289%" height="15" fill="rgb(237,114,19)" fg:x="309644" fg:w="15244"/><text x="82.0865%" y="543.50">inet..</text></g><g><title>udp_recvmsg (15,018 samples, 3.97%)</title><rect x="81.8962%" y="517" width="3.9691%" height="15" fill="rgb(238,51,50)" fg:x="309870" fg:w="15018"/><text x="82.1462%" y="527.50">udp_..</text></g><g><title>security_socket_recvmsg (249 samples, 0.07%)</title><rect x="85.8654%" y="533" width="0.0658%" height="15" fill="rgb(205,194,25)" fg:x="324888" fg:w="249"/><text x="86.1154%" y="543.50"></text></g><g><title>apparmor_socket_recvmsg (171 samples, 0.05%)</title><rect x="85.8860%" y="517" width="0.0452%" height="15" fill="rgb(215,203,17)" fg:x="324966" fg:w="171"/><text x="86.1360%" y="527.50"></text></g><g><title>aa_sk_perm (146 samples, 0.04%)</title><rect x="85.8926%" y="501" width="0.0386%" height="15" fill="rgb(233,112,49)" fg:x="324991" fg:w="146"/><text x="86.1426%" y="511.50"></text></g><g><title>sock_recvmsg (15,648 samples, 4.14%)</title><rect x="81.7961%" y="549" width="4.1356%" height="15" fill="rgb(241,130,26)" fg:x="309491" fg:w="15648"/><text x="82.0461%" y="559.50">sock_..</text></g><g><title>__fget_light (1,217 samples, 0.32%)</title><rect x="85.9608%" y="517" width="0.3216%" height="15" fill="rgb(252,223,19)" fg:x="325249" fg:w="1217"/><text x="86.2108%" y="527.50"></text></g><g><title>__fdget (1,243 samples, 0.33%)</title><rect x="85.9608%" y="533" width="0.3285%" height="15" fill="rgb(211,95,25)" fg:x="325249" fg:w="1243"/><text x="86.2108%" y="543.50"></text></g><g><title>__sys_recvfrom (19,882 samples, 5.25%)</title><rect x="81.0463%" y="565" width="5.2547%" height="15" fill="rgb(251,182,27)" fg:x="306654" fg:w="19882"/><text x="81.2963%" y="575.50">__sys_..</text></g><g><title>sockfd_lookup_light (1,397 samples, 0.37%)</title><rect x="85.9317%" y="549" width="0.3692%" height="15" fill="rgb(238,24,4)" fg:x="325139" fg:w="1397"/><text x="86.1817%" y="559.50"></text></g><g><title>__fget_light (44 samples, 0.01%)</title><rect x="86.2893%" y="533" width="0.0116%" height="15" fill="rgb(224,220,25)" fg:x="326492" fg:w="44"/><text x="86.5393%" y="543.50"></text></g><g><title>fput (482 samples, 0.13%)</title><rect x="86.3009%" y="565" width="0.1274%" height="15" fill="rgb(239,133,26)" fg:x="326536" fg:w="482"/><text x="86.5509%" y="575.50"></text></g><g><title>import_single_range (71 samples, 0.02%)</title><rect x="86.4283%" y="565" width="0.0188%" height="15" fill="rgb(211,94,48)" fg:x="327018" fg:w="71"/><text x="86.6783%" y="575.50"></text></g><g><title>__x64_sys_recvfrom (20,466 samples, 5.41%)</title><rect x="81.0463%" y="581" width="5.4090%" height="15" fill="rgb(239,87,6)" fg:x="306654" fg:w="20466"/><text x="81.2963%" y="591.50">__x64_s..</text></g><g><title>exit_to_user_mode_prepare (364 samples, 0.10%)</title><rect x="86.4904%" y="565" width="0.0962%" height="15" fill="rgb(227,62,0)" fg:x="327253" fg:w="364"/><text x="86.7404%" y="575.50"></text></g><g><title>do_syscall_64 (21,043 samples, 5.56%)</title><rect x="81.0325%" y="597" width="5.5615%" height="15" fill="rgb(211,226,4)" fg:x="306602" fg:w="21043"/><text x="81.2825%" y="607.50">do_sysc..</text></g><g><title>syscall_exit_to_user_mode (485 samples, 0.13%)</title><rect x="86.4659%" y="581" width="0.1282%" height="15" fill="rgb(253,38,52)" fg:x="327160" fg:w="485"/><text x="86.7159%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (21,266 samples, 5.62%)</title><rect x="80.9805%" y="613" width="5.6204%" height="15" fill="rgb(229,126,40)" fg:x="306405" fg:w="21266"/><text x="81.2305%" y="623.50">entry_S..</text></g><g><title>syscall_return_via_sysret (39 samples, 0.01%)</title><rect x="86.6033%" y="613" width="0.0103%" height="15" fill="rgb(229,165,44)" fg:x="327680" fg:w="39"/><text x="86.8533%" y="623.50"></text></g><g><title>__libc_recvfrom (21,805 samples, 5.76%)</title><rect x="80.8510%" y="629" width="5.7629%" height="15" fill="rgb(247,95,47)" fg:x="305915" fg:w="21805"/><text x="81.1010%" y="639.50">__libc_..</text></g><g><title>tokio::net::udp::UdpSocket::recv_buf_from::{{closure}}::{{closure}} (21,997 samples, 5.81%)</title><rect x="80.8211%" y="773" width="5.8136%" height="15" fill="rgb(216,140,30)" fg:x="305802" fg:w="21997"/><text x="81.0711%" y="783.50">tokio::..</text></g><g><title>mio::net::udp::UdpSocket::recv_from (21,912 samples, 5.79%)</title><rect x="80.8436%" y="757" width="5.7912%" height="15" fill="rgb(246,214,8)" fg:x="305887" fg:w="21912"/><text x="81.0936%" y="767.50">mio::ne..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (21,912 samples, 5.79%)</title><rect x="80.8436%" y="741" width="5.7912%" height="15" fill="rgb(227,224,15)" fg:x="305887" fg:w="21912"/><text x="81.0936%" y="751.50">mio::io..</text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (21,912 samples, 5.79%)</title><rect x="80.8436%" y="725" width="5.7912%" height="15" fill="rgb(233,175,4)" fg:x="305887" fg:w="21912"/><text x="81.0936%" y="735.50">mio::sy..</text></g><g><title>mio::net::udp::UdpSocket::recv_from::{{closure}} (21,912 samples, 5.79%)</title><rect x="80.8436%" y="709" width="5.7912%" height="15" fill="rgb(221,66,45)" fg:x="305887" fg:w="21912"/><text x="81.0936%" y="719.50">mio::ne..</text></g><g><title>std::net::udp::UdpSocket::recv_from (21,912 samples, 5.79%)</title><rect x="80.8436%" y="693" width="5.7912%" height="15" fill="rgb(221,178,18)" fg:x="305887" fg:w="21912"/><text x="81.0936%" y="703.50">std::ne..</text></g><g><title>std::sys_common::net::UdpSocket::recv_from (21,912 samples, 5.79%)</title><rect x="80.8436%" y="677" width="5.7912%" height="15" fill="rgb(213,81,29)" fg:x="305887" fg:w="21912"/><text x="81.0936%" y="687.50">std::sy..</text></g><g><title>std::sys::pal::unix::net::Socket::recv_from (21,912 samples, 5.79%)</title><rect x="80.8436%" y="661" width="5.7912%" height="15" fill="rgb(220,89,49)" fg:x="305887" fg:w="21912"/><text x="81.0936%" y="671.50">std::sy..</text></g><g><title>std::sys::pal::unix::net::Socket::recv_from_with_flags (21,912 samples, 5.79%)</title><rect x="80.8436%" y="645" width="5.7912%" height="15" fill="rgb(227,60,33)" fg:x="305887" fg:w="21912"/><text x="81.0936%" y="655.50">std::sy..</text></g><g><title>std::sys_common::net::sockaddr_to_addr (45 samples, 0.01%)</title><rect x="86.6228%" y="629" width="0.0119%" height="15" fill="rgb(205,113,12)" fg:x="327754" fg:w="45"/><text x="86.8728%" y="639.50"></text></g><g><title>__GI___libc_malloc (49 samples, 0.01%)</title><rect x="86.6654%" y="725" width="0.0130%" height="15" fill="rgb(211,32,1)" fg:x="327915" fg:w="49"/><text x="86.9154%" y="735.50"></text></g><g><title>_int_malloc (51 samples, 0.01%)</title><rect x="86.6651%" y="741" width="0.0135%" height="15" fill="rgb(246,2,12)" fg:x="327914" fg:w="51"/><text x="86.9151%" y="751.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (45 samples, 0.01%)</title><rect x="86.6847%" y="661" width="0.0119%" height="15" fill="rgb(243,37,27)" fg:x="327988" fg:w="45"/><text x="86.9347%" y="671.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (45 samples, 0.01%)</title><rect x="86.6847%" y="645" width="0.0119%" height="15" fill="rgb(248,211,31)" fg:x="327988" fg:w="45"/><text x="86.9347%" y="655.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::ops::drop::Drop&gt;::drop (69 samples, 0.02%)</title><rect x="86.6813%" y="725" width="0.0182%" height="15" fill="rgb(242,146,47)" fg:x="327975" fg:w="69"/><text x="86.9313%" y="735.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (63 samples, 0.02%)</title><rect x="86.6828%" y="709" width="0.0167%" height="15" fill="rgb(206,70,20)" fg:x="327981" fg:w="63"/><text x="86.9328%" y="719.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (58 samples, 0.02%)</title><rect x="86.6842%" y="693" width="0.0153%" height="15" fill="rgb(215,10,51)" fg:x="327986" fg:w="58"/><text x="86.9342%" y="703.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (58 samples, 0.02%)</title><rect x="86.6842%" y="677" width="0.0153%" height="15" fill="rgb(243,178,53)" fg:x="327986" fg:w="58"/><text x="86.9342%" y="687.50"></text></g><g><title>tokio::runtime::io::registration::Registration::readiness::{{closure}} (282 samples, 0.07%)</title><rect x="86.6358%" y="773" width="0.0745%" height="15" fill="rgb(233,221,20)" fg:x="327803" fg:w="282"/><text x="86.8858%" y="783.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::readiness::{{closure}} (238 samples, 0.06%)</title><rect x="86.6474%" y="757" width="0.0629%" height="15" fill="rgb(218,95,35)" fg:x="327847" fg:w="238"/><text x="86.8974%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::io::scheduled_io::Readiness&gt; (119 samples, 0.03%)</title><rect x="86.6789%" y="741" width="0.0315%" height="15" fill="rgb(229,13,5)" fg:x="327966" fg:w="119"/><text x="86.9289%" y="751.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::receive_request::{{closure}} (27,792 samples, 7.35%)</title><rect x="79.3654%" y="821" width="7.3452%" height="15" fill="rgb(252,164,30)" fg:x="300294" fg:w="27792"/><text x="79.6154%" y="831.50">torrust_tr..</text></g><g><title>tokio::net::udp::UdpSocket::recv_buf_from::{{closure}} (22,942 samples, 6.06%)</title><rect x="80.6472%" y="805" width="6.0634%" height="15" fill="rgb(232,68,36)" fg:x="305144" fg:w="22942"/><text x="80.8972%" y="815.50">tokio::n..</text></g><g><title>tokio::runtime::io::registration::Registration::async_io::{{closure}} (22,924 samples, 6.06%)</title><rect x="80.6520%" y="789" width="6.0586%" height="15" fill="rgb(219,59,54)" fg:x="305162" fg:w="22924"/><text x="80.9020%" y="799.50">tokio::r..</text></g><g><title>__memcpy_avx512_unaligned_erms (92 samples, 0.02%)</title><rect x="86.7267%" y="741" width="0.0243%" height="15" fill="rgb(250,92,33)" fg:x="328147" fg:w="92"/><text x="86.9767%" y="751.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (2,847 samples, 0.75%)</title><rect x="86.7595%" y="725" width="0.7524%" height="15" fill="rgb(229,162,54)" fg:x="328271" fg:w="2847"/><text x="87.0095%" y="735.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (837 samples, 0.22%)</title><rect x="87.5513%" y="645" width="0.2212%" height="15" fill="rgb(244,114,52)" fg:x="331267" fg:w="837"/><text x="87.8013%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;core::option::Option&lt;alloc::boxed::Box&lt;tokio::runtime::scheduler::multi_thread::worker::Core&gt;&gt;&gt;&gt; (42 samples, 0.01%)</title><rect x="87.8510%" y="501" width="0.0111%" height="15" fill="rgb(212,211,43)" fg:x="332401" fg:w="42"/><text x="88.1010%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (42 samples, 0.01%)</title><rect x="87.8510%" y="485" width="0.0111%" height="15" fill="rgb(226,147,8)" fg:x="332401" fg:w="42"/><text x="88.1010%" y="495.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (42 samples, 0.01%)</title><rect x="87.8510%" y="469" width="0.0111%" height="15" fill="rgb(226,23,13)" fg:x="332401" fg:w="42"/><text x="88.1010%" y="479.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (42 samples, 0.01%)</title><rect x="87.8510%" y="453" width="0.0111%" height="15" fill="rgb(240,63,4)" fg:x="332401" fg:w="42"/><text x="88.1010%" y="463.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (42 samples, 0.01%)</title><rect x="87.8510%" y="437" width="0.0111%" height="15" fill="rgb(221,1,32)" fg:x="332401" fg:w="42"/><text x="88.1010%" y="447.50"></text></g><g><title>core::mem::replace (42 samples, 0.01%)</title><rect x="87.8510%" y="421" width="0.0111%" height="15" fill="rgb(242,117,10)" fg:x="332401" fg:w="42"/><text x="88.1010%" y="431.50"></text></g><g><title>core::ptr::write (42 samples, 0.01%)</title><rect x="87.8510%" y="405" width="0.0111%" height="15" fill="rgb(249,172,44)" fg:x="332401" fg:w="42"/><text x="88.1010%" y="415.50"></text></g><g><title>__x64_sys_futex (80 samples, 0.02%)</title><rect x="87.9004%" y="437" width="0.0211%" height="15" fill="rgb(244,46,45)" fg:x="332588" fg:w="80"/><text x="88.1504%" y="447.50"></text></g><g><title>futex_hash (110 samples, 0.03%)</title><rect x="87.9824%" y="389" width="0.0291%" height="15" fill="rgb(206,43,17)" fg:x="332898" fg:w="110"/><text x="88.2324%" y="399.50"></text></g><g><title>futex_wake_mark (43 samples, 0.01%)</title><rect x="88.0987%" y="373" width="0.0114%" height="15" fill="rgb(239,218,39)" fg:x="333338" fg:w="43"/><text x="88.3487%" y="383.50"></text></g><g><title>get_futex_key (112 samples, 0.03%)</title><rect x="88.1100%" y="373" width="0.0296%" height="15" fill="rgb(208,169,54)" fg:x="333381" fg:w="112"/><text x="88.3600%" y="383.50"></text></g><g><title>wake_q_add_safe (39 samples, 0.01%)</title><rect x="88.1404%" y="373" width="0.0103%" height="15" fill="rgb(247,25,42)" fg:x="333496" fg:w="39"/><text x="88.3904%" y="383.50"></text></g><g><title>_raw_spin_lock_irqsave (93 samples, 0.02%)</title><rect x="88.2911%" y="341" width="0.0246%" height="15" fill="rgb(226,23,31)" fg:x="334066" fg:w="93"/><text x="88.5411%" y="351.50"></text></g><g><title>__raw_spin_lock_irqsave (93 samples, 0.02%)</title><rect x="88.2911%" y="325" width="0.0246%" height="15" fill="rgb(247,16,28)" fg:x="334066" fg:w="93"/><text x="88.5411%" y="335.50"></text></g><g><title>select_task_rq_fair (322 samples, 0.09%)</title><rect x="88.3199%" y="341" width="0.0851%" height="15" fill="rgb(231,147,38)" fg:x="334175" fg:w="322"/><text x="88.5699%" y="351.50"></text></g><g><title>wake_affine (103 samples, 0.03%)</title><rect x="88.3777%" y="325" width="0.0272%" height="15" fill="rgb(253,81,48)" fg:x="334394" fg:w="103"/><text x="88.6277%" y="335.50"></text></g><g><title>available_idle_cpu (73 samples, 0.02%)</title><rect x="88.3857%" y="309" width="0.0193%" height="15" fill="rgb(249,222,43)" fg:x="334424" fg:w="73"/><text x="88.6357%" y="319.50"></text></g><g><title>__smp_call_single_queue (251 samples, 0.07%)</title><rect x="88.4443%" y="325" width="0.0663%" height="15" fill="rgb(221,3,27)" fg:x="334646" fg:w="251"/><text x="88.6943%" y="335.50"></text></g><g><title>send_call_function_single_ipi (243 samples, 0.06%)</title><rect x="88.4465%" y="309" width="0.0642%" height="15" fill="rgb(228,180,5)" fg:x="334654" fg:w="243"/><text x="88.6965%" y="319.50"></text></g><g><title>native_send_call_func_single_ipi (94 samples, 0.02%)</title><rect x="88.4858%" y="293" width="0.0248%" height="15" fill="rgb(227,131,42)" fg:x="334803" fg:w="94"/><text x="88.7358%" y="303.50"></text></g><g><title>default_send_IPI_single_phys (94 samples, 0.02%)</title><rect x="88.4858%" y="277" width="0.0248%" height="15" fill="rgb(212,3,39)" fg:x="334803" fg:w="94"/><text x="88.7358%" y="287.50"></text></g><g><title>__default_send_IPI_dest_field (85 samples, 0.02%)</title><rect x="88.4882%" y="261" width="0.0225%" height="15" fill="rgb(226,45,5)" fg:x="334812" fg:w="85"/><text x="88.7382%" y="271.50"></text></g><g><title>llist_add_batch (231 samples, 0.06%)</title><rect x="88.5107%" y="325" width="0.0611%" height="15" fill="rgb(215,167,45)" fg:x="334897" fg:w="231"/><text x="88.7607%" y="335.50"></text></g><g><title>sched_clock_cpu (68 samples, 0.02%)</title><rect x="88.5717%" y="325" width="0.0180%" height="15" fill="rgb(250,218,53)" fg:x="335128" fg:w="68"/><text x="88.8217%" y="335.50"></text></g><g><title>sched_clock (61 samples, 0.02%)</title><rect x="88.5736%" y="309" width="0.0161%" height="15" fill="rgb(207,140,0)" fg:x="335135" fg:w="61"/><text x="88.8236%" y="319.50"></text></g><g><title>native_sched_clock (61 samples, 0.02%)</title><rect x="88.5736%" y="293" width="0.0161%" height="15" fill="rgb(238,133,51)" fg:x="335135" fg:w="61"/><text x="88.8236%" y="303.50"></text></g><g><title>ttwu_queue_wakelist (704 samples, 0.19%)</title><rect x="88.4050%" y="341" width="0.1861%" height="15" fill="rgb(218,203,53)" fg:x="334497" fg:w="704"/><text x="88.6550%" y="351.50"></text></g><g><title>try_to_wake_up (1,611 samples, 0.43%)</title><rect x="88.1671%" y="357" width="0.4258%" height="15" fill="rgb(226,184,25)" fg:x="333597" fg:w="1611"/><text x="88.4171%" y="367.50"></text></g><g><title>futex_wake (2,206 samples, 0.58%)</title><rect x="88.0114%" y="389" width="0.5830%" height="15" fill="rgb(231,121,21)" fg:x="333008" fg:w="2206"/><text x="88.2614%" y="399.50"></text></g><g><title>wake_up_q (1,679 samples, 0.44%)</title><rect x="88.1507%" y="373" width="0.4437%" height="15" fill="rgb(251,14,34)" fg:x="333535" fg:w="1679"/><text x="88.4007%" y="383.50"></text></g><g><title>do_futex (2,433 samples, 0.64%)</title><rect x="87.9559%" y="405" width="0.6430%" height="15" fill="rgb(249,193,11)" fg:x="332798" fg:w="2433"/><text x="88.2059%" y="415.50"></text></g><g><title>__x64_sys_futex (2,563 samples, 0.68%)</title><rect x="87.9253%" y="421" width="0.6774%" height="15" fill="rgb(220,172,37)" fg:x="332682" fg:w="2563"/><text x="88.1753%" y="431.50"></text></g><g><title>do_futex (62 samples, 0.02%)</title><rect x="88.6027%" y="421" width="0.0164%" height="15" fill="rgb(231,229,43)" fg:x="335245" fg:w="62"/><text x="88.8527%" y="431.50"></text></g><g><title>do_syscall_64 (2,732 samples, 0.72%)</title><rect x="87.9218%" y="437" width="0.7220%" height="15" fill="rgb(250,161,5)" fg:x="332669" fg:w="2732"/><text x="88.1718%" y="447.50"></text></g><g><title>syscall_exit_to_user_mode (68 samples, 0.02%)</title><rect x="88.6259%" y="421" width="0.0180%" height="15" fill="rgb(218,225,18)" fg:x="335333" fg:w="68"/><text x="88.8759%" y="431.50"></text></g><g><title>exit_to_user_mode_prepare (58 samples, 0.02%)</title><rect x="88.6286%" y="405" width="0.0153%" height="15" fill="rgb(245,45,42)" fg:x="335343" fg:w="58"/><text x="88.8786%" y="415.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2,827 samples, 0.75%)</title><rect x="87.8991%" y="453" width="0.7472%" height="15" fill="rgb(211,115,1)" fg:x="332583" fg:w="2827"/><text x="88.1491%" y="463.50"></text></g><g><title>syscall (2,981 samples, 0.79%)</title><rect x="87.8621%" y="469" width="0.7879%" height="15" fill="rgb(248,133,52)" fg:x="332443" fg:w="2981"/><text x="88.1121%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::task::Notified&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt;&gt; (83 samples, 0.02%)</title><rect x="88.7012%" y="357" width="0.0219%" height="15" fill="rgb(238,100,21)" fg:x="335618" fg:w="83"/><text x="88.9512%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicU32::store (58 samples, 0.02%)</title><rect x="88.7343%" y="325" width="0.0153%" height="15" fill="rgb(247,144,11)" fg:x="335743" fg:w="58"/><text x="88.9843%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_store (58 samples, 0.02%)</title><rect x="88.7343%" y="309" width="0.0153%" height="15" fill="rgb(206,164,16)" fg:x="335743" fg:w="58"/><text x="88.9843%" y="319.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back_finish (83 samples, 0.02%)</title><rect x="88.7295%" y="341" width="0.0219%" height="15" fill="rgb(222,34,3)" fg:x="335725" fg:w="83"/><text x="88.9795%" y="351.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back_or_overflow (115 samples, 0.03%)</title><rect x="88.7232%" y="357" width="0.0304%" height="15" fill="rgb(248,82,4)" fg:x="335701" fg:w="115"/><text x="88.9732%" y="367.50"></text></g><g><title>tokio::runtime::context::with_scheduler (451 samples, 0.12%)</title><rect x="88.6500%" y="469" width="0.1192%" height="15" fill="rgb(228,81,46)" fg:x="335424" fg:w="451"/><text x="88.9000%" y="479.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (403 samples, 0.11%)</title><rect x="88.6627%" y="453" width="0.1065%" height="15" fill="rgb(227,67,47)" fg:x="335472" fg:w="403"/><text x="88.9127%" y="463.50"></text></g><g><title>tokio::runtime::context::with_scheduler::{{closure}} (394 samples, 0.10%)</title><rect x="88.6650%" y="437" width="0.1041%" height="15" fill="rgb(215,93,53)" fg:x="335481" fg:w="394"/><text x="88.9150%" y="447.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (387 samples, 0.10%)</title><rect x="88.6669%" y="421" width="0.1023%" height="15" fill="rgb(248,194,39)" fg:x="335488" fg:w="387"/><text x="88.9169%" y="431.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::{{closure}} (385 samples, 0.10%)</title><rect x="88.6674%" y="405" width="0.1018%" height="15" fill="rgb(215,5,19)" fg:x="335490" fg:w="385"/><text x="88.9174%" y="415.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::{{closure}} (381 samples, 0.10%)</title><rect x="88.6685%" y="389" width="0.1007%" height="15" fill="rgb(226,215,51)" fg:x="335494" fg:w="381"/><text x="88.9185%" y="399.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (338 samples, 0.09%)</title><rect x="88.6798%" y="373" width="0.0893%" height="15" fill="rgb(225,56,26)" fg:x="335537" fg:w="338"/><text x="88.9298%" y="383.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (59 samples, 0.02%)</title><rect x="88.7536%" y="357" width="0.0156%" height="15" fill="rgb(222,75,29)" fg:x="335816" fg:w="59"/><text x="89.0036%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (85 samples, 0.02%)</title><rect x="88.7721%" y="453" width="0.0225%" height="15" fill="rgb(236,139,6)" fg:x="335886" fg:w="85"/><text x="89.0221%" y="463.50"></text></g><g><title>core::ptr::read (56 samples, 0.01%)</title><rect x="88.7797%" y="437" width="0.0148%" height="15" fill="rgb(223,137,36)" fg:x="335915" fg:w="56"/><text x="89.0297%" y="447.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (55 samples, 0.01%)</title><rect x="88.7993%" y="421" width="0.0145%" height="15" fill="rgb(226,99,2)" fg:x="335989" fg:w="55"/><text x="89.0493%" y="431.50"></text></g><g><title>std::sync::poison::Flag::guard (55 samples, 0.01%)</title><rect x="88.7993%" y="405" width="0.0145%" height="15" fill="rgb(206,133,23)" fg:x="335989" fg:w="55"/><text x="89.0493%" y="415.50"></text></g><g><title>std::thread::panicking (52 samples, 0.01%)</title><rect x="88.8001%" y="389" width="0.0137%" height="15" fill="rgb(243,173,15)" fg:x="335992" fg:w="52"/><text x="89.0501%" y="399.50"></text></g><g><title>std::panicking::panicking (52 samples, 0.01%)</title><rect x="88.8001%" y="373" width="0.0137%" height="15" fill="rgb(228,69,28)" fg:x="335992" fg:w="52"/><text x="89.0501%" y="383.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (52 samples, 0.01%)</title><rect x="88.8001%" y="357" width="0.0137%" height="15" fill="rgb(212,51,22)" fg:x="335992" fg:w="52"/><text x="89.0501%" y="367.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (156 samples, 0.04%)</title><rect x="88.7964%" y="453" width="0.0412%" height="15" fill="rgb(227,113,0)" fg:x="335978" fg:w="156"/><text x="89.0464%" y="463.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (145 samples, 0.04%)</title><rect x="88.7993%" y="437" width="0.0383%" height="15" fill="rgb(252,84,27)" fg:x="335989" fg:w="145"/><text x="89.0493%" y="447.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (90 samples, 0.02%)</title><rect x="88.8138%" y="421" width="0.0238%" height="15" fill="rgb(223,145,39)" fg:x="336044" fg:w="90"/><text x="89.0638%" y="431.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (43 samples, 0.01%)</title><rect x="88.8263%" y="405" width="0.0114%" height="15" fill="rgb(239,219,30)" fg:x="336091" fg:w="43"/><text x="89.0763%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2,704 samples, 0.71%)</title><rect x="88.8559%" y="437" width="0.7146%" height="15" fill="rgb(224,196,39)" fg:x="336203" fg:w="2704"/><text x="89.1059%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_add (2,704 samples, 0.71%)</title><rect x="88.8559%" y="421" width="0.7146%" height="15" fill="rgb(205,35,43)" fg:x="336203" fg:w="2704"/><text x="89.1059%" y="431.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (3,112 samples, 0.82%)</title><rect x="88.7692%" y="469" width="0.8225%" height="15" fill="rgb(228,201,21)" fg:x="335875" fg:w="3112"/><text x="89.0192%" y="479.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (2,853 samples, 0.75%)</title><rect x="88.8376%" y="453" width="0.7540%" height="15" fill="rgb(237,118,16)" fg:x="336134" fg:w="2853"/><text x="89.0876%" y="463.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::num_unparked (80 samples, 0.02%)</title><rect x="89.5705%" y="437" width="0.0211%" height="15" fill="rgb(241,17,19)" fg:x="338907" fg:w="80"/><text x="89.8205%" y="447.50"></text></g><g><title>__fget_light (82 samples, 0.02%)</title><rect x="89.6223%" y="181" width="0.0217%" height="15" fill="rgb(214,10,25)" fg:x="339103" fg:w="82"/><text x="89.8723%" y="191.50"></text></g><g><title>__fdget_pos (85 samples, 0.02%)</title><rect x="89.6218%" y="197" width="0.0225%" height="15" fill="rgb(238,37,29)" fg:x="339101" fg:w="85"/><text x="89.8718%" y="207.50"></text></g><g><title>try_to_wake_up (70 samples, 0.02%)</title><rect x="89.6937%" y="37" width="0.0185%" height="15" fill="rgb(253,83,25)" fg:x="339373" fg:w="70"/><text x="89.9437%" y="47.50"></text></g><g><title>__wake_up_common (74 samples, 0.02%)</title><rect x="89.6929%" y="85" width="0.0196%" height="15" fill="rgb(234,192,12)" fg:x="339370" fg:w="74"/><text x="89.9429%" y="95.50"></text></g><g><title>ep_autoremove_wake_function (71 samples, 0.02%)</title><rect x="89.6937%" y="69" width="0.0188%" height="15" fill="rgb(241,216,45)" fg:x="339373" fg:w="71"/><text x="89.9437%" y="79.50"></text></g><g><title>default_wake_function (71 samples, 0.02%)</title><rect x="89.6937%" y="53" width="0.0188%" height="15" fill="rgb(242,22,33)" fg:x="339373" fg:w="71"/><text x="89.9437%" y="63.50"></text></g><g><title>_raw_spin_lock_irqsave (68 samples, 0.02%)</title><rect x="89.7124%" y="85" width="0.0180%" height="15" fill="rgb(231,105,49)" fg:x="339444" fg:w="68"/><text x="89.9624%" y="95.50"></text></g><g><title>__raw_spin_lock_irqsave (68 samples, 0.02%)</title><rect x="89.7124%" y="69" width="0.0180%" height="15" fill="rgb(218,204,15)" fg:x="339444" fg:w="68"/><text x="89.9624%" y="79.50"></text></g><g><title>native_queued_spin_lock_slowpath (58 samples, 0.02%)</title><rect x="89.7151%" y="53" width="0.0153%" height="15" fill="rgb(235,138,41)" fg:x="339454" fg:w="58"/><text x="89.9651%" y="63.50"></text></g><g><title>__wake_up_common_lock (144 samples, 0.04%)</title><rect x="89.6926%" y="101" width="0.0381%" height="15" fill="rgb(246,0,9)" fg:x="339369" fg:w="144"/><text x="89.9426%" y="111.50"></text></g><g><title>__wake_up (145 samples, 0.04%)</title><rect x="89.6926%" y="117" width="0.0383%" height="15" fill="rgb(210,74,4)" fg:x="339369" fg:w="145"/><text x="89.9426%" y="127.50"></text></g><g><title>_raw_read_lock_irqsave (177 samples, 0.05%)</title><rect x="89.7309%" y="117" width="0.0468%" height="15" fill="rgb(250,60,41)" fg:x="339514" fg:w="177"/><text x="89.9809%" y="127.50"></text></g><g><title>__raw_read_lock_irqsave (177 samples, 0.05%)</title><rect x="89.7309%" y="101" width="0.0468%" height="15" fill="rgb(220,115,12)" fg:x="339514" fg:w="177"/><text x="89.9809%" y="111.50"></text></g><g><title>__wake_up_common (458 samples, 0.12%)</title><rect x="89.6604%" y="149" width="0.1210%" height="15" fill="rgb(237,100,13)" fg:x="339247" fg:w="458"/><text x="89.9104%" y="159.50"></text></g><g><title>ep_poll_callback (447 samples, 0.12%)</title><rect x="89.6633%" y="133" width="0.1181%" height="15" fill="rgb(213,55,26)" fg:x="339258" fg:w="447"/><text x="89.9133%" y="143.50"></text></g><g><title>__wake_up_locked_key (461 samples, 0.12%)</title><rect x="89.6604%" y="165" width="0.1218%" height="15" fill="rgb(216,17,4)" fg:x="339247" fg:w="461"/><text x="89.9104%" y="175.50"></text></g><g><title>_raw_spin_lock_irq (139 samples, 0.04%)</title><rect x="89.7872%" y="165" width="0.0367%" height="15" fill="rgb(220,153,47)" fg:x="339727" fg:w="139"/><text x="90.0372%" y="175.50"></text></g><g><title>eventfd_write (716 samples, 0.19%)</title><rect x="89.6559%" y="181" width="0.1892%" height="15" fill="rgb(215,131,9)" fg:x="339230" fg:w="716"/><text x="89.9059%" y="191.50"></text></g><g><title>copy_user_enhanced_fast_string (76 samples, 0.02%)</title><rect x="89.8250%" y="165" width="0.0201%" height="15" fill="rgb(233,46,42)" fg:x="339870" fg:w="76"/><text x="90.0750%" y="175.50"></text></g><g><title>__x64_sys_write (884 samples, 0.23%)</title><rect x="89.6170%" y="229" width="0.2336%" height="15" fill="rgb(226,86,7)" fg:x="339083" fg:w="884"/><text x="89.8670%" y="239.50"></text></g><g><title>ksys_write (873 samples, 0.23%)</title><rect x="89.6199%" y="213" width="0.2307%" height="15" fill="rgb(239,226,21)" fg:x="339094" fg:w="873"/><text x="89.8699%" y="223.50"></text></g><g><title>vfs_write (758 samples, 0.20%)</title><rect x="89.6503%" y="197" width="0.2003%" height="15" fill="rgb(244,137,22)" fg:x="339209" fg:w="758"/><text x="89.9003%" y="207.50"></text></g><g><title>do_syscall_64 (930 samples, 0.25%)</title><rect x="89.6162%" y="245" width="0.2458%" height="15" fill="rgb(211,139,35)" fg:x="339080" fg:w="930"/><text x="89.8662%" y="255.50"></text></g><g><title>syscall_exit_to_user_mode (40 samples, 0.01%)</title><rect x="89.8514%" y="229" width="0.0106%" height="15" fill="rgb(214,62,50)" fg:x="339970" fg:w="40"/><text x="90.1014%" y="239.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (950 samples, 0.25%)</title><rect x="89.6117%" y="261" width="0.2511%" height="15" fill="rgb(212,113,44)" fg:x="339063" fg:w="950"/><text x="89.8617%" y="271.50"></text></g><g><title>__GI___libc_write (1,017 samples, 0.27%)</title><rect x="89.5959%" y="293" width="0.2688%" height="15" fill="rgb(226,150,43)" fg:x="339003" fg:w="1017"/><text x="89.8459%" y="303.50"></text></g><g><title>__GI___libc_write (1,014 samples, 0.27%)</title><rect x="89.5967%" y="277" width="0.2680%" height="15" fill="rgb(250,71,37)" fg:x="339006" fg:w="1014"/><text x="89.8467%" y="287.50"></text></g><g><title>tokio::runtime::driver::Handle::unpark (1,023 samples, 0.27%)</title><rect x="89.5953%" y="437" width="0.2704%" height="15" fill="rgb(219,76,19)" fg:x="339001" fg:w="1023"/><text x="89.8453%" y="447.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (1,023 samples, 0.27%)</title><rect x="89.5953%" y="421" width="0.2704%" height="15" fill="rgb(250,39,11)" fg:x="339001" fg:w="1023"/><text x="89.8453%" y="431.50"></text></g><g><title>tokio::runtime::io::driver::Handle::unpark (1,023 samples, 0.27%)</title><rect x="89.5953%" y="405" width="0.2704%" height="15" fill="rgb(230,64,31)" fg:x="339001" fg:w="1023"/><text x="89.8453%" y="415.50"></text></g><g><title>mio::waker::Waker::wake (1,022 samples, 0.27%)</title><rect x="89.5956%" y="389" width="0.2701%" height="15" fill="rgb(208,222,23)" fg:x="339002" fg:w="1022"/><text x="89.8456%" y="399.50"></text></g><g><title>mio::sys::unix::waker::fdbased::Waker::wake (1,022 samples, 0.27%)</title><rect x="89.5956%" y="373" width="0.2701%" height="15" fill="rgb(227,125,18)" fg:x="339002" fg:w="1022"/><text x="89.8456%" y="383.50"></text></g><g><title>mio::sys::unix::waker::eventfd::WakerInternal::wake (1,022 samples, 0.27%)</title><rect x="89.5956%" y="357" width="0.2701%" height="15" fill="rgb(234,210,9)" fg:x="339002" fg:w="1022"/><text x="89.8456%" y="367.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1,021 samples, 0.27%)</title><rect x="89.5959%" y="341" width="0.2698%" height="15" fill="rgb(217,127,24)" fg:x="339003" fg:w="1021"/><text x="89.8459%" y="351.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (1,021 samples, 0.27%)</title><rect x="89.5959%" y="325" width="0.2698%" height="15" fill="rgb(239,141,48)" fg:x="339003" fg:w="1021"/><text x="89.8459%" y="335.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (1,021 samples, 0.27%)</title><rect x="89.5959%" y="309" width="0.2698%" height="15" fill="rgb(227,109,8)" fg:x="339003" fg:w="1021"/><text x="89.8459%" y="319.50"></text></g><g><title>tokio::runtime::context::with_scheduler (7,649 samples, 2.02%)</title><rect x="87.8468%" y="597" width="2.0216%" height="15" fill="rgb(235,184,23)" fg:x="332385" fg:w="7649"/><text x="88.0968%" y="607.50">t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (7,636 samples, 2.02%)</title><rect x="87.8502%" y="581" width="2.0181%" height="15" fill="rgb(227,226,48)" fg:x="332398" fg:w="7636"/><text x="88.1002%" y="591.50">s..</text></g><g><title>tokio::runtime::context::with_scheduler::{{closure}} (7,635 samples, 2.02%)</title><rect x="87.8505%" y="565" width="2.0179%" height="15" fill="rgb(206,150,11)" fg:x="332399" fg:w="7635"/><text x="88.1005%" y="575.50">t..</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (7,634 samples, 2.02%)</title><rect x="87.8507%" y="549" width="2.0176%" height="15" fill="rgb(254,2,33)" fg:x="332400" fg:w="7634"/><text x="88.1007%" y="559.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::{{closure}} (7,634 samples, 2.02%)</title><rect x="87.8507%" y="533" width="2.0176%" height="15" fill="rgb(243,160,20)" fg:x="332400" fg:w="7634"/><text x="88.1007%" y="543.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::{{closure}} (7,634 samples, 2.02%)</title><rect x="87.8507%" y="517" width="2.0176%" height="15" fill="rgb(218,208,30)" fg:x="332400" fg:w="7634"/><text x="88.1007%" y="527.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (7,591 samples, 2.01%)</title><rect x="87.8621%" y="501" width="2.0062%" height="15" fill="rgb(224,120,49)" fg:x="332443" fg:w="7591"/><text x="88.1121%" y="511.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (7,591 samples, 2.01%)</title><rect x="87.8621%" y="485" width="2.0062%" height="15" fill="rgb(246,12,2)" fg:x="332443" fg:w="7591"/><text x="88.1121%" y="495.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (1,047 samples, 0.28%)</title><rect x="89.5916%" y="469" width="0.2767%" height="15" fill="rgb(236,117,3)" fg:x="338987" fg:w="1047"/><text x="89.8416%" y="479.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (1,043 samples, 0.28%)</title><rect x="89.5927%" y="453" width="0.2757%" height="15" fill="rgb(216,128,52)" fg:x="338991" fg:w="1043"/><text x="89.8427%" y="463.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_option_task_without_yield (7,948 samples, 2.10%)</title><rect x="87.7725%" y="645" width="2.1006%" height="15" fill="rgb(246,145,19)" fg:x="332104" fg:w="7948"/><text x="88.0225%" y="655.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (7,946 samples, 2.10%)</title><rect x="87.7730%" y="629" width="2.1001%" height="15" fill="rgb(222,11,46)" fg:x="332106" fg:w="7946"/><text x="88.0230%" y="639.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (7,946 samples, 2.10%)</title><rect x="87.7730%" y="613" width="2.1001%" height="15" fill="rgb(245,82,36)" fg:x="332106" fg:w="7946"/><text x="88.0230%" y="623.50">t..</text></g><g><title>tokio::util::sharded_list::ShardGuard&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push (90 samples, 0.02%)</title><rect x="89.9151%" y="613" width="0.0238%" height="15" fill="rgb(250,73,51)" fg:x="340211" fg:w="90"/><text x="90.1651%" y="623.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push_front (63 samples, 0.02%)</title><rect x="89.9223%" y="597" width="0.0167%" height="15" fill="rgb(221,189,23)" fg:x="340238" fg:w="63"/><text x="90.1723%" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (409 samples, 0.11%)</title><rect x="89.9463%" y="533" width="0.1081%" height="15" fill="rgb(210,33,7)" fg:x="340329" fg:w="409"/><text x="90.1963%" y="543.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (409 samples, 0.11%)</title><rect x="89.9463%" y="517" width="0.1081%" height="15" fill="rgb(210,107,22)" fg:x="340329" fg:w="409"/><text x="90.1963%" y="527.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind_inner (992 samples, 0.26%)</title><rect x="89.8874%" y="629" width="0.2622%" height="15" fill="rgb(222,116,37)" fg:x="340106" fg:w="992"/><text x="90.1374%" y="639.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::lock_shard (797 samples, 0.21%)</title><rect x="89.9389%" y="613" width="0.2106%" height="15" fill="rgb(254,17,48)" fg:x="340301" fg:w="797"/><text x="90.1889%" y="623.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::shard_inner (781 samples, 0.21%)</title><rect x="89.9432%" y="597" width="0.2064%" height="15" fill="rgb(224,36,32)" fg:x="340317" fg:w="781"/><text x="90.1932%" y="607.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (773 samples, 0.20%)</title><rect x="89.9453%" y="581" width="0.2043%" height="15" fill="rgb(232,90,46)" fg:x="340325" fg:w="773"/><text x="90.1953%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (773 samples, 0.20%)</title><rect x="89.9453%" y="565" width="0.2043%" height="15" fill="rgb(241,66,40)" fg:x="340325" fg:w="773"/><text x="90.1953%" y="575.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (769 samples, 0.20%)</title><rect x="89.9463%" y="549" width="0.2032%" height="15" fill="rgb(249,184,29)" fg:x="340329" fg:w="769"/><text x="90.1963%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (360 samples, 0.10%)</title><rect x="90.0544%" y="533" width="0.0951%" height="15" fill="rgb(231,181,1)" fg:x="340738" fg:w="360"/><text x="90.3044%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (360 samples, 0.10%)</title><rect x="90.0544%" y="517" width="0.0951%" height="15" fill="rgb(224,94,2)" fg:x="340738" fg:w="360"/><text x="90.3044%" y="527.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (410 samples, 0.11%)</title><rect x="90.1617%" y="581" width="0.1084%" height="15" fill="rgb(229,170,15)" fg:x="341144" fg:w="410"/><text x="90.4117%" y="591.50"></text></g><g><title>__GI___lll_lock_wake_private (103 samples, 0.03%)</title><rect x="90.2793%" y="565" width="0.0272%" height="15" fill="rgb(240,127,35)" fg:x="341589" fg:w="103"/><text x="90.5293%" y="575.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (180 samples, 0.05%)</title><rect x="90.3066%" y="565" width="0.0476%" height="15" fill="rgb(248,196,34)" fg:x="341692" fg:w="180"/><text x="90.5566%" y="575.50"></text></g><g><title>update_curr (47 samples, 0.01%)</title><rect x="90.4564%" y="197" width="0.0124%" height="15" fill="rgb(236,137,7)" fg:x="342259" fg:w="47"/><text x="90.7064%" y="207.50"></text></g><g><title>update_load_avg (57 samples, 0.02%)</title><rect x="90.4688%" y="197" width="0.0151%" height="15" fill="rgb(235,127,16)" fg:x="342306" fg:w="57"/><text x="90.7188%" y="207.50"></text></g><g><title>dequeue_entity (144 samples, 0.04%)</title><rect x="90.4469%" y="213" width="0.0381%" height="15" fill="rgb(250,192,54)" fg:x="342223" fg:w="144"/><text x="90.6969%" y="223.50"></text></g><g><title>dequeue_task (169 samples, 0.04%)</title><rect x="90.4427%" y="245" width="0.0447%" height="15" fill="rgb(218,98,20)" fg:x="342207" fg:w="169"/><text x="90.6927%" y="255.50"></text></g><g><title>dequeue_task_fair (166 samples, 0.04%)</title><rect x="90.4435%" y="229" width="0.0439%" height="15" fill="rgb(230,176,47)" fg:x="342210" fg:w="166"/><text x="90.6935%" y="239.50"></text></g><g><title>ctx_sched_out (41 samples, 0.01%)</title><rect x="90.5087%" y="197" width="0.0108%" height="15" fill="rgb(244,2,33)" fg:x="342457" fg:w="41"/><text x="90.7587%" y="207.50"></text></g><g><title>prepare_task_switch (61 samples, 0.02%)</title><rect x="90.5045%" y="245" width="0.0161%" height="15" fill="rgb(231,100,17)" fg:x="342441" fg:w="61"/><text x="90.7545%" y="255.50"></text></g><g><title>__perf_event_task_sched_out (56 samples, 0.01%)</title><rect x="90.5058%" y="229" width="0.0148%" height="15" fill="rgb(245,23,12)" fg:x="342446" fg:w="56"/><text x="90.7558%" y="239.50"></text></g><g><title>perf_event_context_sched_out (48 samples, 0.01%)</title><rect x="90.5079%" y="213" width="0.0127%" height="15" fill="rgb(249,55,22)" fg:x="342454" fg:w="48"/><text x="90.7579%" y="223.50"></text></g><g><title>psi_group_change (57 samples, 0.02%)</title><rect x="90.5307%" y="229" width="0.0151%" height="15" fill="rgb(207,134,9)" fg:x="342540" fg:w="57"/><text x="90.7807%" y="239.50"></text></g><g><title>psi_task_switch (96 samples, 0.03%)</title><rect x="90.5217%" y="245" width="0.0254%" height="15" fill="rgb(218,134,0)" fg:x="342506" fg:w="96"/><text x="90.7717%" y="255.50"></text></g><g><title>__schedule (428 samples, 0.11%)</title><rect x="90.4363%" y="261" width="0.1131%" height="15" fill="rgb(213,212,33)" fg:x="342183" fg:w="428"/><text x="90.6863%" y="271.50"></text></g><g><title>futex_wait_queue (471 samples, 0.12%)</title><rect x="90.4257%" y="293" width="0.1245%" height="15" fill="rgb(252,106,18)" fg:x="342143" fg:w="471"/><text x="90.6757%" y="303.50"></text></g><g><title>schedule (433 samples, 0.11%)</title><rect x="90.4358%" y="277" width="0.1144%" height="15" fill="rgb(208,126,42)" fg:x="342181" fg:w="433"/><text x="90.6858%" y="287.50"></text></g><g><title>futex_q_lock (46 samples, 0.01%)</title><rect x="90.5695%" y="277" width="0.0122%" height="15" fill="rgb(246,175,29)" fg:x="342687" fg:w="46"/><text x="90.8195%" y="287.50"></text></g><g><title>futex_q_unlock (217 samples, 0.06%)</title><rect x="90.5817%" y="277" width="0.0574%" height="15" fill="rgb(215,13,50)" fg:x="342733" fg:w="217"/><text x="90.8317%" y="287.50"></text></g><g><title>futex_wait_setup (344 samples, 0.09%)</title><rect x="90.5502%" y="293" width="0.0909%" height="15" fill="rgb(216,172,15)" fg:x="342614" fg:w="344"/><text x="90.8002%" y="303.50"></text></g><g><title>futex_wait (864 samples, 0.23%)</title><rect x="90.4144%" y="309" width="0.2283%" height="15" fill="rgb(212,103,13)" fg:x="342100" fg:w="864"/><text x="90.6644%" y="319.50"></text></g><g><title>do_futex (877 samples, 0.23%)</title><rect x="90.4115%" y="325" width="0.2318%" height="15" fill="rgb(231,171,36)" fg:x="342089" fg:w="877"/><text x="90.6615%" y="335.50"></text></g><g><title>__x64_sys_futex (885 samples, 0.23%)</title><rect x="90.4099%" y="341" width="0.2339%" height="15" fill="rgb(250,123,20)" fg:x="342083" fg:w="885"/><text x="90.6599%" y="351.50"></text></g><g><title>__rseq_handle_notify_resume (77 samples, 0.02%)</title><rect x="90.6570%" y="293" width="0.0204%" height="15" fill="rgb(212,53,50)" fg:x="343018" fg:w="77"/><text x="90.9070%" y="303.50"></text></g><g><title>exit_to_user_mode_loop (96 samples, 0.03%)</title><rect x="90.6533%" y="309" width="0.0254%" height="15" fill="rgb(243,54,12)" fg:x="343004" fg:w="96"/><text x="90.9033%" y="319.50"></text></g><g><title>exit_to_user_mode_prepare (127 samples, 0.03%)</title><rect x="90.6467%" y="325" width="0.0336%" height="15" fill="rgb(234,101,34)" fg:x="342979" fg:w="127"/><text x="90.8967%" y="335.50"></text></g><g><title>do_syscall_64 (1,027 samples, 0.27%)</title><rect x="90.4096%" y="357" width="0.2714%" height="15" fill="rgb(254,67,22)" fg:x="342082" fg:w="1027"/><text x="90.6596%" y="367.50"></text></g><g><title>syscall_exit_to_user_mode (136 samples, 0.04%)</title><rect x="90.6451%" y="341" width="0.0359%" height="15" fill="rgb(250,35,47)" fg:x="342973" fg:w="136"/><text x="90.8951%" y="351.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,035 samples, 0.27%)</title><rect x="90.4080%" y="373" width="0.2735%" height="15" fill="rgb(226,126,38)" fg:x="342076" fg:w="1035"/><text x="90.6580%" y="383.50"></text></g><g><title>__GI___lll_lock_wait_private (1,121 samples, 0.30%)</title><rect x="90.3885%" y="405" width="0.2963%" height="15" fill="rgb(216,138,53)" fg:x="342002" fg:w="1121"/><text x="90.6385%" y="415.50"></text></g><g><title>futex_wait (1,095 samples, 0.29%)</title><rect x="90.3954%" y="389" width="0.2894%" height="15" fill="rgb(246,199,43)" fg:x="342028" fg:w="1095"/><text x="90.6454%" y="399.50"></text></g><g><title>futex_hash (66 samples, 0.02%)</title><rect x="90.7252%" y="325" width="0.0174%" height="15" fill="rgb(232,125,11)" fg:x="343276" fg:w="66"/><text x="90.9752%" y="335.50"></text></g><g><title>__smp_call_single_queue (40 samples, 0.01%)</title><rect x="90.8859%" y="261" width="0.0106%" height="15" fill="rgb(218,219,45)" fg:x="343884" fg:w="40"/><text x="91.1359%" y="271.50"></text></g><g><title>send_call_function_single_ipi (39 samples, 0.01%)</title><rect x="90.8861%" y="245" width="0.0103%" height="15" fill="rgb(216,102,54)" fg:x="343885" fg:w="39"/><text x="91.1361%" y="255.50"></text></g><g><title>futex_wake (608 samples, 0.16%)</title><rect x="90.7426%" y="325" width="0.1607%" height="15" fill="rgb(250,228,7)" fg:x="343342" fg:w="608"/><text x="90.9926%" y="335.50"></text></g><g><title>wake_up_q (362 samples, 0.10%)</title><rect x="90.8077%" y="309" width="0.0957%" height="15" fill="rgb(226,125,25)" fg:x="343588" fg:w="362"/><text x="91.0577%" y="319.50"></text></g><g><title>try_to_wake_up (353 samples, 0.09%)</title><rect x="90.8100%" y="293" width="0.0933%" height="15" fill="rgb(224,165,27)" fg:x="343597" fg:w="353"/><text x="91.0600%" y="303.50"></text></g><g><title>ttwu_queue_wakelist (78 samples, 0.02%)</title><rect x="90.8827%" y="277" width="0.0206%" height="15" fill="rgb(233,86,3)" fg:x="343872" fg:w="78"/><text x="91.1327%" y="287.50"></text></g><g><title>do_futex (729 samples, 0.19%)</title><rect x="90.7120%" y="341" width="0.1927%" height="15" fill="rgb(228,116,20)" fg:x="343226" fg:w="729"/><text x="90.9620%" y="351.50"></text></g><g><title>__x64_sys_futex (747 samples, 0.20%)</title><rect x="90.7080%" y="357" width="0.1974%" height="15" fill="rgb(209,192,17)" fg:x="343211" fg:w="747"/><text x="90.9580%" y="367.50"></text></g><g><title>exit_to_user_mode_prepare (44 samples, 0.01%)</title><rect x="90.9105%" y="341" width="0.0116%" height="15" fill="rgb(224,88,34)" fg:x="343977" fg:w="44"/><text x="91.1605%" y="351.50"></text></g><g><title>do_syscall_64 (822 samples, 0.22%)</title><rect x="90.7054%" y="373" width="0.2172%" height="15" fill="rgb(233,38,6)" fg:x="343201" fg:w="822"/><text x="90.9554%" y="383.50"></text></g><g><title>syscall_exit_to_user_mode (54 samples, 0.01%)</title><rect x="90.9083%" y="357" width="0.0143%" height="15" fill="rgb(212,59,30)" fg:x="343969" fg:w="54"/><text x="91.1583%" y="367.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (838 samples, 0.22%)</title><rect x="90.7014%" y="389" width="0.2215%" height="15" fill="rgb(213,80,3)" fg:x="343186" fg:w="838"/><text x="90.9514%" y="399.50"></text></g><g><title>__GI___lll_lock_wake_private (916 samples, 0.24%)</title><rect x="90.6848%" y="405" width="0.2421%" height="15" fill="rgb(251,178,7)" fg:x="343123" fg:w="916"/><text x="90.9348%" y="415.50"></text></g><g><title>_int_free (220 samples, 0.06%)</title><rect x="90.9480%" y="389" width="0.0581%" height="15" fill="rgb(213,154,26)" fg:x="344119" fg:w="220"/><text x="91.1980%" y="399.50"></text></g><g><title>__alloc_pages (48 samples, 0.01%)</title><rect x="91.1917%" y="213" width="0.0127%" height="15" fill="rgb(238,165,49)" fg:x="345041" fg:w="48"/><text x="91.4417%" y="223.50"></text></g><g><title>do_anonymous_page (127 samples, 0.03%)</title><rect x="91.1718%" y="261" width="0.0336%" height="15" fill="rgb(248,91,46)" fg:x="344966" fg:w="127"/><text x="91.4218%" y="271.50"></text></g><g><title>vma_alloc_folio (59 samples, 0.02%)</title><rect x="91.1898%" y="245" width="0.0156%" height="15" fill="rgb(244,21,52)" fg:x="345034" fg:w="59"/><text x="91.4398%" y="255.50"></text></g><g><title>__folio_alloc (52 samples, 0.01%)</title><rect x="91.1917%" y="229" width="0.0137%" height="15" fill="rgb(247,122,20)" fg:x="345041" fg:w="52"/><text x="91.4417%" y="239.50"></text></g><g><title>handle_pte_fault (132 samples, 0.03%)</title><rect x="91.1713%" y="277" width="0.0349%" height="15" fill="rgb(218,27,9)" fg:x="344964" fg:w="132"/><text x="91.4213%" y="287.50"></text></g><g><title>__handle_mm_fault (136 samples, 0.04%)</title><rect x="91.1705%" y="293" width="0.0359%" height="15" fill="rgb(246,7,6)" fg:x="344961" fg:w="136"/><text x="91.4205%" y="303.50"></text></g><g><title>handle_mm_fault (153 samples, 0.04%)</title><rect x="91.1692%" y="309" width="0.0404%" height="15" fill="rgb(227,135,54)" fg:x="344956" fg:w="153"/><text x="91.4192%" y="319.50"></text></g><g><title>do_user_addr_fault (170 samples, 0.04%)</title><rect x="91.1660%" y="325" width="0.0449%" height="15" fill="rgb(247,14,11)" fg:x="344944" fg:w="170"/><text x="91.4160%" y="335.50"></text></g><g><title>asm_exc_page_fault (177 samples, 0.05%)</title><rect x="91.1655%" y="357" width="0.0468%" height="15" fill="rgb(206,149,34)" fg:x="344942" fg:w="177"/><text x="91.4155%" y="367.50"></text></g><g><title>exc_page_fault (175 samples, 0.05%)</title><rect x="91.1660%" y="341" width="0.0463%" height="15" fill="rgb(227,228,4)" fg:x="344944" fg:w="175"/><text x="91.4160%" y="351.50"></text></g><g><title>perf_event_mmap_output (55 samples, 0.01%)</title><rect x="91.2490%" y="181" width="0.0145%" height="15" fill="rgb(238,218,28)" fg:x="345258" fg:w="55"/><text x="91.4990%" y="191.50"></text></g><g><title>perf_event_mmap_event (115 samples, 0.03%)</title><rect x="91.2334%" y="229" width="0.0304%" height="15" fill="rgb(252,86,40)" fg:x="345199" fg:w="115"/><text x="91.4834%" y="239.50"></text></g><g><title>perf_iterate_sb (111 samples, 0.03%)</title><rect x="91.2345%" y="213" width="0.0293%" height="15" fill="rgb(251,225,11)" fg:x="345203" fg:w="111"/><text x="91.4845%" y="223.50"></text></g><g><title>perf_iterate_ctx (100 samples, 0.03%)</title><rect x="91.2374%" y="197" width="0.0264%" height="15" fill="rgb(206,46,49)" fg:x="345214" fg:w="100"/><text x="91.4874%" y="207.50"></text></g><g><title>perf_event_mmap (124 samples, 0.03%)</title><rect x="91.2316%" y="245" width="0.0328%" height="15" fill="rgb(245,128,24)" fg:x="345192" fg:w="124"/><text x="91.4816%" y="255.50"></text></g><g><title>mas_preallocate (48 samples, 0.01%)</title><rect x="91.2725%" y="213" width="0.0127%" height="15" fill="rgb(219,177,34)" fg:x="345347" fg:w="48"/><text x="91.5225%" y="223.50"></text></g><g><title>mas_alloc_nodes (48 samples, 0.01%)</title><rect x="91.2725%" y="197" width="0.0127%" height="15" fill="rgb(218,60,48)" fg:x="345347" fg:w="48"/><text x="91.5225%" y="207.50"></text></g><g><title>mas_wr_store_entry.isra.0 (43 samples, 0.01%)</title><rect x="91.2950%" y="181" width="0.0114%" height="15" fill="rgb(221,11,5)" fg:x="345432" fg:w="43"/><text x="91.5450%" y="191.50"></text></g><g><title>mas_store_prealloc (73 samples, 0.02%)</title><rect x="91.2879%" y="197" width="0.0193%" height="15" fill="rgb(220,148,13)" fg:x="345405" fg:w="73"/><text x="91.5379%" y="207.50"></text></g><g><title>__vma_adjust (154 samples, 0.04%)</title><rect x="91.2678%" y="229" width="0.0407%" height="15" fill="rgb(210,16,3)" fg:x="345329" fg:w="154"/><text x="91.5178%" y="239.50"></text></g><g><title>vma_mas_store (78 samples, 0.02%)</title><rect x="91.2879%" y="213" width="0.0206%" height="15" fill="rgb(236,80,2)" fg:x="345405" fg:w="78"/><text x="91.5379%" y="223.50"></text></g><g><title>vma_merge (173 samples, 0.05%)</title><rect x="91.2673%" y="245" width="0.0457%" height="15" fill="rgb(239,129,19)" fg:x="345327" fg:w="173"/><text x="91.5173%" y="255.50"></text></g><g><title>mprotect_fixup (330 samples, 0.09%)</title><rect x="91.2260%" y="261" width="0.0872%" height="15" fill="rgb(220,106,35)" fg:x="345171" fg:w="330"/><text x="91.4760%" y="271.50"></text></g><g><title>do_mprotect_pkey (384 samples, 0.10%)</title><rect x="91.2152%" y="277" width="0.1015%" height="15" fill="rgb(252,139,45)" fg:x="345130" fg:w="384"/><text x="91.4652%" y="287.50"></text></g><g><title>__x64_sys_mprotect (390 samples, 0.10%)</title><rect x="91.2149%" y="293" width="0.1031%" height="15" fill="rgb(229,8,36)" fg:x="345129" fg:w="390"/><text x="91.4649%" y="303.50"></text></g><g><title>grow_heap (401 samples, 0.11%)</title><rect x="91.2123%" y="357" width="0.1060%" height="15" fill="rgb(230,126,33)" fg:x="345119" fg:w="401"/><text x="91.4623%" y="367.50"></text></g><g><title>__GI_mprotect (399 samples, 0.11%)</title><rect x="91.2128%" y="341" width="0.1055%" height="15" fill="rgb(239,140,21)" fg:x="345121" fg:w="399"/><text x="91.4628%" y="351.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (395 samples, 0.10%)</title><rect x="91.2139%" y="325" width="0.1044%" height="15" fill="rgb(254,104,9)" fg:x="345125" fg:w="395"/><text x="91.4639%" y="335.50"></text></g><g><title>do_syscall_64 (392 samples, 0.10%)</title><rect x="91.2147%" y="309" width="0.1036%" height="15" fill="rgb(239,52,14)" fg:x="345128" fg:w="392"/><text x="91.4647%" y="319.50"></text></g><g><title>sysmalloc (595 samples, 0.16%)</title><rect x="91.1618%" y="373" width="0.1573%" height="15" fill="rgb(208,227,44)" fg:x="344928" fg:w="595"/><text x="91.4118%" y="383.50"></text></g><g><title>_int_malloc (1,239 samples, 0.33%)</title><rect x="91.0061%" y="389" width="0.3275%" height="15" fill="rgb(246,18,19)" fg:x="344339" fg:w="1239"/><text x="91.2561%" y="399.50"></text></g><g><title>unlink_chunk (55 samples, 0.01%)</title><rect x="91.3191%" y="373" width="0.0145%" height="15" fill="rgb(235,228,25)" fg:x="345523" fg:w="55"/><text x="91.5691%" y="383.50"></text></g><g><title>_int_memalign (1,518 samples, 0.40%)</title><rect x="90.9337%" y="405" width="0.4012%" height="15" fill="rgb(240,156,20)" fg:x="344065" fg:w="1518"/><text x="91.1837%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (14,436 samples, 3.82%)</title><rect x="87.5209%" y="725" width="3.8153%" height="15" fill="rgb(224,8,20)" fg:x="331152" fg:w="14436"/><text x="87.7709%" y="735.50">core..</text></g><g><title>tokio::task::spawn::spawn_inner::{{closure}} (14,430 samples, 3.81%)</title><rect x="87.5225%" y="709" width="3.8137%" height="15" fill="rgb(214,12,52)" fg:x="331158" fg:w="14430"/><text x="87.7725%" y="719.50">toki..</text></g><g><title>tokio::runtime::scheduler::Handle::spawn (14,425 samples, 3.81%)</title><rect x="87.5238%" y="693" width="3.8124%" height="15" fill="rgb(211,220,47)" fg:x="331163" fg:w="14425"/><text x="87.7738%" y="703.50">toki..</text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::spawn (14,422 samples, 3.81%)</title><rect x="87.5246%" y="677" width="3.8116%" height="15" fill="rgb(250,173,5)" fg:x="331166" fg:w="14422"/><text x="87.7746%" y="687.50">toki..</text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (14,411 samples, 3.81%)</title><rect x="87.5275%" y="661" width="3.8087%" height="15" fill="rgb(250,125,52)" fg:x="331177" fg:w="14411"/><text x="87.7775%" y="671.50">toki..</text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (5,536 samples, 1.46%)</title><rect x="89.8731%" y="645" width="1.4631%" height="15" fill="rgb(209,133,18)" fg:x="340052" fg:w="5536"/><text x="90.1231%" y="655.50"></text></g><g><title>tokio::runtime::task::new_task (4,490 samples, 1.19%)</title><rect x="90.1496%" y="629" width="1.1867%" height="15" fill="rgb(216,173,22)" fg:x="341098" fg:w="4490"/><text x="90.3996%" y="639.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (4,490 samples, 1.19%)</title><rect x="90.1496%" y="613" width="1.1867%" height="15" fill="rgb(205,3,22)" fg:x="341098" fg:w="4490"/><text x="90.3996%" y="623.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (4,490 samples, 1.19%)</title><rect x="90.1496%" y="597" width="1.1867%" height="15" fill="rgb(248,22,20)" fg:x="341098" fg:w="4490"/><text x="90.3996%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (4,034 samples, 1.07%)</title><rect x="90.2701%" y="581" width="1.0662%" height="15" fill="rgb(233,6,29)" fg:x="341554" fg:w="4034"/><text x="90.5201%" y="591.50"></text></g><g><title>alloc::alloc::exchange_malloc (3,715 samples, 0.98%)</title><rect x="90.3544%" y="565" width="0.9818%" height="15" fill="rgb(240,22,54)" fg:x="341873" fg:w="3715"/><text x="90.6044%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,702 samples, 0.98%)</title><rect x="90.3578%" y="549" width="0.9784%" height="15" fill="rgb(231,133,32)" fg:x="341886" fg:w="3702"/><text x="90.6078%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,702 samples, 0.98%)</title><rect x="90.3578%" y="533" width="0.9784%" height="15" fill="rgb(248,193,4)" fg:x="341886" fg:w="3702"/><text x="90.6078%" y="543.50"></text></g><g><title>alloc::alloc::alloc (3,702 samples, 0.98%)</title><rect x="90.3578%" y="517" width="0.9784%" height="15" fill="rgb(211,178,46)" fg:x="341886" fg:w="3702"/><text x="90.6078%" y="527.50"></text></g><g><title>__rdl_alloc (3,702 samples, 0.98%)</title><rect x="90.3578%" y="501" width="0.9784%" height="15" fill="rgb(224,5,42)" fg:x="341886" fg:w="3702"/><text x="90.6078%" y="511.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3,702 samples, 0.98%)</title><rect x="90.3578%" y="485" width="0.9784%" height="15" fill="rgb(239,176,25)" fg:x="341886" fg:w="3702"/><text x="90.6078%" y="495.50"></text></g><g><title>std::sys::pal::unix::alloc::aligned_malloc (3,702 samples, 0.98%)</title><rect x="90.3578%" y="469" width="0.9784%" height="15" fill="rgb(245,187,50)" fg:x="341886" fg:w="3702"/><text x="90.6078%" y="479.50"></text></g><g><title>__posix_memalign (3,659 samples, 0.97%)</title><rect x="90.3692%" y="453" width="0.9670%" height="15" fill="rgb(248,24,15)" fg:x="341929" fg:w="3659"/><text x="90.6192%" y="463.50"></text></g><g><title>__posix_memalign (3,656 samples, 0.97%)</title><rect x="90.3700%" y="437" width="0.9663%" height="15" fill="rgb(205,166,13)" fg:x="341932" fg:w="3656"/><text x="90.6200%" y="447.50"></text></g><g><title>_mid_memalign (3,656 samples, 0.97%)</title><rect x="90.3700%" y="421" width="0.9663%" height="15" fill="rgb(208,114,23)" fg:x="341932" fg:w="3656"/><text x="90.6200%" y="431.50"></text></g><g><title>tokio::runtime::context::current::with_current (17,481 samples, 4.62%)</title><rect x="86.7190%" y="773" width="4.6201%" height="15" fill="rgb(239,127,18)" fg:x="328118" fg:w="17481"/><text x="86.9690%" y="783.50">tokio..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (17,476 samples, 4.62%)</title><rect x="86.7204%" y="757" width="4.6188%" height="15" fill="rgb(219,154,28)" fg:x="328123" fg:w="17476"/><text x="86.9704%" y="767.50">std::..</text></g><g><title>tokio::runtime::context::current::with_current::{{closure}} (17,340 samples, 4.58%)</title><rect x="86.7563%" y="741" width="4.5828%" height="15" fill="rgb(225,157,23)" fg:x="328259" fg:w="17340"/><text x="87.0063%" y="751.50">tokio..</text></g><g><title>tokio::task::spawn::spawn (17,548 samples, 4.64%)</title><rect x="86.7106%" y="805" width="4.6378%" height="15" fill="rgb(219,8,6)" fg:x="328086" fg:w="17548"/><text x="86.9606%" y="815.50">tokio..</text></g><g><title>tokio::task::spawn::spawn_inner (17,548 samples, 4.64%)</title><rect x="86.7106%" y="789" width="4.6378%" height="15" fill="rgb(212,47,6)" fg:x="328086" fg:w="17548"/><text x="86.9606%" y="799.50">tokio..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (173,936 samples, 45.97%)</title><rect x="45.3840%" y="885" width="45.9699%" height="15" fill="rgb(224,190,4)" fg:x="171719" fg:w="173936"/><text x="45.6340%" y="895.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (173,935 samples, 45.97%)</title><rect x="45.3843%" y="869" width="45.9697%" height="15" fill="rgb(239,183,29)" fg:x="171720" fg:w="173935"/><text x="45.6343%" y="879.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}}</text></g><g><title>torrust_tracker::servers::udp::server::Udp::run_with_graceful_shutdown::{{closure}}::{{closure}} (48,629 samples, 12.85%)</title><rect x="78.5017%" y="853" width="12.8523%" height="15" fill="rgb(213,57,7)" fg:x="297026" fg:w="48629"/><text x="78.7517%" y="863.50">torrust_tracker::se..</text></g><g><title>torrust_tracker::servers::udp::server::Udp::run_udp_server::{{closure}} (48,628 samples, 12.85%)</title><rect x="78.5019%" y="837" width="12.8520%" height="15" fill="rgb(216,148,1)" fg:x="297027" fg:w="48628"/><text x="78.7519%" y="847.50">torrust_tracker::se..</text></g><g><title>torrust_tracker::servers::udp::server::Udp::spawn_request_processor (17,569 samples, 4.64%)</title><rect x="86.7106%" y="821" width="4.6434%" height="15" fill="rgb(236,182,29)" fg:x="328086" fg:w="17569"/><text x="86.9606%" y="831.50">torru..</text></g><g><title>__memcpy_avx512_unaligned_erms (51 samples, 0.01%)</title><rect x="91.3545%" y="853" width="0.0135%" height="15" fill="rgb(244,120,48)" fg:x="345657" fg:w="51"/><text x="91.6045%" y="863.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (2,052 samples, 0.54%)</title><rect x="91.3724%" y="821" width="0.5423%" height="15" fill="rgb(206,71,34)" fg:x="345725" fg:w="2052"/><text x="91.6224%" y="831.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2,067 samples, 0.55%)</title><rect x="91.3703%" y="853" width="0.5463%" height="15" fill="rgb(242,32,6)" fg:x="345717" fg:w="2067"/><text x="91.6203%" y="863.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage::{{closure}} (2,067 samples, 0.55%)</title><rect x="91.3703%" y="837" width="0.5463%" height="15" fill="rgb(241,35,3)" fg:x="345717" fg:w="2067"/><text x="91.6203%" y="847.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (176,078 samples, 46.54%)</title><rect x="45.3835%" y="901" width="46.5361%" height="15" fill="rgb(222,62,19)" fg:x="171717" fg:w="176078"/><text x="45.6335%" y="911.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::drop_future_or_output (2,140 samples, 0.57%)</title><rect x="91.3539%" y="885" width="0.5656%" height="15" fill="rgb(223,110,41)" fg:x="345655" fg:w="2140"/><text x="91.6039%" y="895.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (2,138 samples, 0.57%)</title><rect x="91.3545%" y="869" width="0.5651%" height="15" fill="rgb(208,224,4)" fg:x="345657" fg:w="2138"/><text x="91.6045%" y="879.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (48 samples, 0.01%)</title><rect x="91.9195%" y="885" width="0.0127%" height="15" fill="rgb(241,137,19)" fg:x="347795" fg:w="48"/><text x="92.1695%" y="895.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (856 samples, 0.23%)</title><rect x="91.9388%" y="869" width="0.2262%" height="15" fill="rgb(244,24,17)" fg:x="347868" fg:w="856"/><text x="92.1888%" y="879.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (1,693 samples, 0.45%)</title><rect x="92.1666%" y="837" width="0.4474%" height="15" fill="rgb(245,178,49)" fg:x="348730" fg:w="1693"/><text x="92.4166%" y="847.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1,703 samples, 0.45%)</title><rect x="92.1653%" y="869" width="0.4501%" height="15" fill="rgb(219,160,38)" fg:x="348725" fg:w="1703"/><text x="92.4153%" y="879.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage::{{closure}} (1,702 samples, 0.45%)</title><rect x="92.1656%" y="853" width="0.4498%" height="15" fill="rgb(228,137,14)" fg:x="348726" fg:w="1702"/><text x="92.4156%" y="863.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (2,570 samples, 0.68%)</title><rect x="91.9378%" y="885" width="0.6792%" height="15" fill="rgb(237,134,11)" fg:x="347864" fg:w="2570"/><text x="92.1878%" y="895.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (178,737 samples, 47.24%)</title><rect x="45.3835%" y="997" width="47.2388%" height="15" fill="rgb(211,126,44)" fg:x="171717" fg:w="178737"/><text x="45.6335%" y="1007.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (178,737 samples, 47.24%)</title><rect x="45.3835%" y="981" width="47.2388%" height="15" fill="rgb(226,171,33)" fg:x="171717" fg:w="178737"/><text x="45.6335%" y="991.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (178,737 samples, 47.24%)</title><rect x="45.3835%" y="965" width="47.2388%" height="15" fill="rgb(253,99,13)" fg:x="171717" fg:w="178737"/><text x="45.6335%" y="975.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (178,737 samples, 47.24%)</title><rect x="45.3835%" y="949" width="47.2388%" height="15" fill="rgb(244,48,7)" fg:x="171717" fg:w="178737"/><text x="45.6335%" y="959.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (178,737 samples, 47.24%)</title><rect x="45.3835%" y="933" width="47.2388%" height="15" fill="rgb(244,217,54)" fg:x="171717" fg:w="178737"/><text x="45.6335%" y="943.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (178,737 samples, 47.24%)</title><rect x="45.3835%" y="917" width="47.2388%" height="15" fill="rgb(224,15,18)" fg:x="171717" fg:w="178737"/><text x="45.6335%" y="927.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::store_output (2,659 samples, 0.70%)</title><rect x="91.9195%" y="901" width="0.7028%" height="15" fill="rgb(244,99,12)" fg:x="347795" fg:w="2659"/><text x="92.1695%" y="911.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (348 samples, 0.09%)</title><rect x="92.6223%" y="997" width="0.0920%" height="15" fill="rgb(233,226,8)" fg:x="350454" fg:w="348"/><text x="92.8723%" y="1007.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (348 samples, 0.09%)</title><rect x="92.6223%" y="981" width="0.0920%" height="15" fill="rgb(229,211,3)" fg:x="350454" fg:w="348"/><text x="92.8723%" y="991.50"></text></g><g><title>tokio::runtime::task::raw::poll (181,363 samples, 47.93%)</title><rect x="44.7822%" y="1045" width="47.9328%" height="15" fill="rgb(216,140,21)" fg:x="169442" fg:w="181363"/><text x="45.0322%" y="1055.50">tokio::runtime::task::raw::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (181,220 samples, 47.90%)</title><rect x="44.8200%" y="1029" width="47.8950%" height="15" fill="rgb(234,122,30)" fg:x="169585" fg:w="181220"/><text x="45.0700%" y="1039.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (179,097 samples, 47.33%)</title><rect x="45.3811%" y="1013" width="47.3340%" height="15" fill="rgb(236,25,46)" fg:x="171708" fg:w="179097"/><text x="45.6311%" y="1023.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::coop::budget (181,972 samples, 48.09%)</title><rect x="44.6220%" y="1125" width="48.0938%" height="15" fill="rgb(217,52,54)" fg:x="168836" fg:w="181972"/><text x="44.8720%" y="1135.50">tokio::runtime::coop::budget</text></g><g><title>tokio::runtime::coop::with_budget (181,972 samples, 48.09%)</title><rect x="44.6220%" y="1109" width="48.0938%" height="15" fill="rgb(222,29,26)" fg:x="168836" fg:w="181972"/><text x="44.8720%" y="1119.50">tokio::runtime::coop::with_budget</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (181,912 samples, 48.08%)</title><rect x="44.6379%" y="1093" width="48.0779%" height="15" fill="rgb(216,177,29)" fg:x="168896" fg:w="181912"/><text x="44.8879%" y="1103.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}}</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (181,909 samples, 48.08%)</title><rect x="44.6387%" y="1077" width="48.0771%" height="15" fill="rgb(247,136,51)" fg:x="168899" fg:w="181909"/><text x="44.8887%" y="1087.50">tokio::runtime::task::LocalNotified&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (181,909 samples, 48.08%)</title><rect x="44.6387%" y="1061" width="48.0771%" height="15" fill="rgb(231,47,47)" fg:x="168899" fg:w="181909"/><text x="44.8887%" y="1071.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::start_poll (110 samples, 0.03%)</title><rect x="92.7158%" y="1125" width="0.0291%" height="15" fill="rgb(211,192,36)" fg:x="350808" fg:w="110"/><text x="92.9658%" y="1135.50"></text></g><g><title>__x64_sys_futex (295 samples, 0.08%)</title><rect x="92.8091%" y="1045" width="0.0780%" height="15" fill="rgb(229,156,32)" fg:x="351161" fg:w="295"/><text x="93.0591%" y="1055.50"></text></g><g><title>_raw_spin_lock (91 samples, 0.02%)</title><rect x="92.9553%" y="997" width="0.0241%" height="15" fill="rgb(248,213,20)" fg:x="351714" fg:w="91"/><text x="93.2053%" y="1007.50"></text></g><g><title>futex_hash (195 samples, 0.05%)</title><rect x="92.9830%" y="997" width="0.0515%" height="15" fill="rgb(217,64,7)" fg:x="351819" fg:w="195"/><text x="93.2330%" y="1007.50"></text></g><g><title>futex_wake_mark (84 samples, 0.02%)</title><rect x="93.1971%" y="981" width="0.0222%" height="15" fill="rgb(232,142,8)" fg:x="352629" fg:w="84"/><text x="93.4471%" y="991.50"></text></g><g><title>get_futex_key (163 samples, 0.04%)</title><rect x="93.2193%" y="981" width="0.0431%" height="15" fill="rgb(224,92,44)" fg:x="352713" fg:w="163"/><text x="93.4693%" y="991.50"></text></g><g><title>wake_q_add_safe (121 samples, 0.03%)</title><rect x="93.2637%" y="981" width="0.0320%" height="15" fill="rgb(214,169,17)" fg:x="352881" fg:w="121"/><text x="93.5137%" y="991.50"></text></g><g><title>select_task_rq_fair (60 samples, 0.02%)</title><rect x="93.3147%" y="965" width="0.0159%" height="15" fill="rgb(210,59,37)" fg:x="353074" fg:w="60"/><text x="93.5647%" y="975.50"></text></g><g><title>_raw_spin_lock_irqsave (167 samples, 0.04%)</title><rect x="93.4664%" y="949" width="0.0441%" height="15" fill="rgb(214,116,48)" fg:x="353648" fg:w="167"/><text x="93.7164%" y="959.50"></text></g><g><title>__raw_spin_lock_irqsave (164 samples, 0.04%)</title><rect x="93.4672%" y="933" width="0.0433%" height="15" fill="rgb(244,191,6)" fg:x="353651" fg:w="164"/><text x="93.7172%" y="943.50"></text></g><g><title>available_idle_cpu (62 samples, 0.02%)</title><rect x="93.6792%" y="917" width="0.0164%" height="15" fill="rgb(241,50,52)" fg:x="354453" fg:w="62"/><text x="93.9292%" y="927.50"></text></g><g><title>select_idle_sibling (121 samples, 0.03%)</title><rect x="93.6639%" y="933" width="0.0320%" height="15" fill="rgb(236,75,39)" fg:x="354395" fg:w="121"/><text x="93.9139%" y="943.50"></text></g><g><title>select_task_rq_fair (1,048 samples, 0.28%)</title><rect x="93.5198%" y="949" width="0.2770%" height="15" fill="rgb(236,99,0)" fg:x="353850" fg:w="1048"/><text x="93.7698%" y="959.50"></text></g><g><title>wake_affine (382 samples, 0.10%)</title><rect x="93.6958%" y="933" width="0.1010%" height="15" fill="rgb(207,202,15)" fg:x="354516" fg:w="382"/><text x="93.9458%" y="943.50"></text></g><g><title>available_idle_cpu (315 samples, 0.08%)</title><rect x="93.7135%" y="917" width="0.0833%" height="15" fill="rgb(233,207,14)" fg:x="354583" fg:w="315"/><text x="93.9635%" y="927.50"></text></g><g><title>__smp_call_single_queue (294 samples, 0.08%)</title><rect x="93.9017%" y="933" width="0.0777%" height="15" fill="rgb(226,27,51)" fg:x="355295" fg:w="294"/><text x="94.1517%" y="943.50"></text></g><g><title>send_call_function_single_ipi (280 samples, 0.07%)</title><rect x="93.9054%" y="917" width="0.0740%" height="15" fill="rgb(206,104,42)" fg:x="355309" fg:w="280"/><text x="94.1554%" y="927.50"></text></g><g><title>native_send_call_func_single_ipi (53 samples, 0.01%)</title><rect x="93.9654%" y="901" width="0.0140%" height="15" fill="rgb(212,225,4)" fg:x="355536" fg:w="53"/><text x="94.2154%" y="911.50"></text></g><g><title>default_send_IPI_single_phys (53 samples, 0.01%)</title><rect x="93.9654%" y="885" width="0.0140%" height="15" fill="rgb(233,96,42)" fg:x="355536" fg:w="53"/><text x="94.2154%" y="895.50"></text></g><g><title>__default_send_IPI_dest_field (49 samples, 0.01%)</title><rect x="93.9665%" y="869" width="0.0130%" height="15" fill="rgb(229,21,32)" fg:x="355540" fg:w="49"/><text x="94.2165%" y="879.50"></text></g><g><title>llist_add_batch (533 samples, 0.14%)</title><rect x="93.9794%" y="933" width="0.1409%" height="15" fill="rgb(226,216,24)" fg:x="355589" fg:w="533"/><text x="94.2294%" y="943.50"></text></g><g><title>sched_clock_cpu (152 samples, 0.04%)</title><rect x="94.1206%" y="933" width="0.0402%" height="15" fill="rgb(221,163,17)" fg:x="356123" fg:w="152"/><text x="94.3706%" y="943.50"></text></g><g><title>sched_clock (144 samples, 0.04%)</title><rect x="94.1227%" y="917" width="0.0381%" height="15" fill="rgb(216,216,42)" fg:x="356131" fg:w="144"/><text x="94.3727%" y="927.50"></text></g><g><title>native_sched_clock (143 samples, 0.04%)</title><rect x="94.1229%" y="901" width="0.0378%" height="15" fill="rgb(240,118,7)" fg:x="356132" fg:w="143"/><text x="94.3729%" y="911.50"></text></g><g><title>ttwu_queue_wakelist (1,388 samples, 0.37%)</title><rect x="93.7971%" y="949" width="0.3668%" height="15" fill="rgb(221,67,37)" fg:x="354899" fg:w="1388"/><text x="94.0471%" y="959.50"></text></g><g><title>try_to_wake_up (3,169 samples, 0.84%)</title><rect x="93.3306%" y="965" width="0.8375%" height="15" fill="rgb(241,32,44)" fg:x="353134" fg:w="3169"/><text x="93.5806%" y="975.50"></text></g><g><title>futex_wake (4,300 samples, 1.14%)</title><rect x="93.0346%" y="997" width="1.1365%" height="15" fill="rgb(235,204,43)" fg:x="352014" fg:w="4300"/><text x="93.2846%" y="1007.50"></text></g><g><title>wake_up_q (3,312 samples, 0.88%)</title><rect x="93.2957%" y="981" width="0.8753%" height="15" fill="rgb(213,116,10)" fg:x="353002" fg:w="3312"/><text x="93.5457%" y="991.50"></text></g><g><title>do_futex (4,709 samples, 1.24%)</title><rect x="92.9355%" y="1013" width="1.2446%" height="15" fill="rgb(239,15,48)" fg:x="351639" fg:w="4709"/><text x="93.1855%" y="1023.50"></text></g><g><title>__x64_sys_futex (4,862 samples, 1.28%)</title><rect x="92.9030%" y="1029" width="1.2850%" height="15" fill="rgb(207,123,36)" fg:x="351516" fg:w="4862"/><text x="93.1530%" y="1039.50"></text></g><g><title>do_futex (47 samples, 0.01%)</title><rect x="94.1879%" y="1029" width="0.0124%" height="15" fill="rgb(209,103,30)" fg:x="356378" fg:w="47"/><text x="94.4379%" y="1039.50"></text></g><g><title>exit_to_user_mode_prepare (62 samples, 0.02%)</title><rect x="94.2131%" y="1013" width="0.0164%" height="15" fill="rgb(238,100,19)" fg:x="356473" fg:w="62"/><text x="94.4631%" y="1023.50"></text></g><g><title>do_syscall_64 (5,079 samples, 1.34%)</title><rect x="92.8876%" y="1045" width="1.3423%" height="15" fill="rgb(244,30,14)" fg:x="351458" fg:w="5079"/><text x="93.1376%" y="1055.50"></text></g><g><title>syscall_exit_to_user_mode (90 samples, 0.02%)</title><rect x="94.2062%" y="1029" width="0.0238%" height="15" fill="rgb(249,174,6)" fg:x="356447" fg:w="90"/><text x="94.4562%" y="1039.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5,409 samples, 1.43%)</title><rect x="92.8070%" y="1061" width="1.4296%" height="15" fill="rgb(235,213,41)" fg:x="351153" fg:w="5409"/><text x="93.0570%" y="1071.50"></text></g><g><title>syscall (5,655 samples, 1.49%)</title><rect x="92.7483%" y="1077" width="1.4946%" height="15" fill="rgb(213,118,6)" fg:x="350931" fg:w="5655"/><text x="92.9983%" y="1087.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (75 samples, 0.02%)</title><rect x="94.2522%" y="1061" width="0.0198%" height="15" fill="rgb(235,44,51)" fg:x="356621" fg:w="75"/><text x="94.5022%" y="1071.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (71 samples, 0.02%)</title><rect x="94.2532%" y="1045" width="0.0188%" height="15" fill="rgb(217,9,53)" fg:x="356625" fg:w="71"/><text x="94.5032%" y="1055.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (49 samples, 0.01%)</title><rect x="94.2590%" y="1029" width="0.0130%" height="15" fill="rgb(237,172,34)" fg:x="356647" fg:w="49"/><text x="94.5090%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1,216 samples, 0.32%)</title><rect x="94.2752%" y="1045" width="0.3214%" height="15" fill="rgb(206,206,11)" fg:x="356708" fg:w="1216"/><text x="94.5252%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_add (1,216 samples, 0.32%)</title><rect x="94.2752%" y="1029" width="0.3214%" height="15" fill="rgb(214,149,29)" fg:x="356708" fg:w="1216"/><text x="94.5252%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (1,348 samples, 0.36%)</title><rect x="94.2429%" y="1077" width="0.3563%" height="15" fill="rgb(208,123,3)" fg:x="356586" fg:w="1348"/><text x="94.4929%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (1,238 samples, 0.33%)</title><rect x="94.2720%" y="1061" width="0.3272%" height="15" fill="rgb(229,126,4)" fg:x="356696" fg:w="1238"/><text x="94.5220%" y="1071.50"></text></g><g><title>fput (40 samples, 0.01%)</title><rect x="94.6557%" y="821" width="0.0106%" height="15" fill="rgb(222,92,36)" fg:x="358148" fg:w="40"/><text x="94.9057%" y="831.50"></text></g><g><title>__fget_light (155 samples, 0.04%)</title><rect x="94.6721%" y="789" width="0.0410%" height="15" fill="rgb(216,39,41)" fg:x="358210" fg:w="155"/><text x="94.9221%" y="799.50"></text></g><g><title>__fdget_pos (165 samples, 0.04%)</title><rect x="94.6705%" y="805" width="0.0436%" height="15" fill="rgb(253,127,28)" fg:x="358204" fg:w="165"/><text x="94.9205%" y="815.50"></text></g><g><title>_raw_spin_lock_irqsave (39 samples, 0.01%)</title><rect x="94.8286%" y="629" width="0.0103%" height="15" fill="rgb(249,152,51)" fg:x="358802" fg:w="39"/><text x="95.0786%" y="639.50"></text></g><g><title>__raw_spin_lock_irqsave (39 samples, 0.01%)</title><rect x="94.8286%" y="613" width="0.0103%" height="15" fill="rgb(209,123,42)" fg:x="358802" fg:w="39"/><text x="95.0786%" y="623.50"></text></g><g><title>__wake_up_common (172 samples, 0.05%)</title><rect x="94.8096%" y="693" width="0.0455%" height="15" fill="rgb(241,118,22)" fg:x="358730" fg:w="172"/><text x="95.0596%" y="703.50"></text></g><g><title>ep_autoremove_wake_function (163 samples, 0.04%)</title><rect x="94.8119%" y="677" width="0.0431%" height="15" fill="rgb(208,25,7)" fg:x="358739" fg:w="163"/><text x="95.0619%" y="687.50"></text></g><g><title>default_wake_function (162 samples, 0.04%)</title><rect x="94.8122%" y="661" width="0.0428%" height="15" fill="rgb(243,144,39)" fg:x="358740" fg:w="162"/><text x="95.0622%" y="671.50"></text></g><g><title>try_to_wake_up (159 samples, 0.04%)</title><rect x="94.8130%" y="645" width="0.0420%" height="15" fill="rgb(250,50,5)" fg:x="358743" fg:w="159"/><text x="95.0630%" y="655.50"></text></g><g><title>ttwu_queue_wakelist (43 samples, 0.01%)</title><rect x="94.8437%" y="629" width="0.0114%" height="15" fill="rgb(207,67,11)" fg:x="358859" fg:w="43"/><text x="95.0937%" y="639.50"></text></g><g><title>__wake_up_common_lock (308 samples, 0.08%)</title><rect x="94.8085%" y="709" width="0.0814%" height="15" fill="rgb(245,204,40)" fg:x="358726" fg:w="308"/><text x="95.0585%" y="719.50"></text></g><g><title>_raw_spin_lock_irqsave (131 samples, 0.03%)</title><rect x="94.8553%" y="693" width="0.0346%" height="15" fill="rgb(238,228,24)" fg:x="358903" fg:w="131"/><text x="95.1053%" y="703.50"></text></g><g><title>__raw_spin_lock_irqsave (131 samples, 0.03%)</title><rect x="94.8553%" y="677" width="0.0346%" height="15" fill="rgb(217,116,22)" fg:x="358903" fg:w="131"/><text x="95.1053%" y="687.50"></text></g><g><title>native_queued_spin_lock_slowpath (121 samples, 0.03%)</title><rect x="94.8579%" y="661" width="0.0320%" height="15" fill="rgb(234,98,12)" fg:x="358913" fg:w="121"/><text x="95.1079%" y="671.50"></text></g><g><title>__wake_up (311 samples, 0.08%)</title><rect x="94.8082%" y="725" width="0.0822%" height="15" fill="rgb(242,170,50)" fg:x="358725" fg:w="311"/><text x="95.0582%" y="735.50"></text></g><g><title>_raw_read_lock_irqsave (369 samples, 0.10%)</title><rect x="94.8904%" y="725" width="0.0975%" height="15" fill="rgb(235,7,5)" fg:x="359036" fg:w="369"/><text x="95.1404%" y="735.50"></text></g><g><title>__raw_read_lock_irqsave (368 samples, 0.10%)</title><rect x="94.8907%" y="709" width="0.0973%" height="15" fill="rgb(241,114,28)" fg:x="359037" fg:w="368"/><text x="95.1407%" y="719.50"></text></g><g><title>__wake_up_common (972 samples, 0.26%)</title><rect x="94.7414%" y="757" width="0.2569%" height="15" fill="rgb(246,112,42)" fg:x="358472" fg:w="972"/><text x="94.9914%" y="767.50"></text></g><g><title>ep_poll_callback (937 samples, 0.25%)</title><rect x="94.7506%" y="741" width="0.2476%" height="15" fill="rgb(248,228,14)" fg:x="358507" fg:w="937"/><text x="95.0006%" y="751.50"></text></g><g><title>_raw_read_unlock_irqrestore (39 samples, 0.01%)</title><rect x="94.9880%" y="725" width="0.0103%" height="15" fill="rgb(208,133,18)" fg:x="359405" fg:w="39"/><text x="95.2380%" y="735.50"></text></g><g><title>__wake_up_locked_key (989 samples, 0.26%)</title><rect x="94.7411%" y="773" width="0.2614%" height="15" fill="rgb(207,35,49)" fg:x="358471" fg:w="989"/><text x="94.9911%" y="783.50"></text></g><g><title>_copy_from_user (42 samples, 0.01%)</title><rect x="95.0025%" y="773" width="0.0111%" height="15" fill="rgb(205,68,36)" fg:x="359460" fg:w="42"/><text x="95.2525%" y="783.50"></text></g><g><title>_raw_spin_lock_irq (428 samples, 0.11%)</title><rect x="95.0136%" y="773" width="0.1131%" height="15" fill="rgb(245,62,40)" fg:x="359502" fg:w="428"/><text x="95.2636%" y="783.50"></text></g><g><title>eventfd_write (1,641 samples, 0.43%)</title><rect x="94.7332%" y="789" width="0.4337%" height="15" fill="rgb(228,27,24)" fg:x="358441" fg:w="1641"/><text x="94.9832%" y="799.50"></text></g><g><title>copy_user_enhanced_fast_string (139 samples, 0.04%)</title><rect x="95.1302%" y="773" width="0.0367%" height="15" fill="rgb(253,19,12)" fg:x="359943" fg:w="139"/><text x="95.3802%" y="783.50"></text></g><g><title>ksys_write (1,936 samples, 0.51%)</title><rect x="94.6663%" y="821" width="0.5117%" height="15" fill="rgb(232,28,20)" fg:x="358188" fg:w="1936"/><text x="94.9163%" y="831.50"></text></g><g><title>vfs_write (1,722 samples, 0.46%)</title><rect x="94.7229%" y="805" width="0.4551%" height="15" fill="rgb(218,35,51)" fg:x="358402" fg:w="1722"/><text x="94.9729%" y="815.50"></text></g><g><title>rw_verify_area (42 samples, 0.01%)</title><rect x="95.1669%" y="789" width="0.0111%" height="15" fill="rgb(212,90,40)" fg:x="360082" fg:w="42"/><text x="95.4169%" y="799.50"></text></g><g><title>security_file_permission (38 samples, 0.01%)</title><rect x="95.1679%" y="773" width="0.0100%" height="15" fill="rgb(220,172,12)" fg:x="360086" fg:w="38"/><text x="95.4179%" y="783.50"></text></g><g><title>__x64_sys_write (1,980 samples, 0.52%)</title><rect x="94.6550%" y="837" width="0.5233%" height="15" fill="rgb(226,159,20)" fg:x="358145" fg:w="1980"/><text x="94.9050%" y="847.50"></text></g><g><title>exit_to_user_mode_prepare (42 samples, 0.01%)</title><rect x="95.1896%" y="821" width="0.0111%" height="15" fill="rgb(234,205,16)" fg:x="360168" fg:w="42"/><text x="95.4396%" y="831.50"></text></g><g><title>do_syscall_64 (2,071 samples, 0.55%)</title><rect x="94.6536%" y="853" width="0.5473%" height="15" fill="rgb(207,9,39)" fg:x="358140" fg:w="2071"/><text x="94.9036%" y="863.50"></text></g><g><title>syscall_exit_to_user_mode (74 samples, 0.02%)</title><rect x="95.1814%" y="837" width="0.0196%" height="15" fill="rgb(249,143,15)" fg:x="360137" fg:w="74"/><text x="95.4314%" y="847.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2,113 samples, 0.56%)</title><rect x="94.6433%" y="869" width="0.5584%" height="15" fill="rgb(253,133,29)" fg:x="358101" fg:w="2113"/><text x="94.8933%" y="879.50"></text></g><g><title>__GI___libc_write (2,270 samples, 0.60%)</title><rect x="94.6047%" y="885" width="0.5999%" height="15" fill="rgb(221,187,0)" fg:x="357955" fg:w="2270"/><text x="94.8547%" y="895.50"></text></g><g><title>__GI___libc_write (2,271 samples, 0.60%)</title><rect x="94.6047%" y="901" width="0.6002%" height="15" fill="rgb(205,204,26)" fg:x="357955" fg:w="2271"/><text x="94.8547%" y="911.50"></text></g><g><title>mio::sys::unix::waker::eventfd::WakerInternal::wake (2,284 samples, 0.60%)</title><rect x="94.6029%" y="965" width="0.6036%" height="15" fill="rgb(224,68,54)" fg:x="357948" fg:w="2284"/><text x="94.8529%" y="975.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (2,277 samples, 0.60%)</title><rect x="94.6047%" y="949" width="0.6018%" height="15" fill="rgb(209,67,4)" fg:x="357955" fg:w="2277"/><text x="94.8547%" y="959.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (2,277 samples, 0.60%)</title><rect x="94.6047%" y="933" width="0.6018%" height="15" fill="rgb(228,229,18)" fg:x="357955" fg:w="2277"/><text x="94.8547%" y="943.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (2,277 samples, 0.60%)</title><rect x="94.6047%" y="917" width="0.6018%" height="15" fill="rgb(231,89,13)" fg:x="357955" fg:w="2277"/><text x="94.8547%" y="927.50"></text></g><g><title>__entry_text_start (206 samples, 0.05%)</title><rect x="95.2121%" y="901" width="0.0544%" height="15" fill="rgb(210,182,18)" fg:x="360253" fg:w="206"/><text x="95.4621%" y="911.50"></text></g><g><title>tokio::runtime::driver::Handle::unpark (2,522 samples, 0.67%)</title><rect x="94.6018%" y="1045" width="0.6665%" height="15" fill="rgb(240,105,2)" fg:x="357944" fg:w="2522"/><text x="94.8518%" y="1055.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (2,522 samples, 0.67%)</title><rect x="94.6018%" y="1029" width="0.6665%" height="15" fill="rgb(207,170,50)" fg:x="357944" fg:w="2522"/><text x="94.8518%" y="1039.50"></text></g><g><title>tokio::runtime::io::driver::Handle::unpark (2,522 samples, 0.67%)</title><rect x="94.6018%" y="1013" width="0.6665%" height="15" fill="rgb(232,133,24)" fg:x="357944" fg:w="2522"/><text x="94.8518%" y="1023.50"></text></g><g><title>mio::waker::Waker::wake (2,518 samples, 0.67%)</title><rect x="94.6029%" y="997" width="0.6655%" height="15" fill="rgb(235,166,27)" fg:x="357948" fg:w="2518"/><text x="94.8529%" y="1007.50"></text></g><g><title>mio::sys::unix::waker::fdbased::Waker::wake (2,518 samples, 0.67%)</title><rect x="94.6029%" y="981" width="0.6655%" height="15" fill="rgb(209,19,13)" fg:x="357948" fg:w="2518"/><text x="94.8529%" y="991.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (234 samples, 0.06%)</title><rect x="95.2065%" y="965" width="0.0618%" height="15" fill="rgb(226,79,39)" fg:x="360232" fg:w="234"/><text x="95.4565%" y="975.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (234 samples, 0.06%)</title><rect x="95.2065%" y="949" width="0.0618%" height="15" fill="rgb(222,163,10)" fg:x="360232" fg:w="234"/><text x="95.4565%" y="959.50"></text></g><g><title>tokio::runtime::driver::Handle::unpark (233 samples, 0.06%)</title><rect x="95.2068%" y="933" width="0.0616%" height="15" fill="rgb(214,44,19)" fg:x="360233" fg:w="233"/><text x="95.4568%" y="943.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (233 samples, 0.06%)</title><rect x="95.2068%" y="917" width="0.0616%" height="15" fill="rgb(210,217,13)" fg:x="360233" fg:w="233"/><text x="95.4568%" y="927.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (2,547 samples, 0.67%)</title><rect x="94.5992%" y="1077" width="0.6732%" height="15" fill="rgb(237,61,54)" fg:x="357934" fg:w="2547"/><text x="94.8492%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (2,543 samples, 0.67%)</title><rect x="94.6002%" y="1061" width="0.6721%" height="15" fill="rgb(226,184,24)" fg:x="357938" fg:w="2543"/><text x="94.8502%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (191,736 samples, 50.67%)</title><rect x="44.5983%" y="1141" width="50.6743%" height="15" fill="rgb(223,226,4)" fg:x="168746" fg:w="191736"/><text x="44.8483%" y="1151.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_searching (9,564 samples, 2.53%)</title><rect x="92.7449%" y="1125" width="2.5277%" height="15" fill="rgb(210,26,41)" fg:x="350918" fg:w="9564"/><text x="92.9949%" y="1135.50">to..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::transition_worker_from_searching (9,562 samples, 2.53%)</title><rect x="92.7454%" y="1109" width="2.5272%" height="15" fill="rgb(220,221,6)" fg:x="350920" fg:w="9562"/><text x="92.9954%" y="1119.50">to..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (9,559 samples, 2.53%)</title><rect x="92.7462%" y="1093" width="2.5264%" height="15" fill="rgb(225,89,49)" fg:x="350923" fg:w="9559"/><text x="92.9962%" y="1103.50">to..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::tune_global_queue_interval (67 samples, 0.02%)</title><rect x="95.2951%" y="1125" width="0.0177%" height="15" fill="rgb(218,70,45)" fg:x="360567" fg:w="67"/><text x="95.5451%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::tuned_global_queue_interval (65 samples, 0.02%)</title><rect x="95.2956%" y="1109" width="0.0172%" height="15" fill="rgb(238,166,21)" fg:x="360569" fg:w="65"/><text x="95.5456%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task (162 samples, 0.04%)</title><rect x="95.2726%" y="1141" width="0.0428%" height="15" fill="rgb(224,141,44)" fg:x="360482" fg:w="162"/><text x="95.5226%" y="1151.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (201 samples, 0.05%)</title><rect x="96.2116%" y="1125" width="0.0531%" height="15" fill="rgb(230,12,49)" fg:x="364035" fg:w="201"/><text x="96.4616%" y="1135.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (201 samples, 0.05%)</title><rect x="96.2116%" y="1109" width="0.0531%" height="15" fill="rgb(212,174,12)" fg:x="364035" fg:w="201"/><text x="96.4616%" y="1119.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (201 samples, 0.05%)</title><rect x="96.2116%" y="1093" width="0.0531%" height="15" fill="rgb(246,67,9)" fg:x="364035" fg:w="201"/><text x="96.4616%" y="1103.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (327 samples, 0.09%)</title><rect x="96.2666%" y="1125" width="0.0864%" height="15" fill="rgb(239,35,23)" fg:x="364243" fg:w="327"/><text x="96.5166%" y="1135.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (327 samples, 0.09%)</title><rect x="96.2666%" y="1109" width="0.0864%" height="15" fill="rgb(211,167,0)" fg:x="364243" fg:w="327"/><text x="96.5166%" y="1119.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (326 samples, 0.09%)</title><rect x="96.2669%" y="1093" width="0.0862%" height="15" fill="rgb(225,119,45)" fg:x="364244" fg:w="326"/><text x="96.5169%" y="1103.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (127 samples, 0.03%)</title><rect x="96.4030%" y="1109" width="0.0336%" height="15" fill="rgb(210,162,6)" fg:x="364759" fg:w="127"/><text x="96.6530%" y="1119.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (127 samples, 0.03%)</title><rect x="96.4030%" y="1093" width="0.0336%" height="15" fill="rgb(208,118,35)" fg:x="364759" fg:w="127"/><text x="96.6530%" y="1103.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (127 samples, 0.03%)</title><rect x="96.4030%" y="1077" width="0.0336%" height="15" fill="rgb(239,4,53)" fg:x="364759" fg:w="127"/><text x="96.6530%" y="1087.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (314 samples, 0.08%)</title><rect x="96.4365%" y="1109" width="0.0830%" height="15" fill="rgb(213,130,21)" fg:x="364886" fg:w="314"/><text x="96.6865%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (129 samples, 0.03%)</title><rect x="96.5195%" y="1109" width="0.0341%" height="15" fill="rgb(235,148,0)" fg:x="365200" fg:w="129"/><text x="96.7695%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_load (129 samples, 0.03%)</title><rect x="96.5195%" y="1093" width="0.0341%" height="15" fill="rgb(244,224,18)" fg:x="365200" fg:w="129"/><text x="96.7695%" y="1103.50"></text></g><g><title>tokio::loom::std::atomic_u32::AtomicU32::unsync_load (110 samples, 0.03%)</title><rect x="96.5536%" y="1109" width="0.0291%" height="15" fill="rgb(211,214,4)" fg:x="365329" fg:w="110"/><text x="96.8036%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (110 samples, 0.03%)</title><rect x="96.5536%" y="1093" width="0.0291%" height="15" fill="rgb(206,119,25)" fg:x="365329" fg:w="110"/><text x="96.8036%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_load (110 samples, 0.03%)</title><rect x="96.5536%" y="1077" width="0.0291%" height="15" fill="rgb(243,93,47)" fg:x="365329" fg:w="110"/><text x="96.8036%" y="1087.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (168 samples, 0.04%)</title><rect x="96.8562%" y="1093" width="0.0444%" height="15" fill="rgb(224,194,6)" fg:x="366474" fg:w="168"/><text x="97.1062%" y="1103.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (168 samples, 0.04%)</title><rect x="96.8562%" y="1077" width="0.0444%" height="15" fill="rgb(243,229,6)" fg:x="366474" fg:w="168"/><text x="97.1062%" y="1087.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (168 samples, 0.04%)</title><rect x="96.8562%" y="1061" width="0.0444%" height="15" fill="rgb(207,23,50)" fg:x="366474" fg:w="168"/><text x="97.1062%" y="1071.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (92 samples, 0.02%)</title><rect x="96.9043%" y="1093" width="0.0243%" height="15" fill="rgb(253,192,32)" fg:x="366656" fg:w="92"/><text x="97.1543%" y="1103.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (172 samples, 0.05%)</title><rect x="96.9287%" y="1093" width="0.0455%" height="15" fill="rgb(213,21,6)" fg:x="366748" fg:w="172"/><text x="97.1787%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (163 samples, 0.04%)</title><rect x="96.9741%" y="1093" width="0.0431%" height="15" fill="rgb(243,151,13)" fg:x="366920" fg:w="163"/><text x="97.2241%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_load (163 samples, 0.04%)</title><rect x="96.9741%" y="1077" width="0.0431%" height="15" fill="rgb(233,165,41)" fg:x="366920" fg:w="163"/><text x="97.2241%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (405 samples, 0.11%)</title><rect x="97.0241%" y="1093" width="0.1070%" height="15" fill="rgb(246,176,45)" fg:x="367109" fg:w="405"/><text x="97.2741%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_load (405 samples, 0.11%)</title><rect x="97.0241%" y="1077" width="0.1070%" height="15" fill="rgb(217,170,52)" fg:x="367109" fg:w="405"/><text x="97.2741%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::pack (166 samples, 0.04%)</title><rect x="97.1311%" y="1093" width="0.0439%" height="15" fill="rgb(214,203,54)" fg:x="367514" fg:w="166"/><text x="97.3811%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (2,781 samples, 0.73%)</title><rect x="96.5827%" y="1109" width="0.7350%" height="15" fill="rgb(248,215,49)" fg:x="365439" fg:w="2781"/><text x="96.8327%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::unpack (540 samples, 0.14%)</title><rect x="97.1750%" y="1093" width="0.1427%" height="15" fill="rgb(208,46,10)" fg:x="367680" fg:w="540"/><text x="97.4250%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (3,784 samples, 1.00%)</title><rect x="96.3530%" y="1125" width="1.0001%" height="15" fill="rgb(254,5,31)" fg:x="364570" fg:w="3784"/><text x="96.6030%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::unpack (134 samples, 0.04%)</title><rect x="97.3177%" y="1109" width="0.0354%" height="15" fill="rgb(222,104,33)" fg:x="368220" fg:w="134"/><text x="97.5677%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_searching (423 samples, 0.11%)</title><rect x="97.3531%" y="1125" width="0.1118%" height="15" fill="rgb(248,49,16)" fg:x="368354" fg:w="423"/><text x="97.6031%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_searching (99 samples, 0.03%)</title><rect x="97.4387%" y="1109" width="0.0262%" height="15" fill="rgb(232,198,41)" fg:x="368678" fg:w="99"/><text x="97.6887%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (8,170 samples, 2.16%)</title><rect x="95.3244%" y="1141" width="2.1593%" height="15" fill="rgb(214,125,3)" fg:x="360678" fg:w="8170"/><text x="95.5744%" y="1151.50">t..</text></g><g><title>tokio::util::rand::FastRand::fastrand_n (71 samples, 0.02%)</title><rect x="97.4649%" y="1125" width="0.0188%" height="15" fill="rgb(229,220,28)" fg:x="368777" fg:w="71"/><text x="97.7149%" y="1135.50"></text></g><g><title>tokio::util::rand::FastRand::fastrand (71 samples, 0.02%)</title><rect x="97.4649%" y="1109" width="0.0188%" height="15" fill="rgb(222,64,37)" fg:x="368777" fg:w="71"/><text x="97.7149%" y="1119.50"></text></g><g><title>std::panic::catch_unwind (262,281 samples, 69.32%)</title><rect x="28.1685%" y="1701" width="69.3188%" height="15" fill="rgb(249,184,13)" fg:x="106581" fg:w="262281"/><text x="28.4185%" y="1711.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (262,281 samples, 69.32%)</title><rect x="28.1685%" y="1685" width="69.3188%" height="15" fill="rgb(252,176,6)" fg:x="106581" fg:w="262281"/><text x="28.4185%" y="1695.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (262,281 samples, 69.32%)</title><rect x="28.1685%" y="1669" width="69.3188%" height="15" fill="rgb(228,153,7)" fg:x="106581" fg:w="262281"/><text x="28.4185%" y="1679.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (262,281 samples, 69.32%)</title><rect x="28.1685%" y="1653" width="69.3188%" height="15" fill="rgb(242,193,5)" fg:x="106581" fg:w="262281"/><text x="28.4185%" y="1663.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (262,281 samples, 69.32%)</title><rect x="28.1685%" y="1637" width="69.3188%" height="15" fill="rgb(232,140,9)" fg:x="106581" fg:w="262281"/><text x="28.4185%" y="1647.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (262,281 samples, 69.32%)</title><rect x="28.1685%" y="1621" width="69.3188%" height="15" fill="rgb(213,222,16)" fg:x="106581" fg:w="262281"/><text x="28.4185%" y="1631.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (262,281 samples, 69.32%)</title><rect x="28.1685%" y="1605" width="69.3188%" height="15" fill="rgb(222,75,50)" fg:x="106581" fg:w="262281"/><text x="28.4185%" y="1615.50">tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (262,281 samples, 69.32%)</title><rect x="28.1685%" y="1589" width="69.3188%" height="15" fill="rgb(205,180,2)" fg:x="106581" fg:w="262281"/><text x="28.4185%" y="1599.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::blocking::pool::Task::run (262,211 samples, 69.30%)</title><rect x="28.1870%" y="1573" width="69.3003%" height="15" fill="rgb(216,34,7)" fg:x="106651" fg:w="262211"/><text x="28.4370%" y="1583.50">tokio::runtime::blocking::pool::Task::run</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (262,211 samples, 69.30%)</title><rect x="28.1870%" y="1557" width="69.3003%" height="15" fill="rgb(253,16,32)" fg:x="106651" fg:w="262211"/><text x="28.4370%" y="1567.50">tokio::runtime::task::UnownedTask&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (262,211 samples, 69.30%)</title><rect x="28.1870%" y="1541" width="69.3003%" height="15" fill="rgb(208,97,28)" fg:x="106651" fg:w="262211"/><text x="28.4370%" y="1551.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::raw::poll (262,211 samples, 69.30%)</title><rect x="28.1870%" y="1525" width="69.3003%" height="15" fill="rgb(225,92,11)" fg:x="106651" fg:w="262211"/><text x="28.4370%" y="1535.50">tokio::runtime::task::raw::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (262,211 samples, 69.30%)</title><rect x="28.1870%" y="1509" width="69.3003%" height="15" fill="rgb(243,38,12)" fg:x="106651" fg:w="262211"/><text x="28.4370%" y="1519.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (262,211 samples, 69.30%)</title><rect x="28.1870%" y="1493" width="69.3003%" height="15" fill="rgb(208,139,16)" fg:x="106651" fg:w="262211"/><text x="28.4370%" y="1503.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (262,210 samples, 69.30%)</title><rect x="28.1873%" y="1477" width="69.3001%" height="15" fill="rgb(227,24,9)" fg:x="106652" fg:w="262210"/><text x="28.4373%" y="1487.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (262,210 samples, 69.30%)</title><rect x="28.1873%" y="1461" width="69.3001%" height="15" fill="rgb(206,62,11)" fg:x="106652" fg:w="262210"/><text x="28.4373%" y="1471.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (262,210 samples, 69.30%)</title><rect x="28.1873%" y="1445" width="69.3001%" height="15" fill="rgb(228,134,27)" fg:x="106652" fg:w="262210"/><text x="28.4373%" y="1455.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (262,210 samples, 69.30%)</title><rect x="28.1873%" y="1429" width="69.3001%" height="15" fill="rgb(205,55,33)" fg:x="106652" fg:w="262210"/><text x="28.4373%" y="1439.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (262,210 samples, 69.30%)</title><rect x="28.1873%" y="1413" width="69.3001%" height="15" fill="rgb(243,75,43)" fg:x="106652" fg:w="262210"/><text x="28.4373%" y="1423.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (262,210 samples, 69.30%)</title><rect x="28.1873%" y="1397" width="69.3001%" height="15" fill="rgb(223,27,42)" fg:x="106652" fg:w="262210"/><text x="28.4373%" y="1407.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (262,210 samples, 69.30%)</title><rect x="28.1873%" y="1381" width="69.3001%" height="15" fill="rgb(232,189,33)" fg:x="106652" fg:w="262210"/><text x="28.4373%" y="1391.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (262,210 samples, 69.30%)</title><rect x="28.1873%" y="1365" width="69.3001%" height="15" fill="rgb(210,9,39)" fg:x="106652" fg:w="262210"/><text x="28.4373%" y="1375.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (262,210 samples, 69.30%)</title><rect x="28.1873%" y="1349" width="69.3001%" height="15" fill="rgb(242,85,26)" fg:x="106652" fg:w="262210"/><text x="28.4373%" y="1359.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}}</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (262,210 samples, 69.30%)</title><rect x="28.1873%" y="1333" width="69.3001%" height="15" fill="rgb(248,44,4)" fg:x="106652" fg:w="262210"/><text x="28.4373%" y="1343.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}} (262,210 samples, 69.30%)</title><rect x="28.1873%" y="1317" width="69.3001%" height="15" fill="rgb(250,96,46)" fg:x="106652" fg:w="262210"/><text x="28.4373%" y="1327.50">tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (262,210 samples, 69.30%)</title><rect x="28.1873%" y="1301" width="69.3001%" height="15" fill="rgb(229,116,26)" fg:x="106652" fg:w="262210"/><text x="28.4373%" y="1311.50">tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (262,210 samples, 69.30%)</title><rect x="28.1873%" y="1285" width="69.3001%" height="15" fill="rgb(246,94,34)" fg:x="106652" fg:w="262210"/><text x="28.4373%" y="1295.50">tokio::runtime::context::runtime::enter_runtime</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (262,210 samples, 69.30%)</title><rect x="28.1873%" y="1269" width="69.3001%" height="15" fill="rgb(251,73,21)" fg:x="106652" fg:w="262210"/><text x="28.4373%" y="1279.50">tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}</text></g><g><title>tokio::runtime::context::set_scheduler (262,210 samples, 69.30%)</title><rect x="28.1873%" y="1253" width="69.3001%" height="15" fill="rgb(254,121,25)" fg:x="106652" fg:w="262210"/><text x="28.4373%" y="1263.50">tokio::runtime::context::set_scheduler</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (262,210 samples, 69.30%)</title><rect x="28.1873%" y="1237" width="69.3001%" height="15" fill="rgb(215,161,49)" fg:x="106652" fg:w="262210"/><text x="28.4373%" y="1247.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (262,210 samples, 69.30%)</title><rect x="28.1873%" y="1221" width="69.3001%" height="15" fill="rgb(221,43,13)" fg:x="106652" fg:w="262210"/><text x="28.4373%" y="1231.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>tokio::runtime::context::set_scheduler::{{closure}} (262,210 samples, 69.30%)</title><rect x="28.1873%" y="1205" width="69.3001%" height="15" fill="rgb(249,5,37)" fg:x="106652" fg:w="262210"/><text x="28.4373%" y="1215.50">tokio::runtime::context::set_scheduler::{{closure}}</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (262,210 samples, 69.30%)</title><rect x="28.1873%" y="1189" width="69.3001%" height="15" fill="rgb(226,25,44)" fg:x="106652" fg:w="262210"/><text x="28.4373%" y="1199.50">tokio::runtime::context::scoped::Scoped&lt;T&gt;::set</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}::{{closure}} (262,210 samples, 69.30%)</title><rect x="28.1873%" y="1173" width="69.3001%" height="15" fill="rgb(238,189,16)" fg:x="106652" fg:w="262210"/><text x="28.4373%" y="1183.50">tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}::{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (262,210 samples, 69.30%)</title><rect x="28.1873%" y="1157" width="69.3001%" height="15" fill="rgb(251,186,8)" fg:x="106652" fg:w="262210"/><text x="28.4373%" y="1167.50">tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (262,282 samples, 69.32%)</title><rect x="28.1685%" y="1765" width="69.3191%" height="15" fill="rgb(254,34,31)" fg:x="106581" fg:w="262282"/><text x="28.4185%" y="1775.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (262,282 samples, 69.32%)</title><rect x="28.1685%" y="1749" width="69.3191%" height="15" fill="rgb(225,215,27)" fg:x="106581" fg:w="262282"/><text x="28.4185%" y="1759.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (262,282 samples, 69.32%)</title><rect x="28.1685%" y="1733" width="69.3191%" height="15" fill="rgb(221,192,48)" fg:x="106581" fg:w="262282"/><text x="28.4185%" y="1743.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (262,282 samples, 69.32%)</title><rect x="28.1685%" y="1717" width="69.3191%" height="15" fill="rgb(219,137,20)" fg:x="106581" fg:w="262282"/><text x="28.4185%" y="1727.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>clone3 (262,316 samples, 69.33%)</title><rect x="28.1640%" y="1813" width="69.3281%" height="15" fill="rgb(219,84,11)" fg:x="106564" fg:w="262316"/><text x="28.4140%" y="1823.50">clone3</text></g><g><title>start_thread (262,316 samples, 69.33%)</title><rect x="28.1640%" y="1797" width="69.3281%" height="15" fill="rgb(224,10,23)" fg:x="106564" fg:w="262316"/><text x="28.4140%" y="1807.50">start_thread</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (262,299 samples, 69.32%)</title><rect x="28.1685%" y="1781" width="69.3236%" height="15" fill="rgb(248,22,39)" fg:x="106581" fg:w="262299"/><text x="28.4185%" y="1791.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>core::fmt::Formatter::pad_integral (390 samples, 0.10%)</title><rect x="97.4935%" y="1813" width="0.1031%" height="15" fill="rgb(212,154,20)" fg:x="368885" fg:w="390"/><text x="97.7435%" y="1823.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (126 samples, 0.03%)</title><rect x="97.5965%" y="1813" width="0.0333%" height="15" fill="rgb(236,199,50)" fg:x="369275" fg:w="126"/><text x="97.8465%" y="1823.50"></text></g><g><title>core::fmt::Formatter::pad_integral (41 samples, 0.01%)</title><rect x="97.6298%" y="1813" width="0.0108%" height="15" fill="rgb(211,9,17)" fg:x="369401" fg:w="41"/><text x="97.8798%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;torrust_tracker::servers::udp::server::Udp::process_request::{{closure}}&gt;&gt; (113 samples, 0.03%)</title><rect x="97.6491%" y="1813" width="0.0299%" height="15" fill="rgb(243,216,36)" fg:x="369474" fg:w="113"/><text x="97.8991%" y="1823.50"></text></g><g><title>__x64_sys_futex (173 samples, 0.05%)</title><rect x="97.7511%" y="1797" width="0.0457%" height="15" fill="rgb(250,2,10)" fg:x="369860" fg:w="173"/><text x="98.0011%" y="1807.50"></text></g><g><title>__x64_sys_getsockname (51 samples, 0.01%)</title><rect x="97.7971%" y="1797" width="0.0135%" height="15" fill="rgb(226,50,48)" fg:x="370034" fg:w="51"/><text x="98.0471%" y="1807.50"></text></g><g><title>__x64_sys_sendto (43 samples, 0.01%)</title><rect x="97.8148%" y="1797" width="0.0114%" height="15" fill="rgb(243,81,16)" fg:x="370101" fg:w="43"/><text x="98.0648%" y="1807.50"></text></g><g><title>__x64_sys_epoll_wait (165 samples, 0.04%)</title><rect x="97.8576%" y="1781" width="0.0436%" height="15" fill="rgb(250,14,2)" fg:x="370263" fg:w="165"/><text x="98.1076%" y="1791.50"></text></g><g><title>read_tsc (70 samples, 0.02%)</title><rect x="97.8828%" y="1765" width="0.0185%" height="15" fill="rgb(233,135,29)" fg:x="370358" fg:w="70"/><text x="98.1328%" y="1775.50"></text></g><g><title>futex_hash (127 samples, 0.03%)</title><rect x="97.9742%" y="1749" width="0.0336%" height="15" fill="rgb(224,64,43)" fg:x="370704" fg:w="127"/><text x="98.2242%" y="1759.50"></text></g><g><title>futex_wait_setup (101 samples, 0.03%)</title><rect x="98.0493%" y="1733" width="0.0267%" height="15" fill="rgb(238,84,13)" fg:x="370988" fg:w="101"/><text x="98.2993%" y="1743.50"></text></g><g><title>get_futex_key (39 samples, 0.01%)</title><rect x="98.0656%" y="1717" width="0.0103%" height="15" fill="rgb(253,48,26)" fg:x="371050" fg:w="39"/><text x="98.3156%" y="1727.50"></text></g><g><title>futex_wait (270 samples, 0.07%)</title><rect x="98.0112%" y="1749" width="0.0714%" height="15" fill="rgb(205,223,31)" fg:x="370844" fg:w="270"/><text x="98.2612%" y="1759.50"></text></g><g><title>futex_wake (506 samples, 0.13%)</title><rect x="98.0826%" y="1749" width="0.1337%" height="15" fill="rgb(221,41,32)" fg:x="371114" fg:w="506"/><text x="98.3326%" y="1759.50"></text></g><g><title>get_futex_key (181 samples, 0.05%)</title><rect x="98.1685%" y="1733" width="0.0478%" height="15" fill="rgb(213,158,31)" fg:x="371439" fg:w="181"/><text x="98.4185%" y="1743.50"></text></g><g><title>do_futex (1,060 samples, 0.28%)</title><rect x="97.9454%" y="1765" width="0.2801%" height="15" fill="rgb(245,126,43)" fg:x="370595" fg:w="1060"/><text x="98.1954%" y="1775.50"></text></g><g><title>__x64_sys_futex (1,255 samples, 0.33%)</title><rect x="97.9013%" y="1781" width="0.3317%" height="15" fill="rgb(227,7,22)" fg:x="370428" fg:w="1255"/><text x="98.1513%" y="1791.50"></text></g><g><title>__fget_light (87 samples, 0.02%)</title><rect x="98.2520%" y="1717" width="0.0230%" height="15" fill="rgb(252,90,44)" fg:x="371755" fg:w="87"/><text x="98.5020%" y="1727.50"></text></g><g><title>__fdget (88 samples, 0.02%)</title><rect x="98.2520%" y="1733" width="0.0233%" height="15" fill="rgb(253,91,0)" fg:x="371755" fg:w="88"/><text x="98.5020%" y="1743.50"></text></g><g><title>__sys_getsockname (168 samples, 0.04%)</title><rect x="98.2329%" y="1765" width="0.0444%" height="15" fill="rgb(252,175,49)" fg:x="371683" fg:w="168"/><text x="98.4829%" y="1775.50"></text></g><g><title>sockfd_lookup_light (98 samples, 0.03%)</title><rect x="98.2514%" y="1749" width="0.0259%" height="15" fill="rgb(246,150,1)" fg:x="371753" fg:w="98"/><text x="98.5014%" y="1759.50"></text></g><g><title>__x64_sys_getsockname (171 samples, 0.05%)</title><rect x="98.2329%" y="1781" width="0.0452%" height="15" fill="rgb(241,192,25)" fg:x="371683" fg:w="171"/><text x="98.4829%" y="1791.50"></text></g><g><title>__fget_light (55 samples, 0.01%)</title><rect x="98.3112%" y="1717" width="0.0145%" height="15" fill="rgb(239,187,11)" fg:x="371979" fg:w="55"/><text x="98.5612%" y="1727.50"></text></g><g><title>__fdget (57 samples, 0.02%)</title><rect x="98.3112%" y="1733" width="0.0151%" height="15" fill="rgb(218,202,51)" fg:x="371979" fg:w="57"/><text x="98.5612%" y="1743.50"></text></g><g><title>__sys_recvfrom (187 samples, 0.05%)</title><rect x="98.2787%" y="1765" width="0.0494%" height="15" fill="rgb(225,176,8)" fg:x="371856" fg:w="187"/><text x="98.5287%" y="1775.50"></text></g><g><title>sockfd_lookup_light (72 samples, 0.02%)</title><rect x="98.3091%" y="1749" width="0.0190%" height="15" fill="rgb(219,122,41)" fg:x="371971" fg:w="72"/><text x="98.5591%" y="1759.50"></text></g><g><title>__x64_sys_recvfrom (198 samples, 0.05%)</title><rect x="98.2787%" y="1781" width="0.0523%" height="15" fill="rgb(248,140,20)" fg:x="371856" fg:w="198"/><text x="98.5287%" y="1791.50"></text></g><g><title>__sys_sendto (165 samples, 0.04%)</title><rect x="98.3310%" y="1765" width="0.0436%" height="15" fill="rgb(245,41,37)" fg:x="372054" fg:w="165"/><text x="98.5810%" y="1775.50"></text></g><g><title>sockfd_lookup_light (51 samples, 0.01%)</title><rect x="98.3611%" y="1749" width="0.0135%" height="15" fill="rgb(235,82,39)" fg:x="372168" fg:w="51"/><text x="98.6111%" y="1759.50"></text></g><g><title>__x64_sys_sendto (177 samples, 0.05%)</title><rect x="98.3310%" y="1781" width="0.0468%" height="15" fill="rgb(230,108,42)" fg:x="372054" fg:w="177"/><text x="98.5810%" y="1791.50"></text></g><g><title>do_futex (48 samples, 0.01%)</title><rect x="98.3844%" y="1781" width="0.0127%" height="15" fill="rgb(215,150,50)" fg:x="372256" fg:w="48"/><text x="98.6344%" y="1791.50"></text></g><g><title>do_syscall_64 (2,325 samples, 0.61%)</title><rect x="97.8299%" y="1797" width="0.6145%" height="15" fill="rgb(233,212,5)" fg:x="370158" fg:w="2325"/><text x="98.0799%" y="1807.50"></text></g><g><title>syscall_enter_from_user_mode (175 samples, 0.05%)</title><rect x="98.3981%" y="1781" width="0.0463%" height="15" fill="rgb(245,80,22)" fg:x="372308" fg:w="175"/><text x="98.6481%" y="1791.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3,067 samples, 0.81%)</title><rect x="97.6885%" y="1813" width="0.8106%" height="15" fill="rgb(238,129,16)" fg:x="369623" fg:w="3067"/><text x="97.9385%" y="1823.50"></text></g><g><title>syscall_enter_from_user_mode (207 samples, 0.05%)</title><rect x="98.4444%" y="1797" width="0.0547%" height="15" fill="rgb(240,19,0)" fg:x="372483" fg:w="207"/><text x="98.6944%" y="1807.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (222 samples, 0.06%)</title><rect x="98.4991%" y="1813" width="0.0587%" height="15" fill="rgb(232,42,35)" fg:x="372690" fg:w="222"/><text x="98.7491%" y="1823.50"></text></g><g><title>rand_chacha::guts::round (69 samples, 0.02%)</title><rect x="98.5620%" y="1765" width="0.0182%" height="15" fill="rgb(223,130,24)" fg:x="372928" fg:w="69"/><text x="98.8120%" y="1775.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (80 samples, 0.02%)</title><rect x="98.5599%" y="1813" width="0.0211%" height="15" fill="rgb(237,16,22)" fg:x="372920" fg:w="80"/><text x="98.8099%" y="1823.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (80 samples, 0.02%)</title><rect x="98.5599%" y="1797" width="0.0211%" height="15" fill="rgb(248,192,20)" fg:x="372920" fg:w="80"/><text x="98.8099%" y="1807.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (80 samples, 0.02%)</title><rect x="98.5599%" y="1781" width="0.0211%" height="15" fill="rgb(233,167,2)" fg:x="372920" fg:w="80"/><text x="98.8099%" y="1791.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (113 samples, 0.03%)</title><rect x="98.6315%" y="1733" width="0.0299%" height="15" fill="rgb(252,71,44)" fg:x="373191" fg:w="113"/><text x="98.8815%" y="1743.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (113 samples, 0.03%)</title><rect x="98.6315%" y="1717" width="0.0299%" height="15" fill="rgb(238,37,47)" fg:x="373191" fg:w="113"/><text x="98.8815%" y="1727.50"></text></g><g><title>core::cell::BorrowRefMut::new (113 samples, 0.03%)</title><rect x="98.6315%" y="1701" width="0.0299%" height="15" fill="rgb(214,202,54)" fg:x="373191" fg:w="113"/><text x="98.8815%" y="1711.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (156 samples, 0.04%)</title><rect x="98.6246%" y="1797" width="0.0412%" height="15" fill="rgb(254,165,40)" fg:x="373165" fg:w="156"/><text x="98.8746%" y="1807.50"></text></g><g><title>tokio::runtime::coop::budget (154 samples, 0.04%)</title><rect x="98.6252%" y="1781" width="0.0407%" height="15" fill="rgb(246,173,38)" fg:x="373167" fg:w="154"/><text x="98.8752%" y="1791.50"></text></g><g><title>tokio::runtime::coop::with_budget (154 samples, 0.04%)</title><rect x="98.6252%" y="1765" width="0.0407%" height="15" fill="rgb(215,3,27)" fg:x="373167" fg:w="154"/><text x="98.8752%" y="1775.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (136 samples, 0.04%)</title><rect x="98.6299%" y="1749" width="0.0359%" height="15" fill="rgb(239,169,51)" fg:x="373185" fg:w="136"/><text x="98.8799%" y="1759.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (305 samples, 0.08%)</title><rect x="98.5858%" y="1813" width="0.0806%" height="15" fill="rgb(212,5,25)" fg:x="373018" fg:w="305"/><text x="98.8358%" y="1823.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (148 samples, 0.04%)</title><rect x="98.6664%" y="1813" width="0.0391%" height="15" fill="rgb(243,45,17)" fg:x="373323" fg:w="148"/><text x="98.9164%" y="1823.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (110 samples, 0.03%)</title><rect x="98.7055%" y="1813" width="0.0291%" height="15" fill="rgb(242,97,9)" fg:x="373471" fg:w="110"/><text x="98.9555%" y="1823.50"></text></g><g><title>std::sys_common::net::TcpListener::socket_addr (40 samples, 0.01%)</title><rect x="98.7351%" y="1813" width="0.0106%" height="15" fill="rgb(228,71,31)" fg:x="373583" fg:w="40"/><text x="98.9851%" y="1823.50"></text></g><g><title>syscall (90 samples, 0.02%)</title><rect x="98.7494%" y="1813" width="0.0238%" height="15" fill="rgb(252,184,16)" fg:x="373637" fg:w="90"/><text x="98.9994%" y="1823.50"></text></g><g><title>syscall_return_via_sysret (133 samples, 0.04%)</title><rect x="98.7732%" y="1813" width="0.0352%" height="15" fill="rgb(236,169,46)" fg:x="373727" fg:w="133"/><text x="99.0232%" y="1823.50"></text></g><g><title>std::sync::poison::Flag::done (42 samples, 0.01%)</title><rect x="98.8194%" y="1733" width="0.0111%" height="15" fill="rgb(207,17,47)" fg:x="373902" fg:w="42"/><text x="99.0694%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::util::linked_list::LinkedList&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;,tokio::runtime::task::core::Header&gt;&gt;&gt; (47 samples, 0.01%)</title><rect x="98.8194%" y="1765" width="0.0124%" height="15" fill="rgb(206,201,28)" fg:x="373902" fg:w="47"/><text x="99.0694%" y="1775.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (47 samples, 0.01%)</title><rect x="98.8194%" y="1749" width="0.0124%" height="15" fill="rgb(224,184,23)" fg:x="373902" fg:w="47"/><text x="99.0694%" y="1759.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::release (71 samples, 0.02%)</title><rect x="98.8160%" y="1813" width="0.0188%" height="15" fill="rgb(208,139,48)" fg:x="373889" fg:w="71"/><text x="99.0660%" y="1823.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::remove (71 samples, 0.02%)</title><rect x="98.8160%" y="1797" width="0.0188%" height="15" fill="rgb(208,130,10)" fg:x="373889" fg:w="71"/><text x="99.0660%" y="1807.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (58 samples, 0.02%)</title><rect x="98.8194%" y="1781" width="0.0153%" height="15" fill="rgb(211,213,45)" fg:x="373902" fg:w="58"/><text x="99.0694%" y="1791.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (113 samples, 0.03%)</title><rect x="98.8585%" y="1621" width="0.0299%" height="15" fill="rgb(235,100,30)" fg:x="374050" fg:w="113"/><text x="99.1085%" y="1631.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}} (113 samples, 0.03%)</title><rect x="98.8585%" y="1605" width="0.0299%" height="15" fill="rgb(206,144,31)" fg:x="374050" fg:w="113"/><text x="99.1085%" y="1615.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (113 samples, 0.03%)</title><rect x="98.8585%" y="1589" width="0.0299%" height="15" fill="rgb(224,200,26)" fg:x="374050" fg:w="113"/><text x="99.1085%" y="1599.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (113 samples, 0.03%)</title><rect x="98.8585%" y="1573" width="0.0299%" height="15" fill="rgb(247,104,53)" fg:x="374050" fg:w="113"/><text x="99.1085%" y="1583.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (113 samples, 0.03%)</title><rect x="98.8585%" y="1557" width="0.0299%" height="15" fill="rgb(220,14,17)" fg:x="374050" fg:w="113"/><text x="99.1085%" y="1567.50"></text></g><g><title>tokio::runtime::context::set_scheduler (113 samples, 0.03%)</title><rect x="98.8585%" y="1541" width="0.0299%" height="15" fill="rgb(230,140,40)" fg:x="374050" fg:w="113"/><text x="99.1085%" y="1551.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (113 samples, 0.03%)</title><rect x="98.8585%" y="1525" width="0.0299%" height="15" fill="rgb(229,2,41)" fg:x="374050" fg:w="113"/><text x="99.1085%" y="1535.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (113 samples, 0.03%)</title><rect x="98.8585%" y="1509" width="0.0299%" height="15" fill="rgb(232,89,16)" fg:x="374050" fg:w="113"/><text x="99.1085%" y="1519.50"></text></g><g><title>tokio::runtime::context::set_scheduler::{{closure}} (113 samples, 0.03%)</title><rect x="98.8585%" y="1493" width="0.0299%" height="15" fill="rgb(247,59,52)" fg:x="374050" fg:w="113"/><text x="99.1085%" y="1503.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (113 samples, 0.03%)</title><rect x="98.8585%" y="1477" width="0.0299%" height="15" fill="rgb(226,110,21)" fg:x="374050" fg:w="113"/><text x="99.1085%" y="1487.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}::{{closure}} (113 samples, 0.03%)</title><rect x="98.8585%" y="1461" width="0.0299%" height="15" fill="rgb(224,176,43)" fg:x="374050" fg:w="113"/><text x="99.1085%" y="1471.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (113 samples, 0.03%)</title><rect x="98.8585%" y="1445" width="0.0299%" height="15" fill="rgb(221,73,6)" fg:x="374050" fg:w="113"/><text x="99.1085%" y="1455.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (59 samples, 0.02%)</title><rect x="98.8728%" y="1429" width="0.0156%" height="15" fill="rgb(232,78,19)" fg:x="374104" fg:w="59"/><text x="99.1228%" y="1439.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (55 samples, 0.01%)</title><rect x="98.8739%" y="1413" width="0.0145%" height="15" fill="rgb(233,112,48)" fg:x="374108" fg:w="55"/><text x="99.1239%" y="1423.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (53 samples, 0.01%)</title><rect x="98.8744%" y="1397" width="0.0140%" height="15" fill="rgb(243,131,47)" fg:x="374110" fg:w="53"/><text x="99.1244%" y="1407.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (116 samples, 0.03%)</title><rect x="98.8583%" y="1653" width="0.0307%" height="15" fill="rgb(226,51,1)" fg:x="374049" fg:w="116"/><text x="99.1083%" y="1663.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (116 samples, 0.03%)</title><rect x="98.8583%" y="1637" width="0.0307%" height="15" fill="rgb(247,58,7)" fg:x="374049" fg:w="116"/><text x="99.1083%" y="1647.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (119 samples, 0.03%)</title><rect x="98.8583%" y="1765" width="0.0315%" height="15" fill="rgb(209,7,32)" fg:x="374049" fg:w="119"/><text x="99.1083%" y="1775.50"></text></g><g><title>std::panic::catch_unwind (119 samples, 0.03%)</title><rect x="98.8583%" y="1749" width="0.0315%" height="15" fill="rgb(209,39,41)" fg:x="374049" fg:w="119"/><text x="99.1083%" y="1759.50"></text></g><g><title>std::panicking::try (119 samples, 0.03%)</title><rect x="98.8583%" y="1733" width="0.0315%" height="15" fill="rgb(226,182,46)" fg:x="374049" fg:w="119"/><text x="99.1083%" y="1743.50"></text></g><g><title>std::panicking::try::do_call (119 samples, 0.03%)</title><rect x="98.8583%" y="1717" width="0.0315%" height="15" fill="rgb(230,219,10)" fg:x="374049" fg:w="119"/><text x="99.1083%" y="1727.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (119 samples, 0.03%)</title><rect x="98.8583%" y="1701" width="0.0315%" height="15" fill="rgb(227,175,30)" fg:x="374049" fg:w="119"/><text x="99.1083%" y="1711.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (119 samples, 0.03%)</title><rect x="98.8583%" y="1685" width="0.0315%" height="15" fill="rgb(217,2,50)" fg:x="374049" fg:w="119"/><text x="99.1083%" y="1695.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (119 samples, 0.03%)</title><rect x="98.8583%" y="1669" width="0.0315%" height="15" fill="rgb(229,160,0)" fg:x="374049" fg:w="119"/><text x="99.1083%" y="1679.50"></text></g><g><title>tokio::runtime::task::raw::poll (136 samples, 0.04%)</title><rect x="98.8540%" y="1813" width="0.0359%" height="15" fill="rgb(207,78,37)" fg:x="374033" fg:w="136"/><text x="99.1040%" y="1823.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (123 samples, 0.03%)</title><rect x="98.8575%" y="1797" width="0.0325%" height="15" fill="rgb(225,57,0)" fg:x="374046" fg:w="123"/><text x="99.1075%" y="1807.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (122 samples, 0.03%)</title><rect x="98.8577%" y="1781" width="0.0322%" height="15" fill="rgb(232,154,2)" fg:x="374047" fg:w="122"/><text x="99.1077%" y="1791.50"></text></g><g><title>torrust_tracker::bootstrap::logging::INIT (43 samples, 0.01%)</title><rect x="98.8947%" y="1813" width="0.0114%" height="15" fill="rgb(241,212,25)" fg:x="374187" fg:w="43"/><text x="99.1447%" y="1823.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (652 samples, 0.17%)</title><rect x="98.9130%" y="1797" width="0.1723%" height="15" fill="rgb(226,69,20)" fg:x="374256" fg:w="652"/><text x="99.1630%" y="1807.50"></text></g><g><title>__entry_text_start (57 samples, 0.02%)</title><rect x="99.1537%" y="1781" width="0.0151%" height="15" fill="rgb(247,184,54)" fg:x="375167" fg:w="57"/><text x="99.4037%" y="1791.50"></text></g><g><title>_int_free (317 samples, 0.08%)</title><rect x="99.0853%" y="1797" width="0.0838%" height="15" fill="rgb(210,145,0)" fg:x="374908" fg:w="317"/><text x="99.3353%" y="1807.50"></text></g><g><title>_int_malloc (313 samples, 0.08%)</title><rect x="99.1691%" y="1797" width="0.0827%" height="15" fill="rgb(253,82,12)" fg:x="375225" fg:w="313"/><text x="99.4191%" y="1807.50"></text></g><g><title>torrust_tracker::servers::udp::logging::log_request::__CALLSITE::META (1,319 samples, 0.35%)</title><rect x="98.9077%" y="1813" width="0.3486%" height="15" fill="rgb(245,42,11)" fg:x="374236" fg:w="1319"/><text x="99.1577%" y="1823.50"></text></g><g><title>__GI___lll_lock_wait_private (265 samples, 0.07%)</title><rect x="99.2632%" y="1797" width="0.0700%" height="15" fill="rgb(219,147,32)" fg:x="375581" fg:w="265"/><text x="99.5132%" y="1807.50"></text></g><g><title>futex_wait (154 samples, 0.04%)</title><rect x="99.2925%" y="1781" width="0.0407%" height="15" fill="rgb(246,12,7)" fg:x="375692" fg:w="154"/><text x="99.5425%" y="1791.50"></text></g><g><title>futex_fatal_error (55 samples, 0.01%)</title><rect x="99.3187%" y="1765" width="0.0145%" height="15" fill="rgb(243,50,9)" fg:x="375791" fg:w="55"/><text x="99.5687%" y="1775.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (1,079 samples, 0.29%)</title><rect x="99.3340%" y="1797" width="0.2852%" height="15" fill="rgb(219,149,6)" fg:x="375849" fg:w="1079"/><text x="99.5840%" y="1807.50"></text></g><g><title>_int_free (67 samples, 0.02%)</title><rect x="99.6192%" y="1797" width="0.0177%" height="15" fill="rgb(241,51,42)" fg:x="376928" fg:w="67"/><text x="99.8692%" y="1807.50"></text></g><g><title>_int_malloc (120 samples, 0.03%)</title><rect x="99.6369%" y="1797" width="0.0317%" height="15" fill="rgb(226,128,27)" fg:x="376995" fg:w="120"/><text x="99.8869%" y="1807.50"></text></g><g><title>torrust_tracker::servers::udp::logging::log_request::__CALLSITE (1,582 samples, 0.42%)</title><rect x="99.2563%" y="1813" width="0.4181%" height="15" fill="rgb(244,144,4)" fg:x="375555" fg:w="1582"/><text x="99.5063%" y="1823.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::process_valid_request::{{closure}} (122 samples, 0.03%)</title><rect x="99.6823%" y="1813" width="0.0322%" height="15" fill="rgb(221,4,13)" fg:x="377167" fg:w="122"/><text x="99.9323%" y="1823.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::send_response::{{closure}} (59 samples, 0.02%)</title><rect x="99.6990%" y="1797" width="0.0156%" height="15" fill="rgb(208,170,28)" fg:x="377230" fg:w="59"/><text x="99.9490%" y="1807.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::ops::drop::Drop&gt;::drop (45 samples, 0.01%)</title><rect x="99.7526%" y="1573" width="0.0119%" height="15" fill="rgb(226,131,13)" fg:x="377433" fg:w="45"/><text x="100.0026%" y="1583.50"></text></g><g><title>__GI___libc_malloc (123 samples, 0.03%)</title><rect x="99.7650%" y="1557" width="0.0325%" height="15" fill="rgb(215,72,41)" fg:x="377480" fg:w="123"/><text x="100.0150%" y="1567.50"></text></g><g><title>_int_malloc (143 samples, 0.04%)</title><rect x="99.7650%" y="1573" width="0.0378%" height="15" fill="rgb(243,108,20)" fg:x="377480" fg:w="143"/><text x="100.0150%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (237 samples, 0.06%)</title><rect x="99.7405%" y="1765" width="0.0626%" height="15" fill="rgb(230,189,17)" fg:x="377387" fg:w="237"/><text x="99.9905%" y="1775.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (237 samples, 0.06%)</title><rect x="99.7405%" y="1749" width="0.0626%" height="15" fill="rgb(220,50,17)" fg:x="377387" fg:w="237"/><text x="99.9905%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (234 samples, 0.06%)</title><rect x="99.7413%" y="1733" width="0.0618%" height="15" fill="rgb(248,152,48)" fg:x="377390" fg:w="234"/><text x="99.9913%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (234 samples, 0.06%)</title><rect x="99.7413%" y="1717" width="0.0618%" height="15" fill="rgb(244,91,11)" fg:x="377390" fg:w="234"/><text x="99.9913%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (231 samples, 0.06%)</title><rect x="99.7421%" y="1701" width="0.0611%" height="15" fill="rgb(220,157,5)" fg:x="377393" fg:w="231"/><text x="99.9921%" y="1711.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (231 samples, 0.06%)</title><rect x="99.7421%" y="1685" width="0.0611%" height="15" fill="rgb(253,137,8)" fg:x="377393" fg:w="231"/><text x="99.9921%" y="1695.50"></text></g><g><title>alloc::alloc::alloc (231 samples, 0.06%)</title><rect x="99.7421%" y="1669" width="0.0611%" height="15" fill="rgb(217,137,51)" fg:x="377393" fg:w="231"/><text x="99.9921%" y="1679.50"></text></g><g><title>__rdl_alloc (231 samples, 0.06%)</title><rect x="99.7421%" y="1653" width="0.0611%" height="15" fill="rgb(218,209,53)" fg:x="377393" fg:w="231"/><text x="99.9921%" y="1663.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (231 samples, 0.06%)</title><rect x="99.7421%" y="1637" width="0.0611%" height="15" fill="rgb(249,137,25)" fg:x="377393" fg:w="231"/><text x="99.9921%" y="1647.50"></text></g><g><title>tokio::runtime::io::registration::Registration::readiness::{{closure}} (207 samples, 0.05%)</title><rect x="99.7484%" y="1621" width="0.0547%" height="15" fill="rgb(239,155,26)" fg:x="377417" fg:w="207"/><text x="99.9984%" y="1631.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::readiness::{{closure}} (207 samples, 0.05%)</title><rect x="99.7484%" y="1605" width="0.0547%" height="15" fill="rgb(227,85,46)" fg:x="377417" fg:w="207"/><text x="99.9984%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::io::scheduled_io::Readiness&gt; (207 samples, 0.05%)</title><rect x="99.7484%" y="1589" width="0.0547%" height="15" fill="rgb(251,107,43)" fg:x="377417" fg:w="207"/><text x="99.9984%" y="1599.50"></text></g><g><title>__entry_text_start (140 samples, 0.04%)</title><rect x="99.8353%" y="1589" width="0.0370%" height="15" fill="rgb(234,170,33)" fg:x="377746" fg:w="140"/><text x="100.0853%" y="1599.50"></text></g><g><title>tokio::net::udp::UdpSocket::recv_buf_from::{{closure}}::{{closure}} (286 samples, 0.08%)</title><rect x="99.8316%" y="1733" width="0.0756%" height="15" fill="rgb(206,29,35)" fg:x="377732" fg:w="286"/><text x="100.0816%" y="1743.50"></text></g><g><title>mio::net::udp::UdpSocket::recv_from (273 samples, 0.07%)</title><rect x="99.8351%" y="1717" width="0.0722%" height="15" fill="rgb(227,138,25)" fg:x="377745" fg:w="273"/><text x="100.0851%" y="1727.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (273 samples, 0.07%)</title><rect x="99.8351%" y="1701" width="0.0722%" height="15" fill="rgb(249,131,35)" fg:x="377745" fg:w="273"/><text x="100.0851%" y="1711.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (273 samples, 0.07%)</title><rect x="99.8351%" y="1685" width="0.0722%" height="15" fill="rgb(239,6,40)" fg:x="377745" fg:w="273"/><text x="100.0851%" y="1695.50"></text></g><g><title>mio::net::udp::UdpSocket::recv_from::{{closure}} (273 samples, 0.07%)</title><rect x="99.8351%" y="1669" width="0.0722%" height="15" fill="rgb(246,136,47)" fg:x="377745" fg:w="273"/><text x="100.0851%" y="1679.50"></text></g><g><title>std::net::udp::UdpSocket::recv_from (273 samples, 0.07%)</title><rect x="99.8351%" y="1653" width="0.0722%" height="15" fill="rgb(253,58,26)" fg:x="377745" fg:w="273"/><text x="100.0851%" y="1663.50"></text></g><g><title>std::sys_common::net::UdpSocket::recv_from (273 samples, 0.07%)</title><rect x="99.8351%" y="1637" width="0.0722%" height="15" fill="rgb(237,141,10)" fg:x="377745" fg:w="273"/><text x="100.0851%" y="1647.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_from (273 samples, 0.07%)</title><rect x="99.8351%" y="1621" width="0.0722%" height="15" fill="rgb(234,156,12)" fg:x="377745" fg:w="273"/><text x="100.0851%" y="1631.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_from_with_flags (273 samples, 0.07%)</title><rect x="99.8351%" y="1605" width="0.0722%" height="15" fill="rgb(243,224,36)" fg:x="377745" fg:w="273"/><text x="100.0851%" y="1615.50"></text></g><g><title>core::mem::zeroed (131 samples, 0.03%)</title><rect x="99.8726%" y="1589" width="0.0346%" height="15" fill="rgb(205,229,51)" fg:x="377887" fg:w="131"/><text x="100.1226%" y="1599.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::zeroed (131 samples, 0.03%)</title><rect x="99.8726%" y="1573" width="0.0346%" height="15" fill="rgb(223,189,4)" fg:x="377887" fg:w="131"/><text x="100.1226%" y="1583.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (131 samples, 0.03%)</title><rect x="99.8726%" y="1557" width="0.0346%" height="15" fill="rgb(249,167,54)" fg:x="377887" fg:w="131"/><text x="100.1226%" y="1567.50"></text></g><g><title>core::intrinsics::write_bytes (131 samples, 0.03%)</title><rect x="99.8726%" y="1541" width="0.0346%" height="15" fill="rgb(218,34,28)" fg:x="377887" fg:w="131"/><text x="100.1226%" y="1551.50"></text></g><g><title>__entry_text_start (131 samples, 0.03%)</title><rect x="99.8726%" y="1525" width="0.0346%" height="15" fill="rgb(232,109,42)" fg:x="377887" fg:w="131"/><text x="100.1226%" y="1535.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::receive_request::{{closure}} (639 samples, 0.17%)</title><rect x="99.7391%" y="1781" width="0.1689%" height="15" fill="rgb(248,214,46)" fg:x="377382" fg:w="639"/><text x="99.9891%" y="1791.50"></text></g><g><title>tokio::net::udp::UdpSocket::recv_buf_from::{{closure}} (360 samples, 0.10%)</title><rect x="99.8129%" y="1765" width="0.0951%" height="15" fill="rgb(244,216,40)" fg:x="377661" fg:w="360"/><text x="100.0629%" y="1775.50"></text></g><g><title>tokio::runtime::io::registration::Registration::async_io::{{closure}} (355 samples, 0.09%)</title><rect x="99.8142%" y="1749" width="0.0938%" height="15" fill="rgb(231,226,31)" fg:x="377666" fg:w="355"/><text x="100.0642%" y="1759.50"></text></g><g><title>__entry_text_start (171 samples, 0.05%)</title><rect x="99.9112%" y="1253" width="0.0452%" height="15" fill="rgb(238,38,43)" fg:x="378033" fg:w="171"/><text x="100.1612%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_option_task_without_yield (186 samples, 0.05%)</title><rect x="99.9080%" y="1605" width="0.0492%" height="15" fill="rgb(208,88,43)" fg:x="378021" fg:w="186"/><text x="100.1580%" y="1615.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (186 samples, 0.05%)</title><rect x="99.9080%" y="1589" width="0.0492%" height="15" fill="rgb(205,136,37)" fg:x="378021" fg:w="186"/><text x="100.1580%" y="1599.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (186 samples, 0.05%)</title><rect x="99.9080%" y="1573" width="0.0492%" height="15" fill="rgb(237,34,14)" fg:x="378021" fg:w="186"/><text x="100.1580%" y="1583.50"></text></g><g><title>tokio::runtime::context::with_scheduler (185 samples, 0.05%)</title><rect x="99.9083%" y="1557" width="0.0489%" height="15" fill="rgb(236,193,44)" fg:x="378022" fg:w="185"/><text x="100.1583%" y="1567.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (185 samples, 0.05%)</title><rect x="99.9083%" y="1541" width="0.0489%" height="15" fill="rgb(231,48,10)" fg:x="378022" fg:w="185"/><text x="100.1583%" y="1551.50"></text></g><g><title>tokio::runtime::context::with_scheduler::{{closure}} (185 samples, 0.05%)</title><rect x="99.9083%" y="1525" width="0.0489%" height="15" fill="rgb(213,141,34)" fg:x="378022" fg:w="185"/><text x="100.1583%" y="1535.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (185 samples, 0.05%)</title><rect x="99.9083%" y="1509" width="0.0489%" height="15" fill="rgb(249,130,34)" fg:x="378022" fg:w="185"/><text x="100.1583%" y="1519.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::{{closure}} (185 samples, 0.05%)</title><rect x="99.9083%" y="1493" width="0.0489%" height="15" fill="rgb(219,42,41)" fg:x="378022" fg:w="185"/><text x="100.1583%" y="1503.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::{{closure}} (185 samples, 0.05%)</title><rect x="99.9083%" y="1477" width="0.0489%" height="15" fill="rgb(224,100,54)" fg:x="378022" fg:w="185"/><text x="100.1583%" y="1487.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (185 samples, 0.05%)</title><rect x="99.9083%" y="1461" width="0.0489%" height="15" fill="rgb(229,200,27)" fg:x="378022" fg:w="185"/><text x="100.1583%" y="1471.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (185 samples, 0.05%)</title><rect x="99.9083%" y="1445" width="0.0489%" height="15" fill="rgb(217,118,10)" fg:x="378022" fg:w="185"/><text x="100.1583%" y="1455.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (185 samples, 0.05%)</title><rect x="99.9083%" y="1429" width="0.0489%" height="15" fill="rgb(206,22,3)" fg:x="378022" fg:w="185"/><text x="100.1583%" y="1439.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (185 samples, 0.05%)</title><rect x="99.9083%" y="1413" width="0.0489%" height="15" fill="rgb(232,163,46)" fg:x="378022" fg:w="185"/><text x="100.1583%" y="1423.50"></text></g><g><title>tokio::runtime::driver::Handle::unpark (185 samples, 0.05%)</title><rect x="99.9083%" y="1397" width="0.0489%" height="15" fill="rgb(206,95,13)" fg:x="378022" fg:w="185"/><text x="100.1583%" y="1407.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (185 samples, 0.05%)</title><rect x="99.9083%" y="1381" width="0.0489%" height="15" fill="rgb(253,154,18)" fg:x="378022" fg:w="185"/><text x="100.1583%" y="1391.50"></text></g><g><title>tokio::runtime::io::driver::Handle::unpark (185 samples, 0.05%)</title><rect x="99.9083%" y="1365" width="0.0489%" height="15" fill="rgb(219,32,23)" fg:x="378022" fg:w="185"/><text x="100.1583%" y="1375.50"></text></g><g><title>mio::waker::Waker::wake (185 samples, 0.05%)</title><rect x="99.9083%" y="1349" width="0.0489%" height="15" fill="rgb(230,191,45)" fg:x="378022" fg:w="185"/><text x="100.1583%" y="1359.50"></text></g><g><title>mio::sys::unix::waker::fdbased::Waker::wake (185 samples, 0.05%)</title><rect x="99.9083%" y="1333" width="0.0489%" height="15" fill="rgb(229,64,36)" fg:x="378022" fg:w="185"/><text x="100.1583%" y="1343.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (182 samples, 0.05%)</title><rect x="99.9091%" y="1317" width="0.0481%" height="15" fill="rgb(205,129,25)" fg:x="378025" fg:w="182"/><text x="100.1591%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (182 samples, 0.05%)</title><rect x="99.9091%" y="1301" width="0.0481%" height="15" fill="rgb(254,112,7)" fg:x="378025" fg:w="182"/><text x="100.1591%" y="1311.50"></text></g><g><title>tokio::runtime::driver::Handle::unpark (178 samples, 0.05%)</title><rect x="99.9101%" y="1285" width="0.0470%" height="15" fill="rgb(226,53,48)" fg:x="378029" fg:w="178"/><text x="100.1601%" y="1295.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (178 samples, 0.05%)</title><rect x="99.9101%" y="1269" width="0.0470%" height="15" fill="rgb(214,153,38)" fg:x="378029" fg:w="178"/><text x="100.1601%" y="1279.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::run_with_graceful_shutdown::{{closure}}::{{closure}} (1,051 samples, 0.28%)</title><rect x="99.7146%" y="1813" width="0.2778%" height="15" fill="rgb(243,101,7)" fg:x="377289" fg:w="1051"/><text x="99.9646%" y="1823.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::run_udp_server::{{closure}} (1,045 samples, 0.28%)</title><rect x="99.7162%" y="1797" width="0.2762%" height="15" fill="rgb(240,140,22)" fg:x="377295" fg:w="1045"/><text x="99.9662%" y="1807.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::spawn_request_processor (319 samples, 0.08%)</title><rect x="99.9080%" y="1781" width="0.0843%" height="15" fill="rgb(235,114,2)" fg:x="378021" fg:w="319"/><text x="100.1580%" y="1791.50"></text></g><g><title>tokio::task::spawn::spawn (319 samples, 0.08%)</title><rect x="99.9080%" y="1765" width="0.0843%" height="15" fill="rgb(242,59,12)" fg:x="378021" fg:w="319"/><text x="100.1580%" y="1775.50"></text></g><g><title>tokio::task::spawn::spawn_inner (319 samples, 0.08%)</title><rect x="99.9080%" y="1749" width="0.0843%" height="15" fill="rgb(252,134,9)" fg:x="378021" fg:w="319"/><text x="100.1580%" y="1759.50"></text></g><g><title>tokio::runtime::context::current::with_current (319 samples, 0.08%)</title><rect x="99.9080%" y="1733" width="0.0843%" height="15" fill="rgb(236,4,44)" fg:x="378021" fg:w="319"/><text x="100.1580%" y="1743.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (319 samples, 0.08%)</title><rect x="99.9080%" y="1717" width="0.0843%" height="15" fill="rgb(254,172,41)" fg:x="378021" fg:w="319"/><text x="100.1580%" y="1727.50"></text></g><g><title>tokio::runtime::context::current::with_current::{{closure}} (319 samples, 0.08%)</title><rect x="99.9080%" y="1701" width="0.0843%" height="15" fill="rgb(244,63,20)" fg:x="378021" fg:w="319"/><text x="100.1580%" y="1711.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (319 samples, 0.08%)</title><rect x="99.9080%" y="1685" width="0.0843%" height="15" fill="rgb(250,73,31)" fg:x="378021" fg:w="319"/><text x="100.1580%" y="1695.50"></text></g><g><title>tokio::task::spawn::spawn_inner::{{closure}} (319 samples, 0.08%)</title><rect x="99.9080%" y="1669" width="0.0843%" height="15" fill="rgb(241,38,36)" fg:x="378021" fg:w="319"/><text x="100.1580%" y="1679.50"></text></g><g><title>tokio::runtime::scheduler::Handle::spawn (319 samples, 0.08%)</title><rect x="99.9080%" y="1653" width="0.0843%" height="15" fill="rgb(245,211,2)" fg:x="378021" fg:w="319"/><text x="100.1580%" y="1663.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::spawn (319 samples, 0.08%)</title><rect x="99.9080%" y="1637" width="0.0843%" height="15" fill="rgb(206,120,28)" fg:x="378021" fg:w="319"/><text x="100.1580%" y="1647.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (319 samples, 0.08%)</title><rect x="99.9080%" y="1621" width="0.0843%" height="15" fill="rgb(211,59,34)" fg:x="378021" fg:w="319"/><text x="100.1580%" y="1631.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (133 samples, 0.04%)</title><rect x="99.9572%" y="1605" width="0.0352%" height="15" fill="rgb(233,168,5)" fg:x="378207" fg:w="133"/><text x="100.2072%" y="1615.50"></text></g><g><title>tokio::runtime::task::new_task (77 samples, 0.02%)</title><rect x="99.9720%" y="1589" width="0.0204%" height="15" fill="rgb(234,33,13)" fg:x="378263" fg:w="77"/><text x="100.2220%" y="1599.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (77 samples, 0.02%)</title><rect x="99.9720%" y="1573" width="0.0204%" height="15" fill="rgb(231,150,26)" fg:x="378263" fg:w="77"/><text x="100.2220%" y="1583.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (77 samples, 0.02%)</title><rect x="99.9720%" y="1557" width="0.0204%" height="15" fill="rgb(217,191,4)" fg:x="378263" fg:w="77"/><text x="100.2220%" y="1567.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (40 samples, 0.01%)</title><rect x="99.9818%" y="1541" width="0.0106%" height="15" fill="rgb(246,198,38)" fg:x="378300" fg:w="40"/><text x="100.2318%" y="1551.50"></text></g><g><title>all (378,369 samples, 100%)</title><rect x="0.0000%" y="1845" width="100.0000%" height="15" fill="rgb(245,64,37)" fg:x="0" fg:w="378369"/><text x="0.2500%" y="1855.50"></text></g><g><title>tokio-runtime-w (378,173 samples, 99.95%)</title><rect x="0.0518%" y="1829" width="99.9482%" height="15" fill="rgb(250,30,36)" fg:x="196" fg:w="378173"/><text x="0.3018%" y="1839.50">tokio-runtime-w</text></g></svg></svg>